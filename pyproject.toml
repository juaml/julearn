[build-system]
requires = [
  "setuptools >= 61.0.0",
  "wheel",
  "setuptools_scm[toml] >= 6.2"
]
build-backend = "setuptools.build_meta"

[project]
name = "julearn"
description = "Juelich Machine Learning Library"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "AGPL-3.0-only"}
authors = [
    {name = "Fede Raimondo", email = "f.raimondo@fz-juelich.de"},
    {name = "Sami Hamdan", email = "s.hamdan@fz-juelich.de"},
]
maintainers = [
    {name = "Sami Hamdan", email = "s.hamdan@fz-juelich.de"},
]
keywords = [
    "machine-learning",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved",
    "Natural Language :: English",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "numpy>=1.24,<1.26",
    "pandas>=1.5.0,<2.1",
    "scikit-learn>=1.2.0",
    "statsmodels>=0.13,<0.15",
]
dynamic = ["version"]

[project.urls]
homepage = "https://juaml.github.io/julearn"
documentation = "https://juaml.github.io/julearn"
repository = "https://github.com/juaml/julearn"

[project.optional-dependencies]
dev = ["tox"]
docs = [
    "seaborn>=0.12.2,<0.13",
    "Sphinx>=5.3.0,<5.4",
    "sphinx-gallery>=0.13.0,<0.14",
    "furo>=2022.9.29,<2023.0.0",
    "sphinx-multiversion>=0.2.4,<0.3",
    "sphinx_copybutton>=0.5.0,<0.6",
    "numpydoc>=1.5.0,<1.6",
    "towncrier==22.12.0",
]
deslib = ["deslib>=0.3.5,<0.4"]
viz = [
    "panel>=1.0.0b1",
    "bokeh>=3.0.0",
    "param>=1.11.0",
]

################
# Tool configs #
################

[tool.setuptools]
packages = ["julearn"]

[tool.setuptools_scm]
version_scheme = "guess-next-dev"
local_scheme = "no-local-version"
write_to = "julearn/_version.py"

[tool.black]
line-length = 79
target-version = ["py38"]

[tool.towncrier]
directory = "docs/changes/newsfragments"
filename = "docs/whats_new.rst"
package = "julearn"
# to use gh_substitutions
issue_format = ":gh:`{issue}`"
# modify to have proper toctree
underlines = "-^~"
# set line length to 79
wrap = true

# Need to put default explicitly as custom is not combined with default

[tool.towncrier.fragment.bugfix]
name = "Bugfixes"
showcontent = true

[tool.towncrier.fragment.doc]
name = "Improved Documentation"
showcontent = true

[tool.towncrier.fragment.feature]
name = "Features"
showcontent = true

[tool.towncrier.fragment.misc]
name = "Misc"
showcontent = true

[tool.towncrier.fragment.removal]
name = "Deprecations and Removals"
showcontent = true

# Add custom towncrier fragment for enhancements
[tool.towncrier.fragment.enh]
name = "Enhancements"
showcontent = true

# Add custom towncrier fragment for API changes
[tool.towncrier.fragment.change]
name = "API Changes"
showcontent = true