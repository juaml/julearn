
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/03_complex_models/run_generate_target.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_03_complex_models_run_generate_target.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_03_complex_models_run_generate_target.py:


Target Generation
=================

This example uses the ``iris`` dataset and tests a regression model in which
the target variable is generated from some features within the cross-validation
procedure. We will use the Iris dataset and generate a target variable using
PCA on the petal features. Then, we will evaluate if a regression model can
predict the generated target from the sepal features

.. include:: ../../links.inc

.. GENERATED FROM PYTHON SOURCE LINES 13-21

.. code-block:: default

    # Authors: Federico Raimondo <f.raimondo@fz-juelich.de>
    # License: AGPL

    from seaborn import load_dataset
    from julearn import run_cross_validation
    from julearn.pipeline import PipelineCreator
    from julearn.utils import configure_logging








.. GENERATED FROM PYTHON SOURCE LINES 22-23

Set the logging level to info to see extra information.

.. GENERATED FROM PYTHON SOURCE LINES 23-25

.. code-block:: default

    configure_logging(level="DEBUG")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-07-30 13:54:05,813 - julearn - INFO - ===== Lib Versions =====
    2024-07-30 13:54:05,813 - julearn - INFO - numpy: 1.26.4
    2024-07-30 13:54:05,813 - julearn - INFO - scipy: 1.14.0
    2024-07-30 13:54:05,813 - julearn - INFO - sklearn: 1.4.2
    2024-07-30 13:54:05,813 - julearn - INFO - pandas: 2.1.4
    2024-07-30 13:54:05,813 - julearn - INFO - julearn: 0.3.4.dev10
    2024-07-30 13:54:05,813 - julearn - INFO - ========================




.. GENERATED FROM PYTHON SOURCE LINES 26-29

.. code-block:: default

    df_iris = load_dataset("iris")









.. GENERATED FROM PYTHON SOURCE LINES 30-32

As features, we will use the sepal length, width and petal length.
We will try to predict the species.

.. GENERATED FROM PYTHON SOURCE LINES 32-43

.. code-block:: default


    X = ["sepal_length", "sepal_width", "petal_length", "petal_width"]
    y = "__generated__"  # to indicate to julearn that the target will be generated


    # Define our feature types
    X_types = {
        "sepal": ["sepal_length", "sepal_width"],
        "petal": ["petal_length", "petal_width"],
    }








.. GENERATED FROM PYTHON SOURCE LINES 44-47

We now use a Pipeline Creator to create the pipeline that will generate the
features. This special pipeline should be configured to be a "transformer"
and apply to the "petal" feature types.

.. GENERATED FROM PYTHON SOURCE LINES 47-54

.. code-block:: default


    target_creator = PipelineCreator(problem_type="transformer", apply_to="petal")
    target_creator.add("pca", n_components=2)
    # Select only the first component
    target_creator.add("pick_columns", keep="pca__pca0")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-07-30 13:54:05,815 - julearn - INFO - Adding step pca that applies to ColumnTypes<types={'petal'}; pattern=(?:__:type:__petal)>
    2024-07-30 13:54:05,816 - julearn - INFO - Setting hyperparameter n_components = 2
    2024-07-30 13:54:05,816 - julearn - DEBUG - Getting estimator from string: pca
    2024-07-30 13:54:05,816 - julearn - INFO - Step added
    2024-07-30 13:54:05,816 - julearn - INFO - Adding step pick_columns that applies to ColumnTypes<types={'petal'}; pattern=(?:__:type:__petal)>
    2024-07-30 13:54:05,816 - julearn - INFO - Setting hyperparameter keep = pca__pca0
    2024-07-30 13:54:05,816 - julearn - DEBUG - Getting estimator from string: pick_columns
    2024-07-30 13:54:05,816 - julearn - INFO - Step added

    <julearn.pipeline.pipeline_creator.PipelineCreator object at 0x7fef2d952950>



.. GENERATED FROM PYTHON SOURCE LINES 55-59

We now create the pipeline that will be used to predict the target. This
pipeline will be a regression pipeline. The step previous to the model should
be the the `generate_target`, applying to the "petal" features and using the
target_creator pipeline as the transformer.

.. GENERATED FROM PYTHON SOURCE LINES 59-64

.. code-block:: default

    creator = PipelineCreator(problem_type="regression")
    creator.add("zscore", apply_to="*")
    creator.add("generate_target", apply_to="petal", transformer=target_creator)
    creator.add("linreg", apply_to="sepal")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-07-30 13:54:05,817 - julearn - INFO - Adding step zscore that applies to ColumnTypes<types={'*'}; pattern=.*>
    2024-07-30 13:54:05,817 - julearn - DEBUG - Getting estimator from string: zscore
    2024-07-30 13:54:05,817 - julearn - INFO - Step added
    2024-07-30 13:54:05,817 - julearn - INFO - Adding step generate_target that applies to ColumnTypes<types={'petal'}; pattern=(?:__:type:__petal)>
    2024-07-30 13:54:05,817 - julearn - INFO - Setting hyperparameter transformer = PipelineCreator:
      Step 0: pca
        estimator:     PCA(n_components=2)
        apply to:      ColumnTypes<types={'petal'}; pattern=(?:__:type:__petal)>
        needed types:  ColumnTypes<types={'petal'}; pattern=(?:__:type:__petal)>
        tuning params: {}
      Step 1: pick_columns
        estimator:     PickColumns(keep='pca__pca0')
        apply to:      ColumnTypes<types={'petal'}; pattern=(?:__:type:__petal)>
        needed types:  ColumnTypes<types={'*'}; pattern=.*>
        tuning params: {}

    2024-07-30 13:54:05,817 - julearn - DEBUG - Special step is generate_target
    2024-07-30 13:54:05,817 - julearn - INFO - Step added
    2024-07-30 13:54:05,818 - julearn - INFO - Adding step linreg that applies to ColumnTypes<types={'sepal'}; pattern=(?:__:type:__sepal)>
    2024-07-30 13:54:05,818 - julearn - DEBUG - Getting estimator from string: linreg
    2024-07-30 13:54:05,818 - julearn - INFO - Step added

    <julearn.pipeline.pipeline_creator.PipelineCreator object at 0x7fef2d9526b0>



.. GENERATED FROM PYTHON SOURCE LINES 65-66

We finally evaluate the model within the cross validation.

.. GENERATED FROM PYTHON SOURCE LINES 66-78

.. code-block:: default

    scores, model = run_cross_validation(
        X=X,
        y=y,
        X_types=X_types,
        data=df_iris,
        model=creator,
        return_estimator="final",
        cv=2,
    )

    print(scores["test_score"])  # type: ignore





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-07-30 13:54:05,818 - julearn - INFO - ==== Input Data ====
    2024-07-30 13:54:05,818 - julearn - INFO - Using dataframe as input
    2024-07-30 13:54:05,818 - julearn - INFO -      Features: ['sepal_length', 'sepal_width', 'petal_length', 'petal_width']
    2024-07-30 13:54:05,818 - julearn - INFO -      Target: __generated__
    2024-07-30 13:54:05,818 - julearn - INFO -      Expanded features: ['sepal_length', 'sepal_width', 'petal_length', 'petal_width']
    2024-07-30 13:54:05,819 - julearn - INFO -      X_types:{'sepal': ['sepal_length', 'sepal_width'], 'petal': ['petal_length', 'petal_width']}
    2024-07-30 13:54:05,819 - julearn - INFO - Target will be generated
    2024-07-30 13:54:05,819 - julearn - INFO - ====================
    2024-07-30 13:54:05,819 - julearn - INFO - 
    2024-07-30 13:54:05,819 - julearn - DEBUG - Creating pipeline
    2024-07-30 13:54:05,819 - julearn - DEBUG - Ensuring target generator pipeline
    2024-07-30 13:54:05,820 - julearn - DEBUG - Creating pipeline
    2024-07-30 13:54:05,820 - julearn - DEBUG - Creating a pipeline with no model added
    2024-07-30 13:54:05,820 - julearn - DEBUG - Adding transformer pca
    2024-07-30 13:54:05,820 - julearn - DEBUG -      Estimator: PCA(n_components=2)
    2024-07-30 13:54:05,820 - julearn - DEBUG -      Params to tune: {}
    2024-07-30 13:54:05,820 - julearn - DEBUG - Adding transformer pick_columns
    2024-07-30 13:54:05,820 - julearn - DEBUG -      Estimator: PickColumns(keep='pca__pca0')
    2024-07-30 13:54:05,820 - julearn - DEBUG -      Params to tune: {}
    2024-07-30 13:54:05,820 - julearn - INFO - = Model Parameters =
    2024-07-30 13:54:05,820 - julearn - INFO - ====================
    2024-07-30 13:54:05,820 - julearn - INFO - 
    2024-07-30 13:54:05,820 - julearn - DEBUG - Pipeline created
    2024-07-30 13:54:05,820 - julearn - DEBUG - Target generator pipeline created
    2024-07-30 13:54:05,820 - julearn - DEBUG - Adding transformer zscore
    2024-07-30 13:54:05,821 - julearn - DEBUG -      Estimator: StandardScaler()
    2024-07-30 13:54:05,821 - julearn - DEBUG -      Params to tune: {}
    2024-07-30 13:54:05,821 - julearn - DEBUG - Adding model linreg
    2024-07-30 13:54:05,821 - julearn - DEBUG - Wrapping linreg
    2024-07-30 13:54:05,821 - julearn - DEBUG -      Estimator: WrapModel(apply_to=ColumnTypes<types={'sepal'}; pattern=(?:__:type:__sepal)>,
              copy_X=True, fit_intercept=True, model=LinearRegression(),
              n_jobs=None, positive=False)
    2024-07-30 13:54:05,821 - julearn - DEBUG -      Looking for nested pipeline creators
    2024-07-30 13:54:05,821 - julearn - DEBUG -      Params to tune: {}
    2024-07-30 13:54:05,822 - julearn - DEBUG - Wrapping target model linreg as target_generate
    2024-07-30 13:54:05,822 - julearn - INFO - = Model Parameters =
    2024-07-30 13:54:05,822 - julearn - INFO - ====================
    2024-07-30 13:54:05,822 - julearn - INFO - 
    2024-07-30 13:54:05,822 - julearn - DEBUG - Pipeline created
    2024-07-30 13:54:05,822 - julearn - INFO - = Data Information =
    2024-07-30 13:54:05,822 - julearn - INFO -      Problem type: regression
    2024-07-30 13:54:05,822 - julearn - INFO -      Number of samples: 150
    2024-07-30 13:54:05,822 - julearn - INFO -      Number of features: 4
    2024-07-30 13:54:05,822 - julearn - INFO - ====================
    2024-07-30 13:54:05,822 - julearn - INFO - 
    2024-07-30 13:54:05,822 - julearn - INFO -      Target type: float64
    2024-07-30 13:54:05,822 - julearn - INFO - Using outer CV scheme KFold(n_splits=2, random_state=None, shuffle=False)
    2024-07-30 13:54:05,825 - julearn - DEBUG - Setting column types for Index(['sepal_length', 'sepal_width', 'petal_length', 'petal_width'], dtype='object')
    2024-07-30 13:54:05,826 - julearn - DEBUG -     Column mappers for {'sepal_length': 'sepal_length__:type:__sepal', 'sepal_width': 'sepal_width__:type:__sepal', 'petal_length': 'petal_length__:type:__petal', 'petal_width': 'petal_width__:type:__petal'}
    2024-07-30 13:54:05,831 - julearn - DEBUG - Fitting the target generator
    2024-07-30 13:54:05,832 - julearn - DEBUG - Setting column types for Index(['sepal_length__:type:__sepal', 'sepal_width__:type:__sepal',
           'petal_length__:type:__petal', 'petal_width__:type:__petal'],
          dtype='object')
    2024-07-30 13:54:05,832 - julearn - DEBUG -     Column mappers for {'sepal_length': 'sepal_length__:type:__sepal', 'sepal_width': 'sepal_width__:type:__sepal', 'petal_length': 'petal_length__:type:__petal', 'petal_width': 'petal_width__:type:__petal'}
    2024-07-30 13:54:05,839 - julearn - DEBUG - Generating target
    2024-07-30 13:54:05,841 - julearn - DEBUG - Picking columns: ['pca__pca0']
    2024-07-30 13:54:05,841 - julearn - DEBUG - Target generated: pca__pca0
    2024-07-30 13:54:05,842 - julearn - DEBUG - Fitting model from generated target
    2024-07-30 13:54:05,846 - julearn - DEBUG - Generating target
    2024-07-30 13:54:05,848 - julearn - DEBUG - Picking columns: ['pca__pca0']
    2024-07-30 13:54:05,849 - julearn - DEBUG - Target generated: pca__pca0
    2024-07-30 13:54:05,849 - julearn - DEBUG - Scoring model using generated target
    2024-07-30 13:54:05,853 - julearn - DEBUG - Setting column types for Index(['sepal_length', 'sepal_width', 'petal_length', 'petal_width'], dtype='object')
    2024-07-30 13:54:05,853 - julearn - DEBUG -     Column mappers for {'sepal_length': 'sepal_length__:type:__sepal', 'sepal_width': 'sepal_width__:type:__sepal', 'petal_length': 'petal_length__:type:__petal', 'petal_width': 'petal_width__:type:__petal'}
    2024-07-30 13:54:05,858 - julearn - DEBUG - Fitting the target generator
    2024-07-30 13:54:05,858 - julearn - DEBUG - Setting column types for Index(['sepal_length__:type:__sepal', 'sepal_width__:type:__sepal',
           'petal_length__:type:__petal', 'petal_width__:type:__petal'],
          dtype='object')
    2024-07-30 13:54:05,858 - julearn - DEBUG -     Column mappers for {'sepal_length': 'sepal_length__:type:__sepal', 'sepal_width': 'sepal_width__:type:__sepal', 'petal_length': 'petal_length__:type:__petal', 'petal_width': 'petal_width__:type:__petal'}
    2024-07-30 13:54:05,865 - julearn - DEBUG - Generating target
    2024-07-30 13:54:05,867 - julearn - DEBUG - Picking columns: ['pca__pca0']
    2024-07-30 13:54:05,868 - julearn - DEBUG - Target generated: pca__pca0
    2024-07-30 13:54:05,868 - julearn - DEBUG - Fitting model from generated target
    2024-07-30 13:54:05,872 - julearn - DEBUG - Generating target
    2024-07-30 13:54:05,874 - julearn - DEBUG - Picking columns: ['pca__pca0']
    2024-07-30 13:54:05,875 - julearn - DEBUG - Target generated: pca__pca0
    2024-07-30 13:54:05,875 - julearn - DEBUG - Scoring model using generated target
    2024-07-30 13:54:05,877 - julearn - INFO - Fitting final model
    2024-07-30 13:54:05,877 - julearn - DEBUG - Setting column types for Index(['sepal_length', 'sepal_width', 'petal_length', 'petal_width'], dtype='object')
    2024-07-30 13:54:05,877 - julearn - DEBUG -     Column mappers for {'sepal_length': 'sepal_length__:type:__sepal', 'sepal_width': 'sepal_width__:type:__sepal', 'petal_length': 'petal_length__:type:__petal', 'petal_width': 'petal_width__:type:__petal'}
    2024-07-30 13:54:05,883 - julearn - DEBUG - Fitting the target generator
    2024-07-30 13:54:05,883 - julearn - DEBUG - Setting column types for Index(['sepal_length__:type:__sepal', 'sepal_width__:type:__sepal',
           'petal_length__:type:__petal', 'petal_width__:type:__petal'],
          dtype='object')
    2024-07-30 13:54:05,883 - julearn - DEBUG -     Column mappers for {'sepal_length': 'sepal_length__:type:__sepal', 'sepal_width': 'sepal_width__:type:__sepal', 'petal_length': 'petal_length__:type:__petal', 'petal_width': 'petal_width__:type:__petal'}
    2024-07-30 13:54:05,890 - julearn - DEBUG - Generating target
    2024-07-30 13:54:05,892 - julearn - DEBUG - Picking columns: ['pca__pca0']
    2024-07-30 13:54:05,892 - julearn - DEBUG - Target generated: pca__pca0
    2024-07-30 13:54:05,893 - julearn - DEBUG - Fitting model from generated target
    0   -2.368292
    1   -0.722797
    Name: test_score, dtype: float64





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.087 seconds)


.. _sphx_glr_download_auto_examples_03_complex_models_run_generate_target.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: run_generate_target.py <run_generate_target.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: run_generate_target.ipynb <run_generate_target.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
