Search.setIndex({"alltitles": {"API Changes": [[144, "api-changes"], [144, "id14"]], "API Reference": [[76, null]], "Adding and building documentation": [[122, "adding-and-building-documentation"]], "Applying preprocessing to the target": [[136, null]], "Base": [[0, null]], "Bugfixes": [[144, "bugfixes"], [144, "id1"], [144, "id3"], [144, "id5"], [144, "id9"], [144, "id15"]], "CBPM in julearn": [[128, "cbpm-in-julearn"]], "Classes": [[0, "classes"], [77, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [85, "classes"], [85, "id1"], [86, "classes"], [86, "id1"]], "Complex Models": [[105, null]], "Computation times": [[95, null], [98, null], [104, null], [112, null], [116, null], [119, null], [137, null]], "Config": [[1, null]], "Configuring julearn": [[121, null]], "Confound Removal (model comparison)": [[114, null]], "Confound Removal Typical Use Case": [[115, "confound-removal-typical-use-case"]], "Confound Removal in julearn": [[129, "confound-removal-in-julearn"]], "Confounds": [[113, null]], "Connectome-based Predictive Modeling (CBPM)": [[128, null]], "Contents:": [[123, null]], "Contributing": [[122, null]], "Cross-validation - The fundamentals": [[138, "cross-validation-the-fundamentals"]], "Cross-validation consistent Confound Removal": [[129, null]], "Cross-validation scores": [[142, "cross-validation-scores"]], "Cross-validation splitters": [[130, null], [142, "cross-validation-splitters"]], "Custom": [[120, "custom"]], "Custom Scoring Function for Regression": [[118, null]], "Customization": [[117, null]], "Data": [[139, null]], "Data Transfer": [[133, "data-transfer"]], "Data input to run_cross_validation()": [[139, "data-input-to-run-cross-validation"]], "DataFrame operations": [[120, "dataframe-operations"]], "Dealing with Cross-Validation techniques": [[93, "dealing-with-cross-validation-techniques"], [100, "dealing-with-cross-validation-techniques"]], "Decomposition": [[120, "decomposition"]], "Dummy": [[120, "dummy"]], "Dynamic Selection": [[120, "dynamic-selection"]], "Dynamic Selection (DESLib)": [[80, "dynamic-selection-deslib"]], "Enhancements": [[144, "enhancements"], [144, "id2"], [144, "id7"], [144, "id11"], [144, "id17"]], "Ensemble": [[120, "ensemble"]], "Examples": [[123, null]], "Examples using julearn.PipelineCreator": [[2, "examples-using-julearn-pipelinecreator"]], "Examples using julearn.TargetPipelineCreator": [[3, "examples-using-julearn-targetpipelinecreator"]], "Examples using julearn.inspect.Inspector": [[16, "examples-using-julearn-inspect-inspector"]], "Examples using julearn.inspect.PipelineInspector": [[17, "examples-using-julearn-inspect-pipelineinspector"]], "Examples using julearn.inspect.preprocess": [[18, "examples-using-julearn-inspect-preprocess"]], "Examples using julearn.model_selection.ContinuousStratifiedKFold": [[20, "examples-using-julearn-model-selection-continuousstratifiedkfold"]], "Examples using julearn.model_selection.StratifiedBootstrap": [[23, "examples-using-julearn-model-selection-stratifiedbootstrap"]], "Examples using julearn.run_cross_validation": [[37, "examples-using-julearn-run-cross-validation"]], "Examples using julearn.scoring.list_scorers": [[41, "examples-using-julearn-scoring-list-scorers"]], "Examples using julearn.scoring.register_scorer": [[44, "examples-using-julearn-scoring-register-scorer"]], "Examples using julearn.stats.corrected_ttest": [[46, "examples-using-julearn-stats-corrected-ttest"]], "Examples using julearn.utils.configure_logging": [[66, "examples-using-julearn-utils-configure-logging"]], "Examples using julearn.viz.plot_scores": [[75, "examples-using-julearn-viz-plot-scores"]], "FAQs": [[124, null]], "Feature Selection": [[120, "feature-selection"]], "Feature preprocessing": [[143, "feature-preprocessing"]], "Features": [[144, "features"], [144, "id12"], [144, "id18"]], "Fitting each estimator on a specific feature type": [[135, "fitting-each-estimator-on-a-specific-feature-type"]], "Fitting each estimator on all of the features": [[135, "fitting-each-estimator-on-all-of-the-features"]], "Functions": [[0, "functions"], [1, "functions"], [77, "functions"], [78, "functions"], [79, "functions"], [80, "functions"], [82, "functions"], [83, "functions"], [83, "id1"], [84, "functions"], [85, "functions"], [85, "id2"], [86, "functions"], [87, "functions"]], "Gaussian Processes": [[120, "gaussian-processes"]], "Getting started": [[125, null]], "GitHub Pull Request guidelines": [[122, "github-pull-request-guidelines"]], "Giving types to features": [[139, "giving-types-to-features"]], "Grouped CV": [[93, null]], "Grouping": [[130, "grouping"]], "How do I use the viz interactive plots?": [[124, "how-do-i-use-the-viz-interactive-plots"]], "Hyperparameter Tuning": [[131, null], [131, "id1"]], "I have issues with the dependencies for the viz module.": [[124, "i-have-issues-with-the-dependencies-for-the-viz-module"]], "Improved Documentation": [[144, "improved-documentation"], [144, "id4"], [144, "id6"], [144, "id10"], [144, "id16"]], "Indices and tables": [[126, "indices-and-tables"], [126, "id1"]], "Inspect": [[77, null]], "Inspecting Models": [[134, null]], "Inspecting Random Forest models": [[101, null]], "Inspecting SVM models": [[100, null]], "Inspecting the fold-wise predictions": [[103, null]], "Inspection": [[99, null]], "Installing": [[125, "installing"]], "Julearn 0.2.5 (2022-07-21)": [[144, "julearn-0-2-5-2022-07-21"]], "Julearn 0.3.0 (2023-07-19)": [[144, "julearn-0-3-0-2023-07-19"]], "Julearn 0.3.1 (2024-01-23)": [[144, "julearn-0-3-1-2024-01-23"]], "Julearn 0.3.2 (2024-05-03)": [[144, "julearn-0-3-2-2024-05-03"]], "Julearn 0.3.3 (2024-05-16)": [[144, "julearn-0-3-3-2024-05-16"]], "Julearn 0.3.4 (2024-10-17)": [[144, "julearn-0-3-4-2024-10-17"]], "Julearn 0.3.5.dev79 (2025-09-12)": [[144, "julearn-release-2025-09-12"]], "Linear Models": [[120, "linear-models"]], "Main API": [[78, null]], "Maintaining": [[127, null]], "Massively parallelizing julearn with Joblib and HTcondor": [[133, "massively-parallelizing-julearn-with-joblib-and-htcondor"]], "Merging or joining DataFrame": [[92, "merging-or-joining-dataframe"]], "Misc": [[144, "misc"], [144, "id8"], [144, "id13"]], "Model Building": [[143, null]], "Model Comparison": [[96, null], [141, null]], "Model Evaluation": [[142, null]], "Model Selection": [[79, null]], "Models": [[80, null]], "Models (Estimators)": [[120, "models-estimators"]], "Models as hyperparameters": [[131, "models-as-hyperparameters"]], "Multiclass Classification": [[89, null]], "Naive Bayes": [[120, "naive-bayes"]], "Optional Dependencies": [[125, "optional-dependencies"]], "Overhead": [[133, "overhead"]], "Overview of available Pipeline Steps": [[120, null]], "Parallelizing julearn with Joblib": [[133, null]], "Parameters vs Hyperparameters": [[131, "parameters-vs-hyperparameters"]], "Pipeline": [[81, null]], "Pipeline specification in run_cross_validation()": [[143, "pipeline-specification-in-run-cross-validation"]], "Pipeline specification made easy with the PipelineCreator": [[143, "pipeline-specification-made-easy-with-the-pipelinecreator"]], "Pool": [[133, "pool"]], "Prepare": [[82, null]], "Preprocessing with variance threshold, zscore and PCA": [[102, null]], "Random Forest variable importance": [[101, "random-forest-variable-importance"]], "Recursive parallelization": [[133, "recursive-parallelization"]], "References": [[92, "references"], [93, "references"], [100, "references"], [108, "references"], [109, "references"], [110, "references"]], "References:": [[128, null], [129, null], [130, null], [138, null], [143, null]], "Regression Analysis": [[90, null], [107, null]], "Releasing a new version": [[127, "releasing-a-new-version"]], "Removing Confounds from the Features": [[129, "removing-confounds-from-the-features"]], "Removing Confounds from the Target": [[129, "removing-confounds-from-the-target"]], "Requirements": [[125, "requirements"]], "Return Confounds in Confound Removal": [[115, null]], "Returning a model (estimator)": [[142, "returning-a-model-estimator"]], "Running unit tests": [[122, "running-unit-tests"]], "Scalers": [[120, "scalers"]], "Scikit-learn parallelization": [[133, "scikit-learn-parallelization"]], "Score visualizations": [[141, "score-visualizations"]], "Scoring": [[83, null]], "Scoring Metrics": [[83, "module-julearn.scoring.metrics"]], "Scoring metrics": [[142, "scoring-metrics"]], "Searchers": [[131, "searchers"]], "Selected deeper topics": [[132, null]], "Selective preprocessing using feature types": [[143, "selective-preprocessing-using-feature-types"]], "Setting hyperparameters": [[143, "setting-hyperparameters"]], "Setting up the local development environment": [[122, "setting-up-the-local-development-environment"]], "Setup suggestion": [[125, "setup-suggestion"]], "Should I use Confound Regression?": [[129, "should-i-use-confound-regression"]], "Simple Binary Classification": [[94, null]], "Simple Model Comparison": [[97, null]], "Specifying distributions": [[131, "specifying-distributions"]], "Stacking Classification": [[111, null]], "Stacking Models": [[135, null]], "Starting with julearn": [[88, null]], "Statistical comparisons": [[141, "statistical-comparisons"]], "Stats": [[84, null]], "Stratification": [[130, "stratification"]], "Stratified K-fold CV for regression analysis": [[91, null]], "Support Vector Machines": [[120, "support-vector-machines"]], "Table of Contents": [[126, "table-of-contents"], [132, null]], "Target Transformers": [[85, "module-julearn.transformers.target"]], "The essence of run_cross_validation()": [[138, "the-essence-of-run-cross-validation"]], "The output of run_cross_validation()": [[142, "the-output-of-run-cross-validation"]], "Throttling": [[133, "throttling"]], "Transformers": [[85, null], [120, "transformers"]], "Transforming target variable with z-score": [[106, null]], "Tuning Hyperparameters": [[109, null]], "Tuning Hyperparameters using Bayesian Search": [[110, null]], "Tuning Multiple Hyperparameters Grids": [[108, null]], "Tuning more than one grid": [[131, "tuning-more-than-one-grid"]], "Typing": [[86, "module-julearn.utils.typing"]], "Utils": [[86, null]], "Versioning": [[127, "versioning"]], "Visualization": [[87, null]], "Visualizing Progress": [[133, "visualizing-progress"]], "Welcome to julearn\u2019s documentation!": [[126, null]], "What is julearn?": [[126, "what-is-julearn"]], "What you really need to know": [[140, null]], "What\u2019s new": [[144, null]], "Why cross validation?": [[138, null]], "Why julearn?": [[126, "why-julearn"]], "Working with pandas": [[92, null]], "Writing Examples": [[122, "writing-examples"]], "julearn.PipelineCreator": [[2, null]], "julearn.TargetPipelineCreator": [[3, null]], "julearn.base.ColumnTypes": [[4, null]], "julearn.base.ColumnTypesLike": [[5, null]], "julearn.base.JuBaseEstimator": [[6, null]], "julearn.base.JuTransformer": [[7, null]], "julearn.base.WrapModel": [[8, null]], "julearn.base.change_column_type": [[9, null]], "julearn.base.ensure_column_types": [[10, null]], "julearn.base.get_column_type": [[11, null]], "julearn.base.make_type_selector": [[12, null]], "julearn.config.get_config": [[13, null]], "julearn.config.set_config": [[14, null]], "julearn.inspect.FoldsInspector": [[15, null]], "julearn.inspect.Inspector": [[16, null]], "julearn.inspect.PipelineInspector": [[17, null]], "julearn.inspect.preprocess": [[18, null]], "julearn.model_selection.ContinuousStratifiedGroupKFold": [[19, null]], "julearn.model_selection.ContinuousStratifiedKFold": [[20, null]], "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold": [[21, null]], "julearn.model_selection.RepeatedContinuousStratifiedKFold": [[22, null]], "julearn.model_selection.StratifiedBootstrap": [[23, null]], "julearn.model_selection.get_searcher": [[24, null]], "julearn.model_selection.list_searchers": [[25, null]], "julearn.model_selection.register_searcher": [[26, null]], "julearn.model_selection.reset_searcher_register": [[27, null]], "julearn.models.dynamic.DynamicSelection": [[28, null]], "julearn.models.get_model": [[29, null]], "julearn.models.list_models": [[30, null]], "julearn.models.register_model": [[31, null]], "julearn.models.reset_model_register": [[32, null]], "julearn.pipeline.JuTargetPipeline": [[33, null]], "julearn.pipeline.pipeline_creator.Step": [[34, null]], "julearn.prepare.check_consistency": [[35, null]], "julearn.prepare.prepare_input_data": [[36, null]], "julearn.run_cross_validation": [[37, null]], "julearn.run_fit": [[38, null]], "julearn.scoring.check_scoring": [[39, null]], "julearn.scoring.get_scorer": [[40, null]], "julearn.scoring.list_scorers": [[41, null]], "julearn.scoring.metrics.r2_corr": [[42, null]], "julearn.scoring.metrics.r_corr": [[43, null]], "julearn.scoring.register_scorer": [[44, null]], "julearn.scoring.reset_scorer_register": [[45, null]], "julearn.stats.corrected_ttest": [[46, null]], "julearn.transformers.CBPM": [[47, null]], "julearn.transformers.ChangeColumnTypes": [[48, null]], "julearn.transformers.DropColumns": [[49, null]], "julearn.transformers.FilterColumns": [[50, null]], "julearn.transformers.JuColumnTransformer": [[51, null]], "julearn.transformers.SetColumnTypes": [[52, null]], "julearn.transformers.confound_remover.ConfoundRemover": [[53, null]], "julearn.transformers.get_transformer": [[54, null]], "julearn.transformers.list_transformers": [[55, null]], "julearn.transformers.register_transformer": [[56, null]], "julearn.transformers.reset_transformer_register": [[57, null]], "julearn.transformers.target.JuTargetTransformer": [[58, null]], "julearn.transformers.target.JuTransformedTargetModel": [[59, null]], "julearn.transformers.target.TargetConfoundRemover": [[60, null]], "julearn.transformers.target.TransformedTargetWarning": [[61, null]], "julearn.transformers.target.get_target_transformer": [[62, null]], "julearn.transformers.target.list_target_transformers": [[63, null]], "julearn.transformers.target.register_target_transformer": [[64, null]], "julearn.transformers.target.reset_target_transformer_register": [[65, null]], "julearn.utils.configure_logging": [[66, null]], "julearn.utils.logger": [[67, null]], "julearn.utils.raise_error": [[68, null]], "julearn.utils.typing.EstimatorLike": [[69, null]], "julearn.utils.typing.EstimatorLikeFit1": [[70, null]], "julearn.utils.typing.EstimatorLikeFit2": [[71, null]], "julearn.utils.typing.EstimatorLikeFity": [[72, null]], "julearn.utils.typing.JuEstimatorLike": [[73, null]], "julearn.utils.warn_with_log": [[74, null]], "julearn.viz.plot_scores": [[75, null]]}, "docnames": ["api/base", "api/config", "api/generated/julearn.PipelineCreator", "api/generated/julearn.TargetPipelineCreator", "api/generated/julearn.base.ColumnTypes", "api/generated/julearn.base.ColumnTypesLike", "api/generated/julearn.base.JuBaseEstimator", "api/generated/julearn.base.JuTransformer", "api/generated/julearn.base.WrapModel", "api/generated/julearn.base.change_column_type", "api/generated/julearn.base.ensure_column_types", "api/generated/julearn.base.get_column_type", "api/generated/julearn.base.make_type_selector", "api/generated/julearn.config.get_config", "api/generated/julearn.config.set_config", "api/generated/julearn.inspect.FoldsInspector", "api/generated/julearn.inspect.Inspector", "api/generated/julearn.inspect.PipelineInspector", "api/generated/julearn.inspect.preprocess", "api/generated/julearn.model_selection.ContinuousStratifiedGroupKFold", "api/generated/julearn.model_selection.ContinuousStratifiedKFold", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedGroupKFold", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedKFold", "api/generated/julearn.model_selection.StratifiedBootstrap", "api/generated/julearn.model_selection.get_searcher", "api/generated/julearn.model_selection.list_searchers", "api/generated/julearn.model_selection.register_searcher", "api/generated/julearn.model_selection.reset_searcher_register", "api/generated/julearn.models.dynamic.DynamicSelection", "api/generated/julearn.models.get_model", "api/generated/julearn.models.list_models", "api/generated/julearn.models.register_model", "api/generated/julearn.models.reset_model_register", "api/generated/julearn.pipeline.JuTargetPipeline", "api/generated/julearn.pipeline.pipeline_creator.Step", "api/generated/julearn.prepare.check_consistency", "api/generated/julearn.prepare.prepare_input_data", "api/generated/julearn.run_cross_validation", "api/generated/julearn.run_fit", "api/generated/julearn.scoring.check_scoring", "api/generated/julearn.scoring.get_scorer", "api/generated/julearn.scoring.list_scorers", "api/generated/julearn.scoring.metrics.r2_corr", "api/generated/julearn.scoring.metrics.r_corr", "api/generated/julearn.scoring.register_scorer", "api/generated/julearn.scoring.reset_scorer_register", "api/generated/julearn.stats.corrected_ttest", "api/generated/julearn.transformers.CBPM", "api/generated/julearn.transformers.ChangeColumnTypes", "api/generated/julearn.transformers.DropColumns", "api/generated/julearn.transformers.FilterColumns", "api/generated/julearn.transformers.JuColumnTransformer", "api/generated/julearn.transformers.SetColumnTypes", "api/generated/julearn.transformers.confound_remover.ConfoundRemover", "api/generated/julearn.transformers.get_transformer", "api/generated/julearn.transformers.list_transformers", "api/generated/julearn.transformers.register_transformer", "api/generated/julearn.transformers.reset_transformer_register", "api/generated/julearn.transformers.target.JuTargetTransformer", "api/generated/julearn.transformers.target.JuTransformedTargetModel", "api/generated/julearn.transformers.target.TargetConfoundRemover", "api/generated/julearn.transformers.target.TransformedTargetWarning", "api/generated/julearn.transformers.target.get_target_transformer", "api/generated/julearn.transformers.target.list_target_transformers", "api/generated/julearn.transformers.target.register_target_transformer", "api/generated/julearn.transformers.target.reset_target_transformer_register", "api/generated/julearn.utils.configure_logging", "api/generated/julearn.utils.logger", "api/generated/julearn.utils.raise_error", "api/generated/julearn.utils.typing.EstimatorLike", "api/generated/julearn.utils.typing.EstimatorLikeFit1", "api/generated/julearn.utils.typing.EstimatorLikeFit2", "api/generated/julearn.utils.typing.EstimatorLikeFity", "api/generated/julearn.utils.typing.JuEstimatorLike", "api/generated/julearn.utils.warn_with_log", "api/generated/julearn.viz.plot_scores", "api/index", "api/inspect", "api/main", "api/model_selection", "api/models", "api/pipeline", "api/prepare", "api/scoring", "api/stats", "api/transformers", "api/utils", "api/viz", "auto_examples/00_starting/index", "auto_examples/00_starting/plot_cm_acc_multiclass", "auto_examples/00_starting/plot_example_regression", "auto_examples/00_starting/plot_stratified_kfold_reg", "auto_examples/00_starting/run_combine_pandas", "auto_examples/00_starting/run_grouped_cv", "auto_examples/00_starting/run_simple_binary_classification", "auto_examples/00_starting/sg_execution_times", "auto_examples/01_model_comparison/index", "auto_examples/01_model_comparison/plot_simple_model_comparison", "auto_examples/01_model_comparison/sg_execution_times", "auto_examples/02_inspection/index", "auto_examples/02_inspection/plot_groupcv_inspect_svm", "auto_examples/02_inspection/plot_inspect_random_forest", "auto_examples/02_inspection/plot_preprocess", "auto_examples/02_inspection/run_binary_inspect_folds", "auto_examples/02_inspection/sg_execution_times", "auto_examples/03_complex_models/index", "auto_examples/03_complex_models/run_apply_to_target", "auto_examples/03_complex_models/run_example_pca_featsets", "auto_examples/03_complex_models/run_hyperparameter_multiple_grids", "auto_examples/03_complex_models/run_hyperparameter_tuning", "auto_examples/03_complex_models/run_hyperparameter_tuning_bayessearch", "auto_examples/03_complex_models/run_stacked_models", "auto_examples/03_complex_models/sg_execution_times", "auto_examples/04_confounds/index", "auto_examples/04_confounds/plot_confound_removal_classification", "auto_examples/04_confounds/run_return_confounds", "auto_examples/04_confounds/sg_execution_times", "auto_examples/05_customization/index", "auto_examples/05_customization/run_custom_scorers_regression", "auto_examples/05_customization/sg_execution_times", "available_pipeline_steps", "configuration", "contributing", "examples", "faq", "getting_started", "index", "maintaining", "selected_deeper_topics/CBPM", "selected_deeper_topics/confound_removal", "selected_deeper_topics/cross_validation_splitter", "selected_deeper_topics/hyperparameter_tuning", "selected_deeper_topics/index", "selected_deeper_topics/joblib", "selected_deeper_topics/model_inspect", "selected_deeper_topics/stacked_models", "selected_deeper_topics/target_transformers", "sg_execution_times", "what_really_need_know/cross_validation", "what_really_need_know/data", "what_really_need_know/index", "what_really_need_know/model_comparison", "what_really_need_know/model_evaluation", "what_really_need_know/pipeline", "whats_new"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api/base.rst", "api/config.rst", "api/generated/julearn.PipelineCreator.rst", "api/generated/julearn.TargetPipelineCreator.rst", "api/generated/julearn.base.ColumnTypes.rst", "api/generated/julearn.base.ColumnTypesLike.rst", "api/generated/julearn.base.JuBaseEstimator.rst", "api/generated/julearn.base.JuTransformer.rst", "api/generated/julearn.base.WrapModel.rst", "api/generated/julearn.base.change_column_type.rst", "api/generated/julearn.base.ensure_column_types.rst", "api/generated/julearn.base.get_column_type.rst", "api/generated/julearn.base.make_type_selector.rst", "api/generated/julearn.config.get_config.rst", "api/generated/julearn.config.set_config.rst", "api/generated/julearn.inspect.FoldsInspector.rst", "api/generated/julearn.inspect.Inspector.rst", "api/generated/julearn.inspect.PipelineInspector.rst", "api/generated/julearn.inspect.preprocess.rst", "api/generated/julearn.model_selection.ContinuousStratifiedGroupKFold.rst", "api/generated/julearn.model_selection.ContinuousStratifiedKFold.rst", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.rst", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedKFold.rst", "api/generated/julearn.model_selection.StratifiedBootstrap.rst", "api/generated/julearn.model_selection.get_searcher.rst", "api/generated/julearn.model_selection.list_searchers.rst", "api/generated/julearn.model_selection.register_searcher.rst", "api/generated/julearn.model_selection.reset_searcher_register.rst", "api/generated/julearn.models.dynamic.DynamicSelection.rst", "api/generated/julearn.models.get_model.rst", "api/generated/julearn.models.list_models.rst", "api/generated/julearn.models.register_model.rst", "api/generated/julearn.models.reset_model_register.rst", "api/generated/julearn.pipeline.JuTargetPipeline.rst", "api/generated/julearn.pipeline.pipeline_creator.Step.rst", "api/generated/julearn.prepare.check_consistency.rst", "api/generated/julearn.prepare.prepare_input_data.rst", "api/generated/julearn.run_cross_validation.rst", "api/generated/julearn.run_fit.rst", "api/generated/julearn.scoring.check_scoring.rst", "api/generated/julearn.scoring.get_scorer.rst", "api/generated/julearn.scoring.list_scorers.rst", "api/generated/julearn.scoring.metrics.r2_corr.rst", "api/generated/julearn.scoring.metrics.r_corr.rst", "api/generated/julearn.scoring.register_scorer.rst", "api/generated/julearn.scoring.reset_scorer_register.rst", "api/generated/julearn.stats.corrected_ttest.rst", "api/generated/julearn.transformers.CBPM.rst", "api/generated/julearn.transformers.ChangeColumnTypes.rst", "api/generated/julearn.transformers.DropColumns.rst", "api/generated/julearn.transformers.FilterColumns.rst", "api/generated/julearn.transformers.JuColumnTransformer.rst", "api/generated/julearn.transformers.SetColumnTypes.rst", "api/generated/julearn.transformers.confound_remover.ConfoundRemover.rst", "api/generated/julearn.transformers.get_transformer.rst", "api/generated/julearn.transformers.list_transformers.rst", "api/generated/julearn.transformers.register_transformer.rst", "api/generated/julearn.transformers.reset_transformer_register.rst", "api/generated/julearn.transformers.target.JuTargetTransformer.rst", "api/generated/julearn.transformers.target.JuTransformedTargetModel.rst", "api/generated/julearn.transformers.target.TargetConfoundRemover.rst", "api/generated/julearn.transformers.target.TransformedTargetWarning.rst", "api/generated/julearn.transformers.target.get_target_transformer.rst", "api/generated/julearn.transformers.target.list_target_transformers.rst", "api/generated/julearn.transformers.target.register_target_transformer.rst", "api/generated/julearn.transformers.target.reset_target_transformer_register.rst", "api/generated/julearn.utils.configure_logging.rst", "api/generated/julearn.utils.logger.rst", "api/generated/julearn.utils.raise_error.rst", "api/generated/julearn.utils.typing.EstimatorLike.rst", "api/generated/julearn.utils.typing.EstimatorLikeFit1.rst", "api/generated/julearn.utils.typing.EstimatorLikeFit2.rst", "api/generated/julearn.utils.typing.EstimatorLikeFity.rst", "api/generated/julearn.utils.typing.JuEstimatorLike.rst", "api/generated/julearn.utils.warn_with_log.rst", "api/generated/julearn.viz.plot_scores.rst", "api/index.rst", "api/inspect.rst", "api/main.rst", "api/model_selection.rst", "api/models.rst", "api/pipeline.rst", "api/prepare.rst", "api/scoring.rst", "api/stats.rst", "api/transformers.rst", "api/utils.rst", "api/viz.rst", "auto_examples/00_starting/index.rst", "auto_examples/00_starting/plot_cm_acc_multiclass.rst", "auto_examples/00_starting/plot_example_regression.rst", "auto_examples/00_starting/plot_stratified_kfold_reg.rst", "auto_examples/00_starting/run_combine_pandas.rst", "auto_examples/00_starting/run_grouped_cv.rst", "auto_examples/00_starting/run_simple_binary_classification.rst", "auto_examples/00_starting/sg_execution_times.rst", "auto_examples/01_model_comparison/index.rst", "auto_examples/01_model_comparison/plot_simple_model_comparison.rst", "auto_examples/01_model_comparison/sg_execution_times.rst", "auto_examples/02_inspection/index.rst", "auto_examples/02_inspection/plot_groupcv_inspect_svm.rst", "auto_examples/02_inspection/plot_inspect_random_forest.rst", "auto_examples/02_inspection/plot_preprocess.rst", "auto_examples/02_inspection/run_binary_inspect_folds.rst", "auto_examples/02_inspection/sg_execution_times.rst", "auto_examples/03_complex_models/index.rst", "auto_examples/03_complex_models/run_apply_to_target.rst", "auto_examples/03_complex_models/run_example_pca_featsets.rst", "auto_examples/03_complex_models/run_hyperparameter_multiple_grids.rst", "auto_examples/03_complex_models/run_hyperparameter_tuning.rst", "auto_examples/03_complex_models/run_hyperparameter_tuning_bayessearch.rst", "auto_examples/03_complex_models/run_stacked_models.rst", "auto_examples/03_complex_models/sg_execution_times.rst", "auto_examples/04_confounds/index.rst", "auto_examples/04_confounds/plot_confound_removal_classification.rst", "auto_examples/04_confounds/run_return_confounds.rst", "auto_examples/04_confounds/sg_execution_times.rst", "auto_examples/05_customization/index.rst", "auto_examples/05_customization/run_custom_scorers_regression.rst", "auto_examples/05_customization/sg_execution_times.rst", "available_pipeline_steps.rst", "configuration.rst", "contributing.rst", "examples.rst", "faq.rst", "getting_started.rst", "index.rst", "maintaining.rst", "selected_deeper_topics/CBPM.rst", "selected_deeper_topics/confound_removal.rst", "selected_deeper_topics/cross_validation_splitter.rst", "selected_deeper_topics/hyperparameter_tuning.rst", "selected_deeper_topics/index.rst", "selected_deeper_topics/joblib.rst", "selected_deeper_topics/model_inspect.rst", "selected_deeper_topics/stacked_models.rst", "selected_deeper_topics/target_transformers.rst", "sg_execution_times.rst", "what_really_need_know/cross_validation.rst", "what_really_need_know/data.rst", "what_really_need_know/index.rst", "what_really_need_know/model_comparison.rst", "what_really_need_know/model_evaluation.rst", "what_really_need_know/pipeline.rst", "whats_new.rst"], "indexentries": {"__init__() (julearn.base.columntypes method)": [[4, "julearn.base.ColumnTypes.__init__", false]], "__init__() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.__init__", false]], "__init__() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.__init__", false]], "__init__() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.__init__", false]], "__init__() (julearn.inspect.foldsinspector method)": [[15, "julearn.inspect.FoldsInspector.__init__", false]], "__init__() (julearn.inspect.inspector method)": [[16, "julearn.inspect.Inspector.__init__", false]], "__init__() (julearn.inspect.pipelineinspector method)": [[17, "julearn.inspect.PipelineInspector.__init__", false]], "__init__() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[19, "julearn.model_selection.ContinuousStratifiedGroupKFold.__init__", false]], "__init__() (julearn.model_selection.continuousstratifiedkfold method)": [[20, "julearn.model_selection.ContinuousStratifiedKFold.__init__", false]], "__init__() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[21, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.__init__", false]], "__init__() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[22, "julearn.model_selection.RepeatedContinuousStratifiedKFold.__init__", false]], "__init__() (julearn.model_selection.stratifiedbootstrap method)": [[23, "julearn.model_selection.StratifiedBootstrap.__init__", false]], "__init__() (julearn.models.dynamic.dynamicselection method)": [[28, "julearn.models.dynamic.DynamicSelection.__init__", false]], "__init__() (julearn.pipeline.jutargetpipeline method)": [[33, "julearn.pipeline.JuTargetPipeline.__init__", false]], "__init__() (julearn.pipeline.pipeline_creator.step method)": [[34, "julearn.pipeline.pipeline_creator.Step.__init__", false]], "__init__() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.__init__", false]], "__init__() (julearn.targetpipelinecreator method)": [[3, "julearn.TargetPipelineCreator.__init__", false]], "__init__() (julearn.transformers.cbpm method)": [[47, "julearn.transformers.CBPM.__init__", false]], "__init__() (julearn.transformers.changecolumntypes method)": [[48, "julearn.transformers.ChangeColumnTypes.__init__", false]], "__init__() (julearn.transformers.confound_remover.confoundremover method)": [[53, "julearn.transformers.confound_remover.ConfoundRemover.__init__", false]], "__init__() (julearn.transformers.dropcolumns method)": [[49, "julearn.transformers.DropColumns.__init__", false]], "__init__() (julearn.transformers.filtercolumns method)": [[50, "julearn.transformers.FilterColumns.__init__", false]], "__init__() (julearn.transformers.jucolumntransformer method)": [[51, "julearn.transformers.JuColumnTransformer.__init__", false]], "__init__() (julearn.transformers.setcolumntypes method)": [[52, "julearn.transformers.SetColumnTypes.__init__", false]], "__init__() (julearn.transformers.target.jutargettransformer method)": [[58, "julearn.transformers.target.JuTargetTransformer.__init__", false]], "__init__() (julearn.transformers.target.jutransformedtargetmodel method)": [[59, "julearn.transformers.target.JuTransformedTargetModel.__init__", false]], "__init__() (julearn.transformers.target.targetconfoundremover method)": [[60, "julearn.transformers.target.TargetConfoundRemover.__init__", false]], "__init__() (julearn.transformers.target.transformedtargetwarning method)": [[61, "julearn.transformers.target.TransformedTargetWarning.__init__", false]], "__init__() (julearn.utils.typing.estimatorlikefit1 method)": [[70, "julearn.utils.typing.EstimatorLikeFit1.__init__", false]], "__init__() (julearn.utils.typing.estimatorlikefit2 method)": [[71, "julearn.utils.typing.EstimatorLikeFit2.__init__", false]], "__init__() (julearn.utils.typing.estimatorlikefity method)": [[72, "julearn.utils.typing.EstimatorLikeFity.__init__", false]], "__init__() (julearn.utils.typing.juestimatorlike method)": [[73, "julearn.utils.typing.JuEstimatorLike.__init__", false]], "add() (julearn.base.columntypes method)": [[4, "julearn.base.ColumnTypes.add", false]], "add() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.add", false]], "add() (julearn.targetpipelinecreator method)": [[3, "julearn.TargetPipelineCreator.add", false]], "add_note() (julearn.transformers.target.transformedtargetwarning method)": [[61, "julearn.transformers.target.TransformedTargetWarning.add_note", false]], "aggregate() (julearn.transformers.cbpm method)": [[47, "julearn.transformers.CBPM.aggregate", false]], "apply_to (julearn.pipeline.pipeline_creator.step attribute)": [[34, "julearn.pipeline.pipeline_creator.Step.apply_to", false]], "args (julearn.transformers.target.transformedtargetwarning attribute)": [[61, "julearn.transformers.target.TransformedTargetWarning.args", false]], "can_inverse_transform() (julearn.pipeline.jutargetpipeline method)": [[33, "julearn.pipeline.JuTargetPipeline.can_inverse_transform", false]], "can_inverse_transform() (julearn.transformers.target.jutransformedtargetmodel method)": [[59, "julearn.transformers.target.JuTransformedTargetModel.can_inverse_transform", false]], "cbpm (class in julearn.transformers)": [[47, "julearn.transformers.CBPM", false]], "change_column_type() (in module julearn.base)": [[9, "julearn.base.change_column_type", false]], "changecolumntypes (class in julearn.transformers)": [[48, "julearn.transformers.ChangeColumnTypes", false]], "check_consistency() (in module julearn.prepare)": [[35, "julearn.prepare.check_consistency", false]], "check_scoring() (in module julearn.scoring)": [[39, "julearn.scoring.check_scoring", false]], "classes_ (julearn.base.wrapmodel property)": [[8, "julearn.base.WrapModel.classes_", false]], "classes_ (julearn.transformers.target.jutransformedtargetmodel property)": [[59, "julearn.transformers.target.JuTransformedTargetModel.classes_", false]], "columntypes (class in julearn.base)": [[4, "julearn.base.ColumnTypes", false]], "columntypeslike (in module julearn.base)": [[5, "julearn.base.ColumnTypesLike", false]], "configure_logging() (in module julearn.utils)": [[66, "julearn.utils.configure_logging", false]], "confoundremover (class in julearn.transformers.confound_remover)": [[53, "julearn.transformers.confound_remover.ConfoundRemover", false]], "continuousstratifiedgroupkfold (class in julearn.model_selection)": [[19, "julearn.model_selection.ContinuousStratifiedGroupKFold", false]], "continuousstratifiedkfold (class in julearn.model_selection)": [[20, "julearn.model_selection.ContinuousStratifiedKFold", false]], "copy() (julearn.base.columntypes method)": [[4, "julearn.base.ColumnTypes.copy", false]], "copy() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.copy", false]], "corrected_ttest() (in module julearn.stats)": [[46, "julearn.stats.corrected_ttest", false]], "decision_function() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.decision_function", false]], "decision_function() (julearn.inspect.foldsinspector method)": [[15, "julearn.inspect.FoldsInspector.decision_function", false]], "decision_function() (julearn.transformers.target.jutransformedtargetmodel method)": [[59, "julearn.transformers.target.JuTransformedTargetModel.decision_function", false]], "dropcolumns (class in julearn.transformers)": [[49, "julearn.transformers.DropColumns", false]], "dynamicselection (class in julearn.models.dynamic)": [[28, "julearn.models.dynamic.DynamicSelection", false]], "ensure_column_types() (in module julearn.base)": [[10, "julearn.base.ensure_column_types", false]], "estimator (julearn.pipeline.pipeline_creator.step attribute)": [[34, "julearn.pipeline.pipeline_creator.Step.estimator", false]], "estimatorlike (in module julearn.utils.typing)": [[69, "julearn.utils.typing.EstimatorLike", false]], "estimatorlikefit1 (class in julearn.utils.typing)": [[70, "julearn.utils.typing.EstimatorLikeFit1", false]], "estimatorlikefit2 (class in julearn.utils.typing)": [[71, "julearn.utils.typing.EstimatorLikeFit2", false]], "estimatorlikefity (class in julearn.utils.typing)": [[72, "julearn.utils.typing.EstimatorLikeFity", false]], "filter_columns() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.filter_columns", false]], "filter_columns() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.filter_columns", false]], "filter_columns() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.filter_columns", false]], "filter_columns() (julearn.transformers.changecolumntypes method)": [[48, "julearn.transformers.ChangeColumnTypes.filter_columns", false]], "filter_columns() (julearn.transformers.confound_remover.confoundremover method)": [[53, "julearn.transformers.confound_remover.ConfoundRemover.filter_columns", false]], "filter_columns() (julearn.transformers.dropcolumns method)": [[49, "julearn.transformers.DropColumns.filter_columns", false]], "filter_columns() (julearn.transformers.filtercolumns method)": [[50, "julearn.transformers.FilterColumns.filter_columns", false]], "filter_columns() (julearn.transformers.jucolumntransformer method)": [[51, "julearn.transformers.JuColumnTransformer.filter_columns", false]], "filter_columns() (julearn.transformers.setcolumntypes method)": [[52, "julearn.transformers.SetColumnTypes.filter_columns", false]], "filter_columns() (julearn.transformers.target.jutransformedtargetmodel method)": [[59, "julearn.transformers.target.JuTransformedTargetModel.filter_columns", false]], "filtercolumns (class in julearn.transformers)": [[50, "julearn.transformers.FilterColumns", false]], "fit() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.fit", false]], "fit() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.fit", false]], "fit() (julearn.models.dynamic.dynamicselection method)": [[28, "julearn.models.dynamic.DynamicSelection.fit", false]], "fit() (julearn.pipeline.jutargetpipeline method)": [[33, "julearn.pipeline.JuTargetPipeline.fit", false]], "fit() (julearn.transformers.cbpm method)": [[47, "julearn.transformers.CBPM.fit", false]], "fit() (julearn.transformers.changecolumntypes method)": [[48, "julearn.transformers.ChangeColumnTypes.fit", false]], "fit() (julearn.transformers.confound_remover.confoundremover method)": [[53, "julearn.transformers.confound_remover.ConfoundRemover.fit", false]], "fit() (julearn.transformers.dropcolumns method)": [[49, "julearn.transformers.DropColumns.fit", false]], "fit() (julearn.transformers.filtercolumns method)": [[50, "julearn.transformers.FilterColumns.fit", false]], "fit() (julearn.transformers.jucolumntransformer method)": [[51, "julearn.transformers.JuColumnTransformer.fit", false]], "fit() (julearn.transformers.setcolumntypes method)": [[52, "julearn.transformers.SetColumnTypes.fit", false]], "fit() (julearn.transformers.target.jutargettransformer method)": [[58, "julearn.transformers.target.JuTargetTransformer.fit", false]], "fit() (julearn.transformers.target.jutransformedtargetmodel method)": [[59, "julearn.transformers.target.JuTransformedTargetModel.fit", false]], "fit() (julearn.transformers.target.targetconfoundremover method)": [[60, "julearn.transformers.target.TargetConfoundRemover.fit", false]], "fit() (julearn.utils.typing.estimatorlikefit1 method)": [[70, "julearn.utils.typing.EstimatorLikeFit1.fit", false]], "fit() (julearn.utils.typing.estimatorlikefit2 method)": [[71, "julearn.utils.typing.EstimatorLikeFit2.fit", false]], "fit() (julearn.utils.typing.estimatorlikefity method)": [[72, "julearn.utils.typing.EstimatorLikeFity.fit", false]], "fit() (julearn.utils.typing.juestimatorlike method)": [[73, "julearn.utils.typing.JuEstimatorLike.fit", false]], "fit_transform() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.fit_transform", false]], "fit_transform() (julearn.pipeline.jutargetpipeline method)": [[33, "julearn.pipeline.JuTargetPipeline.fit_transform", false]], "fit_transform() (julearn.transformers.cbpm method)": [[47, "julearn.transformers.CBPM.fit_transform", false]], "fit_transform() (julearn.transformers.changecolumntypes method)": [[48, "julearn.transformers.ChangeColumnTypes.fit_transform", false]], "fit_transform() (julearn.transformers.confound_remover.confoundremover method)": [[53, "julearn.transformers.confound_remover.ConfoundRemover.fit_transform", false]], "fit_transform() (julearn.transformers.dropcolumns method)": [[49, "julearn.transformers.DropColumns.fit_transform", false]], "fit_transform() (julearn.transformers.filtercolumns method)": [[50, "julearn.transformers.FilterColumns.fit_transform", false]], "fit_transform() (julearn.transformers.jucolumntransformer method)": [[51, "julearn.transformers.JuColumnTransformer.fit_transform", false]], "fit_transform() (julearn.transformers.setcolumntypes method)": [[52, "julearn.transformers.SetColumnTypes.fit_transform", false]], "fit_transform() (julearn.transformers.target.jutargettransformer method)": [[58, "julearn.transformers.target.JuTargetTransformer.fit_transform", false]], "fit_transform() (julearn.transformers.target.targetconfoundremover method)": [[60, "julearn.transformers.target.TargetConfoundRemover.fit_transform", false]], "folds (julearn.inspect.inspector property)": [[16, "julearn.inspect.Inspector.folds", false]], "foldsinspector (class in julearn.inspect)": [[15, "julearn.inspect.FoldsInspector", false]], "from_list() (julearn.pipelinecreator class method)": [[2, "julearn.PipelineCreator.from_list", false]], "get_apply_to() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.get_apply_to", false]], "get_apply_to() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.get_apply_to", false]], "get_apply_to() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.get_apply_to", false]], "get_apply_to() (julearn.transformers.changecolumntypes method)": [[48, "julearn.transformers.ChangeColumnTypes.get_apply_to", false]], "get_apply_to() (julearn.transformers.confound_remover.confoundremover method)": [[53, "julearn.transformers.confound_remover.ConfoundRemover.get_apply_to", false]], "get_apply_to() (julearn.transformers.dropcolumns method)": [[49, "julearn.transformers.DropColumns.get_apply_to", false]], "get_apply_to() (julearn.transformers.filtercolumns method)": [[50, "julearn.transformers.FilterColumns.get_apply_to", false]], "get_apply_to() (julearn.transformers.jucolumntransformer method)": [[51, "julearn.transformers.JuColumnTransformer.get_apply_to", false]], "get_apply_to() (julearn.transformers.setcolumntypes method)": [[52, "julearn.transformers.SetColumnTypes.get_apply_to", false]], "get_apply_to() (julearn.transformers.target.jutransformedtargetmodel method)": [[59, "julearn.transformers.target.JuTransformedTargetModel.get_apply_to", false]], "get_apply_to() (julearn.utils.typing.juestimatorlike method)": [[73, "julearn.utils.typing.JuEstimatorLike.get_apply_to", false]], "get_column_type() (in module julearn.base)": [[11, "julearn.base.get_column_type", false]], "get_config() (in module julearn.config)": [[13, "julearn.config.get_config", false]], "get_feature_names_out() (julearn.transformers.cbpm method)": [[47, "julearn.transformers.CBPM.get_feature_names_out", false]], "get_feature_names_out() (julearn.transformers.changecolumntypes method)": [[48, "julearn.transformers.ChangeColumnTypes.get_feature_names_out", false]], "get_feature_names_out() (julearn.transformers.confound_remover.confoundremover method)": [[53, "julearn.transformers.confound_remover.ConfoundRemover.get_feature_names_out", false]], "get_feature_names_out() (julearn.transformers.filtercolumns method)": [[50, "julearn.transformers.FilterColumns.get_feature_names_out", false]], "get_feature_names_out() (julearn.transformers.jucolumntransformer method)": [[51, "julearn.transformers.JuColumnTransformer.get_feature_names_out", false]], "get_feature_names_out() (julearn.transformers.setcolumntypes method)": [[52, "julearn.transformers.SetColumnTypes.get_feature_names_out", false]], "get_fitted_params() (julearn.inspect.pipelineinspector method)": [[17, "julearn.inspect.PipelineInspector.get_fitted_params", false]], "get_metadata_routing() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.get_metadata_routing", false]], "get_metadata_routing() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.get_metadata_routing", false]], "get_metadata_routing() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.get_metadata_routing", false]], "get_metadata_routing() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[19, "julearn.model_selection.ContinuousStratifiedGroupKFold.get_metadata_routing", false]], "get_metadata_routing() (julearn.model_selection.continuousstratifiedkfold method)": [[20, "julearn.model_selection.ContinuousStratifiedKFold.get_metadata_routing", false]], "get_metadata_routing() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[21, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.get_metadata_routing", false]], "get_metadata_routing() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[22, "julearn.model_selection.RepeatedContinuousStratifiedKFold.get_metadata_routing", false]], "get_metadata_routing() (julearn.model_selection.stratifiedbootstrap method)": [[23, "julearn.model_selection.StratifiedBootstrap.get_metadata_routing", false]], "get_metadata_routing() (julearn.models.dynamic.dynamicselection method)": [[28, "julearn.models.dynamic.DynamicSelection.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.cbpm method)": [[47, "julearn.transformers.CBPM.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.changecolumntypes method)": [[48, "julearn.transformers.ChangeColumnTypes.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.confound_remover.confoundremover method)": [[53, "julearn.transformers.confound_remover.ConfoundRemover.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.dropcolumns method)": [[49, "julearn.transformers.DropColumns.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.filtercolumns method)": [[50, "julearn.transformers.FilterColumns.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.jucolumntransformer method)": [[51, "julearn.transformers.JuColumnTransformer.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.setcolumntypes method)": [[52, "julearn.transformers.SetColumnTypes.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.target.jutransformedtargetmodel method)": [[59, "julearn.transformers.target.JuTransformedTargetModel.get_metadata_routing", false]], "get_model() (in module julearn.models)": [[29, "julearn.models.get_model", false]], "get_n_splits() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[19, "julearn.model_selection.ContinuousStratifiedGroupKFold.get_n_splits", false]], "get_n_splits() (julearn.model_selection.continuousstratifiedkfold method)": [[20, "julearn.model_selection.ContinuousStratifiedKFold.get_n_splits", false]], "get_n_splits() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[21, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.get_n_splits", false]], "get_n_splits() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[22, "julearn.model_selection.RepeatedContinuousStratifiedKFold.get_n_splits", false]], "get_n_splits() (julearn.model_selection.stratifiedbootstrap method)": [[23, "julearn.model_selection.StratifiedBootstrap.get_n_splits", false]], "get_needed_types() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.get_needed_types", false]], "get_needed_types() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.get_needed_types", false]], "get_needed_types() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.get_needed_types", false]], "get_needed_types() (julearn.transformers.changecolumntypes method)": [[48, "julearn.transformers.ChangeColumnTypes.get_needed_types", false]], "get_needed_types() (julearn.transformers.confound_remover.confoundremover method)": [[53, "julearn.transformers.confound_remover.ConfoundRemover.get_needed_types", false]], "get_needed_types() (julearn.transformers.dropcolumns method)": [[49, "julearn.transformers.DropColumns.get_needed_types", false]], "get_needed_types() (julearn.transformers.filtercolumns method)": [[50, "julearn.transformers.FilterColumns.get_needed_types", false]], "get_needed_types() (julearn.transformers.jucolumntransformer method)": [[51, "julearn.transformers.JuColumnTransformer.get_needed_types", false]], "get_needed_types() (julearn.transformers.setcolumntypes method)": [[52, "julearn.transformers.SetColumnTypes.get_needed_types", false]], "get_needed_types() (julearn.transformers.target.jutransformedtargetmodel method)": [[59, "julearn.transformers.target.JuTransformedTargetModel.get_needed_types", false]], "get_needed_types() (julearn.utils.typing.juestimatorlike method)": [[73, "julearn.utils.typing.JuEstimatorLike.get_needed_types", false]], "get_params() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.get_params", false]], "get_params() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.get_params", false]], "get_params() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.get_params", false]], "get_params() (julearn.inspect.pipelineinspector method)": [[17, "julearn.inspect.PipelineInspector.get_params", false]], "get_params() (julearn.models.dynamic.dynamicselection method)": [[28, "julearn.models.dynamic.DynamicSelection.get_params", false]], "get_params() (julearn.transformers.cbpm method)": [[47, "julearn.transformers.CBPM.get_params", false]], "get_params() (julearn.transformers.changecolumntypes method)": [[48, "julearn.transformers.ChangeColumnTypes.get_params", false]], "get_params() (julearn.transformers.confound_remover.confoundremover method)": [[53, "julearn.transformers.confound_remover.ConfoundRemover.get_params", false]], "get_params() (julearn.transformers.dropcolumns method)": [[49, "julearn.transformers.DropColumns.get_params", false]], "get_params() (julearn.transformers.filtercolumns method)": [[50, "julearn.transformers.FilterColumns.get_params", false]], "get_params() (julearn.transformers.jucolumntransformer method)": [[51, "julearn.transformers.JuColumnTransformer.get_params", false]], "get_params() (julearn.transformers.setcolumntypes method)": [[52, "julearn.transformers.SetColumnTypes.get_params", false]], "get_params() (julearn.transformers.target.jutransformedtargetmodel method)": [[59, "julearn.transformers.target.JuTransformedTargetModel.get_params", false]], "get_params() (julearn.utils.typing.estimatorlikefit1 method)": [[70, "julearn.utils.typing.EstimatorLikeFit1.get_params", false]], "get_params() (julearn.utils.typing.estimatorlikefit2 method)": [[71, "julearn.utils.typing.EstimatorLikeFit2.get_params", false]], "get_params() (julearn.utils.typing.estimatorlikefity method)": [[72, "julearn.utils.typing.EstimatorLikeFity.get_params", false]], "get_params() (julearn.utils.typing.juestimatorlike method)": [[73, "julearn.utils.typing.JuEstimatorLike.get_params", false]], "get_scorer() (in module julearn.scoring)": [[40, "julearn.scoring.get_scorer", false]], "get_searcher() (in module julearn.model_selection)": [[24, "julearn.model_selection.get_searcher", false]], "get_step() (julearn.inspect.pipelineinspector method)": [[17, "julearn.inspect.PipelineInspector.get_step", false]], "get_step_names() (julearn.inspect.pipelineinspector method)": [[17, "julearn.inspect.PipelineInspector.get_step_names", false]], "get_support() (julearn.transformers.confound_remover.confoundremover method)": [[53, "julearn.transformers.confound_remover.ConfoundRemover.get_support", false]], "get_support() (julearn.transformers.dropcolumns method)": [[49, "julearn.transformers.DropColumns.get_support", false]], "get_target_transformer() (in module julearn.transformers.target)": [[62, "julearn.transformers.target.get_target_transformer", false]], "get_transformer() (in module julearn.transformers)": [[54, "julearn.transformers.get_transformer", false]], "has_model() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.has_model", false]], "inspector (class in julearn.inspect)": [[16, "julearn.inspect.Inspector", false]], "inverse_transform() (julearn.pipeline.jutargetpipeline method)": [[33, "julearn.pipeline.JuTargetPipeline.inverse_transform", false]], "jubaseestimator (class in julearn.base)": [[6, "julearn.base.JuBaseEstimator", false]], "jucolumntransformer (class in julearn.transformers)": [[51, "julearn.transformers.JuColumnTransformer", false]], "juestimatorlike (class in julearn.utils.typing)": [[73, "julearn.utils.typing.JuEstimatorLike", false]], "julearn.api": [[78, "module-julearn.api", false]], "julearn.base": [[0, "module-julearn.base", false]], "julearn.config": [[1, "module-julearn.config", false]], "julearn.inspect": [[77, "module-julearn.inspect", false]], "julearn.model_selection": [[79, "module-julearn.model_selection", false]], "julearn.models": [[80, "module-julearn.models", false]], "julearn.models.dynamic": [[80, "module-julearn.models.dynamic", false]], "julearn.pipeline": [[81, "module-julearn.pipeline", false]], "julearn.prepare": [[82, "module-julearn.prepare", false]], "julearn.scoring": [[83, "module-julearn.scoring", false]], "julearn.scoring.metrics": [[83, "module-julearn.scoring.metrics", false]], "julearn.stats": [[84, "module-julearn.stats", false]], "julearn.transformers": [[85, "module-julearn.transformers", false]], "julearn.transformers.target": [[85, "module-julearn.transformers.target", false]], "julearn.utils": [[86, "module-julearn.utils", false]], "julearn.utils.typing": [[86, "module-julearn.utils.typing", false]], "julearn.viz": [[87, "module-julearn.viz", false]], "jutargetpipeline (class in julearn.pipeline)": [[33, "julearn.pipeline.JuTargetPipeline", false]], "jutargettransformer (class in julearn.transformers.target)": [[58, "julearn.transformers.target.JuTargetTransformer", false]], "jutransformedtargetmodel (class in julearn.transformers.target)": [[59, "julearn.transformers.target.JuTransformedTargetModel", false]], "jutransformer (class in julearn.base)": [[7, "julearn.base.JuTransformer", false]], "list_models() (in module julearn.models)": [[30, "julearn.models.list_models", false]], "list_scorers() (in module julearn.scoring)": [[41, "julearn.scoring.list_scorers", false]], "list_searchers() (in module julearn.model_selection)": [[25, "julearn.model_selection.list_searchers", false]], "list_target_transformers() (in module julearn.transformers.target)": [[63, "julearn.transformers.target.list_target_transformers", false]], "list_transformers() (in module julearn.transformers)": [[55, "julearn.transformers.list_transformers", false]], "logger (in module julearn.utils)": [[67, "julearn.utils.logger", false]], "make_type_selector() (in module julearn.base)": [[12, "julearn.base.make_type_selector", false]], "model (julearn.inspect.inspector property)": [[16, "julearn.inspect.Inspector.model", false]], "module": [[0, "module-julearn.base", false], [1, "module-julearn.config", false], [77, "module-julearn.inspect", false], [78, "module-julearn.api", false], [79, "module-julearn.model_selection", false], [80, "module-julearn.models", false], [80, "module-julearn.models.dynamic", false], [81, "module-julearn.pipeline", false], [82, "module-julearn.prepare", false], [83, "module-julearn.scoring", false], [83, "module-julearn.scoring.metrics", false], [84, "module-julearn.stats", false], [85, "module-julearn.transformers", false], [85, "module-julearn.transformers.target", false], [86, "module-julearn.utils", false], [86, "module-julearn.utils.typing", false], [87, "module-julearn.viz", false]], "name (julearn.pipeline.pipeline_creator.step attribute)": [[34, "julearn.pipeline.pipeline_creator.Step.name", false]], "needed_types (julearn.pipeline.jutargetpipeline property)": [[33, "julearn.pipeline.JuTargetPipeline.needed_types", false]], "needed_types (julearn.pipeline.pipeline_creator.step attribute)": [[34, "julearn.pipeline.pipeline_creator.Step.needed_types", false]], "needed_types (julearn.transformers.target.targetconfoundremover property)": [[60, "julearn.transformers.target.TargetConfoundRemover.needed_types", false]], "params_to_tune (julearn.pipeline.pipeline_creator.step attribute)": [[34, "julearn.pipeline.pipeline_creator.Step.params_to_tune", false]], "pattern (julearn.base.columntypes property)": [[4, "julearn.base.ColumnTypes.pattern", false]], "pipelinecreator (class in julearn)": [[2, "julearn.PipelineCreator", false]], "pipelineinspector (class in julearn.inspect)": [[17, "julearn.inspect.PipelineInspector", false]], "plot_scores() (in module julearn.viz)": [[75, "julearn.viz.plot_scores", false]], "predict() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.predict", false]], "predict() (julearn.inspect.foldsinspector method)": [[15, "julearn.inspect.FoldsInspector.predict", false]], "predict() (julearn.models.dynamic.dynamicselection method)": [[28, "julearn.models.dynamic.DynamicSelection.predict", false]], "predict() (julearn.transformers.target.jutransformedtargetmodel method)": [[59, "julearn.transformers.target.JuTransformedTargetModel.predict", false]], "predict_log_proba() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.predict_log_proba", false]], "predict_log_proba() (julearn.inspect.foldsinspector method)": [[15, "julearn.inspect.FoldsInspector.predict_log_proba", false]], "predict_proba() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.predict_proba", false]], "predict_proba() (julearn.inspect.foldsinspector method)": [[15, "julearn.inspect.FoldsInspector.predict_proba", false]], "predict_proba() (julearn.models.dynamic.dynamicselection method)": [[28, "julearn.models.dynamic.DynamicSelection.predict_proba", false]], "predict_proba() (julearn.transformers.target.jutransformedtargetmodel method)": [[59, "julearn.transformers.target.JuTransformedTargetModel.predict_proba", false]], "prepare_input_data() (in module julearn.prepare)": [[36, "julearn.prepare.prepare_input_data", false]], "preprocess() (in module julearn.inspect)": [[18, "julearn.inspect.preprocess", false]], "r2_corr() (in module julearn.scoring.metrics)": [[42, "julearn.scoring.metrics.r2_corr", false]], "r_corr() (in module julearn.scoring.metrics)": [[43, "julearn.scoring.metrics.r_corr", false]], "raise_error() (in module julearn.utils)": [[68, "julearn.utils.raise_error", false]], "register_model() (in module julearn.models)": [[31, "julearn.models.register_model", false]], "register_scorer() (in module julearn.scoring)": [[44, "julearn.scoring.register_scorer", false]], "register_searcher() (in module julearn.model_selection)": [[26, "julearn.model_selection.register_searcher", false]], "register_target_transformer() (in module julearn.transformers.target)": [[64, "julearn.transformers.target.register_target_transformer", false]], "register_transformer() (in module julearn.transformers)": [[56, "julearn.transformers.register_transformer", false]], "repeatedcontinuousstratifiedgroupkfold (class in julearn.model_selection)": [[21, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold", false]], "repeatedcontinuousstratifiedkfold (class in julearn.model_selection)": [[22, "julearn.model_selection.RepeatedContinuousStratifiedKFold", false]], "reset_model_register() (in module julearn.models)": [[32, "julearn.models.reset_model_register", false]], "reset_scorer_register() (in module julearn.scoring)": [[45, "julearn.scoring.reset_scorer_register", false]], "reset_searcher_register() (in module julearn.model_selection)": [[27, "julearn.model_selection.reset_searcher_register", false]], "reset_target_transformer_register() (in module julearn.transformers.target)": [[65, "julearn.transformers.target.reset_target_transformer_register", false]], "reset_transformer_register() (in module julearn.transformers)": [[57, "julearn.transformers.reset_transformer_register", false]], "row_select_col_type (julearn.pipeline.pipeline_creator.step attribute)": [[34, "julearn.pipeline.pipeline_creator.Step.row_select_col_type", false]], "row_select_vals (julearn.pipeline.pipeline_creator.step attribute)": [[34, "julearn.pipeline.pipeline_creator.Step.row_select_vals", false]], "run_cross_validation() (in module julearn)": [[37, "julearn.run_cross_validation", false]], "run_fit() (in module julearn)": [[38, "julearn.run_fit", false]], "score() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.score", false]], "score() (julearn.models.dynamic.dynamicselection method)": [[28, "julearn.models.dynamic.DynamicSelection.score", false]], "score() (julearn.transformers.target.jutransformedtargetmodel method)": [[59, "julearn.transformers.target.JuTransformedTargetModel.score", false]], "set_config() (in module julearn.config)": [[14, "julearn.config.set_config", false]], "set_output() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.set_output", false]], "set_output() (julearn.transformers.cbpm method)": [[47, "julearn.transformers.CBPM.set_output", false]], "set_output() (julearn.transformers.changecolumntypes method)": [[48, "julearn.transformers.ChangeColumnTypes.set_output", false]], "set_output() (julearn.transformers.confound_remover.confoundremover method)": [[53, "julearn.transformers.confound_remover.ConfoundRemover.set_output", false]], "set_output() (julearn.transformers.dropcolumns method)": [[49, "julearn.transformers.DropColumns.set_output", false]], "set_output() (julearn.transformers.filtercolumns method)": [[50, "julearn.transformers.FilterColumns.set_output", false]], "set_output() (julearn.transformers.jucolumntransformer method)": [[51, "julearn.transformers.JuColumnTransformer.set_output", false]], "set_output() (julearn.transformers.setcolumntypes method)": [[52, "julearn.transformers.SetColumnTypes.set_output", false]], "set_params() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.set_params", false]], "set_params() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.set_params", false]], "set_params() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.set_params", false]], "set_params() (julearn.models.dynamic.dynamicselection method)": [[28, "julearn.models.dynamic.DynamicSelection.set_params", false]], "set_params() (julearn.transformers.cbpm method)": [[47, "julearn.transformers.CBPM.set_params", false]], "set_params() (julearn.transformers.changecolumntypes method)": [[48, "julearn.transformers.ChangeColumnTypes.set_params", false]], "set_params() (julearn.transformers.confound_remover.confoundremover method)": [[53, "julearn.transformers.confound_remover.ConfoundRemover.set_params", false]], "set_params() (julearn.transformers.dropcolumns method)": [[49, "julearn.transformers.DropColumns.set_params", false]], "set_params() (julearn.transformers.filtercolumns method)": [[50, "julearn.transformers.FilterColumns.set_params", false]], "set_params() (julearn.transformers.jucolumntransformer method)": [[51, "julearn.transformers.JuColumnTransformer.set_params", false]], "set_params() (julearn.transformers.setcolumntypes method)": [[52, "julearn.transformers.SetColumnTypes.set_params", false]], "set_params() (julearn.transformers.target.jutransformedtargetmodel method)": [[59, "julearn.transformers.target.JuTransformedTargetModel.set_params", false]], "set_params() (julearn.utils.typing.estimatorlikefit1 method)": [[70, "julearn.utils.typing.EstimatorLikeFit1.set_params", false]], "set_params() (julearn.utils.typing.estimatorlikefit2 method)": [[71, "julearn.utils.typing.EstimatorLikeFit2.set_params", false]], "set_params() (julearn.utils.typing.estimatorlikefity method)": [[72, "julearn.utils.typing.EstimatorLikeFity.set_params", false]], "set_params() (julearn.utils.typing.juestimatorlike method)": [[73, "julearn.utils.typing.JuEstimatorLike.set_params", false]], "set_score_request() (julearn.models.dynamic.dynamicselection method)": [[28, "julearn.models.dynamic.DynamicSelection.set_score_request", false]], "set_split_request() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[19, "julearn.model_selection.ContinuousStratifiedGroupKFold.set_split_request", false]], "setcolumntypes (class in julearn.transformers)": [[52, "julearn.transformers.SetColumnTypes", false]], "split() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[19, "julearn.model_selection.ContinuousStratifiedGroupKFold.split", false]], "split() (julearn.model_selection.continuousstratifiedkfold method)": [[20, "julearn.model_selection.ContinuousStratifiedKFold.split", false]], "split() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[21, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.split", false]], "split() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[22, "julearn.model_selection.RepeatedContinuousStratifiedKFold.split", false]], "split() (julearn.model_selection.stratifiedbootstrap method)": [[23, "julearn.model_selection.StratifiedBootstrap.split", false]], "split() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.split", false]], "step (class in julearn.pipeline.pipeline_creator)": [[34, "julearn.pipeline.pipeline_creator.Step", false]], "steps (julearn.pipelinecreator property)": [[2, "julearn.PipelineCreator.steps", false]], "stratifiedbootstrap (class in julearn.model_selection)": [[23, "julearn.model_selection.StratifiedBootstrap", false]], "targetconfoundremover (class in julearn.transformers.target)": [[60, "julearn.transformers.target.TargetConfoundRemover", false]], "targetpipelinecreator (class in julearn)": [[3, "julearn.TargetPipelineCreator", false]], "to_pipeline() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.to_pipeline", false]], "to_pipeline() (julearn.targetpipelinecreator method)": [[3, "julearn.TargetPipelineCreator.to_pipeline", false]], "to_type_selector() (julearn.base.columntypes method)": [[4, "julearn.base.ColumnTypes.to_type_selector", false]], "transform() (julearn.pipeline.jutargetpipeline method)": [[33, "julearn.pipeline.JuTargetPipeline.transform", false]], "transform() (julearn.transformers.cbpm method)": [[47, "julearn.transformers.CBPM.transform", false]], "transform() (julearn.transformers.changecolumntypes method)": [[48, "julearn.transformers.ChangeColumnTypes.transform", false]], "transform() (julearn.transformers.confound_remover.confoundremover method)": [[53, "julearn.transformers.confound_remover.ConfoundRemover.transform", false]], "transform() (julearn.transformers.dropcolumns method)": [[49, "julearn.transformers.DropColumns.transform", false]], "transform() (julearn.transformers.filtercolumns method)": [[50, "julearn.transformers.FilterColumns.transform", false]], "transform() (julearn.transformers.jucolumntransformer method)": [[51, "julearn.transformers.JuColumnTransformer.transform", false]], "transform() (julearn.transformers.setcolumntypes method)": [[52, "julearn.transformers.SetColumnTypes.transform", false]], "transform() (julearn.transformers.target.jutargettransformer method)": [[58, "julearn.transformers.target.JuTargetTransformer.transform", false]], "transform() (julearn.transformers.target.targetconfoundremover method)": [[60, "julearn.transformers.target.TargetConfoundRemover.transform", false]], "transform_target() (julearn.transformers.target.jutransformedtargetmodel method)": [[59, "julearn.transformers.target.JuTransformedTargetModel.transform_target", false]], "transformedtargetwarning (class in julearn.transformers.target)": [[61, "julearn.transformers.target.TransformedTargetWarning", false]], "warn_with_log() (in module julearn.utils)": [[74, "julearn.utils.warn_with_log", false]], "with_traceback() (julearn.transformers.target.transformedtargetwarning method)": [[61, "julearn.transformers.target.TransformedTargetWarning.with_traceback", false]], "wrapmodel (class in julearn.base)": [[8, "julearn.base.WrapModel", false]]}, "objects": {"julearn": [[2, 0, 1, "", "PipelineCreator"], [3, 0, 1, "", "TargetPipelineCreator"], [78, 3, 0, "-", "api"], [0, 3, 0, "-", "base"], [1, 3, 0, "-", "config"], [77, 3, 0, "-", "inspect"], [79, 3, 0, "-", "model_selection"], [80, 3, 0, "-", "models"], [81, 3, 0, "-", "pipeline"], [82, 3, 0, "-", "prepare"], [37, 5, 1, "", "run_cross_validation"], [38, 5, 1, "", "run_fit"], [83, 3, 0, "-", "scoring"], [84, 3, 0, "-", "stats"], [85, 3, 0, "-", "transformers"], [86, 3, 0, "-", "utils"], [87, 3, 0, "-", "viz"]], "julearn.PipelineCreator": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "add"], [2, 1, 1, "", "copy"], [2, 1, 1, "", "from_list"], [2, 1, 1, "", "has_model"], [2, 1, 1, "", "split"], [2, 2, 1, "", "steps"], [2, 1, 1, "", "to_pipeline"]], "julearn.TargetPipelineCreator": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "add"], [3, 1, 1, "", "to_pipeline"]], "julearn.base": [[4, 0, 1, "", "ColumnTypes"], [5, 4, 1, "", "ColumnTypesLike"], [6, 0, 1, "", "JuBaseEstimator"], [7, 0, 1, "", "JuTransformer"], [8, 0, 1, "", "WrapModel"], [9, 5, 1, "", "change_column_type"], [10, 5, 1, "", "ensure_column_types"], [11, 5, 1, "", "get_column_type"], [12, 5, 1, "", "make_type_selector"]], "julearn.base.ColumnTypes": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "add"], [4, 1, 1, "", "copy"], [4, 2, 1, "", "pattern"], [4, 1, 1, "", "to_type_selector"]], "julearn.base.JuBaseEstimator": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "filter_columns"], [6, 1, 1, "", "get_apply_to"], [6, 1, 1, "", "get_metadata_routing"], [6, 1, 1, "", "get_needed_types"], [6, 1, 1, "", "get_params"], [6, 1, 1, "", "set_params"]], "julearn.base.JuTransformer": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "filter_columns"], [7, 1, 1, "", "fit"], [7, 1, 1, "", "fit_transform"], [7, 1, 1, "", "get_apply_to"], [7, 1, 1, "", "get_metadata_routing"], [7, 1, 1, "", "get_needed_types"], [7, 1, 1, "", "get_params"], [7, 1, 1, "", "set_output"], [7, 1, 1, "", "set_params"]], "julearn.base.WrapModel": [[8, 1, 1, "", "__init__"], [8, 2, 1, "", "classes_"], [8, 1, 1, "", "decision_function"], [8, 1, 1, "", "filter_columns"], [8, 1, 1, "", "fit"], [8, 1, 1, "", "get_apply_to"], [8, 1, 1, "", "get_metadata_routing"], [8, 1, 1, "", "get_needed_types"], [8, 1, 1, "", "get_params"], [8, 1, 1, "", "predict"], [8, 1, 1, "", "predict_log_proba"], [8, 1, 1, "", "predict_proba"], [8, 1, 1, "", "score"], [8, 1, 1, "", "set_params"]], "julearn.config": [[13, 5, 1, "", "get_config"], [14, 5, 1, "", "set_config"]], "julearn.inspect": [[15, 0, 1, "", "FoldsInspector"], [16, 0, 1, "", "Inspector"], [17, 0, 1, "", "PipelineInspector"], [18, 5, 1, "", "preprocess"]], "julearn.inspect.FoldsInspector": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "decision_function"], [15, 1, 1, "", "predict"], [15, 1, 1, "", "predict_log_proba"], [15, 1, 1, "", "predict_proba"]], "julearn.inspect.Inspector": [[16, 1, 1, "", "__init__"], [16, 2, 1, "", "folds"], [16, 2, 1, "", "model"]], "julearn.inspect.PipelineInspector": [[17, 1, 1, "", "__init__"], [17, 1, 1, "", "get_fitted_params"], [17, 1, 1, "", "get_params"], [17, 1, 1, "", "get_step"], [17, 1, 1, "", "get_step_names"]], "julearn.model_selection": [[19, 0, 1, "", "ContinuousStratifiedGroupKFold"], [20, 0, 1, "", "ContinuousStratifiedKFold"], [21, 0, 1, "", "RepeatedContinuousStratifiedGroupKFold"], [22, 0, 1, "", "RepeatedContinuousStratifiedKFold"], [23, 0, 1, "", "StratifiedBootstrap"], [24, 5, 1, "", "get_searcher"], [25, 5, 1, "", "list_searchers"], [26, 5, 1, "", "register_searcher"], [27, 5, 1, "", "reset_searcher_register"]], "julearn.model_selection.ContinuousStratifiedGroupKFold": [[19, 1, 1, "", "__init__"], [19, 1, 1, "", "get_metadata_routing"], [19, 1, 1, "", "get_n_splits"], [19, 1, 1, "", "set_split_request"], [19, 1, 1, "", "split"]], "julearn.model_selection.ContinuousStratifiedKFold": [[20, 1, 1, "", "__init__"], [20, 1, 1, "", "get_metadata_routing"], [20, 1, 1, "", "get_n_splits"], [20, 1, 1, "", "split"]], "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold": [[21, 1, 1, "", "__init__"], [21, 1, 1, "", "get_metadata_routing"], [21, 1, 1, "", "get_n_splits"], [21, 1, 1, "", "split"]], "julearn.model_selection.RepeatedContinuousStratifiedKFold": [[22, 1, 1, "", "__init__"], [22, 1, 1, "", "get_metadata_routing"], [22, 1, 1, "", "get_n_splits"], [22, 1, 1, "", "split"]], "julearn.model_selection.StratifiedBootstrap": [[23, 1, 1, "", "__init__"], [23, 1, 1, "", "get_metadata_routing"], [23, 1, 1, "", "get_n_splits"], [23, 1, 1, "", "split"]], "julearn.models": [[80, 3, 0, "-", "dynamic"], [29, 5, 1, "", "get_model"], [30, 5, 1, "", "list_models"], [31, 5, 1, "", "register_model"], [32, 5, 1, "", "reset_model_register"]], "julearn.models.dynamic": [[28, 0, 1, "", "DynamicSelection"]], "julearn.models.dynamic.DynamicSelection": [[28, 1, 1, "", "__init__"], [28, 1, 1, "", "fit"], [28, 1, 1, "", "get_metadata_routing"], [28, 1, 1, "", "get_params"], [28, 1, 1, "", "predict"], [28, 1, 1, "", "predict_proba"], [28, 1, 1, "", "score"], [28, 1, 1, "", "set_params"], [28, 1, 1, "", "set_score_request"]], "julearn.pipeline": [[33, 0, 1, "", "JuTargetPipeline"]], "julearn.pipeline.JuTargetPipeline": [[33, 1, 1, "", "__init__"], [33, 1, 1, "", "can_inverse_transform"], [33, 1, 1, "", "fit"], [33, 1, 1, "", "fit_transform"], [33, 1, 1, "", "inverse_transform"], [33, 2, 1, "", "needed_types"], [33, 1, 1, "", "transform"]], "julearn.pipeline.pipeline_creator": [[34, 0, 1, "", "Step"]], "julearn.pipeline.pipeline_creator.Step": [[34, 1, 1, "", "__init__"], [34, 4, 1, "", "apply_to"], [34, 4, 1, "", "estimator"], [34, 4, 1, "", "name"], [34, 4, 1, "", "needed_types"], [34, 4, 1, "", "params_to_tune"], [34, 4, 1, "", "row_select_col_type"], [34, 4, 1, "", "row_select_vals"]], "julearn.prepare": [[35, 5, 1, "", "check_consistency"], [36, 5, 1, "", "prepare_input_data"]], "julearn.scoring": [[39, 5, 1, "", "check_scoring"], [40, 5, 1, "", "get_scorer"], [41, 5, 1, "", "list_scorers"], [83, 3, 0, "-", "metrics"], [44, 5, 1, "", "register_scorer"], [45, 5, 1, "", "reset_scorer_register"]], "julearn.scoring.metrics": [[42, 5, 1, "", "r2_corr"], [43, 5, 1, "", "r_corr"]], "julearn.stats": [[46, 5, 1, "", "corrected_ttest"]], "julearn.transformers": [[47, 0, 1, "", "CBPM"], [48, 0, 1, "", "ChangeColumnTypes"], [49, 0, 1, "", "DropColumns"], [50, 0, 1, "", "FilterColumns"], [51, 0, 1, "", "JuColumnTransformer"], [52, 0, 1, "", "SetColumnTypes"], [54, 5, 1, "", "get_transformer"], [55, 5, 1, "", "list_transformers"], [56, 5, 1, "", "register_transformer"], [57, 5, 1, "", "reset_transformer_register"], [85, 3, 0, "-", "target"]], "julearn.transformers.CBPM": [[47, 1, 1, "", "__init__"], [47, 1, 1, "", "aggregate"], [47, 1, 1, "", "fit"], [47, 1, 1, "", "fit_transform"], [47, 1, 1, "", "get_feature_names_out"], [47, 1, 1, "", "get_metadata_routing"], [47, 1, 1, "", "get_params"], [47, 1, 1, "", "set_output"], [47, 1, 1, "", "set_params"], [47, 1, 1, "", "transform"]], "julearn.transformers.ChangeColumnTypes": [[48, 1, 1, "", "__init__"], [48, 1, 1, "", "filter_columns"], [48, 1, 1, "", "fit"], [48, 1, 1, "", "fit_transform"], [48, 1, 1, "", "get_apply_to"], [48, 1, 1, "", "get_feature_names_out"], [48, 1, 1, "", "get_metadata_routing"], [48, 1, 1, "", "get_needed_types"], [48, 1, 1, "", "get_params"], [48, 1, 1, "", "set_output"], [48, 1, 1, "", "set_params"], [48, 1, 1, "", "transform"]], "julearn.transformers.DropColumns": [[49, 1, 1, "", "__init__"], [49, 1, 1, "", "filter_columns"], [49, 1, 1, "", "fit"], [49, 1, 1, "", "fit_transform"], [49, 1, 1, "", "get_apply_to"], [49, 1, 1, "", "get_metadata_routing"], [49, 1, 1, "", "get_needed_types"], [49, 1, 1, "", "get_params"], [49, 1, 1, "", "get_support"], [49, 1, 1, "", "set_output"], [49, 1, 1, "", "set_params"], [49, 1, 1, "", "transform"]], "julearn.transformers.FilterColumns": [[50, 1, 1, "", "__init__"], [50, 1, 1, "", "filter_columns"], [50, 1, 1, "", "fit"], [50, 1, 1, "", "fit_transform"], [50, 1, 1, "", "get_apply_to"], [50, 1, 1, "", "get_feature_names_out"], [50, 1, 1, "", "get_metadata_routing"], [50, 1, 1, "", "get_needed_types"], [50, 1, 1, "", "get_params"], [50, 1, 1, "", "set_output"], [50, 1, 1, "", "set_params"], [50, 1, 1, "", "transform"]], "julearn.transformers.JuColumnTransformer": [[51, 1, 1, "", "__init__"], [51, 1, 1, "", "filter_columns"], [51, 1, 1, "", "fit"], [51, 1, 1, "", "fit_transform"], [51, 1, 1, "", "get_apply_to"], [51, 1, 1, "", "get_feature_names_out"], [51, 1, 1, "", "get_metadata_routing"], [51, 1, 1, "", "get_needed_types"], [51, 1, 1, "", "get_params"], [51, 1, 1, "", "set_output"], [51, 1, 1, "", "set_params"], [51, 1, 1, "", "transform"]], "julearn.transformers.SetColumnTypes": [[52, 1, 1, "", "__init__"], [52, 1, 1, "", "filter_columns"], [52, 1, 1, "", "fit"], [52, 1, 1, "", "fit_transform"], [52, 1, 1, "", "get_apply_to"], [52, 1, 1, "", "get_feature_names_out"], [52, 1, 1, "", "get_metadata_routing"], [52, 1, 1, "", "get_needed_types"], [52, 1, 1, "", "get_params"], [52, 1, 1, "", "set_output"], [52, 1, 1, "", "set_params"], [52, 1, 1, "", "transform"]], "julearn.transformers.confound_remover": [[53, 0, 1, "", "ConfoundRemover"]], "julearn.transformers.confound_remover.ConfoundRemover": [[53, 1, 1, "", "__init__"], [53, 1, 1, "", "filter_columns"], [53, 1, 1, "", "fit"], [53, 1, 1, "", "fit_transform"], [53, 1, 1, "", "get_apply_to"], [53, 1, 1, "", "get_feature_names_out"], [53, 1, 1, "", "get_metadata_routing"], [53, 1, 1, "", "get_needed_types"], [53, 1, 1, "", "get_params"], [53, 1, 1, "", "get_support"], [53, 1, 1, "", "set_output"], [53, 1, 1, "", "set_params"], [53, 1, 1, "", "transform"]], "julearn.transformers.target": [[58, 0, 1, "", "JuTargetTransformer"], [59, 0, 1, "", "JuTransformedTargetModel"], [60, 0, 1, "", "TargetConfoundRemover"], [61, 0, 1, "", "TransformedTargetWarning"], [62, 5, 1, "", "get_target_transformer"], [63, 5, 1, "", "list_target_transformers"], [64, 5, 1, "", "register_target_transformer"], [65, 5, 1, "", "reset_target_transformer_register"]], "julearn.transformers.target.JuTargetTransformer": [[58, 1, 1, "", "__init__"], [58, 1, 1, "", "fit"], [58, 1, 1, "", "fit_transform"], [58, 1, 1, "", "transform"]], "julearn.transformers.target.JuTransformedTargetModel": [[59, 1, 1, "", "__init__"], [59, 1, 1, "", "can_inverse_transform"], [59, 2, 1, "", "classes_"], [59, 1, 1, "", "decision_function"], [59, 1, 1, "", "filter_columns"], [59, 1, 1, "", "fit"], [59, 1, 1, "", "get_apply_to"], [59, 1, 1, "", "get_metadata_routing"], [59, 1, 1, "", "get_needed_types"], [59, 1, 1, "", "get_params"], [59, 1, 1, "", "predict"], [59, 1, 1, "", "predict_proba"], [59, 1, 1, "", "score"], [59, 1, 1, "", "set_params"], [59, 1, 1, "", "transform_target"]], "julearn.transformers.target.TargetConfoundRemover": [[60, 1, 1, "", "__init__"], [60, 1, 1, "", "fit"], [60, 1, 1, "", "fit_transform"], [60, 2, 1, "", "needed_types"], [60, 1, 1, "", "transform"]], "julearn.transformers.target.TransformedTargetWarning": [[61, 1, 1, "", "__init__"], [61, 1, 1, "", "add_note"], [61, 4, 1, "", "args"], [61, 1, 1, "", "with_traceback"]], "julearn.utils": [[66, 5, 1, "", "configure_logging"], [67, 4, 1, "", "logger"], [68, 5, 1, "", "raise_error"], [86, 3, 0, "-", "typing"], [74, 5, 1, "", "warn_with_log"]], "julearn.utils.typing": [[69, 4, 1, "", "EstimatorLike"], [70, 0, 1, "", "EstimatorLikeFit1"], [71, 0, 1, "", "EstimatorLikeFit2"], [72, 0, 1, "", "EstimatorLikeFity"], [73, 0, 1, "", "JuEstimatorLike"]], "julearn.utils.typing.EstimatorLikeFit1": [[70, 1, 1, "", "__init__"], [70, 1, 1, "", "fit"], [70, 1, 1, "", "get_params"], [70, 1, 1, "", "set_params"]], "julearn.utils.typing.EstimatorLikeFit2": [[71, 1, 1, "", "__init__"], [71, 1, 1, "", "fit"], [71, 1, 1, "", "get_params"], [71, 1, 1, "", "set_params"]], "julearn.utils.typing.EstimatorLikeFity": [[72, 1, 1, "", "__init__"], [72, 1, 1, "", "fit"], [72, 1, 1, "", "get_params"], [72, 1, 1, "", "set_params"]], "julearn.utils.typing.JuEstimatorLike": [[73, 1, 1, "", "__init__"], [73, 1, 1, "", "fit"], [73, 1, 1, "", "get_apply_to"], [73, 1, 1, "", "get_needed_types"], [73, 1, 1, "", "get_params"], [73, 1, 1, "", "set_params"]], "julearn.viz": [[75, 5, 1, "", "plot_scores"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "module", "Python module"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:module", "4": "py:attribute", "5": "py:function"}, "terms": {"": [2, 6, 7, 8, 19, 20, 28, 34, 37, 47, 48, 49, 50, 51, 52, 53, 59, 60, 66, 89, 90, 91, 92, 93, 100, 102, 106, 107, 108, 109, 114, 115, 118, 120, 121, 122, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143], "0": [28, 36, 37, 38, 47, 53, 60, 75, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 141, 142, 143], "00": [95, 98, 102, 104, 111, 112, 116, 119, 128, 134, 135, 137, 141], "000": 110, "000000": [89, 90, 91, 97, 102, 106, 107, 115, 118, 136, 141], "00000000e": 135, "000000e": 102, "000071": 115, "0001": 131, "000300": [92, 108, 109, 110], "000421": 115, "00050798": 134, "000517": 115, "000643": 92, "001": [108, 109, 110, 131, 133, 134, 142], "001078": 107, "001197": 115, "001314": 107, "001324": 115, "001588": 106, "001607": 106, "001619": 106, "001628": 106, "001646": 106, "0018082604408073564": 110, "001814": 143, "001825": 143, "001840": 143, "001846": 143, "001868": 143, "001882": [90, 91, 106, 107, 115, 118, 136], "002": 110, "002075": 115, "002095": 115, "00212021": 134, "002170": 92, "002322": 90, "002323": 90, "002327": 90, "002330": 115, "002351": 90, "002354": 118, "002357": 118, "002359": 90, "002410": 118, "002423264987567721": 131, "002449": 142, "002455": 118, "002458": 142, "002466": 142, "002484": 142, "002486": 142, "002496": 142, "002503": 142, "002512": 142, "002524": 143, "002529": 142, "002532": 103, "002533": 103, "002534": 103, "002536": 143, "002537": 143, "002539": 142, "002540": 142, "002545": 103, "002547": 103, "002549": 142, "002550": 103, "002551": 142, "002553": 103, "002557": 142, "002558": [103, 142], "002561": 103, "002562": 103, "002563": 142, "002565": 142, "002566": 103, "002567": 103, "002573": 142, "002575": 142, "002576": 103, "002579": 115, "002585": 143, "002591": 142, "002592": [90, 91, 106, 107, 115, 118, 136], "002605": 136, "002613": [103, 142], "002614": 103, "002627": 143, "00262819": 134, "002666": 89, "002691": 136, "002708": 136, "002709": 136, "002710": 89, "002729": 136, "002731": 89, "002736": 143, "002757": 89, "002763": 143, "002774": 118, "002789": 143, "002815": 89, "002825": 103, "002851": 143, "002861": [90, 91, 106, 107, 115, 118, 136], "003": 110, "003080": 143, "003120": 106, "003137": 106, "003148": 106, "003166": 106, "003204": 106, "003229": 143, "003237": 143, "00324771e": 134, "003267": 143, "003273": 143, "003281": 143, "003287": 143, "003293": 143, "003298": 143, "003300": 143, "003545": 115, "003710": 103, "003734": 129, "003752": 129, "003766": 129, "003794": 129, "003870": 103, "003938": 103, "003951": 115, "003955": 129, "004": [110, 137, 139], "004124": 115, "004238": 90, "004259": 90, "004264": 90, "004282": 103, "004286": 89, "004287": 103, "004289": 90, "004290": 92, "004299": 103, "004301": 103, "004308": 103, "004313": 103, "004316": 103, "004331": 103, "004341": 90, "004343": 103, "004344": [89, 103], "004351": 143, "004362": 103, "004366": 118, "004370": 142, "004372": 89, "004376": 103, "004378": 143, "004380": 103, "004388": 118, "004389": 89, "004390": 142, "004401": 89, "004405": 142, "004406": 142, "004422": 142, "004429": 142, "004432": 118, "004434": 143, "004436": 103, "004437": 102, "004438": 103, "004439": 142, "004441": 142, "004444": 142, "004452": 142, "004454": 103, "004461": 103, "004462": 142, "004463": 142, "004465": 142, "004473": 142, "004475": 142, "004479": 142, "004482": 142, "004489": 142, "004499": 118, "004502": 142, "004510": [142, 143], "004514": 142, "004528": 142, "004539": 142, "004547": 142, "004549": 142, "004554": 142, "004556": 142, "004562": 142, "004569": 142, "004571": 142, "004572": 142, "004575": 143, "004581": 142, "004609": 142, "004624": 142, "004637": 142, "004647": 142, "004649": 142, "004659": 142, "004714": 142, "004727": 118, "004736": 115, "004784": 142, "004900": 92, "005038e": 102, "005164": 103, "005383": [90, 91, 106, 107, 115, 118, 136], "005413": 143, "005435": 143, "005438": 143, "005451": 103, "005455": 143, "005471": 143, "005472": 143, "005479": 143, "005510": 115, "005569": 143, "005596": 143, "005633": 143, "005713": 129, "005739": 129, "005769": 129, "005789": 107, "005810": 129, "005858": 107, "005861": 107, "005874": 115, "005913": 107, "00592": 138, "006010": 107, "006046": 129, "006290": 107, "006566": 115, "006632": 103, "006740": 143, "006778": 143, "006824": 143, "006836": 129, "006841": 129, "006870": 129, "006874": 115, "006890": 129, "006892": 143, "006899": [92, 108, 109, 110], "006929": 129, "006937": 143, "007613": 115, "007625": 136, "007659": 115, "007675": 115, "007740": 115, "007741": 115, "007766": [92, 108, 109, 110], "00779370e": 134, "007806": 115, "008072": 136, "008152": 136, "008256": 136, "008421": 115, "008604": 115, "008781": 115, "009038": 92, "009362": [90, 91, 106, 107, 115, 118, 136], "009415": 136, "009642": 92, "009658": 115, "00973207": 134, "009959": 92, "00_start": [89, 91, 95, 137], "01": [90, 95, 102, 104, 107, 108, 109, 112, 126, 128, 131, 133, 134, 135, 137, 142, 143], "010202e": 102, "010254": 115, "01033730e": 134, "01037793e": 134, "010535": 92, "01054424e": 134, "010903": 107, "011121": 102, "011287": 102, "011595": [90, 91, 106, 107, 115, 118, 136], "011824": 107, "012141": 107, "012234": 115, "012310": 115, "012498": 107, "012552": 107, "012567": 107, "012577": 107, "012591": 115, "012772": 107, "012796": 115, "012967": 107, "013": 110, "013139": 115, "013144": 115, "013408": 115, "013504": 107, "013673": 115, "013728": 102, "013728e": 102, "013765": 115, "014": 110, "014051": 115, "014191": 143, "01419496e": 134, "014241": 143, "014312": 143, "014397": 143, "014516": 115, "014806": 143, "015": 110, "015491": 107, "015568": 115, "015999": 107, "016440": [92, 108, 109, 110], "017395": 115, "017552": [92, 93, 100, 108, 109, 110], "017646": [90, 91, 106, 107, 115, 118, 136], "017885": 115, "018411": 115, "018781e": 102, "019424": 115, "019907": [90, 91, 106, 107, 115, 118, 136], "01_model_comparison": [98, 137], "02": [102, 112, 131, 134, 135, 137, 141], "02045287": 134, "020607": 107, "020850": 115, "021054": [92, 108, 109, 110], "021452": [92, 108, 109, 110], "021702": 115, "021720": 115, "021858": 115, "021933": 115, "021964": 115, "022": 138, "022688": [90, 91, 106, 107, 115, 118, 136], "022775": 115, "023413": 115, "023682": 102, "024": [110, 112, 137], "024022": 115, "024114": 129, "024160": 129, "024176": 129, "024189": [115, 129], "024296": [92, 108, 109, 110], "024667": 115, "024862": 129, "024891": 102, "024993": 107, "025022": 115, "025295": 115, "025445": 115, "025897": 115, "025930": [90, 91, 106, 107, 115, 118, 136], "026190": 107, "026727": 92, "02693719e": 134, "027": 90, "027484": 129, "028": 90, "028152": 102, "028194": 115, "028981": 115, "029015": 115, "029271": 115, "029380": 115, "029499": 141, "029565": 115, "02_inspect": [104, 137], "03": [95, 98, 102, 104, 126, 131, 137], "030099": 92, "030464": 107, "031358": 115, "031454": 107, "031988": [90, 91, 106, 107, 115, 118, 136], "032289": 107, "032449": 115, "032477": 115, "032629": 107, "032631": 115, "033216": 107, "033220": [92, 108, 109, 110], "033246": 107, "034309": [90, 91, 106, 107, 115, 118, 136], "034386": 92, "034497": 115, "034508": 107, "035162": 115, "035395": 92, "035735": [92, 108, 109, 110], "036362": 92, "036385": [90, 91, 106, 107, 115, 118, 136], "036479": 115, "036739": 92, "037349": 115, "037970": [92, 93, 100, 108, 109, 110], "038076": [90, 91, 106, 107, 115, 118, 136], "038198": 102, "038257": 92, "03902299e": 134, "039327": [92, 108, 109, 110], "039493": [90, 91, 106, 107, 115, 118, 136], "039692": 115, "039719": 107, "039983": 115, "03_complex_model": [112, 137], "04": [112, 129, 134, 137, 141], "041423": 115, "042031": 115, "042050": 115, "043086": 115, "043401": 107, "044451": [90, 91, 106, 107, 115, 118, 136], "044642": [90, 91, 106, 107, 115, 118, 136], "045025": 107, "046011": 115, "046134": [92, 93, 100, 108, 109, 110], "046641": [90, 91, 106, 107, 115, 118, 136], "046676": 115, "047387": 115, "047538": 115, "047859": 92, "048007": 92, "048058": 115, "049": 93, "0490715722882856": 131, "049135": 115, "049139": 102, "049167": 115, "049965805178076736": 131, "04_confound": [116, 137], "05": [47, 107, 114, 126, 128, 131, 134, 135, 137], "050": [93, 131, 137], "050238": 129, "050680": [90, 91, 106, 107, 115, 118, 136], "050783": 107, "051": 93, "051040": 92, "051474": [90, 91, 106, 107, 115, 118, 136], "052": 93, "052961": 115, "053": 93, "053253": 115, "05330831e": 134, "054": 93, "054779": 107, "05493358e": 134, "056003": 107, "057228": 115, "057488": 115, "05_custom": [119, 137], "06": [110, 116, 137], "061639": 115, "061696": [90, 91, 106, 107, 115, 118, 136], "061817": 92, "061933": 115, "062": [106, 112, 137], "062567": 97, "062829": 115, "06289362e": 134, "063175": 107, "06569343": 134, "067737": 107, "068332": [90, 91, 106, 107, 115, 118, 136], "069775": 92, "069985": 102, "07": 126, "070558": 92, "071": 131, "072": [97, 131], "073": [97, 131], "074": [97, 131], "075": [97, 131], "075715": 115, "075741": 107, "076": [97, 131], "076494": 115, "07669507e": 134, "07678": 141, "077": [97, 131], "07712013e": 134, "078": 131, "078319": 102, "078784": 107, "07924702e": 134, "08": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128, 129, 131, 134, 135, 136, 141, 142, 143], "080883": [92, 93, 100, 108, 109, 110], "081": 97, "081033": [92, 93, 100, 108, 109, 110], "081051": 102, "081307": 115, "082": 97, "082913": 115, "083": 97, "084": [97, 142], "085": [97, 136, 137, 142], "085040": 92, "085299": [90, 91, 106, 107, 115, 118, 136], "085907": 107, "086": [97, 142], "086399": 92, "087": 142, "08758": 141, "087946": 102, "088": 142, "089": [101, 142], "08902": 141, "089063": [90, 91, 106, 107, 115, 118, 136], "09": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 126, 128, 129, 131, 134, 135, 136, 141, 142, 143], "090": 101, "09081365e": 134, "091986": 102, "092": 101, "092204": [90, 91, 106, 107, 115, 118, 136], "09232": 129, "093": 101, "093005": [90, 91, 106, 107, 115, 118, 136], "094": [101, 109], "095": 101, "096": 101, "097": 101, "098": [128, 137], "098172": 107, "09853372e": 134, "099154": 102, "099883": 115, "0x7fe6cd47c210": 115, "0x7fe6cd496f20": 107, "0x7fe6cd6da200": 115, "0x7fe6cd7a10f0": 111, "0x7fe6cd7a3cb0": 111, "0x7fe6e568d7f0": 135, "0x7fe6e568e3c0": 135, "0x7fe6e568ef20": 135, "0x7fe6e568f000": 135, "0x7fe6e568f460": 135, "0x7fe6e598c4b0": 129, "0x7fe6e5aa2270": [103, 131], "0x7fe6e5aa2f90": 106, "0x7fe6e5ddf9d0": 91, "0x7fe6e6077350": 136, "0x7fe6eaf831a0": 128, "0x7fe7003ed6a0": 129, "0x7fe701f759e0": 128, "0x7fe701f784b0": 128, "1": [7, 8, 19, 28, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 59, 70, 89, 90, 91, 92, 93, 94, 97, 98, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 119, 121, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 141, 142, 143], "10": [21, 22, 47, 89, 90, 91, 92, 93, 100, 103, 106, 107, 110, 115, 118, 126, 129, 130, 131, 133, 134, 135, 136, 137, 141, 142], "100": [89, 94, 97, 101, 102, 103, 111, 114, 129, 131, 133, 134], "1000": [110, 133], "1001": [129, 141], "10026220e": 134, "101": 122, "102033": 129, "103": 109, "103513": 92, "1038": 47, "104": [89, 109], "104359": 118, "105": [109, 134, 144], "106": 109, "1064": [93, 100], "106807": 115, "107": 109, "10763693e": 134, "1079": 131, "108": [109, 134, 135, 144], "108111": 107, "10816573e": 134, "1089": 130, "108944": 97, "109": [134, 135], "11": [92, 93, 100, 103, 128, 129, 134, 135, 141, 142], "110": [133, 135], "1105": 130, "11088906e": 134, "111": 135, "111790": 102, "112": 135, "11265149e": 134, "113": 135, "11361240e": 134, "1137": 130, "113700e": 102, "114": [134, 135], "1145": 130, "115": 135, "115321": 92, "11543393e": 134, "116": 135, "116276": 129, "11633573e": 134, "11688313e": 134, "117": 135, "118": [135, 144], "118838": 102, "11890": 141, "119": 135, "11988420e": 134, "12": [47, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 125, 126, 128, 129, 131, 134, 135, 136, 141, 142, 143], "120": [89, 136], "1203": 141, "121": 136, "121426": 102, "121574": 92, "122": [134, 136, 141, 144], "123": [134, 136], "124": 136, "12461": 129, "125": 136, "1250": 133, "12568": 126, "126": 134, "12669373e": 134, "1275": 133, "12750": 133, "128": 134, "1282": 129, "1283": 129, "12885753e": 134, "129": 131, "1297": 141, "13": [91, 92, 93, 94, 100, 103, 125, 129, 130, 131, 133, 144], "130": 141, "130267": 92, "131461": 107, "131641": 92, "132": [134, 141], "1326": 141, "133274": 107, "133484": [90, 91, 106, 107, 115, 118, 136], "134": 134, "134828": 92, "135": [141, 142, 144], "136": [114, 142], "13619987e": 134, "137": 142, "138": [134, 142], "139": [114, 134], "14": [92, 93, 100, 102, 103, 108, 109, 110, 129, 141], "140": [90, 91, 106, 107, 114, 115, 118, 134, 136], "140882": 141, "141": 114, "14104234e": 134, "141618": 102, "142": [114, 134], "143": [114, 135], "144": [114, 135, 143], "145": [91, 103, 107], "14588481e": 134, "146": [103, 144], "147": 103, "148": 103, "14861904": 134, "148669": 141, "149": 103, "15": [92, 93, 100, 102, 103, 125, 129, 134], "150": [91, 129, 134, 142, 143], "151": [131, 134, 144], "15131401e": 134, "151390": 97, "152": [90, 91, 106, 107, 115, 118, 131, 136, 143, 144], "153": 131, "15375421e": 134, "154": 131, "154058": 92, "15443469e": 135, "155": 131, "15556975e": 134, "156": 131, "15638092e": 134, "156690": 102, "157": [131, 134], "15738023e": 134, "159": 134, "16": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 126, 131, 133, 134, 135], "16018504e": 134, "161": [107, 134], "16240937e": 134, "1625": 141, "165": [128, 134], "16509556e": 134, "16525470e": 134, "1664": 128, "167": 134, "167718": 102, "168": [109, 144], "169": [109, 134], "17": [92, 93, 100, 102, 103, 126, 131, 141], "170": [109, 144], "171": 109, "172": 109, "173": [109, 134], "17300": 141, "174": [109, 134], "174160": 102, "175": 141, "175061": 102, "175075": 97, "17599741e": 134, "17654665e": 134, "17680598e": 134, "177": 134, "178": [47, 118, 119, 137], "17883212": 134, "179658e": 102, "18": [89, 92, 93, 100, 102, 103, 108, 109, 110, 128, 129], "181": 108, "182": [108, 134], "1820": 129, "182640993861633": 131, "183": 134, "184": [129, 141], "184776e": 102, "186": 141, "1860": 141, "18607683": 134, "18646009e": 134, "187": 141, "188": [134, 141], "189": [134, 141], "19": [91, 103, 126, 128, 131, 141], "190": [108, 134, 141], "19014647e": 134, "19059071e": 134, "191": [108, 134, 141], "191895": 102, "192": [108, 131, 141], "193": [108, 131], "194": [108, 131], "194442": 102, "195": [108, 131], "196": 131, "197": [131, 134, 142], "198": [131, 142], "199": [131, 142], "1992": 143, "1__": 102, "1e": [108, 109, 110, 131, 134, 135], "1e1": 110, "1e2": [134, 135], "1e3": 110, "1f": [89, 90], "2": [8, 19, 20, 21, 22, 28, 59, 71, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 116, 118, 125, 126, 129, 130, 131, 134, 135, 136, 139, 141, 142, 143], "20": [90, 91, 94, 97, 103, 114, 128, 129, 130, 135, 141, 143], "200": [23, 89, 102, 103, 114, 128, 130, 131, 134, 135, 142, 144], "2000": 114, "2004": 130, "20061769e": 134, "201": [91, 131, 142], "2012": 138, "2015": 128, "20156536e": 134, "2016": [47, 92, 93, 100, 108, 109, 110, 128], "2017": [47, 128, 129], "2019": 129, "202": [131, 134], "2020": 129, "2021": 129, "2022": [126, 129], "2023": 126, "2024": 126, "2025": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 126, 128, 129, 131, 134, 135, 136, 141, 142, 143], "203": [131, 134], "204": 102, "20428870e": 134, "20493657e": 134, "206": [129, 134], "206189": 102, "206729": 102, "207": 134, "20701203e": 134, "20879423e": 134, "209": 134, "20973537e": 134, "21": [92, 97, 126, 128, 135, 141], "211": [90, 91, 106, 107, 115, 118, 134, 136], "212": 141, "21216725e": 134, "21265189e": 134, "21535409e": 134, "2158721333005055": 131, "216": 102, "218469": 102, "22": 129, "2210": 129, "221085": 102, "222": [92, 95, 137], "224": 144, "225": 134, "228": 131, "229": 131, "23": [92, 126, 129], "230": 131, "231": [131, 144], "2310": 126, "232": [131, 144], "233": [129, 131, 137, 144], "233997e": 102, "234": 144, "234239e": 102, "234716": 107, "234740": 102, "235": 144, "235978": 141, "236": 144, "236153": 97, "2364": 141, "23672883e": 134, "237": [111, 112, 134, 137], "239": 90, "24": [89, 97, 103, 125, 144], "240": 90, "240085": 102, "241": 90, "242": 90, "243": [90, 134], "2430": 141, "244": 144, "245": [133, 134, 144], "247": [90, 134, 144], "248": 90, "249": [134, 144], "249999999999986": 90, "25": [89, 90, 91, 92, 101, 102, 106, 107, 115, 118, 131, 133, 136, 141], "251": 144, "252": [108, 109], "2525": 133, "253": [108, 109, 134], "25391889e": 134, "254": [108, 109, 144], "255": [108, 109, 144], "256": [108, 109, 134], "25614004e": 134, "256723": 102, "257": [108, 109, 134], "2575": 141, "258": [108, 109, 144], "259": [108, 134], "259309": 102, "26": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 133, 134, 135], "260": [108, 144], "261": 108, "26192512e": 134, "262": [108, 144], "263": [108, 134], "264653948271885": 118, "264654": 118, "265": 144, "2654": 141, "266": [92, 93, 100, 108, 109, 110], "267": [103, 104, 134, 137], "268": 144, "269257": 107, "269876": 141, "27": [102, 125, 129], "270": 144, "271": 144, "27237784e": 134, "273": 134, "27384629e": 134, "274": [134, 142, 144], "275": [128, 142, 144], "2750": 141, "27572658e": 134, "276": 142, "277": [142, 144], "278": [142, 144], "279": 144, "27905689e": 134, "28": [92, 106, 110, 131], "280": [94, 95, 130, 137], "2801": 94, "282": 144, "283": [102, 141, 144], "28363764e": 134, "28389936e": 134, "284": [102, 141, 144], "285": [141, 144], "286": [141, 144], "286067": 107, "287": 141, "288": 141, "28874183e": 134, "289": 141, "29": [92, 110, 141], "29135771e": 134, "29154967e": 135, "293": 144, "293317": 102, "29358430e": 134, "29665167e": 134, "298": 102, "299": 102, "2f": [90, 107], "3": [19, 28, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 122, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 139, 141, 142, 143], "30": [94, 97, 100, 102, 129, 131, 141], "300": 102, "301": 102, "302": 102, "303": 102, "30326924e": 134, "30811171e": 134, "309": [90, 106, 107], "309025": 107, "309092": 102, "30995153e": 134, "31": [92, 137, 141], "31079767436789235": 107, "31168300e": 134, "312": [114, 116, 137], "31295419e": 134, "315": 107, "318": 133, "31951771e": 134, "32168152e": 134, "322742": 129, "324331": 97, "325382": 102, "327": 129, "33": [108, 134], "330669e": 102, "333": [102, 104, 137], "335538": 102, "336101": 102, "338": 134, "34": [92, 111, 141], "340": 134, "341": 134, "341472": 107, "342": [134, 137, 143], "343": 134, "344": 134, "34413800e": 134, "346": [90, 91, 106, 107, 115, 118, 136], "347": 90, "348": [108, 112, 137], "348168": 107, "349": [107, 112, 137], "35": [90, 92], "351": 141, "352": 141, "353": [115, 118, 141], "354": [115, 118, 141], "355": 141, "35539779e": 134, "356": 141, "357": [115, 141], "358": 115, "359": 115, "36": 131, "360": 115, "361": 115, "3613": 141, "362": [107, 115], "363": 115, "364686": 102, "366": [134, 137], "367260": 141, "37": [90, 134], "37500359e": 134, "37886125e": 134, "38": [131, 141], "380315e": 102, "383145": 102, "386": 141, "38776970e": 134, "387779e": 102, "38889568e": 134, "39": 109, "391": 142, "392": 142, "392804": 102, "393": 142, "39344167e": 134, "394": 142, "395": 142, "395436": 129, "399": [100, 104, 137], "4": [7, 47, 48, 49, 50, 51, 52, 53, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 115, 118, 126, 128, 129, 130, 131, 133, 134, 135, 136, 139, 141, 142, 143], "40": [89, 90, 91, 109, 134], "40628575": 134, "40725117e": 134, "408321": 102, "41": [107, 137], "41110883e": 134, "41119875e": 134, "41496649e": 134, "416": [137, 141], "41649737e": 134, "419886": 118, "42": [94, 97, 100, 108, 109, 110, 114, 115, 118, 130, 134, 141, 142], "421885": 102, "42489ff0163b2f12752440a6b7ef74c7": 103, "42500021e": 134, "426498": 115, "42932175e": 134, "429556": 115, "43": [92, 114, 118, 131], "4318": 134, "432856": 141, "435353": 102, "438": [89, 95, 137], "44": 118, "440892e": 102, "442": [90, 91, 106, 107, 115, 118, 136], "44240684e": 134, "44408444147062": 90, "446008": 141, "44785351e": 134, "449": 91, "45": [90, 114], "451629": 102, "453": 134, "454": 134, "455": 134, "456": 134, "456486e": 102, "457": 134, "458": 134, "459": [131, 134], "459261223720629": 131, "460": [131, 134], "4601": 141, "46095663e": 134, "461": [131, 134], "462": [109, 131], "463": [109, 131], "463286e": 102, "464": [109, 131], "465": [109, 131], "46520183e": 134, "466": 109, "46699817e": 134, "467": 109, "468533e": 102, "469672": 129, "47": [90, 118, 131, 144], "470": [137, 142], "47616089e": 134, "47646162e": 134, "478725": 102, "48": [90, 92], "481": 141, "482": 141, "482681": 115, "484100": 102, "485": 141, "48550": 126, "486498": 118, "488": [104, 141], "488094e": 102, "489": [101, 104, 137, 141], "49": [118, 129, 133], "4__": 102, "4gb": 133, "5": [19, 20, 21, 22, 37, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 141, 142, 143], "50": [37, 38, 90, 91, 94, 97, 101, 102, 103, 106, 107, 111, 114, 115, 118, 131, 133, 134, 135, 136, 142, 143], "500": 133, "500000": [90, 91, 106, 107, 115, 118, 136], "50108190e": 134, "506": [47, 128], "51": [91, 103, 106, 135, 137], "510": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 108, 109, 110, 114, 118, 128, 134, 135], "51071450e": 134, "511": 94, "512": 94, "51234170e": 134, "51357151914368": 106, "518": [47, 128], "5188855581026275": 109, "52": [103, 133], "522599": 115, "53": 103, "532": [92, 93, 100, 108, 109, 110], "53580647e": 134, "53696198e": 134, "53852981e": 134, "54": 103, "54125314e": 134, "542": [90, 95, 137], "550248": 115, "552": [93, 95, 114, 137], "552840": 129, "552990": 102, "553": 114, "554": 114, "555": 114, "556": [109, 112, 114, 137], "557": 114, "558": 114, "558655": 90, "559": 131, "56047238e": 134, "561": 131, "562": 131, "563": 131, "564": 131, "569": 141, "57": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 134, 136, 141], "571": 115, "572": 115, "573": 115, "573568": 90, "574": 115, "57427384e": 134, "575": 115, "576": [112, 115], "576015e": 102, "57731819e": 134, "578808": 129, "579540": 141, "58": [128, 129, 131, 135, 141, 142, 143], "580": 91, "581": 89, "58117585e": 134, "582": 89, "58490026e": 134, "585": [89, 131], "586": [89, 131], "586593": 102, "587": [89, 131], "588": [89, 131], "588308940222183": 109, "589": [89, 131], "59": 131, "590": [89, 91, 131], "591": 131, "59381366e": 135, "5939164168576971": [108, 109], "595": 91, "596518": 102, "597": 91, "599419": 102, "6": [92, 93, 95, 97, 100, 101, 102, 103, 110, 112, 114, 115, 128, 130, 131, 134, 138, 139, 142], "60": [91, 133], "600": [75, 91], "603": 131, "604": 131, "605": 131, "606": 131, "607": 131, "61": 90, "61023026e": 134, "6125": 133, "61342343e": 134, "617474": 90, "61783": 130, "62": [90, 134], "62214573e": 134, "629": 118, "62989736e": 134, "63": 144, "630": 118, "63340553e": 134, "636": 93, "637": [93, 133], "638": [93, 94], "639": [93, 94], "64": [102, 134], "640": [93, 94], "641": [93, 94], "64158883e": 135, "642": [94, 131], "643": 94, "6437581151471767": 110, "644": [94, 118, 131], "645": [118, 131], "646": [118, 131], "647": [115, 116, 118, 131, 137], "648": 131, "64830605e": 134, "649": 131, "649999999999999": 90, "65": 134, "650": 131, "651": 131, "652": 131, "653": 131, "65314852e": 134, "654": 131, "655": 131, "656": 131, "656015037593985": 110, "657": 131, "658": 131, "659": 131, "659172": 102, "65998813e": 134, "660": 131, "661": 131, "66283346e": 134, "6638": 141, "666996": 102, "6672932330827068": 93, "66810054e": 135, "669010": 97, "66928561e": 134, "6710526315789473": 93, "67144941e": 134, "67251840e": 134, "67461782e": 134, "67847548e": 134, "68": 134, "680": [91, 103], "681": [91, 103], "682": 91, "683": 91, "684": [91, 103], "6841826838300122": 93, "685": [94, 103], "685092": 97, "686": [94, 103], "686170": 102, "686765": 102, "686852": 90, "687": [94, 103], "688": [94, 103], "688891": 102, "689": 94, "68953929e": 134, "689893e": 102, "69": 141, "690": [94, 111, 143], "691": [111, 143], "692": 143, "693": 143, "69390589e": 134, "694": [111, 143], "695": 111, "696": 111, "697": [111, 118], "698": [111, 118], "699": [111, 118], "7": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 122, 126, 130, 131, 133, 134, 135, 138, 139, 142, 144], "70": [94, 97], "700": [111, 118], "701": 118, "70291971": 134, "707933": 141, "7087109857168048": [108, 109], "70974601e": 134, "71": [128, 134], "713": [91, 95, 137], "715": 100, "72": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 134, 135], "7210526315789474": 100, "7218303650149884": 100, "724008": 102, "724302": 102, "725389e": 102, "725703": 129, "728": 143, "729": 143, "730": 143, "731": [91, 143], "732": [91, 143], "733": [91, 100], "734": [91, 97, 100], "735": [94, 100, 111, 129], "736": [94, 100, 111, 129], "737": [94, 97, 100, 111, 129], "738": [94, 97, 100, 129], "739": [94, 97], "74": 134, "740": [94, 97, 129], "741": [97, 129], "74104576e": 134, "741431": 102, "742": 129, "74263683e": 135, "74320957e": 134, "7449876d309382acfef94df9d102aa76": 142, "747": 95, "749": 118, "75": [90, 91, 94, 97, 102, 106, 107, 115, 118, 134, 136], "750": 118, "750000": 89, "750820": 102, "751": 118, "751257": 102, "752": 118, "753": 118, "756861": 102, "759419": 102, "760": 129, "763": 131, "763131e": 102, "764": 131, "766": 131, "766838": 129, "767": 131, "768": 131, "769": 131, "77": [90, 91, 106, 107, 115, 118, 134, 136, 141, 144], "770": 131, "771": 131, "77191746e": 134, "772": 131, "772156": 102, "772593": 102, "773": 131, "774": 131, "775": 131, "77577512e": 134, "776": 131, "776631": 102, "77664795e": 134, "777": [131, 143], "778": [131, 143], "779": [131, 143], "77937129e": 134, "780": [131, 143], "781": [131, 143], "78147812e": 134, "782": [97, 131, 143], "78209462e": 134, "78255940e": 135, "782741": 97, "783": 97, "783874": 90, "784": 97, "785": 97, "786": 97, "78632059e": 134, "787": 97, "788377e": 102, "788625": 102, "789944": 102, "79": [102, 122], "790": 106, "79034944e": 134, "79116307e": 134, "791667": 89, "795": 100, "796": 100, "797": [100, 115], "797736e": 102, "79782108e": 134, "798": [100, 115], "799": [100, 115], "8": [89, 92, 93, 100, 103, 106, 107, 125, 129, 130, 134, 136, 138, 142, 143, 144], "80": [94, 97, 129, 134, 141], "800": [75, 100, 107, 115], "80018072e": 134, "80084801e": 134, "801": [107, 115], "802": [97, 98, 137], "805": 106, "80569048e": 134, "806": 106, "807": 106, "808": 106, "80802270e": 134, "809": 106, "8099999999999999": 131, "81053295e": 134, "811": [91, 130], "81188036e": 134, "81496972e": 134, "815": 107, "816": 107, "817": 107, "818": 107, "81947379e": 134, "820": 107, "820997": 141, "821": 107, "82622951e": 134, "82718912e": 134, "828": 109, "829": 109, "830": 109, "831": 109, "832": 109, "833": 109, "833333": 89, "834": [109, 134], "835331": 97, "836": 143, "83613139": 134, "837": 143, "838": 143, "838710": 114, "839": 143, "840": 143, "841": 143, "842": 143, "848": 128, "84817959e": 134, "849": 128, "85": 111, "850": 128, "851": 128, "852": [101, 128], "852417e": 102, "853": [101, 128], "854": 101, "855": 101, "856": 101, "857": 101, "861364": 118, "862": [135, 137], "86210959e": 134, "8625": 94, "866": 128, "86732425e": 134, "8678571428571429": 94, "87": [90, 91, 106, 107, 115, 118, 136], "87004758e": 134, "87194087e": 134, "872214": 102, "87277092e": 134, "87307476e": 134, "875000": 89, "87549426e": 134, "87553319e": 134, "87693242e": 134, "87821759e": 134, "88": [115, 118], "880": 128, "88079008e": 134, "89": [115, 118], "891066": 141, "893666": 102, "894": 128, "895011": 102, "895662": 97, "896": 143, "897": 143, "898": 143, "899": 143, "9": [89, 90, 92, 93, 100, 102, 103, 107, 115, 129, 131, 134, 139, 142, 143], "90": [94, 97, 134, 141], "900": 143, "900000": 114, "90015347e": 134, "901": 143, "902": 143, "903": 143, "904": 143, "905": 143, "906": [129, 143], "907": [93, 129, 135, 143], "908": [93, 129, 135], "909": [129, 135], "909091": 114, "90918000e": 134, "9099999999999999": 131, "910": [129, 135], "9100000000000001": 131, "911": [129, 135], "91141327e": 134, "912": 135, "913": 135, "91303766e": 134, "914": 135, "914360e": 102, "915": 135, "916": 135, "916667": 89, "917": 135, "918": 135, "92": [134, 143], "9200000000000002": 131, "921": 128, "926": 93, "927": 93, "928": 93, "929": 93, "93": 131, "930": 93, "931": 93, "933": 142, "93386974e": 134, "935": 128, "93603355e": 134, "94": [134, 144], "940": [128, 131], "9400000000000001": 131, "941": [128, 131], "942": [128, 131], "943": [128, 131], "943182": 114, "943621": 102, "944": [128, 131], "947": 131, "948": 131, "949302": 141, "95": [75, 94, 97, 102, 107, 111, 114, 130], "951852": 114, "955": 137, "956254": 118, "958333": 89, "958497": 102, "959": 116, "96": [89, 102, 134, 144], "96233850e": 134, "97": [102, 114], "97191363e": 134, "972988": 102, "977110": 141, "977322": 102, "97808972e": 134, "98": [102, 130, 134], "981407": 118, "982": 110, "98317342e": 134, "99": [102, 141], "991": 110, "992": 110, "993": 110, "994": [110, 135], "99484250e": 135, "995": [110, 135], "996": 110, "997": 110, "998": 110, "999": 110, "99_doc": [134, 137], "A": [2, 6, 7, 8, 16, 19, 20, 21, 22, 23, 25, 28, 30, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 55, 59, 63, 91, 92, 93, 94, 100, 108, 109, 110, 111, 115, 128, 129, 130, 131, 133, 138, 139, 143], "And": [37, 38, 93, 100, 114, 130, 131, 133], "As": [2, 92, 94, 97, 103, 111, 114, 115, 118, 122, 124, 128, 129, 130, 131, 133, 134, 135, 141, 142, 143], "At": [97, 126, 133, 138, 143], "But": [108, 114, 115, 130, 131, 133, 134, 140, 142, 143], "By": [53, 60, 100, 101, 102, 115, 120, 128, 131, 133, 134, 142], "For": [92, 94, 97, 102, 107, 115, 120, 121, 122, 124, 125, 128, 130, 131, 133, 134, 135, 136, 139, 142, 143], "If": [2, 3, 6, 7, 8, 16, 18, 24, 26, 28, 31, 35, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 56, 59, 62, 64, 66, 92, 94, 100, 102, 114, 115, 118, 121, 122, 125, 126, 129, 130, 131, 133, 139, 140, 142, 143], "In": [19, 20, 21, 22, 47, 91, 92, 93, 94, 100, 101, 114, 115, 118, 122, 126, 128, 129, 130, 133, 134, 135, 138, 139, 141, 142, 143], "It": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 100, 108, 109, 110, 125, 126, 128, 130, 131, 133, 134, 142, 143], "NOT": 133, "No": [128, 130], "Not": [48, 49, 50, 51, 52, 114], "Of": 135, "On": [122, 129, 133, 142], "One": [4, 28, 92, 129, 131, 133, 135, 143], "THE": 133, "That": [6, 128, 129, 130, 131, 133, 134, 143], "The": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 33, 34, 35, 36, 37, 38, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 62, 64, 66, 68, 70, 71, 72, 73, 74, 75, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 139, 140, 141, 143, 144], "Then": [106, 115, 127, 133, 135, 138, 143], "There": [92, 130, 138, 140, 143], "These": [121, 124, 125, 128, 142], "To": [2, 51, 53, 100, 102, 108, 115, 122, 124, 126, 128, 130, 131, 133, 134, 135, 138, 139, 141, 142, 143], "Will": [40, 44, 141], "With": [91, 130, 133, 134, 142], "_": [92, 101, 114, 122], "__": [6, 7, 8, 28, 47, 48, 49, 50, 51, 52, 53, 59, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128, 129, 131, 135, 136, 141, 142, 143], "__categor": [107, 136], "__confound": [114, 129], "__continu": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 114, 115, 118, 128, 131, 134, 136, 141, 142, 143], "__featur": [114, 129], "__init__": [2, 3, 4, 6, 7, 8, 15, 16, 17, 19, 20, 21, 22, 23, 28, 33, 34, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 70, 71, 72, 73], "__pca1": 107, "__pca2": 107, "__petal": [111, 143], "__sepal": [111, 143], "__traceback__": 61, "__type1": 135, "__type2": 135, "__version__": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 134, 135], "__x_to_zscor": 102, "_build": 122, "_classif": 94, "_estimatorinspector": 17, "_gamma": [108, 109], "_grid_": 131, "_model_": 59, "_pipelin": 103, "_split": [91, 130], "abil": 134, "abl": [6, 121, 138, 141], "about": [101, 122, 126, 129, 130, 133, 134, 135, 138, 140, 141, 142, 143], "abov": [91, 114, 129, 131, 134, 142], "absolut": [90, 106, 107, 118, 120], "abstract": 126, "accept": 131, "access": [44, 92, 133], "accident": 138, "accord": [126, 128, 130, 135, 144], "accordingli": [129, 138], "account": [94, 129, 133], "accur": 129, "accuraci": [89, 94, 109, 114, 129, 130, 141, 142], "achiev": [115, 129, 136, 142, 143], "acquir": 100, "across": [19, 20, 21, 22, 23, 90, 101, 106, 107, 118, 130, 134, 142], "action": 144, "activ": 133, "actual": [19, 20, 47, 53, 89, 90, 107, 115, 118, 133, 134], "ad": [2, 7, 19, 28, 37, 38, 47, 48, 49, 50, 51, 52, 53, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 126, 128, 129, 131, 134, 135, 136, 139, 141, 142, 143, 144], "adaboost": 120, "adaboostclassifi": 120, "adaboostregressor": 120, "adapt": [92, 93, 100, 108, 109, 110], "add": [2, 3, 4, 26, 31, 56, 61, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 122, 128, 129, 130, 131, 133, 134, 135, 136, 139, 141, 142, 143, 144], "add_not": 61, "addit": [7, 8, 28, 37, 38, 47, 48, 49, 50, 51, 52, 53, 59, 125, 126, 128, 134, 135, 138, 141, 142], "addition": [37, 38, 66, 94, 97, 126, 127, 129, 143], "address": 134, "adeli": 134, "adjust": 46, "adjusted_mutual_info_scor": 142, "adjusted_rand_scor": 142, "admin": 133, "adopt": 144, "advanc": 139, "advantag": 133, "affect": [19, 20, 134], "after": [26, 33, 53, 58, 60, 90, 91, 100, 102, 106, 107, 114, 115, 118, 122, 134], "afterward": [31, 56, 135], "ag": [90, 91, 92, 106, 107, 115, 118, 136], "again": [114, 129, 130, 131, 134, 138, 143], "against": 122, "agg_method": [47, 128], "aggreg": [47, 128], "aggregate": 47, "agpl": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128], "aim": [125, 126, 143], "aka": 120, "al": [47, 128, 129], "algorithm": [25, 26, 28, 37, 38, 101, 131, 133, 138, 141, 143, 144], "alia": [5, 19, 28, 67, 69], "all": [2, 4, 18, 25, 26, 30, 37, 38, 41, 47, 48, 52, 53, 55, 60, 63, 89, 90, 93, 94, 100, 101, 102, 107, 114, 115, 118, 120, 122, 125, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144], "allow": [3, 19, 26, 28, 31, 44, 56, 64, 94, 114, 121, 124, 128, 129, 131, 133, 139, 140, 143, 144], "almost": [130, 133], "along": 140, "alpha": [100, 128, 130], "alreadi": [26, 31, 44, 56, 64, 100, 102, 122, 129, 130, 133, 135, 140, 141, 143], "also": [4, 89, 91, 94, 97, 102, 107, 108, 115, 121, 122, 124, 126, 128, 129, 131, 133, 134, 135, 138, 139, 141, 142, 143], "altern": [46, 114, 144], "although": 125, "alwai": [19, 20, 21, 22, 23, 94, 108, 109, 110, 114, 122, 129, 131, 133, 135, 141, 142, 143], "aml": 126, "amount": [114, 126, 133, 134], "an": [2, 3, 7, 17, 19, 20, 21, 22, 23, 28, 35, 37, 38, 40, 47, 48, 49, 50, 51, 52, 53, 89, 92, 93, 94, 97, 100, 101, 102, 109, 114, 121, 122, 126, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144], "analog": 3, "analys": [100, 101, 129], "analysi": [2, 18, 20, 37, 66, 88, 95, 105, 106, 112, 118, 120, 130, 137, 143], "analyz": [109, 110, 134], "ani": [2, 3, 7, 8, 13, 14, 26, 28, 31, 33, 34, 35, 36, 37, 38, 44, 48, 49, 50, 51, 52, 53, 56, 58, 64, 91, 121, 128, 130, 131, 133, 134, 143], "anil": 129, "annot": [89, 90], "annual": 143, "anomali": 134, "anoth": [89, 92, 102, 118, 130, 133, 135, 143], "answer": 130, "antonopoulo": 107, "anyth": [139, 142], "api": [7, 47, 48, 49, 50, 51, 52, 53, 120, 122, 126, 135, 140, 143], "appear": [8, 28, 59, 142], "append": [66, 101, 114, 127, 130, 134], "appli": [2, 3, 6, 7, 8, 34, 37, 38, 47, 48, 49, 50, 51, 52, 53, 59, 60, 73, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 121, 126, 128, 129, 131, 132, 133, 134, 135, 137, 141, 142, 143], "applic": [124, 128, 129, 134], "apply_to": [2, 6, 7, 8, 34, 48, 49, 50, 51, 52, 53, 59, 102, 106, 107, 111, 114, 115, 129, 133, 134, 135, 136, 143], "approach": [114, 128, 130, 131, 133, 138, 143], "appropri": 129, "approx": 133, "approxim": [19, 20], "april": 129, "ar": [6, 7, 8, 19, 20, 21, 22, 23, 26, 28, 31, 33, 37, 38, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 64, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 114, 115, 118, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144], "arbitrari": [135, 142], "area": 141, "aren": 143, "arg": [58, 61, 70, 71, 72, 73], "argu": 129, "argument": [29, 51, 70, 71, 73, 102, 115, 130], "aris": 134, "around": 51, "arrai": [7, 8, 19, 20, 21, 22, 23, 37, 47, 48, 49, 50, 51, 52, 53, 59, 89, 134], "arraylik": [42, 43], "articl": 138, "artifici": [129, 135, 143], "arxiv": [126, 129], "as_estim": 17, "as_fram": [90, 91, 106, 107, 115, 118, 136], "ascend": 90, "asctim": 66, "ask": 133, "aspect": [117, 130, 143], "assess": [94, 97, 129, 134], "asset": 134, "assign": [107, 122], "assum": [115, 130, 133], "assumpt": 142, "astyp": 89, "attempt": [108, 109], "attent": 128, "attr": 10, "attribut": [2, 6, 8, 10, 26, 28, 47, 59, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 134, 135], "auc": 114, "author": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 122, 128], "auto": [108, 131], "auto_exampl": [95, 98, 104, 112, 116, 119], "autom": 143, "automat": [122, 125, 127, 143], "avail": [24, 25, 26, 30, 37, 38, 40, 41, 46, 55, 62, 63, 125, 126, 133, 142, 143, 144], "available_model": 2, "available_transform": 2, "averag": [90, 91, 106, 107, 115, 118, 128, 130, 141], "average_precis": 142, "avoid": [126, 129, 130, 131, 144], "awar": [6, 125], "awesom": 143, "ax": [89, 90, 91, 100, 101, 102, 107, 130], "axhlin": 114, "axi": [47, 89, 90, 91, 106, 107, 118, 130, 136], "axisgrid": 91, "axvlin": [114, 130], "b": [92, 122, 131, 143], "b10eef89b4192178d482d7a1587a248a": [90, 106, 107, 115, 118, 129, 136, 142, 143], "back": [121, 142], "backbon": 140, "backend": 133, "bag": 120, "baggingclassifi": 120, "baggingregressor": 120, "balanc": 131, "balanced_accuraci": [94, 97, 142], "balanced_accuracy_scor": 94, "barh": 90, "barplot": 101, "base": [2, 16, 19, 20, 33, 37, 46, 47, 58, 76, 120, 124, 126, 129, 131, 132, 133, 134, 137, 138, 139, 140, 143], "baseestim": [6, 144], "baselin": [90, 91, 106, 107, 118], "basi": 143, "basic": [88, 122, 131, 139, 140, 142, 143, 144], "batch": [19, 20, 133], "bay": [37, 38, 110, 125, 131, 144], "bayesian": [2, 37, 66, 105, 112, 131, 137], "bayessearchcv": [37, 38, 125, 131, 144], "beat": 131, "becaus": [102, 115, 129, 130, 131, 134, 138, 140, 141, 142, 143], "becom": [92, 133, 138, 143], "been": [2, 61, 128, 130, 133, 134, 144], "befor": [19, 20, 37, 38, 59, 89, 92, 114, 118, 122, 125, 127, 131, 133, 142, 143, 144], "begin": [130, 144], "behav": [31, 56], "behavior": [47, 92, 128, 129, 134, 144], "behaviour": [121, 126, 131, 142, 144], "being": [2, 122, 125, 142, 143, 144], "believ": 133, "belong": [102, 115], "below": [114, 125, 128, 131], "benchmark": 141, "benefit": [126, 133], "bengio": 130, "benign": 141, "benjamini": 46, "bernoulli": 120, "bernoullinb": 120, "besid": 143, "best": [109, 110, 131, 133, 143], "best_estimator_": [108, 109], "best_params_": [108, 109, 110, 131], "beta": 87, "better": [40, 44, 108, 109, 110, 131, 134, 141], "between": [6, 35, 90, 114, 122, 128, 129, 130, 133, 135, 138, 141, 143], "bewar": 133, "beyond": 138, "bia": [129, 130], "bias": [129, 130], "big": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 133], "biggest": 122, "bill_depth_mm": 134, "bill_depth_mm__": 134, "bill_length_mm": 134, "bill_length_mm__": 134, "bin": [19, 20, 21, 22, 91, 130], "binari": [23, 37, 38, 66, 88, 93, 95, 97, 100, 101, 103, 108, 109, 110, 111, 114, 120, 122, 130, 131, 134, 137, 141], "biomark": 129, "bit": [2, 108, 125, 131, 135, 142], "black": 144, "block": 122, "blood": [90, 91, 106, 107, 115, 118], "blue": 90, "bmi": [90, 91, 106, 107, 115, 118, 136], "bodi": [90, 91, 106, 107, 118], "body_mass_g": 134, "body_mass_g__": 134, "bokeh": [124, 125, 144], "bonferroni": 46, "bool": [2, 6, 7, 8, 17, 18, 19, 20, 26, 28, 31, 33, 34, 37, 39, 44, 47, 48, 49, 50, 51, 52, 53, 56, 59, 64, 66, 70, 71, 72, 73, 115], "boost": 120, "bootstrap": [23, 114, 130], "boser": 143, "both": [17, 33, 47, 58, 91, 93, 100, 114, 115, 129, 130, 131, 133, 135, 136, 142, 143], "bottom": 133, "boundari": [100, 131], "box": [114, 126], "boxplot": [91, 114], "bp": [90, 91, 106, 107, 115, 118, 136], "brain": [47, 93, 100, 126, 128, 129], "branch": [122, 127], "break_ti": 142, "breast": 141, "browser": 124, "bug": [122, 144], "bugfix": 122, "build": [2, 37, 89, 93, 100, 105, 126, 127, 128, 135, 136, 137, 138, 140, 141], "build_app": [97, 141], "built": [120, 126, 135, 141, 142, 143], "bump": [127, 144], "button": [97, 141], "c": [89, 92, 93, 100, 108, 109, 110, 124, 125, 131, 133, 134, 135, 142, 143], "c_valu": 134, "cache_s": 142, "calcul": 90, "call": [19, 20, 21, 22, 23, 26, 40, 44, 121, 124, 129, 130, 131, 133, 134, 135, 139, 143, 144], "callabl": [4, 39, 40, 44, 47, 144], "can": [1, 2, 4, 19, 20, 21, 22, 23, 26, 28, 31, 33, 35, 37, 38, 44, 46, 47, 51, 53, 56, 59, 64, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 114, 115, 118, 120, 121, 122, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144], "can_inverse_transform": [33, 59], "cancer": 141, "cannot": [102, 143], "capabl": [134, 135, 144], "capac": 139, "care": [129, 143], "case": [16, 19, 20, 21, 22, 28, 36, 37, 38, 47, 91, 92, 100, 106, 118, 122, 128, 129, 130, 133, 139, 142, 143], "categor": [37, 38, 107, 115, 120, 131, 136], "categori": 74, "categoricaldistribut": 131, "categoricalnb": 120, "catplot": 114, "caution": [101, 130], "caveat": 91, "cbpm": [2, 37, 120, 126, 132, 137, 144], "cbpm__significance_threshold": 128, "cbpm_pipeline_cr": 128, "cd": 122, "cell": 142, "cerebr": [92, 93, 100, 108, 109, 110], "certain": [18, 121, 139, 142, 143], "challeng": 129, "chang": [9, 19, 28, 48, 87, 109, 114, 120, 122, 125, 127, 130, 131, 142], "change_column_typ": 120, "changecolumntyp": 120, "changelog": 127, "chapter": 140, "characterist": 100, "check": [6, 7, 8, 10, 19, 20, 21, 22, 23, 28, 33, 35, 39, 47, 48, 49, 50, 51, 52, 53, 59, 86, 92, 93, 100, 102, 114, 115, 121, 122, 126, 127, 131, 133, 142, 144], "checkout": [122, 127], "chinstrap": 134, "choic": 130, "choos": [47, 94, 97, 130, 131, 141, 143], "chosen": 91, "chyzhyk": 129, "ci": [75, 114, 127], "circumst": 122, "citat": 144, "cite": 126, "claim": [100, 114, 130], "class": [2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 31, 33, 34, 37, 38, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 74, 89, 91, 93, 94, 97, 100, 101, 103, 108, 109, 110, 111, 114, 115, 120, 129, 130, 131, 134, 141, 142, 143], "class_weight": [131, 142], "classes_": [8, 28, 59], "classic": 114, "classif": [2, 23, 31, 35, 37, 38, 66, 88, 93, 95, 97, 100, 101, 103, 105, 108, 109, 110, 112, 114, 122, 130, 131, 133, 134, 135, 137, 141, 142, 143], "classifi": [89, 93, 94, 100, 101, 103, 108, 109, 110, 111, 114, 122, 134, 142, 143], "classification_cl": 31, "classmethod": 2, "clean": [122, 125], "clear": [133, 136], "clf": 100, "click": 140, "clone": 122, "close": [46, 127], "closer": [115, 120, 142], "cluster": 133, "cm": 89, "cm_perc": 89, "cm_sum": 89, "cmap": [89, 90, 107], "code": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 122, 126, 129, 133, 143, 144], "codebas": 144, "codecov": 122, "codespel": 144, "coef0": 142, "coef_": [90, 115], "coeffici": [42, 43, 90, 118, 142, 143], "cognit": [92, 93, 100, 108, 109, 110], "col": 114, "col_index": 91, "colleagu": 130, "collect": [92, 114, 134], "collid": 129, "color": [90, 91, 100, 114, 130], "colt": 143, "colum": 139, "column": [2, 4, 6, 7, 8, 9, 11, 12, 18, 28, 34, 36, 37, 38, 48, 49, 50, 51, 52, 53, 59, 60, 73, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 114, 115, 118, 120, 121, 128, 129, 131, 134, 135, 136, 139, 141, 142, 143, 144], "column_typ": 4, "columntransform": [4, 12], "columntyp": [2, 5, 6, 7, 8, 10, 34, 48, 49, 50, 51, 52, 53, 59, 60, 73, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128, 129, 131, 134, 135, 136, 141, 142, 143], "columntypeslik": [2, 34, 48, 49, 50, 51, 53, 115], "com": [122, 130, 138, 144], "combin": [90, 91, 92, 106, 107, 114, 118, 131, 133, 143], "come": [121, 122, 130, 134, 139, 143], "comma": 143, "command": 133, "comment": 122, "commit": [122, 127, 144], "common": [131, 138], "commonli": [128, 143], "commun": 139, "compact": 141, "compar": [91, 97, 114, 126, 129, 131, 138, 141, 142], "comparison": [2, 23, 37, 46, 66, 75, 98, 113, 116, 123, 126, 137, 140], "compat": [2, 19, 20, 21, 22, 23, 24, 26, 28, 37, 38, 48, 49, 50, 51, 52, 53, 54, 60, 115, 125, 128, 142, 143, 144], "complement": 120, "complementnb": 120, "complet": [87, 122, 133], "completeness_scor": 142, "complex": [2, 92, 100, 111, 123, 126, 129, 130, 131, 133, 134, 143], "complic": [2, 133, 138], "compon": [6, 7, 8, 28, 47, 48, 49, 50, 51, 52, 53, 59, 102, 107, 120, 143], "compos": [4, 12], "comprehens": [37, 121], "compromis": 130, "comput": [8, 28, 37, 42, 43, 47, 59, 94, 107, 118, 121, 131, 133, 138, 143, 144], "computation": 133, "concat": [90, 91, 101, 106, 107, 114, 118, 136], "concav": 141, "concept": [131, 138], "conclud": 131, "conda": [124, 125], "condit": [93, 100], "condor_q": 133, "confid": [75, 114, 134], "config": [76, 121, 126, 144], "configur": [1, 2, 7, 19, 28, 47, 48, 49, 50, 51, 52, 53, 66, 126, 129, 133, 134, 135, 143], "configure_log": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 122, 134, 135], "confound": [2, 3, 18, 23, 37, 48, 53, 60, 66, 92, 116, 120, 123, 126, 132, 137, 141, 144], "confound_1": 129, "confound_2": 129, "confound_on": 129, "confound_remov": [114, 115, 120, 129], "confound_two": 129, "confoundremov": [60, 115, 120, 129, 144], "confus": [89, 102, 142, 143], "confusion_matrix": 89, "conist": 136, "connect": [47, 128, 129], "connectom": [2, 37, 47, 120, 126, 132, 137], "consid": [2, 115, 121, 122, 127, 129, 131, 139, 142], "consider": 129, "consist": [2, 3, 28, 35, 37, 121, 126, 128, 130, 132, 137, 138, 139, 141, 143, 144], "constraint": [131, 144], "construct": 131, "constructor": 102, "consum": 131, "contain": [6, 7, 8, 28, 36, 37, 38, 41, 46, 47, 48, 49, 50, 51, 52, 53, 59, 75, 89, 90, 91, 94, 106, 107, 118, 130, 133, 134, 139, 142], "content": 122, "context": [37, 92, 93, 100, 108, 109, 110, 133, 134], "continu": [2, 8, 34, 48, 50, 52, 53, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 114, 115, 118, 128, 130, 131, 134, 135, 136, 139, 141, 142, 143, 144], "continuousstratifiedgroupkfold": [21, 130], "continuousstratifiedkfold": [22, 91, 130, 144], "contion": 22, "contour": 100, "contrast": 114, "contribut": 126, "contributor": 122, "control": [19, 20, 21, 22, 23, 92, 93, 100, 108, 109, 110, 117, 129, 131, 133, 135, 138], "convent": [47, 122, 131], "convernt": [37, 38], "convers": 89, "convert": [36, 37, 38, 92, 114, 118], "copi": [2, 4, 91, 115, 122, 134, 142], "core": [122, 133, 138, 141], "corr": [90, 107], "corr_method": [47, 128], "corr_sign": [47, 128], "corrcoef": [90, 107], "correct": [46, 97, 135, 141, 144], "corrected_ttest": [97, 141], "correctli": 94, "correl": [42, 43, 47, 90, 118, 128], "correlation_valu": 47, "correspond": [8, 28, 37, 38, 59, 134], "cortex": [92, 93, 100, 108, 109, 110], "cost": 121, "could": [100, 102, 115, 126, 128, 133, 134, 139, 141, 142, 143], "count": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 130, 131, 134, 136, 141, 142, 143], "coupl": 91, "cours": 135, "cover": [136, 139, 143], "coverag": 122, "cpu": 133, "cr_fi": 114, "creat": [2, 3, 4, 47, 89, 91, 92, 94, 100, 102, 106, 107, 111, 120, 122, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 141, 142, 143], "create_pipelin": 144, "create_studi": 131, "creation": 2, "creator": [102, 103, 106, 107, 108, 109, 114, 115, 128, 131, 133, 136, 142, 143], "creator1": [110, 131, 141], "creator2": [110, 131, 141], "creator3": [131, 141], "creator4": 131, "critic": 134, "cross": [2, 3, 16, 19, 20, 21, 22, 23, 35, 37, 38, 89, 90, 101, 107, 114, 115, 120, 126, 128, 131, 132, 133, 134, 137, 139, 140, 141, 143, 144], "cross_valid": 138, "crucial": 129, "cryptic": 142, "csv": 92, "cue": [92, 93, 100, 108, 109, 110], "culaciati": 144, "curiou": 141, "current": 133, "curs": 128, "custom": [37, 44, 66, 119, 123, 126, 128, 137, 142, 143], "customis": 128, "customiz": 135, "cv": [15, 16, 19, 20, 21, 22, 23, 28, 35, 36, 37, 38, 66, 88, 89, 90, 94, 95, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 120, 128, 129, 130, 131, 133, 134, 135, 136, 137, 141, 142, 143, 144], "cv_mdsum": [89, 90, 103, 106, 107, 115, 118, 129, 136, 142, 143], "cv_predict": 103, "cv_splitter": [141, 142], "cv_stratifi": [91, 93], "d": [47, 89, 92, 93, 100, 108, 109, 110, 120, 127, 128, 130, 131], "d2_absolute_error_scor": 142, "dai": 133, "dant": 144, "darkgrid": [90, 91, 107], "darya": 129, "dash": 130, "dashboard": 75, "data": [2, 6, 7, 8, 18, 19, 20, 21, 22, 23, 28, 33, 35, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 82, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 120, 126, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143], "data_df": 91, "data_diabet": [90, 106, 107, 118, 136], "data_processed1": 107, "data_processed2": 107, "databas": 129, "datafram": [4, 6, 7, 8, 16, 18, 28, 33, 36, 37, 38, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 75, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 121, 126, 128, 129, 131, 134, 135, 136, 138, 139, 141, 142, 143, 144], "datalik": [7, 8, 28, 33, 48, 49, 50, 51, 52, 53, 58, 59, 60, 70, 71, 72, 73], "dataset": [19, 20, 21, 22, 23, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 122, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 141, 142, 143], "de": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128, 129, 133], "deal": [92, 128, 139], "debug": [66, 133, 138], "decemb": 130, "decent": 141, "decid": [26, 31, 44, 64], "decis": [8, 59, 92, 93, 100, 108, 109, 110, 129, 133, 134], "decision_funct": [8, 15, 59, 100, 144], "decision_function_shap": 142, "declar": 102, "decod": [100, 129], "decomposit": 143, "deconfound": [53, 115], "decreas": 122, "deep": [6, 7, 8, 28, 47, 48, 49, 50, 51, 52, 53, 59, 70, 71, 72, 73, 129], "deeper": [126, 134, 140, 141], "def": 118, "default": [2, 3, 6, 7, 8, 16, 18, 19, 20, 21, 22, 23, 26, 28, 31, 32, 34, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 59, 60, 64, 66, 68, 70, 71, 72, 73, 74, 75, 97, 100, 102, 108, 109, 111, 114, 115, 120, 121, 124, 125, 128, 129, 131, 133, 141, 142, 143, 144], "defin": [37, 38, 46, 51, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 128, 129, 130, 131, 134, 135, 142, 143, 144], "definit": 143, "degre": [46, 142], "demo": 129, "demograph": [92, 129], "demonstr": [99, 122, 135, 142], "depend": [80, 87, 92, 93, 100, 108, 109, 110, 122, 126, 130, 133, 134, 141, 144], "deploi": [97, 134, 141], "deploy": 134, "deprec": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 122, 134, 135, 144], "deprecationwarn": 89, "describ": [47, 90, 91, 102, 106, 107, 115, 118, 122, 136, 142], "descript": [120, 121, 122, 143], "desir": [135, 143], "deslib": [28, 76, 120, 125, 126], "desp": 28, "detail": [36, 37, 38, 122, 133, 138], "detect": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 121, 131, 134, 135, 138, 141, 142, 143, 144], "determin": [102, 131, 133, 143], "dev": [66, 122, 127], "dev79": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 126, 134, 135], "develop": [124, 125, 126, 127, 133, 144], "deviat": [102, 129], "devn": 127, "df": [36, 46, 102, 131, 139, 141, 142, 143], "df_accuraci": 89, "df_cr_metric": 114, "df_data": 133, "df_deconfound": 115, "df_diff_metr": 114, "df_featur": 115, "df_fmri": [92, 93, 100, 108, 109, 110], "df_group": 36, "df_iri": [89, 94, 97, 101, 103, 111, 114, 122], "df_mae": [90, 107], "df_meta": 92, "df_metric": 114, "df_ncr_metric": 114, "df_score": 91, "df_transform": 115, "df_unbalanc": [94, 97], "df_x": 36, "df_y": 36, "diabet": [90, 91, 106, 107, 118, 136], "diagnost": 92, "dict": [2, 6, 7, 8, 17, 28, 29, 34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 59, 70, 71, 72, 73], "dictionari": [36, 37, 38, 48, 52, 102, 115, 129, 131, 134, 139, 144], "did": [102, 109], "didn": 142, "diff_fi": 114, "differ": [6, 19, 20, 21, 22, 23, 31, 91, 92, 94, 97, 102, 107, 108, 109, 111, 114, 115, 124, 125, 128, 129, 130, 131, 133, 134, 135, 138, 139, 141, 142, 143], "difficult": [129, 131, 133], "digit": 130, "dimens": 141, "dimension": [107, 115, 128, 131, 143], "diment": 131, "direct": [130, 131], "directli": [51, 92, 126, 136], "directori": [122, 133], "disabl": 121, "disable_x_check": 121, "disable_x_verbos": 121, "disable_xtypes_check": 121, "disable_xtypes_verbos": 121, "disadvantag": 138, "discoveri": 129, "discret": [19, 20, 130, 143], "discrete_i": 130, "discuss": 115, "diseas": [90, 91, 106, 107, 118], "disk": 133, "dispatch": 133, "displai": [122, 133, 134, 141], "displot": 91, "dist": 127, "distanc": 127, "distinguish": [129, 135, 143], "distribut": [19, 20, 46, 89, 91, 93, 94, 97, 100, 101, 103, 108, 109, 110, 111, 114, 120, 129, 130, 133, 134, 141, 142, 143, 144], "dive": 141, "divid": 130, "do": [92, 100, 102, 107, 108, 109, 114, 115, 118, 120, 122, 126, 127, 129, 130, 131, 133, 135, 138, 139, 140, 141, 142, 143], "doc": [66, 91, 122, 127, 144], "document": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 87, 91, 97, 101, 120, 130, 131, 133, 141, 142, 143], "dodg": [114, 130], "doe": [39, 100, 133, 138, 143], "doesn": 142, "doi": [47, 126, 129], "domingo": 138, "don": [130, 131, 133], "done": [19, 20, 108, 122, 125, 127, 133, 134, 135, 141, 142, 143], "down": 46, "downcast": 134, "download": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118], "draft": [122, 127], "drop": [33, 47, 49, 58, 91, 94, 97, 102, 115, 120, 134, 144], "drop_column": 120, "dropcolumn": 120, "dropna": 134, "ds_split": 28, "dtype": [89, 90, 91, 93, 94, 97, 100, 101, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 131, 134, 136, 141, 142, 143], "dual": 131, "due": [128, 130, 131], "dummyclassifi": 120, "dummyregressor": 120, "duplic": [92, 121], "dure": [92, 93, 100, 125, 128, 129, 131, 134, 144], "dynam": [76, 125, 126], "dynamicselect": [120, 144], "e": [28, 31, 47, 53, 60, 66, 115, 120, 122, 125, 127, 128, 129, 130, 131, 133, 134, 142, 143], "each": [2, 6, 7, 8, 19, 20, 21, 22, 23, 28, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 59, 60, 89, 90, 91, 92, 93, 100, 101, 102, 103, 107, 114, 115, 118, 120, 122, 128, 129, 130, 131, 132, 133, 134, 138, 141, 142, 143], "earlier": 102, "easi": [3, 92, 126, 129, 131, 134, 135, 140, 141], "easier": [114, 122, 143, 144], "easili": [2, 128, 130, 133], "edit": 92, "effect": [129, 133, 134], "effici": 138, "either": [19, 20, 21, 22, 46, 100, 102, 120, 122, 129, 131, 133, 143], "element": [36, 37, 38, 66, 89, 92, 102, 121, 143, 144], "els": 89, "emb": 122, "emili": 128, "empir": [120, 130], "empty_lik": 89, "enabl": [19, 28, 121, 144], "enable_metadata_rout": [19, 28], "enable_parallel_column_transform": 121, "encapsul": [6, 7, 8, 19, 20, 21, 22, 23, 28, 47, 48, 49, 50, 51, 52, 53, 59, 115], "encod": [33, 58], "end": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 125, 133, 144], "engag": [92, 93, 100, 108, 109, 110], "enh": 122, "enhanc": 122, "enough": 141, "ensembl": [28, 133, 135], "ensur": [10, 48, 50, 52, 53, 89, 130, 134], "enter": 133, "entir": [101, 142, 143], "entri": [66, 143], "enumer": [101, 114], "env": 125, "environ": [125, 126, 142], "equal": [36, 37, 38, 91, 120, 130], "equival": 131, "error": [19, 26, 28, 31, 36, 37, 38, 44, 56, 64, 66, 68, 89, 90, 92, 106, 107, 118, 121, 122, 130, 138, 141, 144], "error_scor": 134, "especi": 128, "essenc": 140, "essenti": [126, 134], "estim": [6, 7, 8, 17, 19, 28, 34, 37, 38, 39, 40, 44, 47, 48, 49, 50, 51, 52, 53, 59, 70, 71, 72, 73, 100, 101, 102, 108, 109, 110, 111, 114, 115, 126, 128, 129, 130, 131, 132, 133, 134, 136, 138, 140, 141, 143], "estimator__memori": 134, "estimator__set_column_typ": 134, "estimator__set_column_types__row_select_col_typ": 134, "estimator__set_column_types__row_select_v": 134, "estimator__set_column_types__x_typ": 134, "estimator__step": 134, "estimator__svm": 134, "estimator__svm__break_ti": 134, "estimator__svm__c": 134, "estimator__svm__cache_s": 134, "estimator__svm__class_weight": 134, "estimator__svm__coef0": 134, "estimator__svm__decision_function_shap": 134, "estimator__svm__degre": 134, "estimator__svm__gamma": 134, "estimator__svm__kernel": 134, "estimator__svm__max_it": 134, "estimator__svm__prob": 134, "estimator__svm__random_st": 134, "estimator__svm__shrink": 134, "estimator__svm__tol": 134, "estimator__svm__verbos": 134, "estimator__transform_input": 134, "estimator__verbos": 134, "estimator__zscor": 134, "estimator__zscore__copi": 134, "estimator__zscore__with_mean": 134, "estimator__zscore__with_std": 134, "estimatorlik": [2, 39, 51], "estimatorlikef": [34, 69], "estimatorlikefit1": [34, 69, 73], "estimatorlikefit2": [34, 69], "et": [47, 120, 128, 129, 143], "etc": 131, "evalu": [2, 8, 37, 38, 41, 59, 83, 94, 100, 126, 130, 133, 134, 137, 138, 139, 140, 141, 143], "even": [91, 115, 131, 133, 142, 143], "event": [92, 93, 100, 108, 109, 110], "ever": 134, "everi": [6, 31, 36, 37, 38, 56, 127, 133, 134, 139, 143], "everyth": [92, 133, 140], "evid": [129, 130, 133], "exact": 138, "exactli": [93, 100, 134, 143], "exampl": [7, 38, 47, 48, 49, 50, 51, 52, 53, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144], "excel": [92, 130], "except": [61, 68, 122, 125], "execut": [95, 98, 104, 112, 116, 119, 121, 122, 133, 137], "exemplarili": 131, "exhaust": 133, "exist": [19, 20, 21, 22, 23, 28, 44, 66], "expand": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 121, 128, 129, 131, 134, 135, 136, 141, 142, 143], "expect": 121, "expens": 133, "experi": 143, "experiment": [87, 131], "experimentalwarn": 131, "explain": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 130, 133, 143], "explained_vari": 142, "explicit": 133, "explicitli": [102, 108, 129, 131, 134], "explor": [109, 115, 134, 135], "export_metadata": 133, "express": [53, 115, 139], "extend": [117, 142], "extendeddataframepipelin": 144, "extra": [29, 51, 70, 71, 73, 80, 87, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 120, 121, 122, 135, 136, 143], "extract": [89, 92, 93, 100, 134], "extratreesclassifi": 120, "extratreesregressor": 120, "extrem": 130, "f": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 107, 108, 109, 110, 111, 114, 118, 128, 129, 131, 135], "f1": 142, "f1_macro": 142, "f1_micro": 142, "f1_sampl": 142, "f1_weight": 142, "fa5ab7a2b930761687a8e82d9971ebca": 89, "face": 144, "facetgrid": 91, "fact": [129, 134], "factor": [129, 133], "factori": 34, "fail": 144, "fairli": 134, "fall": [53, 60, 115, 128, 142], "fals": [17, 18, 19, 20, 26, 28, 31, 37, 44, 49, 53, 56, 59, 64, 66, 90, 91, 93, 94, 97, 100, 101, 102, 106, 107, 108, 109, 110, 111, 115, 118, 128, 129, 131, 134, 135, 136, 142, 143], "familiar": [133, 140], "fan": 122, "fanci": 140, "faq": 126, "far": [136, 139, 142, 143], "fashion": [70, 71, 72, 73, 129], "fdr": [46, 120], "fdr_bh": 46, "fdr_by": 46, "fdr_tsbh": 46, "fdr_tsbky": 46, "feat": 122, "featur": [16, 18, 19, 20, 21, 22, 23, 33, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 58, 60, 70, 71, 73, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 121, 122, 125, 126, 128, 131, 132, 133, 134, 136, 138, 140, 141, 142], "feature_": [128, 129, 135], "feature_0": 129, "feature_1": [128, 129, 135], "feature_10": [128, 129, 135], "feature_11": [128, 129, 135], "feature_12": [128, 129, 135], "feature_13": [128, 129, 135], "feature_14": [128, 129, 135], "feature_15": [128, 129, 135], "feature_16": [128, 129, 135], "feature_17": [128, 129, 135], "feature_18": [128, 129, 135], "feature_19": [128, 129, 135], "feature_2": [128, 129, 135], "feature_20": [128, 135], "feature_3": [128, 129, 135], "feature_4": [128, 129, 135], "feature_5": [128, 129, 135], "feature_6": [128, 129, 135], "feature_7": [128, 129, 135], "feature_8": [128, 129, 135], "feature_9": [128, 129, 135], "feature_import": 114, "feature_importances_": [101, 114], "feature_nam": [115, 141], "feature_names_in_": 51, "februari": 129, "fed": 143, "fede": 144, "federico": [89, 90, 91, 92, 93, 94, 97, 100, 101, 103, 107, 108, 109, 110, 111, 114, 118, 126], "few": [130, 134, 138, 144], "fifth": 143, "fig": [89, 90, 91, 100, 101, 102, 107, 130], "figsiz": [89, 90, 91, 100, 101, 102, 107, 130], "figur": [100, 122], "file": [66, 92, 95, 98, 104, 112, 116, 119, 122, 133, 137], "filenam": [66, 122], "filesystem": 133, "filter": [6, 7, 8, 48, 49, 50, 51, 52, 53, 59, 120, 126, 143, 144], "filter_column": [6, 7, 8, 48, 49, 50, 51, 52, 53, 59, 111, 120, 133, 135], "filtercolumn": [120, 144], "final": [37, 38, 89, 90, 91, 92, 93, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 122, 128, 130, 131, 133, 134, 135, 142, 143, 144], "final_estim": [37, 38, 133], "final_model": [128, 134], "find": [109, 110, 121, 131, 133, 140], "fine": 133, "fingerprint": 128, "finish": 133, "finn": [47, 128], "first": [19, 20, 21, 22, 46, 68, 74, 89, 93, 94, 97, 100, 102, 106, 107, 108, 109, 114, 115, 122, 128, 129, 131, 133, 135, 136, 139, 140, 141, 142, 143], "first_two": 102, "fit": [7, 8, 17, 28, 33, 37, 38, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 70, 71, 72, 73, 100, 101, 107, 115, 120, 128, 129, 132, 133, 134, 138, 143, 144], "fit_param": [7, 8, 47, 48, 49, 50, 51, 52, 53, 59], "fit_tim": [37, 38, 89, 90, 103, 106, 107, 115, 118, 129, 136, 142, 143], "fit_transform": [7, 33, 47, 48, 49, 50, 51, 52, 53, 58, 60], "five": 142, "fix": [19, 20, 122, 130, 144], "fixtur": 144, "flag": [1, 121, 122], "flexibl": [126, 135], "flexibli": 135, "flipper_length_mm": 134, "flipper_length_mm__": 134, "float": [8, 28, 36, 37, 38, 42, 43, 47, 53, 59, 60, 75, 89, 110, 115, 131], "float64": [90, 91, 94, 97, 102, 106, 107, 111, 115, 118, 128, 129, 135, 136], "floatdistribut": 131, "flower": 131, "fluid": 128, "fmri": [92, 93, 100, 108, 109, 110], "fmt": [89, 90], "fname": 66, "focu": [134, 139], "fold": [2, 16, 19, 20, 21, 22, 23, 37, 66, 88, 89, 90, 95, 99, 100, 101, 104, 106, 107, 114, 115, 118, 129, 130, 131, 133, 134, 136, 137, 138, 142, 143, 144], "fold_inspector": 134, "fold_model": 134, "fold_predict": 134, "foldsinspector": [16, 134], "follow": [37, 38, 46, 47, 51, 66, 68, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 108, 109, 110, 114, 115, 118, 120, 122, 123, 125, 126, 127, 128, 131, 133, 134, 135, 139, 140, 141, 142, 143], "font_scal": [89, 90], "fontsiz": [90, 107], "forc": 131, "forest": [37, 66, 93, 97, 99, 102, 104, 114, 120, 135, 137, 141, 143], "forg": [124, 125], "fork": 122, "form": [6, 7, 8, 28, 47, 48, 49, 50, 51, 52, 53, 59, 139, 143], "format": [7, 47, 48, 49, 50, 51, 52, 53, 66, 90, 92, 107, 108, 109, 110, 114, 122, 127, 129, 131, 144], "fortun": [92, 130, 131], "found": [47, 108, 109, 110, 142], "fourth": 142, "fowlkes_mallows_scor": 142, "fpr": 120, "fractal": 141, "frame": 92, "framework": 131, "frank": [92, 93, 100, 108, 109, 110], "free": 126, "freedom": 46, "frequentist": 114, "friendli": [121, 143], "from": [2, 3, 4, 6, 17, 28, 33, 36, 37, 38, 47, 48, 53, 56, 58, 60, 64, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 122, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144], "from_list": 2, "frontal": [92, 93, 100, 108, 109, 110], "frontal__": 100, "frontal_cu": 92, "frontal_stim": 92, "full": [46, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 122, 133, 134], "fun": 130, "func": 15, "function": [2, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 59, 62, 63, 64, 65, 66, 68, 74, 75, 88, 94, 97, 100, 101, 102, 113, 115, 117, 119, 121, 122, 124, 125, 126, 128, 129, 131, 133, 137, 138, 139, 140, 141, 142, 143, 144], "fundament": 140, "further": [129, 131, 133, 138], "furthermor": [115, 131], "futur": [87, 89, 130, 131, 134], "futurewarn": 134, "fwe": 120, "fz": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128], "g": [28, 31, 66, 107, 120, 125, 130, 131, 142], "gain": 134, "galleri": [88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 122, 137], "gamma": [108, 109, 110, 131, 133, 142], "gap": 114, "gauss": 120, "gaussian": 130, "gaussianis": 120, "gaussiannb": 120, "gaussianprocessclassifi": 120, "gaussianprocessregressor": 120, "gb": 133, "gener": [19, 20, 21, 22, 23, 37, 38, 51, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 122, 127, 130, 133, 136, 138, 142, 143, 144], "genericunivariateselect": 120, "gentoo": 134, "geomspac": [134, 135], "georgio": 107, "get": [2, 4, 6, 7, 8, 11, 13, 17, 19, 20, 21, 22, 23, 24, 28, 29, 33, 40, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 62, 70, 71, 72, 73, 89, 90, 93, 100, 101, 102, 107, 115, 126, 128, 134, 135, 141, 142], "get_apply_to": [6, 7, 8, 48, 49, 50, 51, 52, 53, 59, 73], "get_feature_names_out": [47, 48, 50, 51, 52, 53], "get_fitted_param": [17, 134], "get_metadata_rout": [6, 7, 8, 19, 20, 21, 22, 23, 28, 47, 48, 49, 50, 51, 52, 53, 59, 115], "get_n_split": [19, 20, 21, 22, 23], "get_needed_typ": [6, 7, 8, 48, 49, 50, 51, 52, 53, 59, 73], "get_param": [6, 7, 8, 17, 28, 47, 48, 49, 50, 51, 52, 53, 59, 70, 71, 72, 73, 134], "get_step": 17, "get_step_nam": 17, "get_support": [49, 53], "get_xlim": [90, 100, 107], "get_ylim": [90, 100, 107], "getattr": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 134, 135], "getting_start": [97, 141], "gigasci": 129, "git": [122, 127, 144], "github": [126, 142, 144], "give": [91, 120, 129, 131, 140, 141, 142], "given": [19, 28, 53, 100, 114, 115, 120, 121, 129, 133, 139, 142, 143], "glanc": [140, 142], "global": [1, 13, 14, 19, 20, 121], "glossari": [20, 21], "go": [37, 38, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 126, 133, 134, 140, 143], "goal": 138, "goe": [133, 140], "good": [91, 94, 109, 125, 130, 140, 141], "got": 142, "gradient": 120, "gradientboost": 120, "gradientboostingclassifi": 120, "gradientboostingregressor": 120, "grandvalet": 130, "granular": 91, "great": 133, "greater": [40, 44, 46, 134], "grid": [2, 37, 38, 66, 100, 105, 109, 112, 132, 133, 134, 135, 137, 144], "gridsearchcv": [37, 38, 131], "group": [15, 16, 19, 20, 21, 22, 23, 35, 36, 37, 38, 66, 88, 91, 95, 100, 107, 126, 128, 132, 137, 142], "groupbi": [93, 100], "groupkfold": 93, "groupshufflesplit": 100, "guess": 128, "guid": [6, 7, 8, 19, 20, 21, 22, 23, 28, 47, 48, 49, 50, 51, 52, 53, 59, 115, 122], "guidelin": 126, "guyon": 143, "ha": [2, 37, 38, 47, 61, 89, 90, 91, 92, 93, 94, 97, 100, 101, 103, 107, 111, 114, 118, 121, 122, 128, 129, 130, 131, 133, 134, 138, 142, 143, 144], "had": [47, 109, 142, 144], "hamdan": [106, 115, 126, 129, 144], "hand": [102, 122, 128, 129, 135, 139], "handi": [134, 139, 143], "handl": 39, "happen": [109, 133, 134, 135], "har": 134, "has_model": 2, "have": [2, 6, 7, 8, 19, 20, 28, 36, 47, 48, 49, 50, 51, 52, 53, 59, 89, 92, 93, 94, 97, 100, 102, 108, 109, 110, 114, 115, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143], "he": 129, "head": [89, 90, 91, 92, 93, 100, 106, 107, 108, 109, 110, 114, 115, 118, 136, 139, 141, 143], "head2": 133, "header": 144, "heat": 90, "heatmap": [89, 90, 107], "heavili": 126, "height": 75, "help": [122, 125, 126, 129, 134, 141, 143], "helper": 2, "henc": [19, 20], "here": [48, 49, 50, 52, 91, 92, 93, 100, 102, 115, 121, 122, 126, 135, 141, 142, 143], "heurist": 143, "high": [102, 110, 121, 128, 131], "higher": [91, 114, 130], "histogram": 91, "histplot": 130, "histrogram": 91, "hochberg": 46, "hold": [4, 26, 142], "holdout": 130, "holm": 46, "holmberg": 129, "holoviz": [97, 141], "home": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 128, 131, 134, 135, 141], "hommel": 46, "homogeneity_scor": 142, "hook": [122, 144], "horizontalalign": [90, 107], "hostedtoolcach": [91, 94, 130, 131], "hour": 133, "hover": [97, 141], "how": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 93, 94, 97, 99, 100, 101, 105, 107, 115, 120, 122, 125, 126, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144], "howev": [92, 97, 100, 101, 102, 115, 121, 124, 125, 129, 130, 131, 135, 136, 138, 141, 142, 143, 144], "howto": 66, "htc": 133, "htcondor": [132, 144], "html": [37, 66, 91, 97, 122, 126, 138, 141, 142], "http": [37, 47, 66, 91, 97, 122, 126, 130, 138, 141, 144], "hue": [100, 114], "huge": 133, "human": 129, "hundr": [133, 139], "hyperparamet": [2, 3, 17, 26, 37, 38, 66, 97, 102, 105, 107, 111, 112, 114, 115, 126, 128, 129, 132, 133, 134, 135, 137, 140, 141, 144], "hyperparamt": 110, "hyperparemt": 144, "hyperparmet": 144, "hypothesi": [46, 114], "i": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 87, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 120, 121, 122, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144], "i_fold": [101, 114], "id": 122, "idea": [91, 133, 138], "ideal": 92, "ident": [19, 20, 21, 22, 23, 110, 130, 131], "identifi": [92, 94, 128, 129, 134, 141], "ignor": [19, 20, 21, 22, 23, 28, 115, 118, 131], "ijcai": 130, "imbal": 94, "impact": [133, 134], "implement": [19, 20, 47, 121, 126, 128, 129, 130, 135, 144], "import": [0, 33, 58, 89, 90, 91, 92, 93, 94, 97, 100, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 122, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143], "importantli": [129, 130, 133, 134, 138, 139, 143], "importlib": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 134, 135], "imposs": 130, "improv": [122, 125, 133], "inc": 122, "incl": [89, 90, 91, 93, 100, 101, 102, 103, 106, 107, 108, 109, 110, 115, 118, 128, 131, 134, 135, 142], "includ": [2, 3, 17, 18, 101, 102, 115, 121, 122, 125, 131, 138, 144], "inclus": [18, 115], "inconsist": [35, 36], "increas": 128, "increment": [127, 143], "inde": [131, 133, 142], "independ": [46, 53, 60, 100, 114, 115, 120, 130, 133], "index": [89, 90, 91, 92, 93, 100, 102, 106, 107, 108, 109, 110, 114, 118, 122, 126, 134], "indic": [19, 20, 21, 22, 23, 37, 49, 53, 100, 120, 122, 130, 134, 142, 143, 144], "individu": [47, 128, 134, 142], "ineffect": 129, "infer": [93, 100], "infer_object": 134, "infinit": 130, "influenc": 134, "info": [66, 67, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 122, 128, 129, 131, 133, 134, 135, 136, 141, 142, 143], "inform": [1, 6, 7, 8, 19, 20, 21, 22, 23, 28, 33, 37, 38, 47, 48, 49, 50, 51, 52, 53, 58, 59, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 121, 122, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144], "initi": [2, 3, 26, 27, 46, 56, 57, 64, 65, 114, 129, 135, 143], "inm": [126, 133], "inm7": 133, "inner": [108, 109, 110, 131, 133, 134, 135, 144], "inner_max_num_thread": 133, "inplac": 90, "input": [7, 33, 35, 36, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 82, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128, 129, 131, 134, 135, 136, 140, 141, 142, 143], "input_featur": [47, 48, 50, 51, 52, 53], "insert": 129, "insid": [31, 143], "insight": 134, "inspect": [2, 37, 66, 76, 102, 104, 107, 115, 123, 126, 132, 137, 138, 139, 141, 142, 144], "inspector": [17, 37, 38, 103, 134, 144], "instal": [80, 87, 122, 124, 126, 127, 141, 144], "instanc": [6, 7, 8, 16, 19, 20, 21, 22, 23, 28, 47, 48, 49, 50, 51, 52, 53, 59, 129, 134, 143], "instead": [4, 19, 20, 26, 28, 31, 44, 47, 56, 64, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 121, 129, 130, 131, 134, 135, 144], "institut": 126, "instruct": [133, 144], "int": [2, 7, 16, 19, 20, 21, 22, 23, 28, 34, 35, 36, 37, 38, 46, 47, 48, 49, 50, 51, 52, 53, 66, 75, 115, 142], "int32": 134, "int64": [89, 93, 94, 97, 100, 101, 103, 108, 109, 110, 111, 114, 131, 134, 141, 142, 143], "intdistribut": 131, "integ": [19, 20, 21, 22, 23, 131, 142], "integr": 144, "intellig": [128, 133], "intend": [122, 133], "intens": 130, "interact": [97, 100, 126, 134, 141], "interest": [90, 91, 94, 106, 107, 114, 118, 140, 142, 143], "interfac": [122, 131, 133, 135], "intern": [101, 133, 134, 135, 142, 143, 144], "interpret": [36, 37, 38, 66, 114, 134], "interv": [75, 114], "intro": 122, "introduc": [7, 47, 48, 49, 50, 51, 52, 53, 129], "intuit": [130, 134, 141], "invers": [33, 59, 144], "inverse_transform": 33, "involv": 129, "ipynb": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118], "iqr": 120, "iri": [89, 94, 97, 101, 103, 111, 114, 122, 131, 139, 142, 143], "isin": [94, 97, 101, 103, 111, 114, 122, 131], "island": 134, "issu": [126, 127, 130, 133, 134, 144], "iter": [19, 20, 21, 22, 23, 37, 102, 110, 114, 128, 131, 134, 142, 144], "its": [2, 6, 27, 57, 65, 122, 131, 133, 134, 135, 138, 140, 143], "itself": [4, 135], "j": [89, 129], "jaccard": 142, "jaccard_macro": 142, "jaccard_micro": 142, "jaccard_sampl": 142, "jaccard_weight": 142, "jama": 129, "jan": [128, 129], "januari": 129, "jmlr": 130, "job": [37, 47, 133], "joblib": [37, 38, 47, 126, 132, 144], "joblib_htcondor": 133, "join": 100, "jointli": 129, "juaml": 122, "juelich": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128], "juestim": 73, "juestimatorlik": 34, "jul": 143, "julearn": [1, 78, 80, 87, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 120, 122, 123, 124, 125, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143], "jump": 143, "jupyt": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 124, 142], "jupyter_bokeh": 124, "jurs": 144, "just": [2, 122, 126, 130, 134, 140, 143], "jutargetpipelin": [3, 59, 106, 129, 136], "jutargettransform": [33, 62, 64], "jutransform": [48, 49, 50, 51, 52, 53], "k": [19, 20, 21, 22, 37, 66, 88, 89, 90, 93, 95, 100, 106, 107, 114, 120, 130, 131, 137, 138, 142], "kaustubh": [107, 126, 144], "kdeplot": 130, "keep": [50, 92, 94, 97, 101, 103, 107, 111, 114, 115, 122, 125, 126, 131, 133, 135, 143], "keep_confound": [53, 115], "keepdim": 89, "kei": [2, 13, 14, 36, 37, 38, 48, 52, 92, 102, 133, 139], "kept": [48, 50, 51, 52, 53, 115], "kernel": [97, 108, 109, 110, 129, 131, 133, 134, 135, 142, 143], "keyword": [29, 51, 70, 71, 73, 102, 128], "kfold": [37, 90, 91, 93, 94, 97, 100, 101, 102, 106, 107, 108, 109, 110, 111, 115, 118, 128, 129, 130, 131, 134, 135, 136, 142, 143], "kimia": 93, "kind": [37, 38, 89, 90, 93, 94, 97, 100, 101, 103, 108, 109, 110, 111, 114, 131, 139, 142], "klass": [68, 131], "knop": 28, "knora": 28, "knorau": 28, "know": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 107, 109, 126, 130, 133, 134, 138, 141, 143], "knowledg": [129, 134], "known": [139, 143], "kohavi": 130, "komey": 126, "kwarg": [8, 28, 29, 51, 58, 61, 70, 71, 72, 73], "l": [91, 92, 93, 100, 102, 106, 108, 109, 110, 114, 128], "l1": 131, "l2": [120, 131], "label": [16, 19, 20, 21, 22, 23, 36, 37, 38, 89, 94, 138, 139, 142, 143], "laid": 129, "languag": 144, "larg": 133, "larger": [37, 38], "last": [2, 102, 107, 115, 127, 129, 143], "lastli": [115, 129], "later": [100, 103, 122, 133, 141], "latest": [125, 127, 133, 144], "latter": [6, 7, 8, 28, 47, 48, 49, 50, 51, 52, 53, 59], "layer": 130, "lazi": 144, "lead": [2, 125, 129, 130, 138, 143], "leak": [129, 138, 144], "leakag": [33, 58, 126, 129, 143], "learn": [19, 20, 21, 22, 23, 24, 26, 37, 38, 47, 48, 50, 51, 52, 53, 54, 58, 92, 94, 100, 101, 118, 120, 121, 122, 125, 126, 128, 129, 130, 131, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144], "learnt": 143, "least": [2, 19, 20, 21, 22, 37, 38, 91, 114, 120, 130], "leav": [19, 20, 107, 130, 133], "left": 133, "len": [114, 115, 129], "length": [94, 97, 103, 111, 114], "leonard": [91, 102, 114, 126, 128], "less": [46, 91, 102, 126, 130, 133, 138], "lest": 109, "let": [89, 90, 91, 92, 93, 100, 102, 106, 107, 108, 109, 114, 115, 118, 129, 130, 131, 133, 134, 135, 136, 139, 143], "letter": 46, "level": [37, 38, 66, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 122, 128, 133, 134, 135], "levelnam": 66, "leverag": [128, 134], "lib": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 130, 131, 134, 135], "liblinear": 131, "librari": [93, 124, 126, 131, 133, 144], "licens": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 122, 128], "light": 130, "like": [7, 8, 19, 20, 21, 22, 23, 31, 47, 48, 49, 50, 51, 52, 53, 56, 59, 70, 71, 72, 73, 97, 107, 122, 125, 130, 131, 133, 134, 138, 139, 142, 143], "limit": [129, 133], "line": [97, 122, 130, 141], "linear": [91, 97, 108, 109, 110, 115, 128, 129, 131, 134, 135, 143], "linearli": 100, "linearregress": [53, 60, 115, 120, 128, 129], "liner": [122, 141], "linestyl": [100, 130], "link": [120, 122, 140, 143, 144], "linreg": [91, 115, 120, 128, 129], "linspac": [100, 130], "linter": 144, "list": [2, 4, 5, 6, 7, 8, 16, 17, 18, 25, 30, 33, 34, 36, 37, 38, 41, 48, 49, 50, 51, 52, 53, 55, 60, 63, 108, 110, 115, 120, 121, 131, 133, 134, 139, 142, 143, 144], "list_scor": 142, "littl": 129, "ll": [92, 107, 133], "load": [89, 90, 91, 106, 107, 108, 109, 110, 114, 115, 118, 122, 131, 136, 139, 142], "load_breast_canc": 141, "load_dataset": [89, 92, 93, 94, 97, 100, 101, 103, 108, 109, 110, 111, 114, 122, 131, 134, 139, 142, 143], "load_diabet": [90, 91, 106, 107, 115, 118, 136], "load_if_exist": 131, "loc": 91, "local": 126, "locat": 133, "log": [47, 66, 68, 74, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 122, 131, 133, 134, 135, 144], "logger": [110, 134, 135], "logic": 144, "logist": [111, 120, 141, 143], "logisticregress": [120, 131, 133], "logisticregressioncv": 120, "logit": [120, 131, 141], "logitcv": 120, "loki": 133, "long": [92, 114, 133], "loocv": 130, "look": [97, 100, 102, 107, 115, 120, 128, 130, 131, 133, 134, 135, 138, 139, 140, 142, 143], "loop": 131, "loss": [120, 129], "lot": [131, 133, 134], "low": [91, 102, 110, 120, 128, 131, 133], "lower": [91, 130], "luka": 129, "lya": 106, "m": [92, 93, 100, 108, 109, 110, 122, 127, 133, 143], "machin": [89, 92, 93, 94, 100, 103, 108, 109, 110, 122, 126, 128, 129, 131, 134, 138, 139, 140, 141, 143], "made": [23, 134, 140, 141], "mae": [90, 107], "magic": 140, "mai": [19, 20, 21, 22, 23, 87, 128, 129, 134, 135], "main": [6, 76, 114, 122, 126, 127, 129, 130, 133, 138], "mainli": 133, "maintain": 126, "mainten": 144, "major": [127, 131], "make": [8, 12, 19, 20, 21, 22, 23, 28, 90, 92, 93, 100, 102, 107, 108, 109, 110, 114, 122, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 141, 142, 143, 144], "make_regress": [102, 128, 129, 135], "make_scor": 118, "malign": 141, "manag": [124, 133, 144], "mandal": 144, "mani": [2, 47, 93, 100, 129, 130, 131, 133, 142, 143], "manipul": 139, "manner": [136, 138, 139, 141, 143], "manual": [92, 124, 141, 143], "map": [6, 7, 8, 28, 47, 48, 49, 50, 51, 52, 53, 59, 90, 115], "mar": [128, 129], "margin": 143, "mark": 144, "markupsaf": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 134, 135], "mask": [47, 49, 53], "mass": [90, 91, 106, 107, 118], "massiv": 132, "match": [4, 51, 92], "mathia": 129, "matplotlib": [89, 90, 91, 100, 101, 102, 107, 114, 126, 130], "matrix": 89, "matter": [130, 138, 141], "matthews_corrcoef": 142, "max": [90, 91, 102, 106, 107, 115, 118, 120, 136], "max_depth": [131, 135], "max_it": 142, "max_recursion_level": 133, "maxabsscal": 120, "maxent": 120, "maxim": 131, "maximum": 133, "mayb": [114, 141], "mb": [95, 98, 104, 112, 116, 119, 133, 137], "mcb": 28, "mean": [37, 38, 46, 47, 53, 60, 87, 90, 91, 93, 94, 100, 102, 106, 107, 108, 109, 110, 114, 115, 118, 120, 129, 130, 131, 133, 134, 136, 138, 141, 142, 143], "mean_absolute_error": [90, 107], "meaning": 139, "meant": 121, "measur": [90, 91, 106, 107, 115, 118, 129, 130, 131, 134], "mechan": [6, 7, 8, 19, 20, 21, 22, 23, 28, 47, 48, 49, 50, 51, 52, 53, 59, 115, 133, 138], "medatada": 133, "median": 120, "medicin": 126, "meet": 122, "mem": [95, 98, 104, 112, 116, 119, 137], "member": [91, 130], "memori": [133, 142], "mention": 130, "merg": 127, "meshgrid": 100, "messag": [66, 68, 74, 122, 128, 144], "meta": [19, 28, 133], "metad": 28, "metadata": [6, 7, 8, 19, 20, 21, 22, 23, 28, 47, 48, 49, 50, 51, 52, 53, 59, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 133, 134, 135], "metadata_rout": [19, 28], "metadatarequest": [6, 7, 8, 19, 20, 21, 22, 23, 28, 47, 48, 49, 50, 51, 52, 53, 59, 115], "method": [2, 6, 7, 8, 19, 20, 21, 22, 28, 46, 47, 48, 49, 50, 51, 52, 53, 59, 91, 92, 102, 108, 115, 121, 125, 128, 130, 131, 134, 143], "metric": [37, 38, 76, 89, 90, 92, 94, 97, 107, 114, 118, 126, 138, 140, 141], "micro": 127, "might": [35, 36, 87, 92, 94, 97, 101, 108, 109, 110, 121, 124, 125, 129, 130, 131, 133, 134, 136, 140, 142, 143, 144], "mileston": 127, "min": [90, 91, 102, 106, 107, 115, 118, 136], "min_samples_leaf": 135, "min_samples_split": 135, "mind": 135, "minim": 120, "minimum": 144, "minmaxscal": 120, "minor": [126, 127], "minut": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128, 129, 130, 131, 134, 135, 136, 139, 141, 142, 143], "misc": 122, "miscellan": 122, "miss": [121, 144], "mistak": 138, "mitig": 129, "ml": [114, 126], "model": [2, 7, 8, 16, 17, 18, 23, 37, 38, 41, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 66, 75, 76, 83, 89, 90, 91, 93, 94, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 115, 116, 118, 121, 123, 126, 129, 130, 132, 133, 136, 137, 138, 140, 144], "model1": 131, "model2": 131, "model3": 131, "model_1": [135, 141], "model_2": [97, 135, 141], "model__c": 131, "model__gamma": 131, "model__max_depth": 131, "model__penalti": 131, "model_confound": [53, 60, 115, 129], "model_evalu": 37, "model_iri": [89, 101], "model_nam": 31, "model_param": [2, 37, 38, 97, 144], "model_pet": [111, 133], "model_select": [89, 90, 91, 93, 97, 100, 103, 106, 107, 114, 130, 134, 141, 142, 144], "model_sep": [111, 133], "model_tun": 131, "modellik": [8, 28, 29, 31, 53, 59, 60, 115], "modern": 133, "modifi": [131, 143], "modul": [0, 1, 37, 80, 87, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 121, 125, 126, 134, 135, 136, 138, 144], "moment": [42, 43, 118], "monica": 128, "monitor": 133, "month": 133, "more": [1, 2, 4, 37, 38, 46, 89, 90, 91, 92, 93, 94, 97, 100, 102, 107, 114, 118, 121, 122, 125, 126, 129, 130, 132, 133, 134, 135, 138, 140, 141, 142, 143, 144], "most": [115, 125, 128, 129, 130, 133, 134, 138, 143], "mostli": [2, 3, 130, 133], "msg": [68, 74], "much": [109, 130, 131, 134, 138], "multi": [89, 92, 141, 142, 143], "multiclass": [23, 37, 66, 88, 95, 120, 137], "multiindex": 92, "multinomi": 120, "multinomialnb": 120, "multipl": [2, 19, 20, 21, 22, 23, 37, 66, 102, 105, 112, 130, 131, 133, 137, 142, 143, 144], "multiple_class": [37, 38], "multipli": 129, "multiprocess": 144, "multivari": 120, "must": [19, 20, 21, 22, 46, 51, 75, 92, 93, 100, 107, 122, 130, 131, 133, 139, 143], "mutual_info_scor": 142, "my_target": 129, "n": [21, 22, 89, 90, 91, 102, 106, 107, 118, 120, 127, 130, 136, 143], "n_bin": [19, 20, 21, 22, 91, 130], "n_bootstrap": 114, "n_class": [8, 59], "n_compon": [102, 107, 131, 143], "n_element": 114, "n_estim": [102, 135], "n_featur": [7, 19, 20, 21, 22, 23, 47, 48, 49, 50, 51, 52, 53, 102, 128, 129, 135], "n_features_in_": 51, "n_features_new": [7, 47, 48, 49, 50, 51, 52, 53], "n_inform": 102, "n_iter": [110, 131], "n_job": [37, 47, 121, 133, 134, 144], "n_output": [7, 47, 48, 49, 50, 51, 52, 53], "n_repeat": [21, 22, 89, 97, 103, 134, 141, 142], "n_sampl": [7, 8, 19, 20, 21, 22, 23, 47, 48, 49, 50, 51, 52, 53, 59, 102, 128, 135], "n_split": [19, 20, 21, 22, 23, 28, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128, 129, 130, 131, 134, 135, 136, 141, 142, 143, 144], "n_test": [89, 90, 115, 118, 129], "n_train": [89, 90, 115, 118, 129], "name": [2, 3, 6, 7, 8, 9, 17, 18, 19, 24, 25, 26, 28, 29, 30, 31, 34, 37, 38, 40, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 66, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 120, 121, 122, 129, 131, 134, 135, 136, 138, 139, 141, 142, 143], "nan": [103, 134], "nat": [47, 128], "natur": 138, "navig": 134, "nazarzadeh": 93, "nb_bernoulli": 120, "nb_categor": 120, "nb_complement": 120, "nb_gaussian": 120, "nb_multinomi": 120, "nbsp": 142, "nbviewer": 142, "ncol": 89, "ncr_fi": 114, "ndarrai": [7, 8, 19, 20, 21, 22, 23, 28, 47, 48, 49, 50, 51, 52, 53, 59], "ndim": 89, "neat": 143, "necessari": [93, 124, 129, 135], "need": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 93, 94, 97, 100, 106, 114, 115, 118, 122, 124, 125, 126, 128, 129, 130, 131, 133, 134, 136, 138, 141, 142, 143, 144], "needed_typ": [6, 7, 8, 33, 34, 51, 60], "neg": [46, 47, 128], "neg_brier_scor": 142, "neg_log_loss": 142, "neg_max_error": 142, "neg_mean_absolute_error": [90, 91, 102, 106, 118, 142], "neg_mean_absolute_percentage_error": 142, "neg_mean_gamma_devi": 142, "neg_mean_poisson_devi": 142, "neg_mean_squared_error": 142, "neg_mean_squared_log_error": 142, "neg_median_absolute_error": 142, "neg_negative_likelihood_ratio": 142, "neg_root_mean_squared_error": 142, "neg_root_mean_squared_log_error": 142, "neg_significant_mask_": 47, "neglig": 133, "neither": 141, "nest": [6, 7, 8, 28, 47, 48, 49, 50, 51, 52, 53, 59, 128, 131, 134, 138], "network": [129, 143], "neural": [129, 143], "neuroimag": [128, 129], "neuromark": 128, "neurosci": [126, 128], "never": [122, 143], "nevertheless": [125, 133, 143], "new": [9, 100, 115, 122, 126, 133, 138, 143], "new_df": 91, "new_object": 131, "new_object_param": 131, "new_typ": 9, "newer": 125, "newest": 125, "newsfrag": 122, "next": [114, 125, 127, 136, 139, 143], "nice": [126, 139, 142, 143], "no_silent_downcast": 134, "nois": [102, 129], "noise_conf_on": 129, "noise_conf_two": 129, "non": [46, 47, 133], "non_invers": 39, "none": [2, 3, 6, 7, 8, 15, 16, 18, 19, 20, 21, 22, 23, 26, 28, 31, 33, 34, 35, 36, 37, 38, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 60, 64, 66, 68, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 121, 128, 129, 131, 134, 135, 136, 141, 142, 143], "nor": 141, "norm": 120, "normal": [102, 115, 120, 122, 129, 130, 143, 144], "normal_dist_conf_on": 129, "normal_dist_conf_two": 129, "normalized_mutual_info_scor": 142, "nos": 144, "note": [19, 20, 21, 22, 23, 28, 37, 38, 61, 102, 114, 122, 129, 131, 133, 135], "notebook": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 124, 142], "noteworthi": 128, "noth": [100, 131, 142], "notic": [133, 134, 143], "notifi": [61, 66], "nov": 128, "now": [89, 90, 91, 92, 94, 97, 100, 101, 103, 106, 107, 108, 109, 110, 114, 115, 118, 122, 129, 130, 131, 133, 134, 135, 139, 141, 142, 143], "np": [8, 19, 20, 21, 22, 28, 47, 59, 89, 90, 93, 100, 107, 108, 109, 110, 128, 129, 130, 134, 135], "nprot": 47, "nrow": 89, "number": [16, 19, 20, 21, 22, 23, 37, 38, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 141, 142, 143], "numpi": [49, 53, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 125, 128, 129, 130, 134, 135], "nutshel": 128, "o": 133, "obj": 26, "object": [2, 3, 6, 7, 8, 19, 20, 21, 22, 23, 28, 29, 35, 37, 38, 40, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 59, 61, 62, 89, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 124, 129, 131, 134, 135, 136, 142, 143, 144], "observ": 129, "obtain": [2, 3, 8, 59, 101, 129, 133, 138], "obviou": 138, "oct": 129, "octob": 126, "offer": [126, 139], "offici": [122, 125], "often": [125, 129, 138, 143], "ola": 28, "old": 134, "older": [133, 144], "olivero": 106, "onc": [127, 133, 134, 138, 140, 143], "one": [2, 33, 37, 38, 46, 48, 49, 50, 52, 58, 90, 91, 92, 93, 100, 102, 106, 107, 108, 109, 110, 111, 115, 118, 120, 122, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144], "ones": [47, 131], "onli": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 91, 100, 102, 108, 114, 115, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144], "opaqu": 143, "open": [122, 133], "oper": [37, 38, 89, 115, 133], "opt": [91, 94, 130, 131, 134], "optim": [109, 125, 131, 133, 134, 143], "optimis": 144, "optimist": 131, "option": [2, 3, 7, 8, 16, 17, 18, 19, 26, 28, 31, 34, 37, 38, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 60, 64, 66, 68, 70, 71, 72, 73, 74, 75, 80, 87, 92, 115, 124, 126, 127, 131, 133, 139, 142, 144], "optuna": [37, 38, 125, 131, 144], "optuna_integr": 125, "optunasearchcv": [37, 38, 125, 131, 144], "order": [8, 19, 20, 28, 59, 92, 93, 100, 114, 115, 121, 122, 129, 131, 135, 138, 143, 144], "ordereddict": [110, 131], "ordin": [37, 38], "org": [37, 47, 66, 91, 97, 126, 138, 141, 142], "organis": [92, 129], "orient": 126, "origin": [19, 28, 47, 68, 122, 127, 133], "other": [2, 3, 19, 26, 28, 31, 56, 87, 92, 94, 107, 109, 115, 122, 124, 128, 129, 130, 131, 133, 140, 141, 143], "otherwis": [19, 20, 59, 66], "our": [89, 92, 93, 94, 100, 102, 111, 115, 122, 126, 129, 130, 131, 133, 134, 135, 138, 139, 141, 142, 143], "ourselv": 142, "out": [3, 24, 25, 53, 63, 97, 115, 120, 126, 129, 130, 131, 134, 135, 140, 141, 142], "outcom": [8, 28, 59, 143], "outdir": 127, "outer": [37, 38, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128, 129, 131, 133, 134, 135, 136, 141, 142, 143, 144], "outlier": 91, "output": [7, 18, 19, 20, 21, 22, 23, 37, 38, 46, 47, 48, 49, 50, 51, 52, 53, 66, 75, 91, 114, 122, 134, 138, 139, 140, 143], "output_format": 66, "over": [37, 89, 90, 94, 97, 102, 107, 128, 129, 134, 135, 141], "overal": 136, "overcom": [133, 138], "overestim": 130, "overfit": 142, "overlap": 144, "overview": [126, 134, 141, 143], "overwrit": [26, 31, 44, 56, 64, 66, 144], "ovr": [134, 142], "p": [47, 89, 97, 114, 128, 141], "paa": 106, "packag": [87, 91, 94, 122, 124, 125, 130, 131, 133, 135], "page": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 126, 129, 130, 142], "pair": 114, "pairwis": 141, "panda": [6, 7, 8, 35, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 59, 88, 89, 90, 91, 93, 94, 95, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 125, 126, 128, 129, 134, 135, 136, 137, 139, 141, 142], "panel": [75, 97, 124, 125, 141], "parallel": [37, 47, 121, 122, 126, 132, 144], "parallel_backend": 37, "parallel_config": 133, "param": [2, 3, 6, 7, 8, 28, 47, 48, 49, 50, 51, 52, 53, 54, 59, 62, 70, 71, 72, 73, 125, 128, 129, 131, 134, 136, 143], "param_grid": [131, 134], "paramet": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 62, 64, 66, 68, 70, 71, 72, 73, 74, 75, 82, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144], "parametr": [129, 131, 139, 143], "params_attr": 26, "params_to_tun": 34, "pariet": [92, 93, 100, 108, 109, 110], "parietal__": 100, "parietal_cu": 92, "parietal_stim": 92, "part": [100, 124, 126, 128, 130, 133, 138, 141, 143], "particular": [129, 134, 143], "particularli": [87, 130, 133, 142], "pass": [7, 8, 19, 20, 21, 22, 23, 28, 48, 49, 50, 51, 52, 53, 59, 108, 120, 122, 131, 136, 142, 143], "path": [66, 133], "pathlib": 66, "patient": [90, 91, 106, 107, 118], "patil": [107, 126, 144], "pattern": [4, 12, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128, 129, 131, 134, 135, 136, 141, 142, 143], "pca": [2, 18, 37, 66, 99, 104, 107, 115, 120, 131, 137, 143], "pca0": 102, "pca1": [102, 107], "pca2": 107, "pca_1": 143, "pca__n_compon": 131, "pca__pca0": 115, "pca__pca1": 115, "pca__pca2": 115, "pca__pca3": 115, "pca__pca4": 115, "pca__pca5": 115, "pca__pca6": 115, "pca__pca7": 115, "pca__pca8": 115, "pca_feats1": 107, "pca_feats1__pca0": 107, "pca_feats2": 107, "pca_feats2__pca0": 107, "pd": [4, 6, 7, 8, 16, 18, 28, 33, 37, 38, 46, 48, 49, 50, 51, 52, 53, 58, 59, 60, 70, 73, 75, 89, 90, 91, 92, 100, 101, 102, 106, 107, 114, 118, 128, 129, 134, 135, 136, 141], "pearson": [42, 43, 118, 128], "pearson_scor": 118, "pearsonr": [47, 118, 142], "penalti": 131, "penguin": 134, "penguins_df": 134, "per": [47, 89, 93, 100, 107, 122, 130, 133], "percentag": 23, "percentil": [114, 120], "perform": [19, 20, 33, 37, 38, 46, 89, 90, 91, 93, 94, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 122, 128, 129, 130, 131, 133, 134, 138, 140, 141, 142, 143], "perimet": 141, "petal": [94, 97, 103, 111, 114, 133, 139, 143], "petal_length": [89, 94, 97, 101, 103, 111, 114, 131, 139, 142, 143], "petal_width": [111, 114, 131, 139, 142, 143], "pick": 144, "pictur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "pieplin": 2, "pii": 138, "pip": [122, 124, 125], "pipe": 143, "pipelin": [2, 3, 6, 7, 8, 17, 18, 28, 35, 36, 37, 38, 39, 47, 48, 49, 50, 51, 52, 53, 58, 59, 76, 82, 100, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 126, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 144], "pipeline_cr": [102, 107, 111, 115, 129, 131, 134, 135], "pipelinecr": [3, 37, 38, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 120, 128, 129, 131, 133, 134, 135, 136, 140, 141, 142, 144], "pipelineifit": 142, "pipelineinspector": [16, 103, 144], "pivot": [92, 93, 100, 108, 109, 110], "place": [92, 144], "placehold": [19, 20, 21, 22], "plai": 134, "pleas": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 87, 102, 115, 122, 126, 133, 142, 143], "plot": [75, 89, 90, 91, 97, 100, 101, 102, 107, 114, 126, 130, 141], "plot_": 122, "plot_cm_acc_multiclass": [89, 95, 137], "plot_confound_removal_classif": [114, 116, 137], "plot_example_regress": [90, 95, 137], "plot_groupcv_inspect_svm": [100, 104, 137], "plot_inspect_random_forest": [101, 104, 137], "plot_preprocess": [102, 104, 137], "plot_scor": [97, 124, 141], "plot_simple_model_comparison": [97, 98, 137], "plot_stratified_kfold_reg": [91, 95, 137], "plt": [89, 90, 91, 100, 101, 102, 107, 114, 130], "plugin": 127, "po": [47, 128], "point": [2, 114, 122, 129, 130, 133, 138, 140, 141, 142, 143], "polar": [7, 47, 48, 49, 50, 51, 52, 53], "poli": 109, "poorli": 130, "popul": [91, 114, 130], "pos_label": [36, 37, 38, 94], "pos_mask_": 47, "pos_significant_mask_": 47, "posit": [36, 37, 38, 47, 90, 94, 128], "positive_likelihood_ratio": 142, "posneg": [47, 128], "possibl": [6, 7, 8, 26, 28, 31, 44, 47, 48, 49, 50, 51, 52, 53, 56, 59, 64, 92, 126, 130, 131, 133, 138, 142, 143], "potenti": [121, 129, 134], "power": [126, 134, 135], "powertransform": 120, "pprint": [131, 134, 142], "pr": 127, "practic": [129, 130], "pre": [122, 125, 127, 144], "pre_df": 100, "pre_dispatch": 134, "pre_x": 100, "preced": 122, "precis": [94, 142], "precision_macro": 142, "precision_micro": 142, "precision_sampl": 142, "precision_scor": 94, "precision_weight": 142, "predict": [2, 8, 15, 16, 28, 36, 37, 38, 42, 43, 47, 53, 59, 60, 66, 89, 90, 91, 92, 93, 94, 97, 99, 100, 104, 106, 107, 111, 115, 118, 120, 126, 129, 130, 132, 134, 135, 136, 137, 138, 141, 142, 143, 144], "predict_log_proba": [8, 15], "predict_proba": [8, 15, 28, 59], "predictor": 129, "prefer": 129, "prefix": 122, "prepar": [76, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 108, 109, 110, 114, 118, 126, 128, 129, 134, 135], "prepreprocess": 143, "preprocess": [2, 3, 37, 38, 66, 89, 90, 91, 93, 94, 97, 99, 100, 101, 104, 107, 114, 115, 118, 126, 128, 132, 137, 139, 140, 142], "presenc": 129, "present": [33, 58, 115, 121, 122, 128, 130, 144], "preserv": 23, "press": 133, "pressur": [90, 91, 106, 107, 115, 118], "pretti": 131, "prevent": [129, 131], "previou": [92, 97, 101, 102, 122, 133, 135, 141, 142, 143, 144], "previous": 143, "princip": [120, 143], "principl": 128, "print": [37, 38, 66, 89, 90, 91, 93, 94, 97, 100, 102, 103, 106, 107, 108, 109, 110, 111, 115, 118, 121, 128, 129, 131, 134, 136, 141, 142, 143], "prior": [110, 131], "probabl": [8, 28, 37, 38, 59, 133, 142], "problem": [2, 19, 20, 21, 22, 23, 29, 31, 35, 37, 38, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 121, 128, 129, 130, 131, 133, 134, 135, 136, 138, 141, 142, 143, 144], "problem_typ": [2, 29, 35, 37, 38, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128, 129, 131, 133, 134, 135, 136, 141, 142, 143], "problemat": 128, "procedur": [47, 130, 138, 144], "proceed": [127, 143], "process": [107, 131, 133, 139, 142, 143], "processor": [37, 133], "produc": [23, 131], "product": [42, 43, 118], "progress": [90, 91, 106, 107, 118, 122], "project": 133, "promin": 125, "prone": [92, 138, 141], "proper": [101, 114, 127, 140], "properli": 127, "properti": [2, 4, 8, 16, 33, 59, 60, 130], "propos": 128, "protoc": [47, 128], "protocol": 86, "provid": [0, 2, 4, 6, 16, 17, 19, 20, 23, 28, 37, 38, 59, 80, 92, 115, 121, 126, 129, 130, 131, 134, 135, 138, 139, 141, 142, 143, 144], "public": 126, "publish": 127, "pull": [126, 127], "purpos": [6, 91, 92, 142], "push": [122, 127], "put": [115, 129], "pvalu": 46, "py": [89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 122, 128, 130, 131, 134, 135, 137, 141], "pydata": 91, "pypi": [125, 127], "pyplot": [89, 90, 91, 100, 101, 102, 107, 114, 130], "pytest": [122, 144], "python": [66, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 122, 125, 127, 130, 131, 133, 144], "python3": [91, 94, 130, 131], "quantil": [19, 20, 21, 22, 130], "quantiletransform": 120, "quantit": [90, 91, 106, 107, 118], "quantiz": 130, "queri": 134, "question": [129, 130], "queu": 133, "queue": 133, "quick": 134, "quickli": 138, "quit": [100, 125, 128, 133, 134], "r": [107, 118, 126], "r2": [102, 107, 129, 142], "r2_corr": [118, 142], "r_corr": 142, "radiu": 141, "raimondo": [89, 90, 91, 92, 93, 94, 97, 100, 101, 103, 107, 108, 109, 110, 111, 114, 118, 126, 144], "rais": [2, 16, 19, 24, 26, 28, 31, 35, 36, 44, 56, 62, 64, 66, 68, 139, 144], "rand": [129, 130], "rand_scor": 142, "random": [19, 20, 21, 22, 23, 28, 37, 38, 66, 93, 94, 97, 99, 102, 104, 108, 109, 110, 114, 120, 129, 130, 131, 134, 135, 137, 141, 143], "random_st": [19, 20, 21, 22, 23, 28, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128, 129, 130, 131, 134, 135, 136, 141, 142, 143], "random_state_algorithm": 28, "randomforest": 28, "randomforestclassifi": [101, 120, 131, 133], "randomforestregressor": 120, "randomizedsearchcv": [37, 38, 131], "randomli": 100, "randomst": [19, 20, 21, 22, 23], "rang": [89, 92, 102, 120, 128, 135], "rank": 120, "rao": 129, "rare": [122, 133], "rate": 143, "rather": 129, "ratio": 94, "ravel": 100, "raw": [100, 102, 143], "rbf": [108, 109, 110, 131, 133, 142], "re": [122, 143], "reach": [127, 133], "read": [97, 101, 122, 126, 127, 130, 133, 138, 140, 141, 143], "readabl": 129, "readi": [92, 141, 143], "readm": 144, "real": [110, 129, 131, 134], "realiz": 134, "realli": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 114, 126], "reason": [129, 130, 133], "rebas": 127, "recal": 142, "recall_macro": 142, "recall_micro": 142, "recall_sampl": 142, "recall_weight": 142, "receiv": 131, "recent": 128, "recommend": [125, 133, 139], "record": 122, "recurs": 2, "red": 90, "reduc": [107, 115, 143], "reduct": 102, "refactor": [122, 144], "refer": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 102, 120, 122, 126, 131, 140], "referenc": [26, 31, 56, 64, 144], "refit": 134, "reflect": [127, 144], "regard": [4, 133, 139, 142], "regex": 4, "region": [92, 93, 100, 108, 109, 110], "regist": [26, 27, 31, 32, 37, 38, 44, 45, 56, 57, 64, 65, 118, 144], "register_htcondor": 133, "register_model": 144, "register_scor": 118, "register_search": [37, 38], "regress": [2, 18, 19, 20, 31, 35, 37, 38, 44, 66, 88, 95, 102, 105, 106, 111, 112, 115, 117, 119, 120, 128, 131, 132, 135, 136, 137, 141, 142, 143, 144], "regression_cl": 31, "regular": [53, 108, 109, 115, 120, 131, 139, 144], "regularli": 122, "rel": [129, 133, 135], "relas": 125, "relat": [113, 129, 139], "relationship": 129, "releas": [87, 125, 126, 144], "relev": [19, 28, 134], "reli": 87, "reliabl": 134, "reliant": 126, "remain": [130, 138], "rememb": [130, 134, 142], "remov": [2, 3, 18, 23, 37, 48, 53, 60, 66, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 113, 116, 118, 120, 122, 126, 132, 134, 135, 137, 141, 144], "remove_confound": 115, "render": [122, 142], "repat": 131, "repeat": [2, 21, 22, 89, 90, 107, 115, 118, 129, 130, 131, 134, 138, 142], "repeat0_p0": [103, 134], "repeat1_p0": [103, 134], "repeat2_p0": 103, "repeat3_p0": 103, "repeat7_p0": 134, "repeat8_p0": 134, "repeat9_p0": 134, "repeatedcontinuousstratifiedgroupkfold": 130, "repeatedcontinuousstratifiedkfold": [130, 144], "repeatedkfold": [89, 134], "repeatedstratifiedkfold": [97, 103, 141, 142], "repetit": [21, 22, 89, 90, 107], "replac": [47, 101, 114, 127, 134, 144], "report": 122, "repositori": [122, 144], "repres": [2, 4, 34, 53, 60, 91, 115, 130, 142], "represent": 142, "reproduc": [19, 20, 21, 22, 23, 28, 37, 38, 142], "request": [17, 19, 28, 126, 133], "request_cpu": 133, "request_memori": 133, "requir": [33, 58, 80, 87, 122, 126, 131, 133, 134, 136, 140, 143, 144], "rerun": 142, "rescu": 130, "research": [126, 128, 129, 130], "resembl": 143, "reset": [27, 32, 45, 57, 65, 92], "reset_index": [91, 92, 93, 100, 108, 109, 110, 114], "reshap": [92, 100], "residu": [53, 60, 115, 129], "resourc": [121, 133, 138], "respect": [47, 120, 122, 133, 139, 141, 142, 143], "rest": [122, 133], "result": [19, 20, 21, 22, 23, 33, 37, 38, 58, 92, 100, 114, 115, 121, 129, 130, 133, 134, 138, 139, 141, 142, 144], "retain": [19, 28, 134], "retriev": 17, "return": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 33, 36, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 70, 71, 72, 73, 91, 100, 101, 113, 116, 118, 137, 143, 144], "return_estim": [37, 38, 89, 90, 91, 93, 100, 101, 102, 106, 107, 108, 109, 110, 114, 115, 118, 128, 131, 134, 135, 142], "return_inspector": [37, 38, 103, 134], "return_train_scor": [37, 134, 142], "return_x_i": [90, 91, 106, 107, 115, 118, 136], "revert": 121, "review": [101, 122], "revis": 129, "rf": [93, 97, 101, 102, 111, 114, 120, 131, 133, 135, 141], "rf__max_depth": 135, "rf__min_samples_leaf": 135, "rf__min_samples_split": 135, "rid": 128, "ridg": [90, 106, 107, 118, 120], "ridgeclassifi": 120, "ridgeclassifiercv": 120, "ridgecv": 120, "right": [90, 107, 108, 109, 110, 130, 131], "robust": [120, 124], "robustscal": [120, 131], "roc": 114, "roc_auc": [97, 114, 141, 142], "roc_auc_ovo": 142, "roc_auc_ovo_weight": 142, "roc_auc_ovr": 142, "roc_auc_ovr_weight": 142, "root": 133, "rosenberg": 128, "round": 141, "rout": [6, 7, 8, 19, 20, 21, 22, 23, 28, 47, 48, 49, 50, 51, 52, 53, 59, 115], "row": [2, 7, 34, 48, 49, 50, 51, 52, 53, 90, 91, 92, 93, 97, 100, 102, 103, 106, 107, 115, 118, 133, 134, 136, 141, 142, 143], "row_index": 91, "row_select_col_typ": [2, 7, 34, 48, 49, 50, 51, 52, 53, 115, 142], "row_select_v": [2, 7, 34, 48, 49, 50, 51, 52, 53, 115, 142], "rst": [122, 127], "ruff": 144, "rule": [92, 120, 130, 133, 143], "run": [35, 37, 47, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 141, 142, 143], "run_": 122, "run_apply_to_target": [106, 112, 137], "run_binary_inspect_fold": [103, 104, 137], "run_cbpm_doc": 137, "run_combine_panda": [92, 95, 137], "run_confound_removal_doc": 137, "run_cross_valid": [29, 31, 46, 75, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 121, 122, 128, 129, 131, 133, 134, 135, 136, 140, 141, 144], "run_custom_scorers_regress": [118, 119, 137], "run_cv_splitters_doc": 137, "run_data_doc": 137, "run_example_pca_featset": [107, 112, 137], "run_fit": 144, "run_grouped_cv": [93, 95, 137], "run_hyperparameter_multiple_grid": [108, 112, 137], "run_hyperparameter_tun": [109, 112, 137], "run_hyperparameter_tuning_bayessearch": [110, 112, 137], "run_hyperparameters_doc": 137, "run_model_comparison_doc": 137, "run_model_evaluation_doc": 137, "run_model_inspection_doc": [134, 137], "run_pipeline_doc": 137, "run_return_confound": [115, 116, 137], "run_simple_binary_classif": [94, 95, 137], "run_stacked_model": [111, 112, 137], "run_stacked_models_doc": 137, "run_target_transformer_doc": 137, "runner": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 128, 131, 134, 135, 141], "runtimewarn": [31, 35, 36, 56, 64, 74, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 108, 109, 110, 114, 118, 128, 134, 135, 141], "s0": [92, 93, 100, 108, 109, 110], "s1": [90, 91, 92, 93, 100, 106, 107, 115, 118, 136], "s10": [92, 93, 100, 108, 109, 110], "s105381191630595x": 138, "s1053811917305311": 138, "s11": [92, 93, 100, 108, 109, 110], "s12": [92, 93, 100, 108, 109, 110], "s13": [92, 93, 100, 108, 109, 110], "s2": [90, 91, 92, 93, 100, 106, 107, 115, 118, 136], "s3": [90, 91, 92, 93, 100, 106, 107, 115, 118, 136], "s4": [90, 91, 92, 93, 100, 106, 107, 115, 118, 136], "s41746": 138, "s5": [90, 91, 92, 93, 100, 106, 107, 108, 109, 110, 115, 118, 136], "s6": [90, 91, 92, 93, 100, 106, 107, 115, 118, 136], "s7": [92, 93, 100], "s8": [92, 93, 100], "s9": [92, 93, 100], "safe": 143, "sai": [133, 143], "same": [2, 19, 20, 37, 38, 52, 66, 94, 97, 100, 108, 109, 110, 114, 118, 122, 126, 128, 129, 130, 131, 133, 135, 138, 141, 142, 143, 144], "sami": [106, 115, 126, 129, 144], "sampl": [7, 8, 19, 20, 21, 22, 23, 28, 36, 46, 47, 48, 49, 50, 51, 52, 53, 59, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128, 129, 130, 131, 134, 135, 136, 141, 142, 143], "sample_weight": 28, "sass": [91, 102, 114, 126, 128], "save": [122, 143], "saw": [139, 141, 142, 143], "scalar": [40, 44, 89], "scale": [90, 107, 108, 109, 120, 131, 134, 142, 143], "scaler": 143, "scaler_maxab": 120, "scaler_minmax": 120, "scaler_norm": 120, "scaler_pow": 120, "scaler_quantil": 120, "scaler_robust": 120, "scan": 92, "scanner": 92, "scatter": [90, 102, 107], "scatterplot": [90, 100, 102, 107], "scenario": [129, 142, 143], "scheinost": 47, "scheme": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128, 129, 131, 134, 135, 136, 138, 141, 142, 143, 144], "scienc": [129, 138], "sciencedirect": 138, "scientif": 126, "scikit": [24, 26, 37, 38, 47, 48, 50, 51, 52, 53, 54, 58, 94, 100, 101, 118, 120, 121, 125, 126, 128, 129, 130, 131, 135, 136, 138, 141, 142, 143, 144], "scipi": [47, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 128, 134, 135], "score": [2, 3, 8, 15, 16, 28, 37, 38, 46, 59, 66, 75, 76, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 126, 128, 129, 131, 133, 134, 135, 136, 137, 140, 143, 144], "score_tim": [89, 90, 103, 106, 107, 115, 118, 129, 136, 142, 143], "scorer": [37, 40, 41, 44, 45, 118, 141, 142, 144], "scorer_nam": [44, 118], "scorerlik": [37, 39, 40, 44], "scores1": [97, 124, 131, 141], "scores2": [97, 124, 131, 141], "scores3": [97, 124, 131, 141], "scores_cr": 114, "scores_ncr": 114, "scores_strat": 91, "scores_tun": 131, "script": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 122, 127, 128, 129, 130, 131, 134, 135, 136, 139, 141, 142, 143], "seaborn": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 107, 108, 109, 110, 111, 114, 122, 125, 126, 130, 131, 134, 139, 142, 143], "search": [2, 25, 26, 37, 38, 66, 102, 105, 108, 109, 112, 126, 131, 133, 134, 135, 137], "search_param": [2, 37, 38, 108, 109, 110, 131, 144], "searcher": [24, 25, 26, 27, 37, 38, 125, 132, 133, 144], "searcher_nam": 26, "second": [19, 20, 21, 22, 46, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128, 129, 130, 131, 133, 134, 135, 136, 139, 141, 142, 143], "section": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 130, 133, 139, 141, 142, 143, 144], "see": [1, 7, 19, 20, 21, 28, 29, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 66, 80, 87, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 120, 121, 122, 124, 129, 130, 131, 133, 134, 135, 138, 139, 140, 141, 142, 143], "seed": [37, 38, 94, 97, 102, 108, 109, 110, 114, 134, 135], "seem": [100, 108, 109, 110, 114, 131, 140, 141, 142], "seen": [92, 143], "segment": 127, "select": [2, 7, 8, 12, 28, 34, 48, 49, 50, 51, 52, 53, 76, 102, 115, 126, 128, 130, 131, 134, 139, 140, 141], "select_fdr": 120, "select_fpr": 120, "select_fw": 120, "select_k": [120, 131], "select_k__k": 131, "select_percentil": 120, "select_univari": 120, "select_vari": [102, 120], "selectfdr": 120, "selectfpr": 120, "selectfw": 120, "selectkbest": [120, 131], "selector": [4, 12], "selectpercentil": 120, "self": [4, 6, 7, 19, 28, 33, 47, 48, 49, 50, 51, 52, 53, 59, 61], "semant": 122, "sens": [125, 131, 133], "sepal": [94, 97, 103, 111, 114, 133, 139, 143], "sepal_length": [89, 94, 97, 101, 103, 111, 114, 131, 139, 142, 143], "sepal_width": [89, 94, 97, 101, 103, 111, 114, 131, 139, 142, 143], "separ": [47, 100, 102, 133, 138, 142, 143], "seri": [35, 36, 60, 70, 73], "serum": [90, 91, 106, 107, 118], "serv": 134, "servabl": 124, "set": [1, 2, 4, 5, 6, 7, 8, 14, 16, 19, 20, 21, 22, 23, 26, 28, 33, 34, 37, 38, 44, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 70, 71, 72, 73, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 121, 123, 126, 127, 128, 129, 130, 131, 133, 134, 135, 138, 140, 141, 142, 144], "set_column_typ": [108, 110, 131, 134, 142], "set_column_types__column_mapper_": 134, "set_column_types__feature_names_in_": 134, "set_column_types__row_select_col_typ": 134, "set_column_types__row_select_v": 134, "set_column_types__x_typ": 134, "set_config": [19, 28, 121], "set_index": [89, 90, 92, 107, 114], "set_opt": 134, "set_output": [7, 47, 48, 49, 50, 51, 52, 53], "set_param": [6, 7, 8, 28, 47, 48, 49, 50, 51, 52, 53, 59, 70, 71, 72, 73], "set_score_request": 28, "set_split_request": 19, "set_styl": [90, 91, 107], "set_titl": [100, 101, 102, 130], "setcolumntyp": [108, 110, 131, 134, 142], "setosa": [89, 139, 142, 143], "settingwithcopywarn": 91, "setup": [126, 140], "setuptools_scm": 127, "setuptools_scm_debug": 127, "sever": [37, 38, 92, 93, 100, 121, 122, 130, 131, 133, 138, 142], "sex": [90, 91, 106, 107, 115, 118, 129, 134, 136], "sgd": 120, "sgdclassifi": 120, "sgdregressor": 120, "shall": [122, 130], "shammi": [89, 90, 91, 93, 100, 102, 107, 114, 118, 126, 129, 144], "shape": [7, 8, 19, 20, 21, 22, 23, 47, 48, 49, 50, 51, 52, 53, 59, 89, 100], "share": 133, "shared_data_dir": 133, "shed": 130, "shen": [47, 128], "shield": 144, "short": [120, 122, 129, 133], "should": [2, 6, 7, 19, 26, 28, 31, 34, 44, 47, 48, 49, 50, 51, 52, 53, 56, 64, 91, 102, 107, 114, 115, 120, 122, 127, 128, 130, 131, 132, 136, 138, 142, 143], "shouldn": 143, "show": [47, 88, 97, 105, 113, 117, 124, 130, 131, 141, 142, 144], "shown": 131, "shrink": [130, 142], "shuffl": [19, 20, 90, 91, 93, 94, 97, 100, 101, 102, 106, 107, 108, 109, 110, 111, 115, 118, 128, 129, 130, 131, 134, 135, 136, 142, 143], "shufflesplit": 103, "sidak": 46, "side": 46, "sigma": 143, "sign": 128, "signal": [92, 93, 100, 108, 109, 110], "signatur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "signific": [47, 97, 128, 133, 134], "significance_threshold": [47, 128], "significant_mask_": 47, "significantli": 47, "sime": 46, "similar": [92, 131, 133, 135, 142, 143], "similarli": [129, 134], "simpl": [6, 7, 8, 28, 37, 46, 47, 48, 49, 50, 51, 52, 53, 59, 66, 75, 88, 95, 96, 98, 100, 101, 102, 103, 108, 109, 110, 114, 115, 120, 122, 126, 128, 130, 131, 133, 134, 135, 137, 138, 143], "simpler": 126, "simpli": [102, 128, 129, 130, 133, 134, 135, 143], "simplifi": 143, "simul": 129, "sinc": [92, 97, 102, 106, 108, 126, 131, 133, 143], "singl": [89, 121, 133, 134, 141], "singlebest": 28, "site": [91, 94, 130, 131], "situat": [122, 133], "six": [90, 91, 106, 107, 118], "size": [128, 129, 130, 141], "skew": 91, "skip": 144, "sklearn": [2, 4, 6, 8, 12, 19, 28, 33, 51, 53, 60, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 128, 129, 130, 131, 134, 135, 136, 141, 142], "skopt": [125, 131], "slice": 91, "slightli": 129, "slot": 133, "small": [133, 138], "smaller": [122, 133], "smooth": 141, "sn": [89, 90, 91, 100, 101, 102, 107, 114, 130, 134], "snippet": [133, 144], "snoek": 129, "so": [2, 6, 7, 8, 28, 44, 47, 48, 49, 50, 51, 52, 53, 59, 91, 92, 94, 97, 102, 109, 120, 122, 124, 125, 130, 131, 133, 136, 139, 142, 143], "solv": [130, 138], "solver": 131, "some": [19, 28, 91, 92, 93, 100, 101, 122, 125, 128, 129, 130, 131, 133, 134, 135, 138, 139], "someon": [122, 130], "someth": 133, "sometim": [115, 129, 133, 134, 135, 136], "somewhat": [134, 135], "sort": [8, 28, 59, 93, 100, 120], "sort_valu": 90, "sound": 141, "sourc": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118], "space": [26, 131, 133], "span": 133, "spearman": 128, "spearmanr": 128, "speci": [89, 94, 97, 101, 103, 111, 114, 122, 131, 134, 139, 142, 143], "special": 102, "specif": [53, 94, 100, 102, 115, 129, 131, 132, 134, 138, 139, 140], "specifi": [2, 24, 26, 36, 37, 38, 50, 53, 60, 62, 92, 100, 101, 107, 108, 115, 120, 125, 126, 128, 129, 133, 135, 136, 138, 139, 140, 142, 143, 144], "speed": [108, 109, 110], "sphinx": [88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 122, 144], "split": [2, 19, 20, 21, 22, 23, 28, 37, 38, 89, 90, 91, 94, 97, 100, 106, 107, 118, 129, 130, 131, 133, 134, 138, 142, 144], "splitter": [19, 20, 21, 22, 23, 28, 37, 126, 132, 137, 140, 141], "spreadsheet": 92, "spuriou": 129, "squar": [42, 118, 120], "squeez": 118, "stabl": [37, 91, 125, 126, 138], "stack": [2, 37, 66, 105, 112, 114, 120, 126, 132, 133, 137], "stackedclassifi": 28, "stackexchang": 130, "stackingclassifi": [120, 133, 135], "stackingregressor": [120, 133, 135], "stage": 46, "stale": 144, "standalon": 124, "standard": [37, 38, 47, 102, 129, 135, 143, 144], "standardscal": [100, 110, 120, 131, 134, 136, 142, 143], "standrad": [37, 38], "start": [92, 122, 123, 126, 130, 131, 134, 135, 136, 140, 141, 143], "stat": [47, 76, 97, 118, 126, 128, 130, 141], "state": [21, 22, 27, 28, 32, 45, 57, 65, 129], "statement": 66, "staticselect": 28, "statist": [97, 102, 114, 126, 140, 142], "stats_df": [97, 141], "statsmodel": 125, "std": [90, 91, 102, 106, 107, 115, 118, 129, 136], "stdout": 66, "step": [2, 3, 17, 18, 33, 37, 38, 46, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 122, 126, 128, 129, 131, 134, 135, 136, 138, 139, 141, 142, 143, 144], "step__paramet": [37, 38], "still": [35, 92, 115, 125, 130, 133, 142, 144], "stim": [92, 93, 100, 108, 109, 110], "stop": 131, "store": 133, "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 62, 63, 64, 66, 68, 74, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 134, 135, 142, 143], "straightforward": [138, 143], "strategi": [37, 38, 142], "stratif": [19, 20, 91, 93, 132], "stratifi": [19, 20, 21, 22, 23, 37, 66, 88, 89, 95, 130, 137, 142, 144], "stratifiedbootstrap": [114, 144], "stratifiedgroupkfold": 93, "stratifiedkfold": [130, 142], "strength": 129, "string": [37, 38, 66, 120, 139, 141, 142, 143, 144], "strongli": 125, "structur": [134, 139], "studi": [93, 100, 129, 130, 131], "study_nam": 131, "stuff": 140, "sub": [19, 28, 140], "subclass": [68, 74], "subject": [92, 93, 100, 108, 109, 110, 130], "submiss": 133, "submit": [122, 133], "subobject": [6, 7, 8, 28, 47, 48, 49, 50, 52, 53, 59], "subplot": [89, 90, 91, 100, 101, 102, 107, 130], "subsequ": 128, "subset": [107, 131, 138, 144], "subtl": 92, "subtract": [53, 60, 115, 120], "success": [122, 131, 138], "suffici": [19, 20, 91], "suggest": [126, 130], "suit": [122, 134], "suitabl": [94, 125], "sum": [47, 89, 128, 144], "summar": 128, "summari": [102, 122, 133], "supercool_research": 133, "supervis": [19, 20, 21, 22, 23, 143], "support": [49, 53, 59, 80, 89, 93, 94, 100, 103, 108, 109, 110, 122, 130, 131, 134, 135, 142, 143, 144], "support_mask": [49, 53], "suppos": [92, 94, 129], "suptitl": 130, "sure": [92, 100, 122, 127, 129, 130, 131, 133], "surpris": 130, "surround": 144, "sustain": 128, "svc": [108, 110, 120, 131, 134, 142, 143], "svm": [18, 37, 38, 66, 89, 94, 97, 99, 103, 104, 108, 109, 110, 111, 120, 131, 133, 134, 135, 136, 137, 141, 142, 143], "svm__break_ti": 134, "svm__c": [108, 109, 110, 131, 134, 135], "svm__cache_s": 134, "svm__class_weight": [131, 134], "svm__class_weight_": 134, "svm__classes_": 134, "svm__coef0": 134, "svm__decision_function_shap": 134, "svm__degre": 134, "svm__dual_coef_": 134, "svm__feature_names_in_": 134, "svm__fit_status_": 134, "svm__gamma": [108, 109, 110, 131, 134], "svm__intercept_": 134, "svm__kernel": [97, 109, 131, 134], "svm__max_it": 134, "svm__n_features_in_": 134, "svm__n_iter_": 134, "svm__probabl": [37, 38, 134], "svm__random_st": 134, "svm__shape_fit_": 134, "svm__shrink": 134, "svm__support_": 134, "svm__support_vectors_": 134, "svm__tol": 134, "svm__verbos": 134, "svm_linear": 97, "svr": [120, 135, 136], "swarm": 114, "swarmplot": [91, 101], "switch": 141, "symmetri": 141, "sync": 127, "synchon": 144, "syntax": [53, 115], "system": [126, 127], "systemat": 114, "t": [46, 92, 97, 100, 130, 131, 133, 141, 142, 143, 144], "tabl": [92, 93, 100, 133], "tabul": 92, "tag": 127, "take": [118, 130, 133, 134, 143], "taken": 130, "target": [2, 3, 7, 8, 16, 19, 20, 21, 22, 23, 28, 33, 35, 36, 37, 38, 39, 47, 48, 49, 50, 51, 52, 53, 66, 70, 71, 72, 73, 76, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 114, 115, 118, 120, 126, 128, 130, 131, 132, 134, 135, 137, 139, 141, 142, 143, 144], "target_confound_remov": 129, "target_cr": [106, 136], "target_jutargetpipelin": 136, "target_pipelin": [3, 129, 136], "target_pipeline_cr": [106, 129], "targetconfoundremov": [33, 58, 129], "targetpipelinecr": [2, 106, 120, 129, 136], "task": [92, 100, 115, 131, 133, 136], "tb": [61, 133], "team": [122, 133], "technic": 133, "techniqu": [129, 130, 131, 134], "tediou": 141, "tell": [114, 129, 142], "templat": 122, "ten": [90, 91, 106, 107, 118], "term": [114, 130, 133, 139, 143], "test": [19, 20, 21, 22, 23, 28, 37, 46, 60, 89, 90, 91, 97, 100, 106, 107, 109, 114, 126, 129, 130, 131, 133, 134, 138, 141, 142, 144], "test_accuraci": [89, 94, 114, 141], "test_balanced_accuraci": [94, 97], "test_diabet": [90, 106, 107], "test_iri": 89, "test_neg_mean_absolute_error": 118, "test_r2_corr": 118, "test_roc_auc": [97, 114, 141], "test_scor": [90, 91, 93, 94, 97, 100, 106, 107, 108, 109, 110, 111, 115, 118, 129, 131, 142], "test_set": 130, "test_siz": [89, 90, 100, 106, 107, 144], "text": [89, 90, 100, 102, 107, 122, 130, 133], "textur": 141, "than": [2, 37, 38, 46, 91, 92, 100, 121, 126, 129, 130, 132, 133, 143], "thei": [6, 8, 28, 59, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 108, 109, 110, 114, 118, 124, 128, 131, 134, 135, 142, 143], "them": [114, 122, 124, 125, 126, 128, 130, 131, 133, 141, 142, 143], "theori": 143, "therebi": 126, "therefor": [121, 125, 128, 129, 142, 143], "thi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 87, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143], "thing": [118, 138, 143], "think": [121, 129], "third": [97, 142], "this_import": [101, 114], "thorough": 129, "those": [131, 138], "though": 133, "thought": [126, 143], "thousand": [133, 139], "thread": [130, 133], "three": [94, 97, 101, 103, 111, 114, 122, 126, 131, 141, 142], "threhsold": 47, "threshold": [2, 18, 37, 47, 53, 60, 66, 99, 104, 115, 120, 128, 137], "through": [124, 143], "thu": [2, 6, 100, 133, 138], "thumb": [130, 143], "tight_layout": [101, 114], "time": [21, 22, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 141, 142, 143], "timepoint": [92, 93, 100, 108, 109, 110], "titl": [89, 90, 107, 122], "to_pipelin": [2, 3], "to_plot": 101, "to_type_selector": 4, "togeth": [53, 90, 91, 106, 107, 115, 118, 120], "toi": [134, 135], "tol": 142, "tolist": [131, 141], "tong": 129, "too": [109, 131], "tool": [92, 121, 125, 134, 141, 144], "toolbox": 131, "top": [90, 107, 126, 133, 142], "top_k_accuraci": 142, "topic": [126, 130, 140, 141], "total": [89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 141, 142, 143], "toward": 91, "towncrier": 127, "tox": 122, "tp": 94, "track": 129, "train": [2, 7, 19, 20, 21, 22, 23, 28, 34, 37, 47, 48, 49, 50, 51, 52, 53, 60, 89, 90, 91, 93, 100, 102, 106, 107, 114, 115, 118, 129, 130, 131, 133, 134, 136, 138, 141, 142, 143, 144], "train_diabet": [90, 106, 107], "train_iri": 89, "train_scor": 142, "train_set": 130, "train_siz": [100, 144], "train_test_split": [89, 90, 106, 107], "tranform_until": 144, "transform": [2, 3, 7, 33, 37, 38, 39, 66, 76, 92, 102, 105, 110, 112, 115, 121, 126, 128, 129, 131, 134, 136, 137, 138, 143, 144], "transform_input": 142, "transform_target": 59, "transformer_cl": [56, 64], "transformer_nam": [56, 64], "transformerlik": [33, 37, 38, 143], "transpar": [134, 138], "treat": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 108, 109, 110, 114, 118, 128, 134, 135], "tree": [102, 120, 133], "tri": 131, "trial": 131, "trick": 92, "trigger": 133, "true": [6, 7, 8, 19, 20, 26, 28, 31, 33, 37, 38, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 56, 59, 64, 70, 71, 72, 73, 89, 90, 91, 94, 100, 103, 106, 107, 114, 115, 118, 121, 129, 130, 131, 133, 134, 136, 138, 142, 143], "trust": 142, "try": [91, 93, 94, 97, 100, 103, 109, 111, 130, 131, 142], "tune": [2, 34, 37, 38, 66, 105, 112, 126, 128, 129, 132, 133, 134, 135, 136, 137, 143, 144], "tupl": [33, 47, 131], "turn": 143, "tutori": 126, "two": [2, 46, 91, 92, 94, 97, 100, 101, 102, 103, 107, 108, 111, 114, 115, 118, 122, 128, 129, 130, 131, 133, 135, 138, 141, 143], "type": [2, 4, 6, 7, 8, 9, 11, 12, 18, 29, 31, 33, 34, 35, 36, 37, 38, 48, 49, 50, 51, 52, 53, 59, 60, 76, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 120, 121, 122, 126, 128, 129, 131, 132, 134, 136, 138, 140, 141, 142], "type1": 135, "type1_": 135, "type1_1": 135, "type1_10": 135, "type1_2": 135, "type1_3": 135, "type1_4": 135, "type1_5": 135, "type1_6": 135, "type1_7": 135, "type1_8": 135, "type1_9": 135, "type2": 135, "type2_": 135, "type2_1": 135, "type2_10": 135, "type2_2": 135, "type2_3": 135, "type2_4": 135, "type2_5": 135, "type2_6": 135, "type2_7": 135, "type2_8": 135, "type2_9": 135, "typic": 128, "typo": [122, 144], "u": [94, 101, 114, 115, 125, 129, 133, 134, 141, 142], "ui": 133, "ultim": 129, "un": 129, "unabl": 142, "unbalanc": [94, 97], "unbias": 130, "unchang": [7, 19, 28, 47, 48, 49, 50, 51, 52, 53], "uncom": [97, 141], "unconclus": 130, "undefin": [51, 121], "under": [53, 60, 115, 118, 124, 125, 142, 143], "underli": [46, 120, 129, 134], "underscor": 92, "understand": [101, 115, 126, 129, 133, 134, 140, 141, 143], "unequ": 46, "uniform": [110, 120, 130, 131, 144], "uniformli": [91, 130], "union": [2, 17, 33, 39], "uniqu": [89, 93, 100, 131, 134], "unit": [120, 126, 133], "unless": [37, 133], "unlik": [33, 58, 138], "unmaintain": 125, "unmatch": 121, "unnecessari": 131, "unseen": [100, 130, 138], "unstabl": 138, "unstack": [89, 90, 107], "unsupervis": [7, 47, 48, 49, 50, 51, 52, 53], "until": [18, 100, 102, 107, 115, 125, 133, 139, 141, 144], "untouch": 107, "up": [37, 38, 46, 68, 102, 108, 109, 110, 115, 126, 128, 133, 134, 140, 143], "updat": [4, 6, 7, 8, 19, 28, 47, 48, 49, 50, 51, 52, 53, 59, 122, 125, 144], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 80, 87, 88, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 114, 118, 120, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144], "usabl": [4, 143], "usag": [122, 125, 138, 143, 144], "used_corr_sign_": 47, "used_significant_mask_": 47, "user": [2, 6, 7, 8, 19, 20, 21, 22, 23, 26, 28, 31, 37, 38, 44, 47, 48, 49, 50, 51, 52, 53, 56, 59, 61, 64, 66, 102, 115, 118, 121, 125, 126, 129, 131, 133, 138, 143, 144], "user_guid": 91, "userwarn": [44, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 130, 134, 135], "usual": [124, 131, 133, 143], "util": [19, 28, 76, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 122, 126, 134, 135], "utmost": 140, "v": [90, 107, 127, 130, 132, 143], "v0": 131, "v_measure_scor": 142, "val": [97, 141], "valid": [2, 3, 16, 19, 20, 21, 22, 23, 35, 36, 37, 38, 82, 89, 90, 101, 107, 114, 115, 120, 126, 128, 131, 132, 133, 134, 137, 139, 140, 141, 143, 144], "valu": [2, 6, 7, 8, 13, 14, 28, 34, 37, 38, 42, 43, 47, 48, 49, 50, 51, 52, 53, 59, 60, 89, 90, 91, 92, 93, 94, 100, 102, 106, 107, 108, 109, 110, 114, 115, 118, 120, 121, 128, 131, 134, 139, 142, 143, 144], "valuabl": [129, 134, 138], "value_count": [94, 97], "valueerror": [2, 16, 24, 26, 31, 35, 36, 44, 56, 62, 64, 68], "vapnik": 143, "variabl": [2, 3, 19, 20, 21, 22, 23, 35, 36, 37, 66, 90, 91, 93, 100, 105, 107, 112, 115, 118, 129, 130, 131, 134, 136, 137, 142, 143, 144], "varianc": [2, 18, 37, 66, 99, 104, 120, 130, 134, 137, 143], "variancethreshold": 120, "variant": 130, "variou": 117, "vd": 127, "vector": [89, 93, 94, 100, 103, 108, 109, 110, 122, 131, 134, 135, 142, 143], "venv": 125, "vera": 126, "verbos": [37, 38, 47, 134, 142, 144], "veri": [131, 133, 134, 135, 138, 139], "verifi": [122, 142], "versicolor": [89, 94, 97, 101, 103, 111, 114, 122, 131, 142, 143], "version": [7, 19, 28, 47, 48, 49, 50, 51, 52, 53, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 122, 125, 126, 130, 133, 134, 135, 144], "versu": 91, "verticalalign": [90, 107], "via": [125, 127, 140], "video": 126, "view": [91, 122], "viewer": 97, "virginica": [89, 94, 97, 101, 103, 111, 114, 122, 131, 142, 143], "virtual": [122, 125], "visual": [76, 100, 125, 126, 130, 138, 140], "viz": [87, 97, 125, 126, 141], "voil\u00e0": 143, "volum": [129, 130], "votingclassifi": 133, "votingregressor": 133, "vstack": 100, "vstring": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 118, 134, 135], "vx": 127, "wa": [7, 47, 48, 49, 50, 51, 52, 53, 93, 100, 101, 102, 115, 128, 130, 131, 134, 142], "wagner": [92, 93, 100, 108, 109, 110], "wai": [3, 94, 97, 124, 126, 129, 130, 131, 133, 134, 135, 138, 141, 142, 143], "wait": 133, "wander": 101, "want": [44, 53, 89, 92, 93, 94, 100, 102, 114, 115, 118, 122, 124, 125, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143], "warn": [26, 31, 35, 36, 44, 56, 61, 64, 66, 74, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 108, 109, 110, 114, 118, 128, 130, 133, 134, 135, 139, 141, 144], "warn_with_log": [89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 108, 109, 110, 114, 118, 128, 134, 135, 141], "waskom": [92, 93, 100, 108, 109, 110], "we": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 121, 122, 124, 125, 126, 129, 130, 131, 133, 134, 135, 136, 138, 139, 141, 142, 143], "web": 122, "weight": [28, 131, 143], "well": [6, 7, 8, 28, 47, 48, 49, 50, 51, 52, 53, 59, 121, 128, 129, 130, 131, 134, 135, 138, 139, 140, 141, 143], "were": [91, 92, 93, 100, 101, 114, 133, 134, 142], "what": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 93, 100, 107, 109, 115, 120, 129, 130, 131, 134, 135, 136, 139, 142, 143], "whats_new": 127, "when": [19, 20, 28, 91, 114, 120, 121, 122, 124, 128, 129, 130, 131, 133, 136, 139, 142, 143, 144], "where": [19, 20, 21, 22, 23, 92, 127, 130, 131, 133, 134, 143, 144], "whether": [2, 17, 18, 19, 20, 26, 28, 31, 37, 44, 47, 53, 56, 64, 70, 71, 72, 73, 93, 97, 100, 115, 122, 129, 142], "whi": 114, "which": [2, 6, 7, 19, 20, 26, 31, 34, 37, 38, 47, 48, 49, 50, 51, 52, 53, 56, 60, 64, 87, 90, 91, 93, 94, 100, 102, 106, 107, 108, 109, 110, 114, 115, 118, 122, 128, 129, 130, 131, 133, 134, 135, 136, 138, 140, 142, 143, 144], "while": [19, 20, 21, 22, 23, 37, 38, 101, 108, 114, 121, 126, 129, 130, 131, 133, 135, 136, 138, 143, 144], "whisker": 114, "who": 131, "whole": [128, 131, 133], "whom": 100, "whose": 129, "why": [129, 130, 131, 140], "wide": 92, "width": [75, 94, 97, 103, 111, 114], "window": 133, "wip": 122, "wise": [2, 16, 23, 37, 66, 99, 104, 137, 138], "with_column_typ": [18, 100], "with_mean": [131, 142, 143], "with_std": 142, "with_traceback": 61, "within": [19, 20, 28, 122, 128, 129, 133, 135, 138, 139, 142], "without": [2, 26, 31, 44, 56, 64, 91, 93, 109, 114, 115, 120, 133, 138], "wonder": 143, "word": [130, 131], "work": [6, 7, 8, 19, 20, 21, 22, 23, 28, 33, 47, 48, 49, 50, 51, 52, 53, 58, 59, 88, 89, 90, 91, 93, 94, 95, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 122, 128, 129, 130, 131, 133, 134, 135, 137, 141, 144], "worker": 133, "workflow": [128, 134, 140, 143, 144], "workshop": 143, "world": [129, 134], "worri": 142, "worst": 141, "would": [130, 131, 139, 141, 143, 144], "wrap": [8, 39, 59, 144], "wrap_scor": 39, "wrapper": [51, 59, 144], "write": [126, 143], "www": 138, "x": [6, 7, 8, 15, 16, 18, 19, 20, 21, 22, 23, 28, 33, 36, 37, 38, 40, 44, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 70, 71, 73, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 121, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 141, 142, 143, 144], "x0": 51, "x1": 51, "x27": 142, "x64": [91, 94, 130, 131], "x_after_pca": 102, "x_after_zscor": 102, "x_name": [128, 135], "x_new": [7, 47, 48, 49, 50, 51, 52, 53], "x_to_zscor": 102, "x_type": [2, 36, 37, 38, 48, 49, 50, 52, 53, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 121, 128, 129, 131, 133, 134, 135, 136, 139, 141, 142, 143], "x_types_renam": 48, "x_y_correlations_": 47, "xilin": 128, "xlabel": [90, 107], "xlim": 100, "xmax": [90, 107], "xmin": [90, 107], "xticklabel": 90, "xx": 100, "xy": 100, "xy_df": 100, "y": [7, 8, 15, 16, 19, 20, 21, 22, 23, 28, 33, 35, 36, 37, 38, 40, 44, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 70, 71, 72, 73, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 120, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 141, 142, 143], "y_mean_": 47, "y_pred": [42, 43, 89, 90, 94, 107, 118], "y_true": [42, 43, 89, 90, 94, 107, 118], "yaml": 144, "ye": 143, "year": [90, 91, 106, 107, 118, 133], "yekuti": 46, "yet": [125, 139], "yield": [19, 20, 21, 22, 23, 37, 121, 134, 142], "ylabel": [90, 107, 130], "ylgnbu": [89, 90, 107], "ylim": 100, "ymax": [90, 107], "ymin": [90, 107], "you": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 89, 92, 97, 102, 115, 121, 122, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 138, 139, 141, 142, 143], "your": [89, 92, 122, 125, 126, 128, 129, 130, 133, 134, 140, 143], "yourself": 122, "yticklabel": 90, "yy": 100, "z": [2, 3, 37, 66, 100, 105, 112, 127, 134, 136, 137, 142, 143], "zero": [19, 20, 21, 22, 102], "zip": [89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118], "zoom": [97, 141], "zscore": [2, 18, 37, 66, 89, 90, 91, 93, 94, 97, 99, 100, 101, 103, 104, 106, 108, 109, 110, 111, 114, 118, 120, 131, 133, 134, 136, 137, 141, 142, 143], "zscore__copi": 134, "zscore__feature_names_in_": 134, "zscore__mean_": 134, "zscore__n_features_in_": 134, "zscore__n_samples_seen_": 134, "zscore__scale_": 134, "zscore__var_": 134, "zscore__with_mean": [131, 134], "zscore__with_std": 134}, "titles": ["<span class=\"section-number\">9.4. </span>Base", "<span class=\"section-number\">9.17. </span>Config", "julearn.PipelineCreator", "julearn.TargetPipelineCreator", "julearn.base.ColumnTypes", "julearn.base.ColumnTypesLike", "julearn.base.JuBaseEstimator", "julearn.base.JuTransformer", "julearn.base.WrapModel", "julearn.base.change_column_type", "julearn.base.ensure_column_types", "julearn.base.get_column_type", "julearn.base.make_type_selector", "julearn.config.get_config", "julearn.config.set_config", "julearn.inspect.FoldsInspector", "julearn.inspect.Inspector", "julearn.inspect.PipelineInspector", "julearn.inspect.preprocess", "julearn.model_selection.ContinuousStratifiedGroupKFold", "julearn.model_selection.ContinuousStratifiedKFold", "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold", "julearn.model_selection.RepeatedContinuousStratifiedKFold", "julearn.model_selection.StratifiedBootstrap", "julearn.model_selection.get_searcher", "julearn.model_selection.list_searchers", "julearn.model_selection.register_searcher", "julearn.model_selection.reset_searcher_register", "julearn.models.dynamic.DynamicSelection", "julearn.models.get_model", "julearn.models.list_models", "julearn.models.register_model", "julearn.models.reset_model_register", "julearn.pipeline.JuTargetPipeline", "julearn.pipeline.pipeline_creator.Step", "julearn.prepare.check_consistency", "julearn.prepare.prepare_input_data", "julearn.run_cross_validation", "julearn.run_fit", "julearn.scoring.check_scoring", "julearn.scoring.get_scorer", "julearn.scoring.list_scorers", "julearn.scoring.metrics.r2_corr", "julearn.scoring.metrics.r_corr", "julearn.scoring.register_scorer", "julearn.scoring.reset_scorer_register", "julearn.stats.corrected_ttest", "julearn.transformers.CBPM", "julearn.transformers.ChangeColumnTypes", "julearn.transformers.DropColumns", "julearn.transformers.FilterColumns", "julearn.transformers.JuColumnTransformer", "julearn.transformers.SetColumnTypes", "julearn.transformers.confound_remover.ConfoundRemover", "julearn.transformers.get_transformer", "julearn.transformers.list_transformers", "julearn.transformers.register_transformer", "julearn.transformers.reset_transformer_register", "julearn.transformers.target.JuTargetTransformer", "julearn.transformers.target.JuTransformedTargetModel", "julearn.transformers.target.TargetConfoundRemover", "julearn.transformers.target.TransformedTargetWarning", "julearn.transformers.target.get_target_transformer", "julearn.transformers.target.list_target_transformers", "julearn.transformers.target.register_target_transformer", "julearn.transformers.target.reset_target_transformer_register", "julearn.utils.configure_logging", "julearn.utils.logger", "julearn.utils.raise_error", "julearn.utils.typing.EstimatorLike", "julearn.utils.typing.EstimatorLikeFit1", "julearn.utils.typing.EstimatorLikeFit2", "julearn.utils.typing.EstimatorLikeFity", "julearn.utils.typing.JuEstimatorLike", "julearn.utils.warn_with_log", "julearn.viz.plot_scores", "<span class=\"section-number\">9. </span>API Reference", "<span class=\"section-number\">9.5. </span>Inspect", "<span class=\"section-number\">9.1. </span>Main API", "<span class=\"section-number\">9.3. </span>Model Selection", "<span class=\"section-number\">9.6. </span>Models", "<span class=\"section-number\">9.2. </span>Pipeline", "<span class=\"section-number\">9.14. </span>Prepare", "<span class=\"section-number\">9.8. </span>Scoring", "<span class=\"section-number\">9.15. </span>Stats", "<span class=\"section-number\">9.10. </span>Transformers", "<span class=\"section-number\">9.12. </span>Utils", "<span class=\"section-number\">9.16. </span>Visualization", "<span class=\"section-number\">8.1. </span>Starting with <code class=\"docutils literal notranslate\"><span class=\"pre\">julearn</span></code>", "Multiclass Classification", "Regression Analysis", "Stratified K-fold CV for regression analysis", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">pandas</span></code>", "Grouped CV", "Simple Binary Classification", "Computation times", "<span class=\"section-number\">8.2. </span>Model Comparison", "Simple Model Comparison", "Computation times", "<span class=\"section-number\">8.3. </span>Inspection", "Inspecting SVM models", "Inspecting Random Forest models", "Preprocessing with variance threshold, zscore and PCA", "Inspecting the fold-wise predictions", "Computation times", "<span class=\"section-number\">8.4. </span>Complex Models", "Transforming target variable with z-score", "Regression Analysis", "Tuning Multiple Hyperparameters Grids", "Tuning Hyperparameters", "Tuning Hyperparameters using Bayesian Search", "Stacking Classification", "Computation times", "<span class=\"section-number\">8.5. </span>Confounds", "Confound Removal (model comparison)", "Return Confounds in Confound Removal", "Computation times", "<span class=\"section-number\">8.6. </span>Customization", "Custom Scoring Function for Regression", "Computation times", "<span class=\"section-number\">7. </span>Overview of available Pipeline Steps", "<span class=\"section-number\">10. </span>Configuring <code class=\"docutils literal notranslate\"><span class=\"pre\">julearn</span></code>", "<span class=\"section-number\">11. </span>Contributing", "<span class=\"section-number\">8. </span>Examples", "<span class=\"section-number\">13. </span>FAQs", "<span class=\"section-number\">1. </span>Getting started", "Welcome to julearn\u2019s documentation!", "<span class=\"section-number\">12. </span>Maintaining", "<span class=\"section-number\">6.7. </span>Connectome-based Predictive Modeling (CBPM)", "<span class=\"section-number\">6.2. </span>Cross-validation consistent Confound Removal", "<span class=\"section-number\">6.5. </span>Cross-validation splitters", "<span class=\"section-number\">6.3. </span>Hyperparameter Tuning", "<span class=\"section-number\">6. </span>Selected deeper topics", "<span class=\"section-number\">6.8. </span>Parallelizing julearn with Joblib", "<span class=\"section-number\">6.4. </span>Inspecting Models", "<span class=\"section-number\">6.6. </span>Stacking Models", "<span class=\"section-number\">6.1. </span>Applying preprocessing to the target", "Computation times", "<span class=\"section-number\">5.1. </span>Why cross validation?", "<span class=\"section-number\">5.2. </span>Data", "<span class=\"section-number\">5. </span>What you really need to know", "<span class=\"section-number\">5.5. </span>Model Comparison", "<span class=\"section-number\">5.4. </span>Model Evaluation", "<span class=\"section-number\">5.3. </span>Model Building", "<span class=\"section-number\">14. </span>What\u2019s new"], "titleterms": {"": [126, 144], "0": 144, "01": 144, "03": 144, "05": 144, "07": 144, "09": 144, "1": 144, "10": 144, "12": 144, "16": 144, "17": 144, "19": 144, "2": 144, "2022": 144, "2023": 144, "2024": 144, "2025": 144, "21": 144, "23": 144, "3": 144, "4": 144, "5": 144, "The": [138, 142], "ad": 122, "all": 135, "analysi": [90, 91, 107], "api": [76, 78, 144], "appli": 136, "avail": 120, "base": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 128], "bay": 120, "bayesian": 110, "binari": 94, "bugfix": 144, "build": [122, 143], "case": 115, "cbpm": [47, 128], "chang": 144, "change_column_typ": 9, "changecolumntyp": 48, "check_consist": 35, "check_scor": 39, "class": [0, 77, 79, 80, 81, 85, 86], "classif": [89, 94, 111], "columntyp": 4, "columntypeslik": 5, "comparison": [96, 97, 114, 141], "complex": 105, "comput": [95, 98, 104, 112, 116, 119, 137], "config": [1, 13, 14], "configur": 121, "configure_log": 66, "confound": [113, 114, 115, 129], "confound_remov": 53, "confoundremov": 53, "connectom": 128, "consist": 129, "content": [123, 126, 132], "continuousstratifiedgroupkfold": 19, "continuousstratifiedkfold": 20, "contribut": 122, "corrected_ttest": 46, "cross": [93, 100, 129, 130, 138, 142], "custom": [117, 118, 120], "cv": [91, 93], "data": [133, 139], "datafram": [92, 120], "deal": [93, 100], "decomposit": 120, "deeper": 132, "depend": [124, 125], "deslib": 80, "dev79": 144, "develop": 122, "distribut": 131, "do": 124, "document": [122, 126, 144], "dropcolumn": 49, "dummi": 120, "dynam": [28, 80, 120], "dynamicselect": 28, "each": 135, "easi": 143, "enhanc": 144, "ensembl": 120, "ensure_column_typ": 10, "environ": 122, "essenc": 138, "estim": [120, 135, 142], "estimatorlik": 69, "estimatorlikef": 72, "estimatorlikefit1": 70, "estimatorlikefit2": 71, "evalu": 142, "exampl": [2, 3, 16, 17, 18, 20, 23, 37, 41, 44, 46, 66, 75, 122, 123], "faq": 124, "featur": [120, 129, 135, 139, 143, 144], "filtercolumn": 50, "fit": 135, "fold": [91, 103], "foldsinspector": 15, "forest": 101, "from": 129, "function": [0, 1, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 118], "fundament": 138, "gaussian": 120, "get": 125, "get_column_typ": 11, "get_config": 13, "get_model": 29, "get_scor": 40, "get_search": 24, "get_target_transform": 62, "get_transform": 54, "github": 122, "give": 139, "grid": [108, 131], "group": [93, 130], "guidelin": 122, "have": 124, "how": 124, "htcondor": 133, "hyperparamet": [108, 109, 110, 131, 143], "i": [124, 126, 129], "import": 101, "improv": 144, "indic": 126, "input": 139, "inspect": [15, 16, 17, 18, 77, 99, 100, 101, 103, 134], "inspector": 16, "instal": 125, "interact": 124, "issu": 124, "joblib": 133, "join": 92, "jubaseestim": 6, "jucolumntransform": 51, "juestimatorlik": 73, "julearn": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 121, 126, 128, 129, 133, 144], "jutargetpipelin": 33, "jutargettransform": 58, "jutransform": 7, "jutransformedtargetmodel": 59, "k": 91, "know": 140, "learn": 133, "linear": 120, "list_model": 30, "list_scor": 41, "list_search": 25, "list_target_transform": 63, "list_transform": 55, "local": 122, "logger": 67, "machin": 120, "made": 143, "main": 78, "maintain": 127, "make_type_selector": 12, "massiv": 133, "merg": 92, "metric": [42, 43, 83, 142], "misc": 144, "model": [28, 29, 30, 31, 32, 79, 80, 96, 97, 100, 101, 105, 114, 120, 128, 131, 134, 135, 141, 142, 143], "model_select": [19, 20, 21, 22, 23, 24, 25, 26, 27], "modul": 124, "more": 131, "multiclass": 89, "multipl": 108, "naiv": 120, "need": 140, "new": [127, 144], "one": 131, "oper": 120, "option": 125, "output": 142, "overhead": 133, "overview": 120, "panda": 92, "parallel": 133, "paramet": 131, "pca": 102, "pipelin": [33, 34, 81, 120, 143], "pipeline_cr": 34, "pipelinecr": [2, 143], "pipelineinspector": 17, "plot": 124, "plot_scor": 75, "pool": 133, "predict": [103, 128], "prepar": [35, 36, 82], "prepare_input_data": 36, "preprocess": [18, 102, 136, 143], "process": 120, "progress": 133, "pull": 122, "r2_corr": 42, "r_corr": 43, "raise_error": 68, "random": 101, "realli": 140, "recurs": 133, "refer": [76, 92, 93, 100, 108, 109, 110, 128, 129, 130, 138, 143], "register_model": 31, "register_scor": 44, "register_search": 26, "register_target_transform": 64, "register_transform": 56, "regress": [90, 91, 107, 118, 129], "releas": 127, "remov": [114, 115, 129], "repeatedcontinuousstratifiedgroupkfold": 21, "repeatedcontinuousstratifiedkfold": 22, "request": 122, "requir": 125, "reset_model_regist": 32, "reset_scorer_regist": 45, "reset_searcher_regist": 27, "reset_target_transformer_regist": 65, "reset_transformer_regist": 57, "return": [115, 142], "run": 122, "run_cross_valid": [37, 138, 139, 142, 143], "run_fit": 38, "scaler": 120, "scikit": 133, "score": [39, 40, 41, 42, 43, 44, 45, 83, 106, 118, 141, 142], "search": 110, "searcher": 131, "select": [79, 80, 120, 132, 143], "set": [122, 143], "set_config": 14, "setcolumntyp": 52, "setup": 125, "should": 129, "simpl": [94, 97], "specif": [135, 143], "specifi": 131, "splitter": [130, 142], "stack": [111, 135], "start": [88, 125], "stat": [46, 84], "statist": 141, "step": [34, 120], "stratif": 130, "stratifi": 91, "stratifiedbootstrap": 23, "suggest": 125, "support": 120, "svm": 100, "tabl": [126, 132], "target": [58, 59, 60, 61, 62, 63, 64, 65, 85, 106, 129, 136], "targetconfoundremov": 60, "targetpipelinecr": 3, "techniqu": [93, 100], "test": 122, "than": 131, "threshold": 102, "throttl": 133, "time": [95, 98, 104, 112, 116, 119, 137], "topic": 132, "transfer": 133, "transform": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 85, 106, 120], "transformedtargetwarn": 61, "tune": [108, 109, 110, 131], "type": [69, 70, 71, 72, 73, 86, 135, 139, 143], "typic": 115, "unit": 122, "up": 122, "us": [2, 3, 16, 17, 18, 20, 23, 37, 41, 44, 46, 66, 75, 110, 115, 124, 129, 143], "util": [66, 67, 68, 69, 70, 71, 72, 73, 74, 86], "v": 131, "valid": [93, 100, 129, 130, 138, 142], "variabl": [101, 106], "varianc": 102, "vector": 120, "version": 127, "visual": [87, 133, 141], "viz": [75, 124], "warn_with_log": 74, "welcom": 126, "what": [126, 140, 144], "why": [126, 138], "wise": 103, "work": 92, "wrapmodel": 8, "write": 122, "you": 140, "z": 106, "zscore": 102}})