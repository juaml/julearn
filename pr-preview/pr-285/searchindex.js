Search.setIndex({"alltitles": {"API Changes": [[143, "api-changes"], [143, "id14"]], "API Reference": [[75, null]], "Adding and building documentation": [[121, "adding-and-building-documentation"]], "Applying preprocessing to the target": [[135, null]], "Base": [[0, null]], "Bugfixes": [[143, "bugfixes"], [143, "id1"], [143, "id3"], [143, "id5"], [143, "id9"], [143, "id15"]], "CBPM in julearn": [[127, "cbpm-in-julearn"]], "Classes": [[0, "classes"], [76, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [84, "classes"], [84, "id1"], [85, "classes"], [85, "id1"]], "Complex Models": [[104, null]], "Computation times": [[94, null], [97, null], [103, null], [111, null], [115, null], [118, null], [136, null]], "Config": [[1, null]], "Configuring julearn": [[120, null]], "Confound Removal (model comparison)": [[113, null]], "Confound Removal Typical Use Case": [[114, "confound-removal-typical-use-case"]], "Confound Removal in julearn": [[128, "confound-removal-in-julearn"]], "Confounds": [[112, null]], "Connectome-based Predictive Modeling (CBPM)": [[127, null]], "Contents:": [[122, null]], "Contributing": [[121, null]], "Cross-validation - The fundamentals": [[137, "cross-validation-the-fundamentals"]], "Cross-validation consistent Confound Removal": [[128, null]], "Cross-validation scores": [[141, "cross-validation-scores"]], "Cross-validation splitters": [[129, null], [141, "cross-validation-splitters"]], "Custom": [[119, "custom"]], "Custom Scoring Function for Regression": [[117, null]], "Customization": [[116, null]], "Data": [[138, null]], "Data Transfer": [[132, "data-transfer"]], "Data input to run_cross_validation()": [[138, "data-input-to-run-cross-validation"]], "DataFrame operations": [[119, "dataframe-operations"]], "Dealing with Cross-Validation techniques": [[92, "dealing-with-cross-validation-techniques"], [99, "dealing-with-cross-validation-techniques"]], "Decomposition": [[119, "decomposition"]], "Dummy": [[119, "dummy"]], "Dynamic Selection": [[119, "dynamic-selection"]], "Dynamic Selection (DESLib)": [[79, "dynamic-selection-deslib"]], "Enhancements": [[143, "enhancements"], [143, "id2"], [143, "id7"], [143, "id11"], [143, "id17"]], "Ensemble": [[119, "ensemble"]], "Examples": [[122, null]], "Examples using julearn.PipelineCreator": [[2, "examples-using-julearn-pipelinecreator"]], "Examples using julearn.TargetPipelineCreator": [[3, "examples-using-julearn-targetpipelinecreator"]], "Examples using julearn.inspect.Inspector": [[16, "examples-using-julearn-inspect-inspector"]], "Examples using julearn.inspect.preprocess": [[17, "examples-using-julearn-inspect-preprocess"]], "Examples using julearn.model_selection.ContinuousStratifiedKFold": [[19, "examples-using-julearn-model-selection-continuousstratifiedkfold"]], "Examples using julearn.model_selection.StratifiedBootstrap": [[22, "examples-using-julearn-model-selection-stratifiedbootstrap"]], "Examples using julearn.run_cross_validation": [[36, "examples-using-julearn-run-cross-validation"]], "Examples using julearn.scoring.list_scorers": [[40, "examples-using-julearn-scoring-list-scorers"]], "Examples using julearn.scoring.register_scorer": [[43, "examples-using-julearn-scoring-register-scorer"]], "Examples using julearn.stats.corrected_ttest": [[45, "examples-using-julearn-stats-corrected-ttest"]], "Examples using julearn.utils.configure_logging": [[65, "examples-using-julearn-utils-configure-logging"]], "Examples using julearn.viz.plot_scores": [[74, "examples-using-julearn-viz-plot-scores"]], "FAQs": [[123, null]], "Feature Selection": [[119, "feature-selection"]], "Feature preprocessing": [[142, "feature-preprocessing"]], "Features": [[143, "features"], [143, "id12"], [143, "id18"]], "Fitting each estimator on a specific feature type": [[134, "fitting-each-estimator-on-a-specific-feature-type"]], "Fitting each estimator on all of the features": [[134, "fitting-each-estimator-on-all-of-the-features"]], "Functions": [[0, "functions"], [1, "functions"], [76, "functions"], [77, "functions"], [78, "functions"], [79, "functions"], [81, "functions"], [82, "functions"], [82, "id1"], [83, "functions"], [84, "functions"], [84, "id2"], [85, "functions"], [86, "functions"]], "Gaussian Processes": [[119, "gaussian-processes"]], "Getting started": [[124, null]], "GitHub Pull Request guidelines": [[121, "github-pull-request-guidelines"]], "Giving types to features": [[138, "giving-types-to-features"]], "Grouped CV": [[92, null]], "Grouping": [[129, "grouping"]], "How do I use the viz interactive plots?": [[123, "how-do-i-use-the-viz-interactive-plots"]], "Hyperparameter Tuning": [[130, null], [130, "id1"]], "I have issues with the dependencies for the viz module.": [[123, "i-have-issues-with-the-dependencies-for-the-viz-module"]], "Improved Documentation": [[143, "improved-documentation"], [143, "id4"], [143, "id6"], [143, "id10"], [143, "id16"]], "Indices and tables": [[125, "indices-and-tables"], [125, "id1"]], "Inspect": [[76, null]], "Inspecting Models": [[133, null]], "Inspecting Random Forest models": [[100, null]], "Inspecting SVM models": [[99, null]], "Inspecting the fold-wise predictions": [[102, null]], "Inspection": [[98, null]], "Installing": [[124, "installing"]], "Julearn 0.2.5 (2022-07-21)": [[143, "julearn-0-2-5-2022-07-21"]], "Julearn 0.3.0 (2023-07-19)": [[143, "julearn-0-3-0-2023-07-19"]], "Julearn 0.3.1 (2024-01-23)": [[143, "julearn-0-3-1-2024-01-23"]], "Julearn 0.3.2 (2024-05-03)": [[143, "julearn-0-3-2-2024-05-03"]], "Julearn 0.3.3 (2024-05-16)": [[143, "julearn-0-3-3-2024-05-16"]], "Julearn 0.3.4 (2024-10-17)": [[143, "julearn-0-3-4-2024-10-17"]], "Julearn 0.3.5.dev73 (2025-09-11)": [[143, "julearn-release-2025-09-11"]], "Linear Models": [[119, "linear-models"]], "Main API": [[77, null]], "Maintaining": [[126, null]], "Massively parallelizing julearn with Joblib and HTcondor": [[132, "massively-parallelizing-julearn-with-joblib-and-htcondor"]], "Merging or joining DataFrame": [[91, "merging-or-joining-dataframe"]], "Misc": [[143, "misc"], [143, "id8"], [143, "id13"]], "Model Building": [[142, null]], "Model Comparison": [[95, null], [140, null]], "Model Evaluation": [[141, null]], "Model Selection": [[78, null]], "Models": [[79, null]], "Models (Estimators)": [[119, "models-estimators"]], "Models as hyperparameters": [[130, "models-as-hyperparameters"]], "Multiclass Classification": [[88, null]], "Naive Bayes": [[119, "naive-bayes"]], "Optional Dependencies": [[124, "optional-dependencies"]], "Overhead": [[132, "overhead"]], "Overview of available Pipeline Steps": [[119, null]], "Parallelizing julearn with Joblib": [[132, null]], "Parameters vs Hyperparameters": [[130, "parameters-vs-hyperparameters"]], "Pipeline": [[80, null]], "Pipeline specification in run_cross_validation()": [[142, "pipeline-specification-in-run-cross-validation"]], "Pipeline specification made easy with the PipelineCreator": [[142, "pipeline-specification-made-easy-with-the-pipelinecreator"]], "Pool": [[132, "pool"]], "Prepare": [[81, null]], "Preprocessing with variance threshold, zscore and PCA": [[101, null]], "Random Forest variable importance": [[100, "random-forest-variable-importance"]], "Recursive parallelization": [[132, "recursive-parallelization"]], "References": [[91, "references"], [92, "references"], [99, "references"], [107, "references"], [108, "references"], [109, "references"]], "References:": [[127, null], [128, null], [129, null], [137, null], [142, null]], "Regression Analysis": [[89, null], [106, null]], "Releasing a new version": [[126, "releasing-a-new-version"]], "Removing Confounds from the Features": [[128, "removing-confounds-from-the-features"]], "Removing Confounds from the Target": [[128, "removing-confounds-from-the-target"]], "Requirements": [[124, "requirements"]], "Return Confounds in Confound Removal": [[114, null]], "Returning a model (estimator)": [[141, "returning-a-model-estimator"]], "Running unit tests": [[121, "running-unit-tests"]], "Scalers": [[119, "scalers"]], "Scikit-learn parallelization": [[132, "scikit-learn-parallelization"]], "Score visualizations": [[140, "score-visualizations"]], "Scoring": [[82, null]], "Scoring Metrics": [[82, "module-julearn.scoring.metrics"]], "Scoring metrics": [[141, "scoring-metrics"]], "Searchers": [[130, "searchers"]], "Selected deeper topics": [[131, null]], "Selective preprocessing using feature types": [[142, "selective-preprocessing-using-feature-types"]], "Setting hyperparameters": [[142, "setting-hyperparameters"]], "Setting up the local development environment": [[121, "setting-up-the-local-development-environment"]], "Setup suggestion": [[124, "setup-suggestion"]], "Should I use Confound Regression?": [[128, "should-i-use-confound-regression"]], "Simple Binary Classification": [[93, null]], "Simple Model Comparison": [[96, null]], "Specifying distributions": [[130, "specifying-distributions"]], "Stacking Classification": [[110, null]], "Stacking Models": [[134, null]], "Starting with julearn": [[87, null]], "Statistical comparisons": [[140, "statistical-comparisons"]], "Stats": [[83, null]], "Stratification": [[129, "stratification"]], "Stratified K-fold CV for regression analysis": [[90, null]], "Support Vector Machines": [[119, "support-vector-machines"]], "Table of Contents": [[125, "table-of-contents"], [131, null]], "Target Transformers": [[84, "module-julearn.transformers.target"]], "The essence of run_cross_validation()": [[137, "the-essence-of-run-cross-validation"]], "The output of run_cross_validation()": [[141, "the-output-of-run-cross-validation"]], "Throttling": [[132, "throttling"]], "Transformers": [[84, null], [119, "transformers"]], "Transforming target variable with z-score": [[105, null]], "Tuning Hyperparameters": [[108, null]], "Tuning Hyperparameters using Bayesian Search": [[109, null]], "Tuning Multiple Hyperparameters Grids": [[107, null]], "Tuning more than one grid": [[130, "tuning-more-than-one-grid"]], "Typing": [[85, "module-julearn.utils.typing"]], "Utils": [[85, null]], "Versioning": [[126, "versioning"]], "Visualization": [[86, null]], "Visualizing Progress": [[132, "visualizing-progress"]], "Welcome to julearn\u2019s documentation!": [[125, null]], "What is julearn?": [[125, "what-is-julearn"]], "What you really need to know": [[139, null]], "What\u2019s new": [[143, null]], "Why cross validation?": [[137, null]], "Why julearn?": [[125, "why-julearn"]], "Working with pandas": [[91, null]], "Writing Examples": [[121, "writing-examples"]], "julearn.PipelineCreator": [[2, null]], "julearn.TargetPipelineCreator": [[3, null]], "julearn.base.ColumnTypes": [[4, null]], "julearn.base.ColumnTypesLike": [[5, null]], "julearn.base.JuBaseEstimator": [[6, null]], "julearn.base.JuTransformer": [[7, null]], "julearn.base.WrapModel": [[8, null]], "julearn.base.change_column_type": [[9, null]], "julearn.base.ensure_column_types": [[10, null]], "julearn.base.get_column_type": [[11, null]], "julearn.base.make_type_selector": [[12, null]], "julearn.config.get_config": [[13, null]], "julearn.config.set_config": [[14, null]], "julearn.inspect.FoldsInspector": [[15, null]], "julearn.inspect.Inspector": [[16, null]], "julearn.inspect.preprocess": [[17, null]], "julearn.model_selection.ContinuousStratifiedGroupKFold": [[18, null]], "julearn.model_selection.ContinuousStratifiedKFold": [[19, null]], "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold": [[20, null]], "julearn.model_selection.RepeatedContinuousStratifiedKFold": [[21, null]], "julearn.model_selection.StratifiedBootstrap": [[22, null]], "julearn.model_selection.get_searcher": [[23, null]], "julearn.model_selection.list_searchers": [[24, null]], "julearn.model_selection.register_searcher": [[25, null]], "julearn.model_selection.reset_searcher_register": [[26, null]], "julearn.models.dynamic.DynamicSelection": [[27, null]], "julearn.models.get_model": [[28, null]], "julearn.models.list_models": [[29, null]], "julearn.models.register_model": [[30, null]], "julearn.models.reset_model_register": [[31, null]], "julearn.pipeline.JuTargetPipeline": [[32, null]], "julearn.pipeline.pipeline_creator.Step": [[33, null]], "julearn.prepare.check_consistency": [[34, null]], "julearn.prepare.prepare_input_data": [[35, null]], "julearn.run_cross_validation": [[36, null]], "julearn.run_fit": [[37, null]], "julearn.scoring.check_scoring": [[38, null]], "julearn.scoring.get_scorer": [[39, null]], "julearn.scoring.list_scorers": [[40, null]], "julearn.scoring.metrics.r2_corr": [[41, null]], "julearn.scoring.metrics.r_corr": [[42, null]], "julearn.scoring.register_scorer": [[43, null]], "julearn.scoring.reset_scorer_register": [[44, null]], "julearn.stats.corrected_ttest": [[45, null]], "julearn.transformers.CBPM": [[46, null]], "julearn.transformers.ChangeColumnTypes": [[47, null]], "julearn.transformers.DropColumns": [[48, null]], "julearn.transformers.FilterColumns": [[49, null]], "julearn.transformers.JuColumnTransformer": [[50, null]], "julearn.transformers.SetColumnTypes": [[51, null]], "julearn.transformers.confound_remover.ConfoundRemover": [[52, null]], "julearn.transformers.get_transformer": [[53, null]], "julearn.transformers.list_transformers": [[54, null]], "julearn.transformers.register_transformer": [[55, null]], "julearn.transformers.reset_transformer_register": [[56, null]], "julearn.transformers.target.JuTargetTransformer": [[57, null]], "julearn.transformers.target.JuTransformedTargetModel": [[58, null]], "julearn.transformers.target.TargetConfoundRemover": [[59, null]], "julearn.transformers.target.TransformedTargetWarning": [[60, null]], "julearn.transformers.target.get_target_transformer": [[61, null]], "julearn.transformers.target.list_target_transformers": [[62, null]], "julearn.transformers.target.register_target_transformer": [[63, null]], "julearn.transformers.target.reset_target_transformer_register": [[64, null]], "julearn.utils.configure_logging": [[65, null]], "julearn.utils.logger": [[66, null]], "julearn.utils.raise_error": [[67, null]], "julearn.utils.typing.EstimatorLike": [[68, null]], "julearn.utils.typing.EstimatorLikeFit1": [[69, null]], "julearn.utils.typing.EstimatorLikeFit2": [[70, null]], "julearn.utils.typing.EstimatorLikeFity": [[71, null]], "julearn.utils.typing.JuEstimatorLike": [[72, null]], "julearn.utils.warn_with_log": [[73, null]], "julearn.viz.plot_scores": [[74, null]]}, "docnames": ["api/base", "api/config", "api/generated/julearn.PipelineCreator", "api/generated/julearn.TargetPipelineCreator", "api/generated/julearn.base.ColumnTypes", "api/generated/julearn.base.ColumnTypesLike", "api/generated/julearn.base.JuBaseEstimator", "api/generated/julearn.base.JuTransformer", "api/generated/julearn.base.WrapModel", "api/generated/julearn.base.change_column_type", "api/generated/julearn.base.ensure_column_types", "api/generated/julearn.base.get_column_type", "api/generated/julearn.base.make_type_selector", "api/generated/julearn.config.get_config", "api/generated/julearn.config.set_config", "api/generated/julearn.inspect.FoldsInspector", "api/generated/julearn.inspect.Inspector", "api/generated/julearn.inspect.preprocess", "api/generated/julearn.model_selection.ContinuousStratifiedGroupKFold", "api/generated/julearn.model_selection.ContinuousStratifiedKFold", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedGroupKFold", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedKFold", "api/generated/julearn.model_selection.StratifiedBootstrap", "api/generated/julearn.model_selection.get_searcher", "api/generated/julearn.model_selection.list_searchers", "api/generated/julearn.model_selection.register_searcher", "api/generated/julearn.model_selection.reset_searcher_register", "api/generated/julearn.models.dynamic.DynamicSelection", "api/generated/julearn.models.get_model", "api/generated/julearn.models.list_models", "api/generated/julearn.models.register_model", "api/generated/julearn.models.reset_model_register", "api/generated/julearn.pipeline.JuTargetPipeline", "api/generated/julearn.pipeline.pipeline_creator.Step", "api/generated/julearn.prepare.check_consistency", "api/generated/julearn.prepare.prepare_input_data", "api/generated/julearn.run_cross_validation", "api/generated/julearn.run_fit", "api/generated/julearn.scoring.check_scoring", "api/generated/julearn.scoring.get_scorer", "api/generated/julearn.scoring.list_scorers", "api/generated/julearn.scoring.metrics.r2_corr", "api/generated/julearn.scoring.metrics.r_corr", "api/generated/julearn.scoring.register_scorer", "api/generated/julearn.scoring.reset_scorer_register", "api/generated/julearn.stats.corrected_ttest", "api/generated/julearn.transformers.CBPM", "api/generated/julearn.transformers.ChangeColumnTypes", "api/generated/julearn.transformers.DropColumns", "api/generated/julearn.transformers.FilterColumns", "api/generated/julearn.transformers.JuColumnTransformer", "api/generated/julearn.transformers.SetColumnTypes", "api/generated/julearn.transformers.confound_remover.ConfoundRemover", "api/generated/julearn.transformers.get_transformer", "api/generated/julearn.transformers.list_transformers", "api/generated/julearn.transformers.register_transformer", "api/generated/julearn.transformers.reset_transformer_register", "api/generated/julearn.transformers.target.JuTargetTransformer", "api/generated/julearn.transformers.target.JuTransformedTargetModel", "api/generated/julearn.transformers.target.TargetConfoundRemover", "api/generated/julearn.transformers.target.TransformedTargetWarning", "api/generated/julearn.transformers.target.get_target_transformer", "api/generated/julearn.transformers.target.list_target_transformers", "api/generated/julearn.transformers.target.register_target_transformer", "api/generated/julearn.transformers.target.reset_target_transformer_register", "api/generated/julearn.utils.configure_logging", "api/generated/julearn.utils.logger", "api/generated/julearn.utils.raise_error", "api/generated/julearn.utils.typing.EstimatorLike", "api/generated/julearn.utils.typing.EstimatorLikeFit1", "api/generated/julearn.utils.typing.EstimatorLikeFit2", "api/generated/julearn.utils.typing.EstimatorLikeFity", "api/generated/julearn.utils.typing.JuEstimatorLike", "api/generated/julearn.utils.warn_with_log", "api/generated/julearn.viz.plot_scores", "api/index", "api/inspect", "api/main", "api/model_selection", "api/models", "api/pipeline", "api/prepare", "api/scoring", "api/stats", "api/transformers", "api/utils", "api/viz", "auto_examples/00_starting/index", "auto_examples/00_starting/plot_cm_acc_multiclass", "auto_examples/00_starting/plot_example_regression", "auto_examples/00_starting/plot_stratified_kfold_reg", "auto_examples/00_starting/run_combine_pandas", "auto_examples/00_starting/run_grouped_cv", "auto_examples/00_starting/run_simple_binary_classification", "auto_examples/00_starting/sg_execution_times", "auto_examples/01_model_comparison/index", "auto_examples/01_model_comparison/plot_simple_model_comparison", "auto_examples/01_model_comparison/sg_execution_times", "auto_examples/02_inspection/index", "auto_examples/02_inspection/plot_groupcv_inspect_svm", "auto_examples/02_inspection/plot_inspect_random_forest", "auto_examples/02_inspection/plot_preprocess", "auto_examples/02_inspection/run_binary_inspect_folds", "auto_examples/02_inspection/sg_execution_times", "auto_examples/03_complex_models/index", "auto_examples/03_complex_models/run_apply_to_target", "auto_examples/03_complex_models/run_example_pca_featsets", "auto_examples/03_complex_models/run_hyperparameter_multiple_grids", "auto_examples/03_complex_models/run_hyperparameter_tuning", "auto_examples/03_complex_models/run_hyperparameter_tuning_bayessearch", "auto_examples/03_complex_models/run_stacked_models", "auto_examples/03_complex_models/sg_execution_times", "auto_examples/04_confounds/index", "auto_examples/04_confounds/plot_confound_removal_classification", "auto_examples/04_confounds/run_return_confounds", "auto_examples/04_confounds/sg_execution_times", "auto_examples/05_customization/index", "auto_examples/05_customization/run_custom_scorers_regression", "auto_examples/05_customization/sg_execution_times", "available_pipeline_steps", "configuration", "contributing", "examples", "faq", "getting_started", "index", "maintaining", "selected_deeper_topics/CBPM", "selected_deeper_topics/confound_removal", "selected_deeper_topics/cross_validation_splitter", "selected_deeper_topics/hyperparameter_tuning", "selected_deeper_topics/index", "selected_deeper_topics/joblib", "selected_deeper_topics/model_inspect", "selected_deeper_topics/stacked_models", "selected_deeper_topics/target_transformers", "sg_execution_times", "what_really_need_know/cross_validation", "what_really_need_know/data", "what_really_need_know/index", "what_really_need_know/model_comparison", "what_really_need_know/model_evaluation", "what_really_need_know/pipeline", "whats_new"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api/base.rst", "api/config.rst", "api/generated/julearn.PipelineCreator.rst", "api/generated/julearn.TargetPipelineCreator.rst", "api/generated/julearn.base.ColumnTypes.rst", "api/generated/julearn.base.ColumnTypesLike.rst", "api/generated/julearn.base.JuBaseEstimator.rst", "api/generated/julearn.base.JuTransformer.rst", "api/generated/julearn.base.WrapModel.rst", "api/generated/julearn.base.change_column_type.rst", "api/generated/julearn.base.ensure_column_types.rst", "api/generated/julearn.base.get_column_type.rst", "api/generated/julearn.base.make_type_selector.rst", "api/generated/julearn.config.get_config.rst", "api/generated/julearn.config.set_config.rst", "api/generated/julearn.inspect.FoldsInspector.rst", "api/generated/julearn.inspect.Inspector.rst", "api/generated/julearn.inspect.preprocess.rst", "api/generated/julearn.model_selection.ContinuousStratifiedGroupKFold.rst", "api/generated/julearn.model_selection.ContinuousStratifiedKFold.rst", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.rst", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedKFold.rst", "api/generated/julearn.model_selection.StratifiedBootstrap.rst", "api/generated/julearn.model_selection.get_searcher.rst", "api/generated/julearn.model_selection.list_searchers.rst", "api/generated/julearn.model_selection.register_searcher.rst", "api/generated/julearn.model_selection.reset_searcher_register.rst", "api/generated/julearn.models.dynamic.DynamicSelection.rst", "api/generated/julearn.models.get_model.rst", "api/generated/julearn.models.list_models.rst", "api/generated/julearn.models.register_model.rst", "api/generated/julearn.models.reset_model_register.rst", "api/generated/julearn.pipeline.JuTargetPipeline.rst", "api/generated/julearn.pipeline.pipeline_creator.Step.rst", "api/generated/julearn.prepare.check_consistency.rst", "api/generated/julearn.prepare.prepare_input_data.rst", "api/generated/julearn.run_cross_validation.rst", "api/generated/julearn.run_fit.rst", "api/generated/julearn.scoring.check_scoring.rst", "api/generated/julearn.scoring.get_scorer.rst", "api/generated/julearn.scoring.list_scorers.rst", "api/generated/julearn.scoring.metrics.r2_corr.rst", "api/generated/julearn.scoring.metrics.r_corr.rst", "api/generated/julearn.scoring.register_scorer.rst", "api/generated/julearn.scoring.reset_scorer_register.rst", "api/generated/julearn.stats.corrected_ttest.rst", "api/generated/julearn.transformers.CBPM.rst", "api/generated/julearn.transformers.ChangeColumnTypes.rst", "api/generated/julearn.transformers.DropColumns.rst", "api/generated/julearn.transformers.FilterColumns.rst", "api/generated/julearn.transformers.JuColumnTransformer.rst", "api/generated/julearn.transformers.SetColumnTypes.rst", "api/generated/julearn.transformers.confound_remover.ConfoundRemover.rst", "api/generated/julearn.transformers.get_transformer.rst", "api/generated/julearn.transformers.list_transformers.rst", "api/generated/julearn.transformers.register_transformer.rst", "api/generated/julearn.transformers.reset_transformer_register.rst", "api/generated/julearn.transformers.target.JuTargetTransformer.rst", "api/generated/julearn.transformers.target.JuTransformedTargetModel.rst", "api/generated/julearn.transformers.target.TargetConfoundRemover.rst", "api/generated/julearn.transformers.target.TransformedTargetWarning.rst", "api/generated/julearn.transformers.target.get_target_transformer.rst", "api/generated/julearn.transformers.target.list_target_transformers.rst", "api/generated/julearn.transformers.target.register_target_transformer.rst", "api/generated/julearn.transformers.target.reset_target_transformer_register.rst", "api/generated/julearn.utils.configure_logging.rst", "api/generated/julearn.utils.logger.rst", "api/generated/julearn.utils.raise_error.rst", "api/generated/julearn.utils.typing.EstimatorLike.rst", "api/generated/julearn.utils.typing.EstimatorLikeFit1.rst", "api/generated/julearn.utils.typing.EstimatorLikeFit2.rst", "api/generated/julearn.utils.typing.EstimatorLikeFity.rst", "api/generated/julearn.utils.typing.JuEstimatorLike.rst", "api/generated/julearn.utils.warn_with_log.rst", "api/generated/julearn.viz.plot_scores.rst", "api/index.rst", "api/inspect.rst", "api/main.rst", "api/model_selection.rst", "api/models.rst", "api/pipeline.rst", "api/prepare.rst", "api/scoring.rst", "api/stats.rst", "api/transformers.rst", "api/utils.rst", "api/viz.rst", "auto_examples/00_starting/index.rst", "auto_examples/00_starting/plot_cm_acc_multiclass.rst", "auto_examples/00_starting/plot_example_regression.rst", "auto_examples/00_starting/plot_stratified_kfold_reg.rst", "auto_examples/00_starting/run_combine_pandas.rst", "auto_examples/00_starting/run_grouped_cv.rst", "auto_examples/00_starting/run_simple_binary_classification.rst", "auto_examples/00_starting/sg_execution_times.rst", "auto_examples/01_model_comparison/index.rst", "auto_examples/01_model_comparison/plot_simple_model_comparison.rst", "auto_examples/01_model_comparison/sg_execution_times.rst", "auto_examples/02_inspection/index.rst", "auto_examples/02_inspection/plot_groupcv_inspect_svm.rst", "auto_examples/02_inspection/plot_inspect_random_forest.rst", "auto_examples/02_inspection/plot_preprocess.rst", "auto_examples/02_inspection/run_binary_inspect_folds.rst", "auto_examples/02_inspection/sg_execution_times.rst", "auto_examples/03_complex_models/index.rst", "auto_examples/03_complex_models/run_apply_to_target.rst", "auto_examples/03_complex_models/run_example_pca_featsets.rst", "auto_examples/03_complex_models/run_hyperparameter_multiple_grids.rst", "auto_examples/03_complex_models/run_hyperparameter_tuning.rst", "auto_examples/03_complex_models/run_hyperparameter_tuning_bayessearch.rst", "auto_examples/03_complex_models/run_stacked_models.rst", "auto_examples/03_complex_models/sg_execution_times.rst", "auto_examples/04_confounds/index.rst", "auto_examples/04_confounds/plot_confound_removal_classification.rst", "auto_examples/04_confounds/run_return_confounds.rst", "auto_examples/04_confounds/sg_execution_times.rst", "auto_examples/05_customization/index.rst", "auto_examples/05_customization/run_custom_scorers_regression.rst", "auto_examples/05_customization/sg_execution_times.rst", "available_pipeline_steps.rst", "configuration.rst", "contributing.rst", "examples.rst", "faq.rst", "getting_started.rst", "index.rst", "maintaining.rst", "selected_deeper_topics/CBPM.rst", "selected_deeper_topics/confound_removal.rst", "selected_deeper_topics/cross_validation_splitter.rst", "selected_deeper_topics/hyperparameter_tuning.rst", "selected_deeper_topics/index.rst", "selected_deeper_topics/joblib.rst", "selected_deeper_topics/model_inspect.rst", "selected_deeper_topics/stacked_models.rst", "selected_deeper_topics/target_transformers.rst", "sg_execution_times.rst", "what_really_need_know/cross_validation.rst", "what_really_need_know/data.rst", "what_really_need_know/index.rst", "what_really_need_know/model_comparison.rst", "what_really_need_know/model_evaluation.rst", "what_really_need_know/pipeline.rst", "whats_new.rst"], "indexentries": {"__init__() (julearn.base.columntypes method)": [[4, "julearn.base.ColumnTypes.__init__", false]], "__init__() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.__init__", false]], "__init__() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.__init__", false]], "__init__() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.__init__", false]], "__init__() (julearn.inspect.foldsinspector method)": [[15, "julearn.inspect.FoldsInspector.__init__", false]], "__init__() (julearn.inspect.inspector method)": [[16, "julearn.inspect.Inspector.__init__", false]], "__init__() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[18, "julearn.model_selection.ContinuousStratifiedGroupKFold.__init__", false]], "__init__() (julearn.model_selection.continuousstratifiedkfold method)": [[19, "julearn.model_selection.ContinuousStratifiedKFold.__init__", false]], "__init__() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[20, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.__init__", false]], "__init__() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[21, "julearn.model_selection.RepeatedContinuousStratifiedKFold.__init__", false]], "__init__() (julearn.model_selection.stratifiedbootstrap method)": [[22, "julearn.model_selection.StratifiedBootstrap.__init__", false]], "__init__() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.__init__", false]], "__init__() (julearn.pipeline.jutargetpipeline method)": [[32, "julearn.pipeline.JuTargetPipeline.__init__", false]], "__init__() (julearn.pipeline.pipeline_creator.step method)": [[33, "julearn.pipeline.pipeline_creator.Step.__init__", false]], "__init__() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.__init__", false]], "__init__() (julearn.targetpipelinecreator method)": [[3, "julearn.TargetPipelineCreator.__init__", false]], "__init__() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.__init__", false]], "__init__() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.__init__", false]], "__init__() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.__init__", false]], "__init__() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.__init__", false]], "__init__() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.__init__", false]], "__init__() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.__init__", false]], "__init__() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.__init__", false]], "__init__() (julearn.transformers.target.jutargettransformer method)": [[57, "julearn.transformers.target.JuTargetTransformer.__init__", false]], "__init__() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.__init__", false]], "__init__() (julearn.transformers.target.targetconfoundremover method)": [[59, "julearn.transformers.target.TargetConfoundRemover.__init__", false]], "__init__() (julearn.transformers.target.transformedtargetwarning method)": [[60, "julearn.transformers.target.TransformedTargetWarning.__init__", false]], "__init__() (julearn.utils.typing.estimatorlikefit1 method)": [[69, "julearn.utils.typing.EstimatorLikeFit1.__init__", false]], "__init__() (julearn.utils.typing.estimatorlikefit2 method)": [[70, "julearn.utils.typing.EstimatorLikeFit2.__init__", false]], "__init__() (julearn.utils.typing.estimatorlikefity method)": [[71, "julearn.utils.typing.EstimatorLikeFity.__init__", false]], "__init__() (julearn.utils.typing.juestimatorlike method)": [[72, "julearn.utils.typing.JuEstimatorLike.__init__", false]], "add() (julearn.base.columntypes method)": [[4, "julearn.base.ColumnTypes.add", false]], "add() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.add", false]], "add() (julearn.targetpipelinecreator method)": [[3, "julearn.TargetPipelineCreator.add", false]], "add_note() (julearn.transformers.target.transformedtargetwarning method)": [[60, "julearn.transformers.target.TransformedTargetWarning.add_note", false]], "aggregate() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.aggregate", false]], "apply_to (julearn.pipeline.pipeline_creator.step attribute)": [[33, "julearn.pipeline.pipeline_creator.Step.apply_to", false]], "args (julearn.transformers.target.transformedtargetwarning attribute)": [[60, "julearn.transformers.target.TransformedTargetWarning.args", false]], "can_inverse_transform() (julearn.pipeline.jutargetpipeline method)": [[32, "julearn.pipeline.JuTargetPipeline.can_inverse_transform", false]], "can_inverse_transform() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.can_inverse_transform", false]], "cbpm (class in julearn.transformers)": [[46, "julearn.transformers.CBPM", false]], "change_column_type() (in module julearn.base)": [[9, "julearn.base.change_column_type", false]], "changecolumntypes (class in julearn.transformers)": [[47, "julearn.transformers.ChangeColumnTypes", false]], "check_consistency() (in module julearn.prepare)": [[34, "julearn.prepare.check_consistency", false]], "check_scoring() (in module julearn.scoring)": [[38, "julearn.scoring.check_scoring", false]], "classes_ (julearn.base.wrapmodel property)": [[8, "julearn.base.WrapModel.classes_", false]], "classes_ (julearn.transformers.target.jutransformedtargetmodel property)": [[58, "julearn.transformers.target.JuTransformedTargetModel.classes_", false]], "columntypes (class in julearn.base)": [[4, "julearn.base.ColumnTypes", false]], "columntypeslike (in module julearn.base)": [[5, "julearn.base.ColumnTypesLike", false]], "configure_logging() (in module julearn.utils)": [[65, "julearn.utils.configure_logging", false]], "confoundremover (class in julearn.transformers.confound_remover)": [[52, "julearn.transformers.confound_remover.ConfoundRemover", false]], "continuousstratifiedgroupkfold (class in julearn.model_selection)": [[18, "julearn.model_selection.ContinuousStratifiedGroupKFold", false]], "continuousstratifiedkfold (class in julearn.model_selection)": [[19, "julearn.model_selection.ContinuousStratifiedKFold", false]], "copy() (julearn.base.columntypes method)": [[4, "julearn.base.ColumnTypes.copy", false]], "copy() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.copy", false]], "corrected_ttest() (in module julearn.stats)": [[45, "julearn.stats.corrected_ttest", false]], "decision_function() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.decision_function", false]], "decision_function() (julearn.inspect.foldsinspector method)": [[15, "julearn.inspect.FoldsInspector.decision_function", false]], "decision_function() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.decision_function", false]], "dropcolumns (class in julearn.transformers)": [[48, "julearn.transformers.DropColumns", false]], "dynamicselection (class in julearn.models.dynamic)": [[27, "julearn.models.dynamic.DynamicSelection", false]], "ensure_column_types() (in module julearn.base)": [[10, "julearn.base.ensure_column_types", false]], "estimator (julearn.pipeline.pipeline_creator.step attribute)": [[33, "julearn.pipeline.pipeline_creator.Step.estimator", false]], "estimatorlike (in module julearn.utils.typing)": [[68, "julearn.utils.typing.EstimatorLike", false]], "estimatorlikefit1 (class in julearn.utils.typing)": [[69, "julearn.utils.typing.EstimatorLikeFit1", false]], "estimatorlikefit2 (class in julearn.utils.typing)": [[70, "julearn.utils.typing.EstimatorLikeFit2", false]], "estimatorlikefity (class in julearn.utils.typing)": [[71, "julearn.utils.typing.EstimatorLikeFity", false]], "filter_columns() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.filter_columns", false]], "filter_columns() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.filter_columns", false]], "filter_columns() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.filter_columns", false]], "filter_columns() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.filter_columns", false]], "filter_columns() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.filter_columns", false]], "filter_columns() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.filter_columns", false]], "filter_columns() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.filter_columns", false]], "filter_columns() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.filter_columns", false]], "filter_columns() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.filter_columns", false]], "filter_columns() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.filter_columns", false]], "filtercolumns (class in julearn.transformers)": [[49, "julearn.transformers.FilterColumns", false]], "fit() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.fit", false]], "fit() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.fit", false]], "fit() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.fit", false]], "fit() (julearn.pipeline.jutargetpipeline method)": [[32, "julearn.pipeline.JuTargetPipeline.fit", false]], "fit() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.fit", false]], "fit() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.fit", false]], "fit() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.fit", false]], "fit() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.fit", false]], "fit() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.fit", false]], "fit() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.fit", false]], "fit() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.fit", false]], "fit() (julearn.transformers.target.jutargettransformer method)": [[57, "julearn.transformers.target.JuTargetTransformer.fit", false]], "fit() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.fit", false]], "fit() (julearn.transformers.target.targetconfoundremover method)": [[59, "julearn.transformers.target.TargetConfoundRemover.fit", false]], "fit() (julearn.utils.typing.estimatorlikefit1 method)": [[69, "julearn.utils.typing.EstimatorLikeFit1.fit", false]], "fit() (julearn.utils.typing.estimatorlikefit2 method)": [[70, "julearn.utils.typing.EstimatorLikeFit2.fit", false]], "fit() (julearn.utils.typing.estimatorlikefity method)": [[71, "julearn.utils.typing.EstimatorLikeFity.fit", false]], "fit() (julearn.utils.typing.juestimatorlike method)": [[72, "julearn.utils.typing.JuEstimatorLike.fit", false]], "fit_transform() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.fit_transform", false]], "fit_transform() (julearn.pipeline.jutargetpipeline method)": [[32, "julearn.pipeline.JuTargetPipeline.fit_transform", false]], "fit_transform() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.fit_transform", false]], "fit_transform() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.fit_transform", false]], "fit_transform() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.fit_transform", false]], "fit_transform() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.fit_transform", false]], "fit_transform() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.fit_transform", false]], "fit_transform() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.fit_transform", false]], "fit_transform() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.fit_transform", false]], "fit_transform() (julearn.transformers.target.jutargettransformer method)": [[57, "julearn.transformers.target.JuTargetTransformer.fit_transform", false]], "fit_transform() (julearn.transformers.target.targetconfoundremover method)": [[59, "julearn.transformers.target.TargetConfoundRemover.fit_transform", false]], "folds (julearn.inspect.inspector property)": [[16, "julearn.inspect.Inspector.folds", false]], "foldsinspector (class in julearn.inspect)": [[15, "julearn.inspect.FoldsInspector", false]], "from_list() (julearn.pipelinecreator class method)": [[2, "julearn.PipelineCreator.from_list", false]], "get_apply_to() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.get_apply_to", false]], "get_apply_to() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.get_apply_to", false]], "get_apply_to() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.get_apply_to", false]], "get_apply_to() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.get_apply_to", false]], "get_apply_to() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.get_apply_to", false]], "get_apply_to() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.get_apply_to", false]], "get_apply_to() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.get_apply_to", false]], "get_apply_to() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.get_apply_to", false]], "get_apply_to() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.get_apply_to", false]], "get_apply_to() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.get_apply_to", false]], "get_apply_to() (julearn.utils.typing.juestimatorlike method)": [[72, "julearn.utils.typing.JuEstimatorLike.get_apply_to", false]], "get_column_type() (in module julearn.base)": [[11, "julearn.base.get_column_type", false]], "get_config() (in module julearn.config)": [[13, "julearn.config.get_config", false]], "get_feature_names_out() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.get_feature_names_out", false]], "get_feature_names_out() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.get_feature_names_out", false]], "get_feature_names_out() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.get_feature_names_out", false]], "get_feature_names_out() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.get_feature_names_out", false]], "get_feature_names_out() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.get_feature_names_out", false]], "get_feature_names_out() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.get_feature_names_out", false]], "get_metadata_routing() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.get_metadata_routing", false]], "get_metadata_routing() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.get_metadata_routing", false]], "get_metadata_routing() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.get_metadata_routing", false]], "get_metadata_routing() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[18, "julearn.model_selection.ContinuousStratifiedGroupKFold.get_metadata_routing", false]], "get_metadata_routing() (julearn.model_selection.continuousstratifiedkfold method)": [[19, "julearn.model_selection.ContinuousStratifiedKFold.get_metadata_routing", false]], "get_metadata_routing() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[20, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.get_metadata_routing", false]], "get_metadata_routing() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[21, "julearn.model_selection.RepeatedContinuousStratifiedKFold.get_metadata_routing", false]], "get_metadata_routing() (julearn.model_selection.stratifiedbootstrap method)": [[22, "julearn.model_selection.StratifiedBootstrap.get_metadata_routing", false]], "get_metadata_routing() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.get_metadata_routing", false]], "get_metadata_routing() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.get_metadata_routing", false]], "get_model() (in module julearn.models)": [[28, "julearn.models.get_model", false]], "get_n_splits() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[18, "julearn.model_selection.ContinuousStratifiedGroupKFold.get_n_splits", false]], "get_n_splits() (julearn.model_selection.continuousstratifiedkfold method)": [[19, "julearn.model_selection.ContinuousStratifiedKFold.get_n_splits", false]], "get_n_splits() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[20, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.get_n_splits", false]], "get_n_splits() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[21, "julearn.model_selection.RepeatedContinuousStratifiedKFold.get_n_splits", false]], "get_n_splits() (julearn.model_selection.stratifiedbootstrap method)": [[22, "julearn.model_selection.StratifiedBootstrap.get_n_splits", false]], "get_needed_types() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.get_needed_types", false]], "get_needed_types() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.get_needed_types", false]], "get_needed_types() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.get_needed_types", false]], "get_needed_types() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.get_needed_types", false]], "get_needed_types() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.get_needed_types", false]], "get_needed_types() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.get_needed_types", false]], "get_needed_types() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.get_needed_types", false]], "get_needed_types() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.get_needed_types", false]], "get_needed_types() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.get_needed_types", false]], "get_needed_types() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.get_needed_types", false]], "get_needed_types() (julearn.utils.typing.juestimatorlike method)": [[72, "julearn.utils.typing.JuEstimatorLike.get_needed_types", false]], "get_params() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.get_params", false]], "get_params() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.get_params", false]], "get_params() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.get_params", false]], "get_params() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.get_params", false]], "get_params() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.get_params", false]], "get_params() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.get_params", false]], "get_params() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.get_params", false]], "get_params() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.get_params", false]], "get_params() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.get_params", false]], "get_params() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.get_params", false]], "get_params() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.get_params", false]], "get_params() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.get_params", false]], "get_params() (julearn.utils.typing.estimatorlikefit1 method)": [[69, "julearn.utils.typing.EstimatorLikeFit1.get_params", false]], "get_params() (julearn.utils.typing.estimatorlikefit2 method)": [[70, "julearn.utils.typing.EstimatorLikeFit2.get_params", false]], "get_params() (julearn.utils.typing.estimatorlikefity method)": [[71, "julearn.utils.typing.EstimatorLikeFity.get_params", false]], "get_params() (julearn.utils.typing.juestimatorlike method)": [[72, "julearn.utils.typing.JuEstimatorLike.get_params", false]], "get_scorer() (in module julearn.scoring)": [[39, "julearn.scoring.get_scorer", false]], "get_searcher() (in module julearn.model_selection)": [[23, "julearn.model_selection.get_searcher", false]], "get_support() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.get_support", false]], "get_support() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.get_support", false]], "get_target_transformer() (in module julearn.transformers.target)": [[61, "julearn.transformers.target.get_target_transformer", false]], "get_transformer() (in module julearn.transformers)": [[53, "julearn.transformers.get_transformer", false]], "has_model() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.has_model", false]], "inspector (class in julearn.inspect)": [[16, "julearn.inspect.Inspector", false]], "inverse_transform() (julearn.pipeline.jutargetpipeline method)": [[32, "julearn.pipeline.JuTargetPipeline.inverse_transform", false]], "jubaseestimator (class in julearn.base)": [[6, "julearn.base.JuBaseEstimator", false]], "jucolumntransformer (class in julearn.transformers)": [[50, "julearn.transformers.JuColumnTransformer", false]], "juestimatorlike (class in julearn.utils.typing)": [[72, "julearn.utils.typing.JuEstimatorLike", false]], "julearn.api": [[77, "module-julearn.api", false]], "julearn.base": [[0, "module-julearn.base", false]], "julearn.config": [[1, "module-julearn.config", false]], "julearn.inspect": [[76, "module-julearn.inspect", false]], "julearn.model_selection": [[78, "module-julearn.model_selection", false]], "julearn.models": [[79, "module-julearn.models", false]], "julearn.models.dynamic": [[79, "module-julearn.models.dynamic", false]], "julearn.pipeline": [[80, "module-julearn.pipeline", false]], "julearn.prepare": [[81, "module-julearn.prepare", false]], "julearn.scoring": [[82, "module-julearn.scoring", false]], "julearn.scoring.metrics": [[82, "module-julearn.scoring.metrics", false]], "julearn.stats": [[83, "module-julearn.stats", false]], "julearn.transformers": [[84, "module-julearn.transformers", false]], "julearn.transformers.target": [[84, "module-julearn.transformers.target", false]], "julearn.utils": [[85, "module-julearn.utils", false]], "julearn.utils.typing": [[85, "module-julearn.utils.typing", false]], "julearn.viz": [[86, "module-julearn.viz", false]], "jutargetpipeline (class in julearn.pipeline)": [[32, "julearn.pipeline.JuTargetPipeline", false]], "jutargettransformer (class in julearn.transformers.target)": [[57, "julearn.transformers.target.JuTargetTransformer", false]], "jutransformedtargetmodel (class in julearn.transformers.target)": [[58, "julearn.transformers.target.JuTransformedTargetModel", false]], "jutransformer (class in julearn.base)": [[7, "julearn.base.JuTransformer", false]], "list_models() (in module julearn.models)": [[29, "julearn.models.list_models", false]], "list_scorers() (in module julearn.scoring)": [[40, "julearn.scoring.list_scorers", false]], "list_searchers() (in module julearn.model_selection)": [[24, "julearn.model_selection.list_searchers", false]], "list_target_transformers() (in module julearn.transformers.target)": [[62, "julearn.transformers.target.list_target_transformers", false]], "list_transformers() (in module julearn.transformers)": [[54, "julearn.transformers.list_transformers", false]], "logger (in module julearn.utils)": [[66, "julearn.utils.logger", false]], "make_type_selector() (in module julearn.base)": [[12, "julearn.base.make_type_selector", false]], "model (julearn.inspect.inspector property)": [[16, "julearn.inspect.Inspector.model", false]], "module": [[0, "module-julearn.base", false], [1, "module-julearn.config", false], [76, "module-julearn.inspect", false], [77, "module-julearn.api", false], [78, "module-julearn.model_selection", false], [79, "module-julearn.models", false], [79, "module-julearn.models.dynamic", false], [80, "module-julearn.pipeline", false], [81, "module-julearn.prepare", false], [82, "module-julearn.scoring", false], [82, "module-julearn.scoring.metrics", false], [83, "module-julearn.stats", false], [84, "module-julearn.transformers", false], [84, "module-julearn.transformers.target", false], [85, "module-julearn.utils", false], [85, "module-julearn.utils.typing", false], [86, "module-julearn.viz", false]], "name (julearn.pipeline.pipeline_creator.step attribute)": [[33, "julearn.pipeline.pipeline_creator.Step.name", false]], "needed_types (julearn.pipeline.jutargetpipeline property)": [[32, "julearn.pipeline.JuTargetPipeline.needed_types", false]], "needed_types (julearn.pipeline.pipeline_creator.step attribute)": [[33, "julearn.pipeline.pipeline_creator.Step.needed_types", false]], "needed_types (julearn.transformers.target.targetconfoundremover property)": [[59, "julearn.transformers.target.TargetConfoundRemover.needed_types", false]], "params_to_tune (julearn.pipeline.pipeline_creator.step attribute)": [[33, "julearn.pipeline.pipeline_creator.Step.params_to_tune", false]], "pattern (julearn.base.columntypes property)": [[4, "julearn.base.ColumnTypes.pattern", false]], "pipelinecreator (class in julearn)": [[2, "julearn.PipelineCreator", false]], "plot_scores() (in module julearn.viz)": [[74, "julearn.viz.plot_scores", false]], "predict() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.predict", false]], "predict() (julearn.inspect.foldsinspector method)": [[15, "julearn.inspect.FoldsInspector.predict", false]], "predict() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.predict", false]], "predict() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.predict", false]], "predict_log_proba() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.predict_log_proba", false]], "predict_log_proba() (julearn.inspect.foldsinspector method)": [[15, "julearn.inspect.FoldsInspector.predict_log_proba", false]], "predict_proba() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.predict_proba", false]], "predict_proba() (julearn.inspect.foldsinspector method)": [[15, "julearn.inspect.FoldsInspector.predict_proba", false]], "predict_proba() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.predict_proba", false]], "predict_proba() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.predict_proba", false]], "prepare_input_data() (in module julearn.prepare)": [[35, "julearn.prepare.prepare_input_data", false]], "preprocess() (in module julearn.inspect)": [[17, "julearn.inspect.preprocess", false]], "r2_corr() (in module julearn.scoring.metrics)": [[41, "julearn.scoring.metrics.r2_corr", false]], "r_corr() (in module julearn.scoring.metrics)": [[42, "julearn.scoring.metrics.r_corr", false]], "raise_error() (in module julearn.utils)": [[67, "julearn.utils.raise_error", false]], "register_model() (in module julearn.models)": [[30, "julearn.models.register_model", false]], "register_scorer() (in module julearn.scoring)": [[43, "julearn.scoring.register_scorer", false]], "register_searcher() (in module julearn.model_selection)": [[25, "julearn.model_selection.register_searcher", false]], "register_target_transformer() (in module julearn.transformers.target)": [[63, "julearn.transformers.target.register_target_transformer", false]], "register_transformer() (in module julearn.transformers)": [[55, "julearn.transformers.register_transformer", false]], "repeatedcontinuousstratifiedgroupkfold (class in julearn.model_selection)": [[20, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold", false]], "repeatedcontinuousstratifiedkfold (class in julearn.model_selection)": [[21, "julearn.model_selection.RepeatedContinuousStratifiedKFold", false]], "reset_model_register() (in module julearn.models)": [[31, "julearn.models.reset_model_register", false]], "reset_scorer_register() (in module julearn.scoring)": [[44, "julearn.scoring.reset_scorer_register", false]], "reset_searcher_register() (in module julearn.model_selection)": [[26, "julearn.model_selection.reset_searcher_register", false]], "reset_target_transformer_register() (in module julearn.transformers.target)": [[64, "julearn.transformers.target.reset_target_transformer_register", false]], "reset_transformer_register() (in module julearn.transformers)": [[56, "julearn.transformers.reset_transformer_register", false]], "row_select_col_type (julearn.pipeline.pipeline_creator.step attribute)": [[33, "julearn.pipeline.pipeline_creator.Step.row_select_col_type", false]], "row_select_vals (julearn.pipeline.pipeline_creator.step attribute)": [[33, "julearn.pipeline.pipeline_creator.Step.row_select_vals", false]], "run_cross_validation() (in module julearn)": [[36, "julearn.run_cross_validation", false]], "run_fit() (in module julearn)": [[37, "julearn.run_fit", false]], "score() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.score", false]], "score() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.score", false]], "score() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.score", false]], "set_config() (in module julearn.config)": [[14, "julearn.config.set_config", false]], "set_output() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.set_output", false]], "set_output() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.set_output", false]], "set_output() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.set_output", false]], "set_output() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.set_output", false]], "set_output() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.set_output", false]], "set_output() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.set_output", false]], "set_output() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.set_output", false]], "set_output() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.set_output", false]], "set_params() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.set_params", false]], "set_params() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.set_params", false]], "set_params() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.set_params", false]], "set_params() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.set_params", false]], "set_params() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.set_params", false]], "set_params() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.set_params", false]], "set_params() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.set_params", false]], "set_params() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.set_params", false]], "set_params() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.set_params", false]], "set_params() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.set_params", false]], "set_params() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.set_params", false]], "set_params() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.set_params", false]], "set_params() (julearn.utils.typing.estimatorlikefit1 method)": [[69, "julearn.utils.typing.EstimatorLikeFit1.set_params", false]], "set_params() (julearn.utils.typing.estimatorlikefit2 method)": [[70, "julearn.utils.typing.EstimatorLikeFit2.set_params", false]], "set_params() (julearn.utils.typing.estimatorlikefity method)": [[71, "julearn.utils.typing.EstimatorLikeFity.set_params", false]], "set_params() (julearn.utils.typing.juestimatorlike method)": [[72, "julearn.utils.typing.JuEstimatorLike.set_params", false]], "set_score_request() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.set_score_request", false]], "set_split_request() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[18, "julearn.model_selection.ContinuousStratifiedGroupKFold.set_split_request", false]], "setcolumntypes (class in julearn.transformers)": [[51, "julearn.transformers.SetColumnTypes", false]], "split() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[18, "julearn.model_selection.ContinuousStratifiedGroupKFold.split", false]], "split() (julearn.model_selection.continuousstratifiedkfold method)": [[19, "julearn.model_selection.ContinuousStratifiedKFold.split", false]], "split() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[20, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.split", false]], "split() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[21, "julearn.model_selection.RepeatedContinuousStratifiedKFold.split", false]], "split() (julearn.model_selection.stratifiedbootstrap method)": [[22, "julearn.model_selection.StratifiedBootstrap.split", false]], "split() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.split", false]], "step (class in julearn.pipeline.pipeline_creator)": [[33, "julearn.pipeline.pipeline_creator.Step", false]], "steps (julearn.pipelinecreator property)": [[2, "julearn.PipelineCreator.steps", false]], "stratifiedbootstrap (class in julearn.model_selection)": [[22, "julearn.model_selection.StratifiedBootstrap", false]], "targetconfoundremover (class in julearn.transformers.target)": [[59, "julearn.transformers.target.TargetConfoundRemover", false]], "targetpipelinecreator (class in julearn)": [[3, "julearn.TargetPipelineCreator", false]], "to_pipeline() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.to_pipeline", false]], "to_pipeline() (julearn.targetpipelinecreator method)": [[3, "julearn.TargetPipelineCreator.to_pipeline", false]], "to_type_selector() (julearn.base.columntypes method)": [[4, "julearn.base.ColumnTypes.to_type_selector", false]], "transform() (julearn.pipeline.jutargetpipeline method)": [[32, "julearn.pipeline.JuTargetPipeline.transform", false]], "transform() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.transform", false]], "transform() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.transform", false]], "transform() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.transform", false]], "transform() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.transform", false]], "transform() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.transform", false]], "transform() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.transform", false]], "transform() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.transform", false]], "transform() (julearn.transformers.target.jutargettransformer method)": [[57, "julearn.transformers.target.JuTargetTransformer.transform", false]], "transform() (julearn.transformers.target.targetconfoundremover method)": [[59, "julearn.transformers.target.TargetConfoundRemover.transform", false]], "transform_target() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.transform_target", false]], "transformedtargetwarning (class in julearn.transformers.target)": [[60, "julearn.transformers.target.TransformedTargetWarning", false]], "warn_with_log() (in module julearn.utils)": [[73, "julearn.utils.warn_with_log", false]], "with_traceback() (julearn.transformers.target.transformedtargetwarning method)": [[60, "julearn.transformers.target.TransformedTargetWarning.with_traceback", false]], "wrapmodel (class in julearn.base)": [[8, "julearn.base.WrapModel", false]]}, "objects": {"julearn": [[2, 0, 1, "", "PipelineCreator"], [3, 0, 1, "", "TargetPipelineCreator"], [77, 3, 0, "-", "api"], [0, 3, 0, "-", "base"], [1, 3, 0, "-", "config"], [76, 3, 0, "-", "inspect"], [78, 3, 0, "-", "model_selection"], [79, 3, 0, "-", "models"], [80, 3, 0, "-", "pipeline"], [81, 3, 0, "-", "prepare"], [36, 5, 1, "", "run_cross_validation"], [37, 5, 1, "", "run_fit"], [82, 3, 0, "-", "scoring"], [83, 3, 0, "-", "stats"], [84, 3, 0, "-", "transformers"], [85, 3, 0, "-", "utils"], [86, 3, 0, "-", "viz"]], "julearn.PipelineCreator": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "add"], [2, 1, 1, "", "copy"], [2, 1, 1, "", "from_list"], [2, 1, 1, "", "has_model"], [2, 1, 1, "", "split"], [2, 2, 1, "", "steps"], [2, 1, 1, "", "to_pipeline"]], "julearn.TargetPipelineCreator": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "add"], [3, 1, 1, "", "to_pipeline"]], "julearn.base": [[4, 0, 1, "", "ColumnTypes"], [5, 4, 1, "", "ColumnTypesLike"], [6, 0, 1, "", "JuBaseEstimator"], [7, 0, 1, "", "JuTransformer"], [8, 0, 1, "", "WrapModel"], [9, 5, 1, "", "change_column_type"], [10, 5, 1, "", "ensure_column_types"], [11, 5, 1, "", "get_column_type"], [12, 5, 1, "", "make_type_selector"]], "julearn.base.ColumnTypes": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "add"], [4, 1, 1, "", "copy"], [4, 2, 1, "", "pattern"], [4, 1, 1, "", "to_type_selector"]], "julearn.base.JuBaseEstimator": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "filter_columns"], [6, 1, 1, "", "get_apply_to"], [6, 1, 1, "", "get_metadata_routing"], [6, 1, 1, "", "get_needed_types"], [6, 1, 1, "", "get_params"], [6, 1, 1, "", "set_params"]], "julearn.base.JuTransformer": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "filter_columns"], [7, 1, 1, "", "fit"], [7, 1, 1, "", "fit_transform"], [7, 1, 1, "", "get_apply_to"], [7, 1, 1, "", "get_metadata_routing"], [7, 1, 1, "", "get_needed_types"], [7, 1, 1, "", "get_params"], [7, 1, 1, "", "set_output"], [7, 1, 1, "", "set_params"]], "julearn.base.WrapModel": [[8, 1, 1, "", "__init__"], [8, 2, 1, "", "classes_"], [8, 1, 1, "", "decision_function"], [8, 1, 1, "", "filter_columns"], [8, 1, 1, "", "fit"], [8, 1, 1, "", "get_apply_to"], [8, 1, 1, "", "get_metadata_routing"], [8, 1, 1, "", "get_needed_types"], [8, 1, 1, "", "get_params"], [8, 1, 1, "", "predict"], [8, 1, 1, "", "predict_log_proba"], [8, 1, 1, "", "predict_proba"], [8, 1, 1, "", "score"], [8, 1, 1, "", "set_params"]], "julearn.config": [[13, 5, 1, "", "get_config"], [14, 5, 1, "", "set_config"]], "julearn.inspect": [[15, 0, 1, "", "FoldsInspector"], [16, 0, 1, "", "Inspector"], [17, 5, 1, "", "preprocess"]], "julearn.inspect.FoldsInspector": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "decision_function"], [15, 1, 1, "", "predict"], [15, 1, 1, "", "predict_log_proba"], [15, 1, 1, "", "predict_proba"]], "julearn.inspect.Inspector": [[16, 1, 1, "", "__init__"], [16, 2, 1, "", "folds"], [16, 2, 1, "", "model"]], "julearn.model_selection": [[18, 0, 1, "", "ContinuousStratifiedGroupKFold"], [19, 0, 1, "", "ContinuousStratifiedKFold"], [20, 0, 1, "", "RepeatedContinuousStratifiedGroupKFold"], [21, 0, 1, "", "RepeatedContinuousStratifiedKFold"], [22, 0, 1, "", "StratifiedBootstrap"], [23, 5, 1, "", "get_searcher"], [24, 5, 1, "", "list_searchers"], [25, 5, 1, "", "register_searcher"], [26, 5, 1, "", "reset_searcher_register"]], "julearn.model_selection.ContinuousStratifiedGroupKFold": [[18, 1, 1, "", "__init__"], [18, 1, 1, "", "get_metadata_routing"], [18, 1, 1, "", "get_n_splits"], [18, 1, 1, "", "set_split_request"], [18, 1, 1, "", "split"]], "julearn.model_selection.ContinuousStratifiedKFold": [[19, 1, 1, "", "__init__"], [19, 1, 1, "", "get_metadata_routing"], [19, 1, 1, "", "get_n_splits"], [19, 1, 1, "", "split"]], "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold": [[20, 1, 1, "", "__init__"], [20, 1, 1, "", "get_metadata_routing"], [20, 1, 1, "", "get_n_splits"], [20, 1, 1, "", "split"]], "julearn.model_selection.RepeatedContinuousStratifiedKFold": [[21, 1, 1, "", "__init__"], [21, 1, 1, "", "get_metadata_routing"], [21, 1, 1, "", "get_n_splits"], [21, 1, 1, "", "split"]], "julearn.model_selection.StratifiedBootstrap": [[22, 1, 1, "", "__init__"], [22, 1, 1, "", "get_metadata_routing"], [22, 1, 1, "", "get_n_splits"], [22, 1, 1, "", "split"]], "julearn.models": [[79, 3, 0, "-", "dynamic"], [28, 5, 1, "", "get_model"], [29, 5, 1, "", "list_models"], [30, 5, 1, "", "register_model"], [31, 5, 1, "", "reset_model_register"]], "julearn.models.dynamic": [[27, 0, 1, "", "DynamicSelection"]], "julearn.models.dynamic.DynamicSelection": [[27, 1, 1, "", "__init__"], [27, 1, 1, "", "fit"], [27, 1, 1, "", "get_metadata_routing"], [27, 1, 1, "", "get_params"], [27, 1, 1, "", "predict"], [27, 1, 1, "", "predict_proba"], [27, 1, 1, "", "score"], [27, 1, 1, "", "set_params"], [27, 1, 1, "", "set_score_request"]], "julearn.pipeline": [[32, 0, 1, "", "JuTargetPipeline"]], "julearn.pipeline.JuTargetPipeline": [[32, 1, 1, "", "__init__"], [32, 1, 1, "", "can_inverse_transform"], [32, 1, 1, "", "fit"], [32, 1, 1, "", "fit_transform"], [32, 1, 1, "", "inverse_transform"], [32, 2, 1, "", "needed_types"], [32, 1, 1, "", "transform"]], "julearn.pipeline.pipeline_creator": [[33, 0, 1, "", "Step"]], "julearn.pipeline.pipeline_creator.Step": [[33, 1, 1, "", "__init__"], [33, 4, 1, "", "apply_to"], [33, 4, 1, "", "estimator"], [33, 4, 1, "", "name"], [33, 4, 1, "", "needed_types"], [33, 4, 1, "", "params_to_tune"], [33, 4, 1, "", "row_select_col_type"], [33, 4, 1, "", "row_select_vals"]], "julearn.prepare": [[34, 5, 1, "", "check_consistency"], [35, 5, 1, "", "prepare_input_data"]], "julearn.scoring": [[38, 5, 1, "", "check_scoring"], [39, 5, 1, "", "get_scorer"], [40, 5, 1, "", "list_scorers"], [82, 3, 0, "-", "metrics"], [43, 5, 1, "", "register_scorer"], [44, 5, 1, "", "reset_scorer_register"]], "julearn.scoring.metrics": [[41, 5, 1, "", "r2_corr"], [42, 5, 1, "", "r_corr"]], "julearn.stats": [[45, 5, 1, "", "corrected_ttest"]], "julearn.transformers": [[46, 0, 1, "", "CBPM"], [47, 0, 1, "", "ChangeColumnTypes"], [48, 0, 1, "", "DropColumns"], [49, 0, 1, "", "FilterColumns"], [50, 0, 1, "", "JuColumnTransformer"], [51, 0, 1, "", "SetColumnTypes"], [53, 5, 1, "", "get_transformer"], [54, 5, 1, "", "list_transformers"], [55, 5, 1, "", "register_transformer"], [56, 5, 1, "", "reset_transformer_register"], [84, 3, 0, "-", "target"]], "julearn.transformers.CBPM": [[46, 1, 1, "", "__init__"], [46, 1, 1, "", "aggregate"], [46, 1, 1, "", "fit"], [46, 1, 1, "", "fit_transform"], [46, 1, 1, "", "get_feature_names_out"], [46, 1, 1, "", "get_metadata_routing"], [46, 1, 1, "", "get_params"], [46, 1, 1, "", "set_output"], [46, 1, 1, "", "set_params"], [46, 1, 1, "", "transform"]], "julearn.transformers.ChangeColumnTypes": [[47, 1, 1, "", "__init__"], [47, 1, 1, "", "filter_columns"], [47, 1, 1, "", "fit"], [47, 1, 1, "", "fit_transform"], [47, 1, 1, "", "get_apply_to"], [47, 1, 1, "", "get_feature_names_out"], [47, 1, 1, "", "get_metadata_routing"], [47, 1, 1, "", "get_needed_types"], [47, 1, 1, "", "get_params"], [47, 1, 1, "", "set_output"], [47, 1, 1, "", "set_params"], [47, 1, 1, "", "transform"]], "julearn.transformers.DropColumns": [[48, 1, 1, "", "__init__"], [48, 1, 1, "", "filter_columns"], [48, 1, 1, "", "fit"], [48, 1, 1, "", "fit_transform"], [48, 1, 1, "", "get_apply_to"], [48, 1, 1, "", "get_metadata_routing"], [48, 1, 1, "", "get_needed_types"], [48, 1, 1, "", "get_params"], [48, 1, 1, "", "get_support"], [48, 1, 1, "", "set_output"], [48, 1, 1, "", "set_params"], [48, 1, 1, "", "transform"]], "julearn.transformers.FilterColumns": [[49, 1, 1, "", "__init__"], [49, 1, 1, "", "filter_columns"], [49, 1, 1, "", "fit"], [49, 1, 1, "", "fit_transform"], [49, 1, 1, "", "get_apply_to"], [49, 1, 1, "", "get_feature_names_out"], [49, 1, 1, "", "get_metadata_routing"], [49, 1, 1, "", "get_needed_types"], [49, 1, 1, "", "get_params"], [49, 1, 1, "", "set_output"], [49, 1, 1, "", "set_params"], [49, 1, 1, "", "transform"]], "julearn.transformers.JuColumnTransformer": [[50, 1, 1, "", "__init__"], [50, 1, 1, "", "filter_columns"], [50, 1, 1, "", "fit"], [50, 1, 1, "", "fit_transform"], [50, 1, 1, "", "get_apply_to"], [50, 1, 1, "", "get_feature_names_out"], [50, 1, 1, "", "get_metadata_routing"], [50, 1, 1, "", "get_needed_types"], [50, 1, 1, "", "get_params"], [50, 1, 1, "", "set_output"], [50, 1, 1, "", "set_params"], [50, 1, 1, "", "transform"]], "julearn.transformers.SetColumnTypes": [[51, 1, 1, "", "__init__"], [51, 1, 1, "", "filter_columns"], [51, 1, 1, "", "fit"], [51, 1, 1, "", "fit_transform"], [51, 1, 1, "", "get_apply_to"], [51, 1, 1, "", "get_feature_names_out"], [51, 1, 1, "", "get_metadata_routing"], [51, 1, 1, "", "get_needed_types"], [51, 1, 1, "", "get_params"], [51, 1, 1, "", "set_output"], [51, 1, 1, "", "set_params"], [51, 1, 1, "", "transform"]], "julearn.transformers.confound_remover": [[52, 0, 1, "", "ConfoundRemover"]], "julearn.transformers.confound_remover.ConfoundRemover": [[52, 1, 1, "", "__init__"], [52, 1, 1, "", "filter_columns"], [52, 1, 1, "", "fit"], [52, 1, 1, "", "fit_transform"], [52, 1, 1, "", "get_apply_to"], [52, 1, 1, "", "get_feature_names_out"], [52, 1, 1, "", "get_metadata_routing"], [52, 1, 1, "", "get_needed_types"], [52, 1, 1, "", "get_params"], [52, 1, 1, "", "get_support"], [52, 1, 1, "", "set_output"], [52, 1, 1, "", "set_params"], [52, 1, 1, "", "transform"]], "julearn.transformers.target": [[57, 0, 1, "", "JuTargetTransformer"], [58, 0, 1, "", "JuTransformedTargetModel"], [59, 0, 1, "", "TargetConfoundRemover"], [60, 0, 1, "", "TransformedTargetWarning"], [61, 5, 1, "", "get_target_transformer"], [62, 5, 1, "", "list_target_transformers"], [63, 5, 1, "", "register_target_transformer"], [64, 5, 1, "", "reset_target_transformer_register"]], "julearn.transformers.target.JuTargetTransformer": [[57, 1, 1, "", "__init__"], [57, 1, 1, "", "fit"], [57, 1, 1, "", "fit_transform"], [57, 1, 1, "", "transform"]], "julearn.transformers.target.JuTransformedTargetModel": [[58, 1, 1, "", "__init__"], [58, 1, 1, "", "can_inverse_transform"], [58, 2, 1, "", "classes_"], [58, 1, 1, "", "decision_function"], [58, 1, 1, "", "filter_columns"], [58, 1, 1, "", "fit"], [58, 1, 1, "", "get_apply_to"], [58, 1, 1, "", "get_metadata_routing"], [58, 1, 1, "", "get_needed_types"], [58, 1, 1, "", "get_params"], [58, 1, 1, "", "predict"], [58, 1, 1, "", "predict_proba"], [58, 1, 1, "", "score"], [58, 1, 1, "", "set_params"], [58, 1, 1, "", "transform_target"]], "julearn.transformers.target.TargetConfoundRemover": [[59, 1, 1, "", "__init__"], [59, 1, 1, "", "fit"], [59, 1, 1, "", "fit_transform"], [59, 2, 1, "", "needed_types"], [59, 1, 1, "", "transform"]], "julearn.transformers.target.TransformedTargetWarning": [[60, 1, 1, "", "__init__"], [60, 1, 1, "", "add_note"], [60, 4, 1, "", "args"], [60, 1, 1, "", "with_traceback"]], "julearn.utils": [[65, 5, 1, "", "configure_logging"], [66, 4, 1, "", "logger"], [67, 5, 1, "", "raise_error"], [85, 3, 0, "-", "typing"], [73, 5, 1, "", "warn_with_log"]], "julearn.utils.typing": [[68, 4, 1, "", "EstimatorLike"], [69, 0, 1, "", "EstimatorLikeFit1"], [70, 0, 1, "", "EstimatorLikeFit2"], [71, 0, 1, "", "EstimatorLikeFity"], [72, 0, 1, "", "JuEstimatorLike"]], "julearn.utils.typing.EstimatorLikeFit1": [[69, 1, 1, "", "__init__"], [69, 1, 1, "", "fit"], [69, 1, 1, "", "get_params"], [69, 1, 1, "", "set_params"]], "julearn.utils.typing.EstimatorLikeFit2": [[70, 1, 1, "", "__init__"], [70, 1, 1, "", "fit"], [70, 1, 1, "", "get_params"], [70, 1, 1, "", "set_params"]], "julearn.utils.typing.EstimatorLikeFity": [[71, 1, 1, "", "__init__"], [71, 1, 1, "", "fit"], [71, 1, 1, "", "get_params"], [71, 1, 1, "", "set_params"]], "julearn.utils.typing.JuEstimatorLike": [[72, 1, 1, "", "__init__"], [72, 1, 1, "", "fit"], [72, 1, 1, "", "get_apply_to"], [72, 1, 1, "", "get_needed_types"], [72, 1, 1, "", "get_params"], [72, 1, 1, "", "set_params"]], "julearn.viz": [[74, 5, 1, "", "plot_scores"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "module", "Python module"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:module", "4": "py:attribute", "5": "py:function"}, "terms": {"": [2, 6, 7, 8, 18, 19, 27, 33, 36, 46, 47, 48, 49, 50, 51, 52, 58, 59, 65, 88, 89, 90, 91, 92, 99, 101, 105, 106, 107, 108, 113, 114, 117, 119, 120, 121, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142], "0": [27, 35, 36, 37, 46, 52, 59, 74, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142], "00": [94, 97, 101, 103, 110, 111, 115, 118, 133, 134, 136, 140], "000000": [88, 89, 90, 96, 101, 105, 106, 114, 117, 135, 140], "00000000e": 134, "000000e": 101, "000071": 114, "0001": 130, "000300": [91, 107, 108, 109], "000421": 114, "00050798": 133, "000517": 114, "000643": 91, "001": [107, 108, 130, 132, 133, 141], "001078": 106, "001197": 114, "001314": 106, "001324": 114, "001628": 105, "001645": 105, "001652": 105, "001658": 105, "001670": 105, "0018082604408073564": 109, "001822": 142, "001827": 142, "001855": 142, "001858": 142, "001882": [89, 90, 105, 106, 114, 117, 135], "001911": 142, "002": 107, "002075": 114, "002095": 114, "00212021": 133, "002170": 91, "002330": 114, "002400": 89, "002402": 89, "002412": 89, "002423264987567721": 130, "002424": 117, "002427": 117, "002432": 89, "002438": 117, "002442": 117, "002524": 89, "002525": 141, "002548": 141, "002553": 141, "002558": 141, "002565": 141, "002568": 141, "002579": 114, "002582": 102, "002585": 141, "002586": 142, "002588": 102, "002589": [102, 141, 142], "002592": [89, 90, 105, 106, 114, 117, 135], "002593": 142, "002595": 102, "002596": 141, "002598": 102, "002600": 141, "002601": 102, "002604": 102, "002605": 141, "002606": 102, "002611": 141, "002614": 102, "002615": 102, "002620": [102, 141], "002623": 102, "002626": 102, "002627": 141, "002628": 141, "00262819": 133, "002629": 142, "002636": [141, 142], "002638": 102, "002640": 102, "002643": 102, "002644": 141, "002659": 141, "002663": 141, "002664": 141, "002665": 135, "002685": 141, "002686": 141, "002698": 135, "002703": 135, "002711": 141, "002713": 135, "002726": 141, "002791": 88, "002798": 135, "002802": 88, "002819": 142, "002821": 142, "002826": 88, "002829": 88, "002839": [88, 142], "002861": [89, 90, 105, 106, 114, 117, 135], "002878": 142, "003": 107, "003160": 142, "003221": 105, "003225": 105, "00324771e": 133, "003257": 105, "003258": 105, "003334": 142, "003360": 142, "003361": 142, "003362": 105, "003369": 142, "003375": 142, "003382": 142, "003393": 142, "003398": 142, "003455": 142, "003545": 114, "003951": 114, "003957": 128, "003970": 128, "003988": 128, "004": [107, 136, 138], "004035": 128, "004124": 114, "004189791804140221": 130, "004290": 91, "004371": 128, "004382": 102, "004389": 102, "004398": 102, "004402": 102, "004405": 102, "004411": 102, "004415": 102, "004416": 102, "004421": 102, "004424": 102, "004428": 102, "004429": 102, "004434": 89, "004437": [101, 102], "004445": 102, "004449": 102, "004452": 102, "004461": 142, "004467": 88, "004472": 102, "004475": [88, 102], "004477": 102, "004478": 89, "004505": 88, "004507": [89, 142], "004515": 88, "004519": 89, "004534": 142, "004541": 117, "004556": 89, "004558": 117, "004564": 88, "004567": 141, "004569": 141, "004575": 141, "004576": 141, "004594": 141, "004595": 141, "004599": 117, "004603": 142, "004607": 117, "004609": 141, "004612": 141, "004616": 141, "004622": 141, "004628": 141, "004631": 141, "004647": 141, "004650": 141, "004668": 141, "004670": 141, "004677": 141, "004683": 141, "004684": 141, "004685": 141, "004697": 141, "004700": 141, "004704": 141, "004709": 141, "004718": 141, "004736": [114, 141], "004753": 141, "004758": 141, "004761": 141, "004771": 141, "004783": 141, "004803": 142, "004809": 141, "004825": 141, "004827": 141, "004848": 141, "004864": 141, "004866": 141, "004872": 141, "004875": 141, "004900": 91, "005": 107, "005017": 117, "005038e": 101, "005058": 141, "005383": [89, 90, 105, 106, 114, 117, 135], "005510": 114, "005649": 142, "005687": 142, "005707": 142, "005711": 142, "005715": 142, "005756": 142, "005834": 142, "005854": 142, "005869": 142, "005874": 114, "00592": 137, "006": 107, "006052": 142, "006057": 106, "006095": 106, "006133": 128, "006142": 106, "006148": 128, "006151": 106, "006183": 106, "006195": 128, "006248": 128, "006290": 106, "006566": 114, "006634": 128, "006874": 114, "006899": [91, 107, 108, 109], "007": 107, "007199": 142, "007241": 142, "007257": 142, "007259": 142, "007303": 128, "007319": 128, "007334": 128, "007367": 142, "007387": 128, "007493": 128, "007659": 114, "007698": 135, "007766": [91, 107, 108, 109], "00779370e": 133, "008": 141, "008001": 135, "008022": 114, "008028": 135, "008180": 135, "008216": 114, "008232": 114, "008343": 114, "008421": 114, "008604": 114, "008781": 114, "008798": 114, "008856": 135, "009": 141, "009038": 91, "009362": [89, 90, 105, 106, 114, 117, 135], "009642": 91, "009658": 114, "00973207": 133, "009959": 91, "00_start": [88, 90, 94, 136], "01": [89, 94, 101, 103, 106, 107, 108, 111, 125, 127, 130, 132, 133, 134, 136], "010": 141, "010202e": 101, "010254": 114, "01033730e": 133, "01037793e": 133, "010535": 91, "01054424e": 133, "010903": 106, "011": 141, "011121": 101, "011287": 101, "011595": [89, 90, 105, 106, 114, 117, 135], "011824": 106, "012": 141, "012141": 106, "012234": 114, "012310": 114, "012577": 106, "012591": 114, "012796": 114, "013139": 114, "013144": 114, "013232": 106, "013297": 106, "013379": 106, "013396": 106, "013408": 114, "013504": 106, "013640": 106, "013673": 114, "013728": 101, "013728e": 101, "013765": 114, "014051": 114, "01419496e": 133, "014516": 114, "015304": 142, "015393": 142, "015471": 142, "015491": 106, "015568": 114, "015748": 142, "015999": 106, "016195": 142, "016440": [91, 107, 108, 109], "017395": 114, "017552": [91, 92, 99, 107, 108, 109], "017646": [89, 90, 105, 106, 114, 117, 135], "017885": 114, "018411": 114, "018781e": 101, "019424": 114, "019907": [89, 90, 105, 106, 114, 117, 135], "01_model_comparison": [97, 136], "02": [101, 108, 111, 133, 134, 136], "020": 93, "02045287": 133, "020607": 106, "020850": 114, "021": [93, 108], "021054": [91, 107, 108, 109], "021452": [91, 107, 108, 109], "021964": 114, "022": [93, 108, 137], "022688": [89, 90, 105, 106, 114, 117, 135], "022918": 114, "023": 93, "023272": 114, "023383": 114, "023413": 114, "023584": 114, "023682": 101, "024": 93, "024022": 114, "024189": 114, "024296": [91, 107, 108, 109], "024319": 114, "024667": 114, "024891": 101, "024993": 106, "025": 93, "025022": 114, "025295": 114, "025445": 114, "025897": 114, "025918": 128, "025930": [89, 90, 105, 106, 114, 117, 135], "025931": 128, "025984": 128, "026190": 106, "026209": 128, "026597": 128, "026727": 91, "02693719e": 133, "027484": 128, "028152": 101, "028194": 114, "028981": 114, "029015": 114, "029271": 114, "029380": 114, "029499": 140, "029565": 114, "02_inspect": [103, 136], "03": [94, 97, 101, 103, 106, 125, 136], "030": 108, "030099": 91, "030464": 106, "031": 108, "031358": 114, "031454": 106, "031988": [89, 90, 105, 106, 114, 117, 135], "032": 108, "032289": 106, "032449": 114, "032477": 114, "032629": 106, "032631": 114, "033": 108, "033216": 106, "033220": [91, 107, 108, 109], "033246": 106, "034": [108, 140], "034309": [89, 90, 105, 106, 114, 117, 135], "034386": 91, "034497": 114, "034508": 106, "035": [108, 140], "035162": 114, "035395": 91, "035735": [91, 107, 108, 109], "036": 140, "036362": 91, "036385": [89, 90, 105, 106, 114, 117, 135], "036479": 114, "036739": 91, "037": 140, "037349": 114, "037970": [91, 92, 99, 107, 108, 109], "038": 140, "038076": [89, 90, 105, 106, 114, 117, 135], "038198": 101, "038257": 91, "039": 140, "03902299e": 133, "039327": [91, 107, 108, 109], "039493": [89, 90, 105, 106, 114, 117, 135], "039692": 114, "039719": 106, "039983": 114, "03_complex_model": [111, 136], "04": [111, 114, 133, 136], "040": 140, "041": 140, "041423": 114, "042": 140, "042031": 114, "042050": 114, "043086": 114, "043401": 106, "044451": [89, 90, 105, 106, 114, 117, 135], "044642": [89, 90, 105, 106, 114, 117, 135], "045025": 106, "046011": 114, "046134": [91, 92, 99, 107, 108, 109], "046641": [89, 90, 105, 106, 114, 117, 135], "046676": 114, "047387": 114, "047538": 114, "047859": 91, "048007": 91, "048058": 114, "049135": 114, "049139": 101, "049167": 114, "049965805178076736": 130, "04_confound": [115, 136], "05": [46, 106, 113, 125, 127, 130, 133, 136], "050238": 128, "050680": [89, 90, 105, 106, 114, 117, 135], "050783": 106, "051040": 91, "051474": [89, 90, 105, 106, 114, 117, 135], "052961": 114, "053253": 114, "05330831e": 133, "054779": 106, "05493358e": 133, "056003": 106, "057228": 114, "057488": 114, "05_custom": [118, 136], "06": [109, 115, 136], "061639": 114, "061696": [89, 90, 105, 106, 114, 117, 135], "061817": 91, "061933": 114, "062567": 96, "062829": 114, "06289362e": 133, "063175": 106, "064": [105, 111, 136], "06569343": 133, "066": 107, "067": 107, "067737": 106, "068": [90, 107], "068332": [89, 90, 105, 106, 114, 117, 135], "069": [90, 107], "069775": 91, "069985": 101, "07": [113, 115, 125, 130], "070": [90, 107], "070558": 91, "071": [90, 107], "072": [90, 107], "073": 107, "074": 107, "075": 107, "075715": 114, "075741": 106, "076": 107, "076494": 114, "07669507e": 133, "07678": 140, "077": 107, "07712013e": 133, "078319": 101, "078784": 106, "07924702e": 133, "080883": [91, 92, 99, 107, 108, 109], "081033": [91, 92, 99, 107, 108, 109], "081051": 101, "081307": 114, "082913": 114, "085": [135, 136], "085040": 91, "085299": [89, 90, 105, 106, 114, 117, 135], "085907": 106, "086399": 91, "08758": 140, "087946": 101, "08902": 140, "089063": [89, 90, 105, 106, 114, 117, 135], "09": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 125, 127, 128, 130, 133, 134, 135, 140, 141, 142], "09081365e": 133, "091986": 101, "092204": [89, 90, 105, 106, 114, 117, 135], "09232": 128, "093": 108, "093005": [89, 90, 105, 106, 114, 117, 135], "094": 108, "095": 108, "096": 108, "097": 108, "098": 108, "098172": 106, "09853372e": 133, "099": 108, "099154": 101, "099883": 114, "0x7f1dc0b3f620": 110, "0x7f1dc0e09fd0": 110, "0x7f1dc0e599b0": 106, "0x7f1dc81202f0": 114, "0x7f1dc81238c0": 114, "0x7f1dc909cc90": 134, "0x7f1dc909d0f0": 134, "0x7f1dc909ec80": 134, "0x7f1dc909f2a0": 134, "0x7f1dc909f310": 134, "0x7f1dc90b0050": 128, "0x7f1dcb502120": [102, 130], "0x7f1dcb502a50": 105, "0x7f1dcb6e7750": 90, "0x7f1dcbabf240": 135, "0x7f1dd09d71a0": 127, "0x7f1de5e9d6a0": 128, "0x7f1de7933d30": 127, "0x7f1de79599e0": 127, "1": [7, 8, 18, 27, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 58, 69, 88, 89, 90, 91, 92, 93, 96, 97, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 118, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 140, 141, 142], "10": [20, 21, 46, 88, 89, 90, 91, 92, 99, 102, 105, 106, 109, 114, 117, 125, 128, 129, 130, 132, 133, 134, 135, 136, 140, 141], "100": [88, 93, 96, 100, 101, 102, 110, 113, 128, 130, 132, 133], "1000": [109, 132], "1001": [128, 140], "10026220e": 133, "101": [121, 127, 136], "102033": 128, "103513": 91, "1038": 46, "104": 88, "104359": 117, "105": [133, 143], "1064": [92, 99], "106807": 114, "10763693e": 133, "1079": 130, "108": [133, 143], "108111": 106, "10816573e": 133, "1089": 129, "108944": 96, "109": 133, "11": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 125, 127, 128, 130, 133, 134, 135, 140, 141, 142], "110": 132, "1105": 129, "11088906e": 133, "111790": 101, "11265149e": 133, "11361240e": 133, "1137": 129, "113700e": 101, "114": 133, "1145": 129, "115321": 91, "11543393e": 133, "116276": 128, "11633573e": 133, "11688313e": 133, "118": 143, "118838": 101, "11890": 140, "11988420e": 133, "12": [46, 89, 91, 92, 99, 101, 102, 106, 111, 124, 127, 128, 130, 133, 135, 143], "120": [88, 136], "1203": 140, "121426": 101, "121574": 91, "122": [133, 140, 143], "123": [90, 133], "124": 90, "12461": 128, "125": 90, "1250": 132, "12568": 125, "126": [90, 133], "12669373e": 133, "127": 90, "1275": 132, "12750": 132, "128": 133, "1282": 128, "1283": 128, "12885753e": 133, "129": 130, "1297": 140, "13": [90, 91, 92, 93, 99, 102, 124, 128, 129, 130, 132, 143], "130": 140, "130267": 91, "131461": 106, "131641": 91, "132": [133, 140], "1326": 140, "133274": 106, "133484": [89, 90, 105, 106, 114, 117, 135], "134": 133, "134828": 91, "135": [113, 140, 143], "136": 113, "13619987e": 133, "137": [109, 111, 136], "138": [113, 133], "139": [113, 133], "14": [91, 92, 99, 101, 102, 107, 108, 109, 128, 140], "140": [89, 90, 105, 106, 113, 114, 117, 133, 135], "140882": 140, "141": 113, "14104234e": 133, "141618": 101, "142": [113, 133], "143": 113, "144": 142, "145": [90, 102, 106], "14588481e": 133, "146": [102, 143], "147": 102, "148": 102, "14861904": 133, "148669": 140, "149": 102, "15": [91, 92, 99, 101, 102, 124, 128, 133], "150": [90, 128, 133, 141, 142], "151": [133, 143], "15131401e": 133, "151390": 96, "152": [89, 90, 105, 106, 114, 117, 135, 142, 143], "15375421e": 133, "154058": 91, "15443469e": 134, "15556975e": 133, "15638092e": 133, "156690": 101, "157": 133, "15738023e": 133, "159": 133, "16": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 125, 130, 132, 133, 134], "16018504e": 133, "161": [106, 133], "16240937e": 133, "1625": 140, "165": [127, 133], "16509556e": 133, "16525470e": 133, "1664": 127, "167": 133, "167718": 101, "168": 143, "169": 133, "17": [91, 92, 99, 101, 102, 125, 130, 140], "170": 143, "173": [108, 133], "17300": 140, "174": [108, 133], "174160": 101, "175": [108, 140], "175061": 101, "175075": 96, "17599741e": 133, "176": 108, "17654665e": 133, "17680598e": 133, "177": [108, 133], "178": [46, 108], "17883212": 133, "179": 108, "179658e": 101, "18": [91, 92, 99, 101, 102, 107, 108, 109, 127, 128], "182": [117, 118, 133, 136], "1820": 128, "182640993861633": 130, "183": 133, "184": [93, 94, 128, 136, 140], "184776e": 101, "1860": 140, "18607683": 133, "18646009e": 133, "188": 133, "189": 133, "19": [102, 125, 127, 130, 140], "190": 133, "19014647e": 133, "19059071e": 133, "191": 133, "191895": 101, "194442": 101, "197": [130, 133], "198": 130, "199": 130, "1992": 142, "1__": 101, "1e": [107, 108, 109, 130, 133, 134], "1e1": 109, "1e2": [133, 134], "1e3": 109, "1f": [88, 89], "2": [8, 18, 19, 20, 21, 27, 58, 70, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 115, 117, 124, 125, 128, 129, 130, 133, 134, 135, 138, 140, 141, 142], "20": [90, 93, 96, 102, 113, 127, 128, 129, 134, 140, 142], "200": [22, 88, 101, 102, 113, 127, 129, 130, 133, 134, 141, 143], "2000": 113, "2004": 129, "20061769e": 133, "201": 130, "2012": 137, "2015": 127, "20156536e": 133, "2016": [46, 91, 92, 99, 107, 108, 109, 127], "2017": [46, 127, 128], "2019": 128, "202": [130, 133], "2020": 128, "2021": 128, "2022": [125, 128], "2023": 125, "2024": 125, "2025": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 125, 127, 128, 130, 133, 134, 135, 140, 141, 142], "203": [130, 133], "204": 101, "20428870e": 133, "20493657e": 133, "206": [96, 115, 128, 133], "206189": 101, "206729": 101, "207": [92, 133], "20701203e": 133, "20879423e": 133, "209": [96, 133], "20973537e": 133, "21": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 125, 127, 128, 130, 133, 134, 135, 140, 141, 142], "210": 96, "211": [89, 90, 96, 105, 106, 114, 117, 133, 135], "212": [96, 140], "21216725e": 133, "21265189e": 133, "213": 96, "214": 96, "21535409e": 133, "216": 101, "218": [91, 94, 136], "218469": 101, "22": 128, "2210": 128, "221085": 101, "224": 143, "225": 133, "228": 92, "229": 92, "23": [91, 125, 127, 128, 141], "230": 92, "231": [92, 143], "2310": 125, "232": [92, 143], "233": [92, 143], "233997e": 101, "234": 143, "234239e": 101, "234716": 106, "234740": 101, "235": 143, "235978": 140, "236": 143, "236153": 96, "2364": 140, "23672883e": 133, "237": 133, "24": [88, 124, 140, 141, 142, 143], "240085": 101, "242": 130, "243": [130, 133], "2430": 140, "244": [130, 143], "245": [102, 103, 130, 132, 133, 136, 143], "246": [130, 140], "247": [89, 133, 143], "248": 89, "249": [133, 143], "249999999999986": 89, "25": [88, 89, 90, 91, 101, 105, 106, 114, 117, 132, 135, 140], "250": 140, "251": [128, 136, 143], "2525": 132, "253": [102, 133, 140], "25391889e": 133, "254": [102, 140, 143], "255": [96, 143], "256": [96, 102, 133], "25614004e": 133, "256723": 101, "257": [96, 102, 130, 133], "2575": 140, "258": [96, 102, 130, 143], "259": [96, 102, 130, 133], "259309": 101, "26": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 130, 132, 133, 134], "260": [96, 102, 130, 143], "261": [102, 130], "26192512e": 133, "262": [130, 143], "263": [130, 133], "264653948271885": 117, "264654": 117, "265": 143, "2654": 140, "266": [91, 92, 99, 107, 108, 109], "267": 133, "268": 143, "269257": 106, "269876": 140, "27": [124, 128, 130, 134, 140], "270": 143, "271": 143, "27237784e": 133, "273": 133, "27384629e": 133, "274": [133, 143], "275": [127, 143], "2750": 140, "27572658e": 133, "277": 143, "278": 143, "279": 143, "27905689e": 133, "28": 91, "280": [130, 136], "2801": 93, "282": 143, "283": 143, "28363764e": 133, "28389936e": 133, "284": 143, "285": [130, 143], "286": 130, "286067": 106, "287": 130, "288": 130, "28874183e": 133, "289": 130, "29": [91, 140], "290": 130, "291": 130, "29135771e": 133, "29154967e": 134, "293": 143, "293317": 101, "29358430e": 133, "295": 130, "296": 130, "29665167e": 133, "297": 130, "298": 130, "299": [110, 111, 130, 136], "2f": [89, 106], "3": [18, 27, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 138, 140, 141, 142], "30": [93, 96, 99, 101, 128, 130, 140], "300": 130, "301": 130, "302": 130, "303": 130, "30326924e": 133, "304": 130, "305": 130, "306": 130, "307": 130, "308": [114, 130], "30811171e": 133, "309": [89, 105, 106, 114, 130], "309025": 106, "309092": 101, "30995153e": 133, "31": [91, 136, 140], "310": [114, 130], "31079767436789235": 106, "311": [114, 130], "31168300e": 133, "312": 114, "31295419e": 133, "313": 114, "315": 106, "318": 132, "31951771e": 133, "32168152e": 133, "322742": 128, "324331": 96, "325382": 101, "327": 128, "33": 133, "330669e": 101, "331": 142, "332": 142, "333": 142, "334": 142, "335": 142, "335538": 101, "336101": 101, "337": 99, "338": [99, 133], "34": [91, 140], "340": 133, "341": 133, "341472": 106, "342": 133, "343": 133, "34413800e": 133, "346": [89, 90, 105, 106, 114, 117, 135], "347": 89, "348": 134, "348168": 106, "349": 134, "35": [89, 91], "350": 134, "351": 134, "352": 134, "353": [114, 117, 129, 134, 136], "354": [114, 117, 134], "355": 134, "35539779e": 133, "356": 134, "357": [99, 134, 140], "358": [99, 134], "359": [99, 101, 103, 134, 136], "36": 130, "360": [99, 134], "361": 99, "3613": 140, "362": [99, 106, 136, 142], "364": [106, 111, 136], "364686": 101, "367260": 140, "37": [89, 93, 133], "370": 142, "371": 142, "372": [92, 142], "373": [92, 142], "374": [92, 142], "375": 92, "37500359e": 133, "376": 92, "377": [92, 135], "378": [92, 135], "37886125e": 133, "379": 135, "38": [92, 93, 140], "380": 135, "380315e": 101, "381": 135, "382": 135, "383145": 101, "386": 140, "38776970e": 133, "387779e": 101, "38889568e": 133, "39": [88, 92], "392804": 101, "39344167e": 133, "395436": 128, "397": 108, "398": 108, "399": 108, "4": [7, 46, 47, 48, 49, 50, 51, 52, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 113, 114, 117, 125, 127, 128, 129, 130, 132, 133, 134, 135, 138, 140, 141, 142], "40": [88, 89, 90, 133], "400": 108, "401": 108, "402": 108, "403": 108, "404": 108, "40628575": 133, "407": [107, 111, 136], "40725117e": 133, "408321": 101, "41": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 107, 109, 110], "41110883e": 133, "41119875e": 133, "41496649e": 133, "415": [99, 103, 136], "41649737e": 133, "419886": 117, "42": [93, 96, 99, 106, 107, 108, 109, 113, 114, 117, 127, 128, 129, 133, 134, 135, 140, 141, 142], "421": [99, 142], "421885": 101, "422": [99, 142], "423": [99, 142], "424": [99, 142], "42489ff0163b2f12752440a6b7ef74c7": 102, "425": [99, 142], "42500021e": 133, "426": [99, 130, 142], "426498": 114, "427": 130, "428": 130, "429": 130, "42932175e": 133, "429556": 114, "43": [91, 117], "430": 130, "431": 130, "4318": 133, "432": [127, 130], "432856": 140, "433": 127, "434": 127, "435": 127, "435353": 101, "436": 127, "437": 127, "44": [117, 134], "440892e": 101, "442": [89, 90, 105, 106, 114, 117, 134, 135], "44240684e": 133, "443": 134, "444": 100, "44408444147062": 89, "445": 100, "446": 100, "446008": 140, "447": 100, "44785351e": 133, "448": [100, 127], "449": [90, 100], "45": [89, 96], "451629": 101, "455": 89, "456": 89, "456486e": 101, "459261223720629": 130, "46": [100, 102, 130], "4601": 140, "46095663e": 133, "463": [88, 94, 127, 136], "463286e": 101, "46520183e": 133, "46699817e": 133, "468": 105, "468533e": 101, "469": 105, "469672": 128, "47": [89, 100, 117, 130, 143], "47616089e": 133, "47646162e": 133, "477": 127, "478725": 101, "48": [89, 91, 99, 101], "482681": 114, "483": 142, "484": [105, 142], "484100": 101, "485": [105, 142], "48550": 125, "486": [105, 142], "486498": 117, "487": [105, 142], "488": [105, 142], "488094e": 101, "489": [136, 141, 142], "49": [128, 132], "4__": 101, "4gb": 132, "5": [18, 19, 20, 21, 36, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 140, 141, 142], "50": [36, 37, 89, 90, 93, 96, 100, 101, 102, 105, 106, 109, 110, 113, 114, 117, 130, 132, 134, 135, 136, 141, 142], "500": 132, "500000": [89, 90, 105, 106, 114, 117, 135], "50108190e": 133, "505": 127, "506": [46, 127], "51": [90, 102, 105, 134], "510": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 117, 127, 133, 134], "51071450e": 133, "511": [136, 140], "51234170e": 133, "51357151914368": 105, "518": [46, 127], "5188855581026275": 108, "52": [102, 132], "520": 127, "522599": 114, "523": [113, 115, 136], "526": 127, "527": [127, 128], "528": [127, 128], "529": [114, 127], "53": [102, 130], "530": [114, 127, 128], "531": 114, "532": [91, 92, 99, 107, 108, 109, 114, 128], "533": [114, 128], "534": [114, 128, 130], "535": 130, "53580647e": 133, "536": 130, "53696198e": 133, "537": 130, "538": 130, "53852981e": 133, "539": [100, 103, 130, 136], "54": [102, 107], "540": 130, "541": 130, "54125314e": 133, "542": 130, "543": 130, "544": 130, "545": 130, "546": 142, "547": 142, "548": 142, "549": 142, "55": 107, "550248": 114, "551": 142, "552": [110, 142], "552840": 128, "552990": 101, "553": 142, "554": 142, "555": 142, "556": [110, 142], "557": [110, 142], "558": [103, 110, 142], "558655": 89, "559": 110, "56": [110, 130, 134, 136], "560": 110, "56047238e": 133, "562": [96, 110], "563": [96, 110], "564": [96, 110], "565": [96, 134, 136], "566": [89, 94, 96, 136], "569": 140, "57": [133, 140], "573568": 89, "57427384e": 133, "576015e": 101, "57731819e": 133, "578808": 128, "579540": 140, "58": 140, "580": 90, "58117585e": 133, "583": [108, 111, 136], "58490026e": 133, "586": 90, "586593": 101, "588308940222183": 108, "59": 130, "590": 90, "59381366e": 134, "5939164168576971": [107, 108], "594": [92, 94, 136], "595": 90, "596518": 101, "597": 90, "599419": 101, "6": [91, 92, 94, 96, 99, 100, 101, 102, 109, 111, 113, 114, 127, 129, 130, 133, 137, 138, 141], "60": [90, 132], "600": [74, 90], "604": 110, "605": 110, "606": [110, 133], "61": 89, "61023026e": 133, "6125": 132, "61342343e": 133, "617474": 89, "61783": 129, "62": [89, 133], "62214573e": 133, "628": 96, "629": 96, "62989736e": 133, "63": 143, "630": 96, "631": 96, "632": 96, "633": [96, 113], "63340553e": 133, "634": [113, 133], "635": [113, 133], "636": [113, 133], "637": [113, 132, 133], "638": [113, 133], "639": [113, 133], "64": [101, 133], "640": [113, 133], "641": 133, "64158883e": 134, "642": 133, "6437581151471767": 109, "647": 100, "64830605e": 133, "649999999999999": 89, "65": 133, "650": 100, "651": 100, "652": 100, "653": 100, "65314852e": 133, "654": 100, "655": 100, "656015037593985": 109, "659172": 101, "65998813e": 133, "66283346e": 133, "6638": 140, "666996": 101, "6672932330827068": 92, "66810054e": 134, "669010": 96, "66928561e": 133, "670": [133, 136], "6710526315789473": 92, "67144941e": 133, "67251840e": 133, "67461782e": 133, "677": 89, "678": 89, "67847548e": 133, "679": 89, "68": 133, "680": 89, "681": 89, "683": [109, 114, 115, 136], "6841826838300122": 92, "685092": 96, "686170": 101, "686765": 101, "686852": 89, "688": 141, "688891": 101, "689": 141, "68953929e": 133, "689893e": 101, "69": 140, "690": 141, "6900264598593866": 130, "691": 141, "692": [109, 141], "693": [109, 141], "69390589e": 133, "694": 109, "695": 109, "696": 109, "697": 109, "698": 109, "699": 109, "7": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 125, 129, 130, 132, 133, 134, 137, 138, 141, 143], "70": [93, 96], "700": 109, "701": 109, "702": 109, "70291971": 133, "703": 109, "704": 109, "705": 109, "706": 109, "707933": 140, "7087109857168048": [107, 108], "70974601e": 133, "71": [127, 133], "710": 128, "711": 128, "712": 128, "713": 128, "714": 128, "715": 128, "716": [109, 128], "717": 109, "718": 109, "719": 109, "72": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 133, 134], "7210526315789474": 99, "7218303650149884": 99, "724008": 101, "724302": 101, "725389e": 101, "725703": 128, "731": [90, 94, 136], "74": 133, "741": [128, 141], "74104576e": 133, "741431": 101, "742": 141, "74263683e": 134, "743": 141, "74320957e": 133, "744": 141, "7449876d309382acfef94df9d102aa76": 141, "745": 141, "75": [89, 90, 93, 96, 101, 105, 106, 114, 117, 133, 135], "750000": 88, "750820": 101, "751257": 101, "756861": 101, "757": 94, "759": 106, "759419": 101, "760": 128, "763131e": 101, "766838": 128, "768": 114, "769": [108, 114], "77": [89, 90, 105, 106, 114, 117, 133, 135, 140, 143], "770": [108, 114], "771": [108, 114], "77191746e": 133, "772": [108, 114], "772156": 101, "772593": 101, "773": [108, 114], "774": [106, 108], "775": [106, 108], "77577512e": 133, "776": [106, 108], "776631": 101, "77664795e": 133, "777": 106, "778": 106, "77937129e": 133, "780": 106, "781": 106, "78147812e": 133, "78209462e": 133, "78255940e": 134, "782741": 96, "783874": 89, "78632059e": 133, "788377e": 101, "788625": 101, "789944": 101, "79": [101, 121], "79034944e": 133, "79116307e": 133, "791667": 88, "797736e": 101, "79782108e": 133, "8": [88, 91, 92, 99, 102, 105, 106, 124, 128, 129, 133, 135, 137, 141, 142, 143], "80": [93, 96, 128, 133, 140], "800": 74, "80018072e": 133, "80084801e": 133, "80569048e": 133, "806": 141, "807": [130, 141], "808": [130, 141], "80802270e": 133, "809": [130, 141], "8099999999999999": 130, "810": [130, 141], "81053295e": 133, "811": [90, 129, 130], "81188036e": 133, "812": 130, "813": 130, "814": 130, "81496972e": 133, "815": 130, "816": 130, "817": 130, "818": 130, "819": 130, "81947379e": 133, "820": 130, "820997": 140, "821": 130, "822": 130, "823": 130, "824": 130, "825": 130, "826": 130, "82622951e": 133, "827": 130, "82718912e": 133, "828": 130, "829": 130, "830": 130, "831": 130, "832": 130, "833": 130, "833333": 88, "834": [130, 133], "835331": 96, "83613139": 133, "837": 130, "838": 130, "838710": 113, "840": 130, "841": 130, "842": 130, "843": 130, "844": 130, "845": 130, "846": [117, 130], "847": [117, 130], "848": 130, "84817959e": 133, "849": 130, "85": 110, "850": 130, "851": 130, "852": 130, "852417e": 101, "853": [111, 130], "860": 140, "861": [117, 140], "861364": 117, "862": 117, "86210959e": 133, "8625": 93, "863": [117, 140], "864": [117, 140], "865": [117, 140], "866": 140, "86732425e": 133, "8678571428571429": 93, "87": [89, 90, 105, 106, 114, 117, 135], "87004758e": 133, "87194087e": 133, "872214": 101, "87277092e": 133, "87307476e": 133, "875000": 88, "87549426e": 133, "87553319e": 133, "87693242e": 133, "87821759e": 133, "88": [114, 117], "88079008e": 133, "887": 141, "888": 141, "889": 141, "89": [114, 117], "890": 141, "891": 141, "891066": 140, "893": [93, 96, 97, 136], "893666": 101, "895011": 101, "895662": 96, "9": [88, 89, 91, 92, 99, 101, 102, 106, 114, 128, 130, 133, 138, 141, 142], "90": [93, 96, 133, 140], "900000": 113, "90015347e": 133, "909091": 113, "90918000e": 133, "9099999999999999": 130, "9100000000000001": 130, "91141327e": 133, "91303766e": 133, "914360e": 101, "915": 117, "916": 117, "916667": 88, "917": 117, "918": 117, "919": [93, 117], "92": [133, 142], "920": 93, "9200000000000002": 130, "921": 93, "922": 93, "923": 93, "924": [93, 101], "925": [93, 101], "929": 88, "93": 130, "930": 88, "933": [88, 141], "93386974e": 133, "934": 88, "935": 88, "936": 88, "93603355e": 133, "937": 88, "938": 88, "939": 134, "94": [133, 143], "940": 101, "9400000000000001": 130, "941": [101, 134], "942": [101, 134], "943": [101, 134], "943182": 113, "943621": 101, "944": [101, 134], "945": [101, 134], "946": [101, 134], "947": 134, "948": [130, 134], "949": [92, 130, 134], "949302": 140, "95": [74, 93, 96, 101, 106, 110, 113, 129], "950": [92, 130, 134], "951": [92, 130], "951852": 113, "952": [92, 130], "953": [92, 130], "954": [92, 130], "956254": 117, "958333": 88, "958497": 101, "96": [88, 101, 133, 143], "96233850e": 133, "968": 93, "969": [93, 117], "97": [101, 113], "970": [93, 117], "971": [93, 117], "97191363e": 133, "972": [93, 117], "972988": 101, "973": [93, 117], "974": 117, "975": 134, "976": 134, "977110": 140, "977322": 101, "97808972e": 133, "98": [101, 129, 133], "981407": 117, "98317342e": 133, "99": [101, 140], "993": 107, "994": 107, "99484250e": 134, "99_doc": [133, 136], "A": [2, 6, 7, 8, 16, 18, 19, 20, 21, 22, 24, 27, 29, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 54, 58, 62, 90, 91, 92, 93, 99, 107, 108, 109, 110, 114, 127, 128, 129, 130, 132, 137, 138, 142], "And": [36, 37, 92, 99, 113, 129, 130, 132], "As": [2, 91, 93, 96, 102, 110, 113, 114, 117, 121, 123, 127, 128, 129, 130, 132, 133, 134, 140, 141, 142], "At": [96, 125, 132, 137, 142], "But": [107, 113, 114, 129, 130, 132, 133, 139, 141, 142], "By": [52, 59, 99, 100, 101, 114, 119, 127, 130, 132, 133, 141], "For": [91, 93, 96, 101, 106, 114, 119, 120, 121, 123, 124, 127, 129, 130, 132, 133, 134, 135, 138, 141, 142], "If": [2, 3, 6, 7, 8, 16, 17, 23, 25, 27, 30, 34, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 55, 58, 61, 63, 65, 91, 93, 99, 101, 113, 114, 117, 120, 121, 124, 125, 128, 129, 130, 132, 138, 139, 141, 142], "In": [18, 19, 20, 21, 46, 90, 91, 92, 93, 99, 100, 113, 114, 117, 121, 125, 127, 128, 129, 132, 133, 134, 137, 138, 140, 141, 142], "It": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 99, 107, 108, 109, 124, 125, 127, 129, 130, 132, 133, 141, 142], "NOT": 132, "No": [127, 129], "Not": [47, 48, 49, 50, 51, 113], "Of": 134, "On": [121, 128, 132, 141], "One": [4, 27, 91, 128, 130, 132, 134, 142], "THE": 132, "That": [6, 127, 128, 129, 130, 132, 133, 142], "The": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 30, 32, 33, 34, 35, 36, 37, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 61, 63, 65, 67, 69, 70, 71, 72, 73, 74, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 142, 143], "Then": [105, 114, 126, 132, 134, 137, 142], "There": [91, 129, 137, 139, 142], "These": [120, 123, 124, 127, 141], "To": [2, 50, 52, 99, 101, 107, 114, 121, 123, 125, 127, 129, 130, 132, 133, 134, 137, 138, 140, 141, 142], "Will": [39, 43, 140], "With": [90, 129, 132, 133, 141], "_": [91, 100, 113, 121], "__": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 130, 134, 135, 140, 141, 142], "__categor": [106, 135], "__confound": [113, 128], "__continu": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 113, 114, 117, 127, 130, 133, 135, 140, 141, 142], "__featur": [113, 128], "__init__": [2, 3, 4, 6, 7, 8, 15, 16, 18, 19, 20, 21, 22, 27, 32, 33, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 69, 70, 71, 72], "__pca1": 106, "__pca2": 106, "__petal": [110, 142], "__sepal": [110, 142], "__traceback__": 60, "__type1": 134, "__type2": 134, "__version__": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 133, 134], "__x_to_zscor": 101, "_build": 121, "_classif": 93, "_gamma": [107, 108], "_grid_": 130, "_model_": 58, "_pipelin": 102, "_split": [90, 129], "abil": 133, "abl": [6, 120, 137, 140], "about": [100, 121, 125, 128, 129, 132, 133, 134, 137, 139, 140, 141, 142], "abov": [90, 113, 128, 130, 133, 141], "absolut": [89, 105, 106, 117, 119], "abstract": 125, "accept": 130, "access": [43, 91, 132], "accident": 137, "accord": [125, 127, 129, 134, 143], "accordingli": [128, 137], "account": [93, 128, 132], "accur": 128, "accuraci": [88, 93, 108, 113, 128, 129, 140, 141], "achiev": [114, 128, 135, 141, 142], "acquir": 99, "across": [18, 19, 20, 21, 22, 89, 100, 105, 106, 117, 129, 133, 141], "action": 143, "activ": 132, "actual": [18, 19, 46, 52, 88, 89, 106, 114, 117, 132, 133], "ad": [2, 7, 18, 27, 36, 37, 46, 47, 48, 49, 50, 51, 52, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 125, 127, 128, 130, 133, 134, 135, 138, 140, 141, 142, 143], "adaboost": 119, "adaboostclassifi": 119, "adaboostregressor": 119, "adapt": [91, 92, 99, 107, 108, 109], "add": [2, 3, 4, 25, 30, 55, 60, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 121, 127, 128, 129, 130, 132, 133, 134, 135, 138, 140, 141, 142, 143], "add_not": 60, "addit": [7, 8, 27, 36, 37, 46, 47, 48, 49, 50, 51, 52, 58, 124, 125, 127, 133, 134, 137, 140, 141], "addition": [36, 37, 65, 93, 96, 125, 126, 128, 142], "address": 133, "adeli": 133, "adjust": 45, "adjusted_mutual_info_scor": 141, "adjusted_rand_scor": 141, "admin": 132, "adopt": 143, "advanc": 138, "advantag": 132, "affect": [18, 19, 133], "after": [25, 32, 52, 57, 59, 89, 90, 99, 101, 105, 106, 113, 114, 117, 121, 133], "afterward": [30, 55, 134], "ag": [89, 90, 91, 105, 106, 114, 117, 135], "again": [113, 128, 129, 130, 133, 137, 142], "against": 121, "agg_method": [46, 127], "aggreg": [46, 127], "aggregate": 46, "agpl": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127], "aim": [124, 125, 142], "aka": 119, "al": [46, 127, 128], "algorithm": [24, 25, 27, 36, 37, 100, 130, 132, 137, 140, 142, 143], "alia": [5, 18, 27, 66, 68], "all": [2, 4, 17, 24, 25, 29, 36, 37, 40, 46, 47, 51, 52, 54, 59, 62, 88, 89, 92, 93, 99, 100, 101, 106, 113, 114, 117, 119, 121, 124, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143], "allow": [3, 18, 25, 27, 30, 43, 55, 63, 93, 113, 120, 123, 127, 128, 130, 132, 138, 139, 142, 143], "almost": [129, 132], "along": 139, "alpha": [99, 127, 129], "alreadi": [25, 30, 43, 55, 63, 99, 101, 121, 128, 129, 132, 134, 139, 140, 142], "also": [4, 88, 90, 93, 96, 101, 106, 107, 114, 120, 121, 123, 125, 127, 128, 130, 132, 133, 134, 137, 138, 140, 141, 142], "altern": [45, 113, 143], "although": 124, "alwai": [18, 19, 20, 21, 22, 93, 107, 108, 109, 113, 121, 128, 130, 132, 134, 140, 141, 142], "aml": 125, "amount": [113, 125, 132, 133], "an": [2, 3, 7, 18, 19, 20, 21, 22, 27, 34, 36, 37, 39, 46, 47, 48, 49, 50, 51, 52, 88, 91, 92, 93, 96, 99, 100, 101, 108, 113, 120, 121, 125, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143], "analog": 3, "analys": [99, 100, 128], "analysi": [2, 17, 19, 36, 65, 87, 94, 104, 105, 111, 117, 119, 129, 136, 142], "analyz": [108, 109, 133], "ani": [2, 3, 7, 8, 13, 14, 25, 27, 30, 32, 33, 34, 35, 36, 37, 43, 47, 48, 49, 50, 51, 52, 55, 57, 63, 90, 120, 127, 129, 130, 132, 133, 142], "anil": 128, "annot": [88, 89], "annual": 142, "anomali": 133, "anoth": [88, 91, 101, 117, 129, 132, 134, 142], "answer": 129, "antonopoulo": 106, "anyth": [138, 141], "api": [7, 46, 47, 48, 49, 50, 51, 52, 119, 121, 125, 134, 139, 142], "appear": [8, 27, 58, 141], "append": [65, 100, 113, 126, 129, 133], "appli": [2, 3, 6, 7, 8, 33, 36, 37, 46, 47, 48, 49, 50, 51, 52, 58, 59, 72, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 125, 127, 128, 130, 131, 132, 133, 134, 136, 140, 141, 142], "applic": [123, 127, 128, 133], "apply_to": [2, 6, 7, 8, 33, 47, 48, 49, 50, 51, 52, 58, 101, 105, 106, 110, 113, 114, 128, 132, 133, 134, 135, 142], "approach": [113, 127, 129, 130, 132, 137, 142], "appropri": 128, "approx": 132, "approxim": [18, 19], "april": 128, "ar": [6, 7, 8, 18, 19, 20, 21, 22, 25, 27, 30, 32, 36, 37, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 63, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 113, 114, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143], "arbitrari": [134, 141], "area": 140, "aren": 142, "arg": [57, 60, 69, 70, 71, 72], "argu": 128, "argument": [28, 50, 69, 70, 72, 101, 114, 129], "aris": 133, "around": 50, "arrai": [7, 8, 18, 19, 20, 21, 22, 36, 46, 47, 48, 49, 50, 51, 52, 58, 88, 133], "arraylik": [41, 42], "articl": 137, "artifici": [128, 134, 142], "arxiv": [125, 128], "as_fram": [89, 90, 105, 106, 114, 117, 135], "ascend": 89, "asctim": 65, "ask": 132, "aspect": [116, 129, 142], "assess": [93, 96, 128, 133], "asset": 133, "assign": [106, 121], "assum": [114, 129, 132], "assumpt": 141, "astyp": 88, "attempt": [107, 108], "attent": 127, "attr": 10, "attribut": [2, 6, 8, 10, 25, 27, 46, 58, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 133, 134], "auc": 113, "author": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 127], "auto": [107, 130], "auto_exampl": [94, 97, 103, 111, 115, 118], "autom": 142, "automat": [121, 124, 126, 142], "avail": [23, 24, 25, 29, 36, 37, 39, 40, 45, 54, 61, 62, 124, 125, 132, 141, 142, 143], "available_model": 2, "available_transform": 2, "averag": [89, 90, 105, 106, 114, 117, 127, 129, 140], "average_precis": 141, "avoid": [125, 128, 129, 130, 143], "awar": [6, 124], "awesom": 142, "ax": [88, 89, 90, 99, 100, 101, 106, 129], "axhlin": 113, "axi": [46, 88, 89, 90, 105, 106, 117, 129, 135], "axisgrid": 90, "axvlin": [113, 129], "b": [91, 121, 130, 142], "b10eef89b4192178d482d7a1587a248a": [89, 105, 106, 114, 117, 128, 135, 141, 142], "back": [120, 141], "backbon": 139, "backend": 132, "bag": 119, "baggingclassifi": 119, "baggingregressor": 119, "balanc": 130, "balanced_accuraci": [93, 96, 141], "balanced_accuracy_scor": 93, "barh": 89, "barplot": 100, "base": [2, 16, 18, 19, 32, 36, 45, 46, 57, 75, 119, 123, 125, 128, 130, 131, 132, 133, 136, 137, 138, 139, 142], "baseestim": [6, 143], "baselin": [89, 90, 105, 106, 117], "basi": 142, "basic": [87, 121, 130, 138, 139, 141, 142, 143], "batch": [18, 19, 132], "bay": [36, 37, 109, 124, 130, 143], "bayesian": [2, 36, 65, 104, 111, 130, 136], "bayessearchcv": [36, 37, 124, 130, 143], "beat": 130, "becaus": [101, 114, 128, 129, 130, 133, 137, 139, 140, 141, 142], "becom": [91, 132, 137, 142], "been": [2, 60, 127, 129, 132, 133, 143], "befor": [18, 19, 36, 37, 58, 88, 91, 113, 117, 121, 124, 126, 130, 132, 141, 142, 143], "begin": [129, 143], "behav": [30, 55], "behavior": [46, 91, 127, 128, 133, 143], "behaviour": [120, 125, 130, 141, 143], "being": [2, 121, 124, 141, 142, 143], "believ": 132, "belong": [101, 114], "below": [113, 124, 127, 130], "benchmark": 140, "benefit": [125, 132], "bengio": 129, "benign": 140, "benjamini": 45, "bernoulli": 119, "bernoullinb": 119, "besid": 142, "best": [108, 109, 130, 132, 142], "best_estimator_": [107, 108], "best_params_": [107, 108, 109, 130], "beta": 86, "better": [39, 43, 107, 108, 109, 130, 133, 140], "between": [6, 34, 89, 113, 121, 127, 128, 129, 132, 134, 137, 140, 142], "bewar": 132, "beyond": 137, "bia": [128, 129], "bias": [128, 129], "big": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 132], "biggest": 121, "bill_depth_mm": 133, "bill_depth_mm__": 133, "bill_length_mm": 133, "bill_length_mm__": 133, "bin": [18, 19, 20, 21, 90, 129], "binari": [22, 36, 37, 65, 87, 92, 94, 96, 99, 100, 102, 107, 108, 109, 110, 113, 119, 121, 129, 130, 133, 136, 140], "biomark": 128, "bit": [2, 107, 124, 130, 134, 141], "black": 143, "block": 121, "blood": [89, 90, 105, 106, 114, 117], "blue": 89, "bmi": [89, 90, 105, 106, 114, 117, 135], "bodi": [89, 90, 105, 106, 117], "body_mass_g": 133, "body_mass_g__": 133, "bokeh": [123, 124, 143], "bonferroni": 45, "bool": [2, 6, 7, 8, 17, 18, 19, 25, 27, 30, 32, 33, 36, 38, 43, 46, 47, 48, 49, 50, 51, 52, 55, 58, 63, 65, 69, 70, 71, 72, 114], "boost": 119, "bootstrap": [22, 113, 129], "boser": 142, "both": [32, 46, 57, 90, 92, 99, 113, 114, 128, 129, 130, 132, 134, 135, 141, 142], "bottom": 132, "boundari": [99, 130], "box": [113, 125], "boxplot": [90, 113], "bp": [89, 90, 105, 106, 114, 117, 135], "brain": [46, 92, 99, 125, 127, 128], "branch": [121, 126], "break_ti": 141, "breast": 140, "browser": 123, "bug": [121, 143], "bugfix": 121, "build": [2, 36, 88, 92, 99, 104, 125, 126, 127, 134, 135, 136, 137, 139, 140], "build_app": [96, 140], "built": [119, 125, 134, 140, 141, 142], "bump": [126, 143], "button": [96, 140], "c": [88, 91, 92, 99, 107, 108, 109, 123, 124, 130, 132, 133, 134, 141, 142], "c_valu": 133, "cache_s": 141, "calcul": 89, "call": [18, 19, 20, 21, 22, 25, 39, 43, 120, 123, 128, 129, 130, 132, 133, 134, 138, 142, 143], "callabl": [4, 38, 39, 43, 46, 143], "can": [1, 2, 4, 18, 19, 20, 21, 22, 25, 27, 30, 32, 34, 36, 37, 43, 45, 46, 50, 52, 55, 58, 63, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 113, 114, 117, 119, 120, 121, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143], "can_inverse_transform": [32, 58], "cancer": 140, "cannot": [101, 142], "capabl": [133, 134, 143], "capac": 138, "care": [128, 142], "case": [16, 18, 19, 20, 21, 27, 35, 36, 37, 46, 90, 91, 99, 105, 117, 121, 127, 128, 129, 132, 138, 141, 142], "categor": [36, 37, 106, 114, 119, 130, 135], "categori": 73, "categoricaldistribut": 130, "categoricalnb": 119, "catplot": 113, "caution": [100, 129], "caveat": 90, "cbpm": [2, 36, 119, 125, 131, 136, 143], "cbpm__significance_threshold": 127, "cbpm_pipeline_cr": 127, "cd": 121, "cell": 141, "cerebr": [91, 92, 99, 107, 108, 109], "certain": [17, 120, 138, 141, 142], "challeng": 128, "chang": [9, 18, 27, 47, 86, 108, 113, 119, 121, 124, 126, 129, 130, 141], "change_column_typ": 119, "changecolumntyp": 119, "changelog": 126, "chapter": 139, "characterist": 99, "check": [6, 7, 8, 10, 18, 19, 20, 21, 22, 27, 32, 34, 38, 46, 47, 48, 49, 50, 51, 52, 58, 85, 91, 92, 99, 101, 113, 114, 120, 121, 125, 126, 130, 132, 141, 143], "checkout": [121, 126], "chinstrap": 133, "choic": 129, "choos": [46, 93, 96, 129, 130, 140, 142], "chosen": 90, "chyzhyk": 128, "ci": [74, 113, 126], "circumst": 121, "citat": 143, "cite": 125, "claim": [99, 113, 129], "class": [2, 3, 4, 5, 6, 7, 8, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 30, 32, 33, 36, 37, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 63, 66, 67, 68, 69, 70, 71, 72, 73, 88, 90, 92, 93, 96, 99, 100, 102, 107, 108, 109, 110, 113, 114, 119, 128, 129, 130, 133, 140, 141, 142], "class_weight": [130, 141], "classes_": [8, 27, 58], "classic": 113, "classif": [2, 22, 30, 34, 36, 37, 65, 87, 92, 94, 96, 99, 100, 102, 104, 107, 108, 109, 111, 113, 121, 129, 130, 132, 133, 134, 136, 140, 141, 142], "classifi": [88, 92, 93, 99, 100, 102, 107, 108, 109, 110, 113, 121, 133, 141, 142], "classification_cl": 30, "classmethod": 2, "clean": [121, 124], "clear": [132, 135], "clf": 99, "click": 139, "clone": 121, "close": [45, 126], "closer": [114, 119, 141], "cluster": 132, "cm": 88, "cm_perc": 88, "cm_sum": 88, "cmap": [88, 89, 106], "code": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 125, 128, 132, 142, 143], "codebas": 143, "codecov": 121, "codespel": 143, "coef0": 141, "coef_": [89, 114], "coeffici": [41, 42, 89, 117, 141, 142], "cognit": [91, 92, 99, 107, 108, 109], "col": 113, "col_index": 90, "colleagu": 129, "collect": [91, 113, 133], "collid": 128, "color": [89, 90, 99, 113, 129], "colt": 142, "colum": 138, "column": [2, 4, 6, 7, 8, 9, 11, 12, 17, 27, 33, 35, 36, 37, 47, 48, 49, 50, 51, 52, 58, 59, 72, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 113, 114, 117, 119, 120, 127, 128, 130, 133, 134, 135, 138, 140, 141, 142, 143], "column_typ": 4, "columntransform": [4, 12], "columntyp": [2, 5, 6, 7, 8, 10, 33, 47, 48, 49, 50, 51, 52, 58, 59, 72, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 130, 133, 134, 135, 140, 141, 142], "columntypeslik": [2, 33, 47, 48, 49, 50, 52, 114], "com": [121, 129, 137, 143], "combin": [89, 90, 91, 105, 106, 113, 117, 130, 132, 142], "come": [120, 121, 129, 133, 138, 142], "comma": 142, "command": 132, "comment": 121, "commit": [121, 126, 143], "common": [130, 137], "commonli": [127, 142], "commun": 138, "compact": 140, "compar": [90, 96, 113, 125, 128, 130, 137, 140, 141], "comparison": [2, 22, 36, 45, 65, 74, 97, 112, 115, 122, 125, 136, 139], "compat": [2, 18, 19, 20, 21, 22, 23, 25, 27, 36, 37, 47, 48, 49, 50, 51, 52, 53, 59, 114, 124, 127, 141, 142, 143], "complement": 119, "complementnb": 119, "complet": [86, 121, 132], "completeness_scor": 141, "complex": [2, 91, 99, 110, 122, 125, 128, 129, 130, 132, 133, 142], "complic": [2, 132, 137], "compon": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 101, 106, 119, 142], "compos": [4, 12], "comprehens": [36, 120], "compromis": 129, "comput": [8, 27, 36, 41, 42, 46, 58, 93, 106, 117, 120, 130, 132, 137, 142, 143], "computation": 132, "concat": [89, 90, 100, 105, 106, 113, 117, 135], "concav": 140, "concept": [130, 137], "conclud": 130, "conda": [123, 124], "condit": [92, 99], "condor_q": 132, "confid": [74, 113, 133], "config": [75, 120, 125, 143], "configur": [1, 2, 7, 18, 27, 46, 47, 48, 49, 50, 51, 52, 65, 125, 128, 132, 133, 134, 142], "configure_log": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 133, 134], "confound": [2, 3, 17, 22, 36, 47, 52, 59, 65, 91, 115, 119, 122, 125, 131, 136, 140, 143], "confound_1": 128, "confound_2": 128, "confound_on": 128, "confound_remov": [113, 114, 119, 128], "confound_two": 128, "confoundremov": [59, 114, 119, 128, 143], "confus": [88, 101, 141, 142], "confusion_matrix": 88, "conist": 135, "connect": [46, 127, 128], "connectom": [2, 36, 46, 119, 125, 131, 136], "consid": [2, 114, 120, 121, 126, 128, 130, 138, 141], "consider": 128, "consist": [2, 3, 27, 34, 36, 120, 125, 127, 129, 131, 136, 137, 138, 140, 142, 143], "constraint": [130, 143], "construct": 130, "constructor": 101, "consum": 130, "contain": [6, 7, 8, 27, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 51, 52, 58, 74, 88, 89, 90, 93, 105, 106, 117, 129, 132, 133, 138, 141], "content": 121, "context": [36, 91, 92, 99, 107, 108, 109, 132, 133], "continu": [2, 8, 33, 47, 49, 51, 52, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 113, 114, 117, 127, 129, 130, 133, 134, 135, 138, 140, 141, 142, 143], "continuousstratifiedgroupkfold": [20, 129], "continuousstratifiedkfold": [21, 90, 129, 143], "contion": 21, "contour": 99, "contrast": 113, "contribut": 125, "contributor": 121, "control": [18, 19, 20, 21, 22, 91, 92, 99, 107, 108, 109, 116, 128, 130, 132, 134, 137], "convent": [46, 121, 130], "convernt": [36, 37], "convers": 88, "convert": [35, 36, 37, 91, 113, 117], "copi": [2, 4, 90, 114, 121, 133, 141], "core": [121, 132, 137, 140], "corr": [89, 106], "corr_method": [46, 127], "corr_sign": [46, 127], "corrcoef": [89, 106], "correct": [45, 96, 134, 140, 143], "corrected_ttest": [96, 140], "correctli": 93, "correl": [41, 42, 46, 89, 117, 127], "correlation_valu": 46, "correspond": [8, 27, 36, 37, 58, 133], "cortex": [91, 92, 99, 107, 108, 109], "cost": 120, "could": [99, 101, 114, 125, 127, 132, 133, 138, 140, 141, 142], "count": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 129, 130, 133, 135, 140, 141, 142], "coupl": 90, "cours": 134, "cover": [135, 138, 142], "coverag": 121, "cpu": 132, "cr_fi": 113, "creat": [2, 3, 4, 46, 88, 90, 91, 93, 99, 101, 105, 106, 110, 119, 121, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142], "create_pipelin": 143, "create_studi": 130, "creation": 2, "creator": [101, 102, 105, 106, 107, 108, 113, 114, 127, 130, 132, 135, 141, 142], "creator1": [109, 130, 140], "creator2": [109, 130, 140], "creator3": [130, 140], "creator4": 130, "critic": 133, "cross": [2, 3, 16, 18, 19, 20, 21, 22, 34, 36, 37, 88, 89, 100, 106, 113, 114, 119, 125, 127, 130, 131, 132, 133, 136, 138, 139, 140, 142, 143], "cross_valid": 137, "crucial": 128, "cryptic": 141, "csv": 91, "cue": [91, 92, 99, 107, 108, 109], "culaciati": 143, "curiou": 140, "current": 132, "curs": 127, "custom": [36, 43, 65, 118, 122, 125, 127, 136, 141, 142], "customis": 127, "customiz": 134, "cv": [15, 16, 18, 19, 20, 21, 22, 27, 34, 35, 36, 37, 65, 87, 88, 89, 93, 94, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 127, 128, 129, 130, 132, 133, 134, 135, 136, 140, 141, 142, 143], "cv_mdsum": [88, 89, 102, 105, 106, 114, 117, 128, 135, 141, 142], "cv_predict": 102, "cv_splitter": [140, 141], "cv_stratifi": [90, 92], "d": [46, 88, 91, 92, 99, 107, 108, 109, 119, 126, 127, 129, 130], "d2_absolute_error_scor": 141, "dai": 132, "dant": 143, "darkgrid": [89, 90, 106], "darya": 128, "dash": 129, "dashboard": 74, "data": [2, 6, 7, 8, 17, 18, 19, 20, 21, 22, 27, 32, 34, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 81, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 125, 127, 128, 129, 130, 133, 134, 135, 136, 137, 139, 140, 141, 142], "data_df": 90, "data_diabet": [89, 105, 106, 117, 135], "data_processed1": 106, "data_processed2": 106, "databas": 128, "datafram": [4, 6, 7, 8, 16, 17, 27, 32, 35, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 74, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 125, 127, 128, 130, 133, 134, 135, 137, 138, 140, 141, 142, 143], "datalik": [7, 8, 27, 32, 47, 48, 49, 50, 51, 52, 57, 58, 59, 69, 70, 71, 72], "dataset": [18, 19, 20, 21, 22, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 140, 141, 142], "de": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 132], "deal": [91, 127, 138], "debug": [65, 132, 137], "decemb": 129, "decent": 140, "decid": [25, 30, 43, 63], "decis": [8, 58, 91, 92, 99, 107, 108, 109, 128, 132, 133], "decision_funct": [8, 15, 58, 99, 143], "decision_function_shap": 141, "declar": 101, "decod": [99, 128], "decomposit": 142, "deconfound": [52, 114], "decreas": 121, "deep": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 69, 70, 71, 72, 128], "deeper": [125, 133, 139, 140], "def": 117, "default": [2, 3, 6, 7, 8, 16, 17, 18, 19, 20, 21, 22, 25, 27, 30, 31, 33, 36, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 58, 59, 63, 65, 67, 69, 70, 71, 72, 73, 74, 96, 99, 101, 107, 108, 110, 113, 114, 119, 120, 123, 124, 127, 128, 130, 132, 140, 141, 142, 143], "defin": [36, 37, 45, 50, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 127, 128, 129, 130, 133, 134, 141, 142, 143], "definit": 142, "degre": [45, 141], "demo": 128, "demograph": [91, 128], "demonstr": [98, 121, 134, 141], "depend": [79, 86, 91, 92, 99, 107, 108, 109, 121, 125, 129, 132, 133, 140, 143], "deploi": [96, 133, 140], "deploy": 133, "deprec": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 133, 134, 143], "deprecationwarn": 88, "describ": [46, 89, 90, 101, 105, 106, 114, 117, 121, 135, 141], "descript": [119, 120, 121, 142], "desir": [134, 142], "deslib": [27, 75, 119, 124, 125], "desp": 27, "detail": [35, 36, 37, 121, 132, 137], "detect": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 120, 130, 133, 134, 137, 140, 141, 142, 143], "determin": [101, 130, 132, 142], "dev": [65, 121, 126], "dev73": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 125, 133, 134], "develop": [123, 124, 125, 126, 132, 143], "deviat": [101, 128], "devn": 126, "df": [35, 45, 101, 130, 138, 140, 141, 142], "df_accuraci": 88, "df_cr_metric": 113, "df_data": 132, "df_deconfound": 114, "df_diff_metr": 113, "df_featur": 114, "df_fmri": [91, 92, 99, 107, 108, 109], "df_group": 35, "df_iri": [88, 93, 96, 100, 102, 110, 113, 121], "df_mae": [89, 106], "df_meta": 91, "df_metric": 113, "df_ncr_metric": 113, "df_score": 90, "df_transform": 114, "df_unbalanc": [93, 96], "df_x": 35, "df_y": 35, "diabet": [89, 90, 105, 106, 117, 135], "diagnost": 91, "dict": [2, 6, 7, 8, 27, 28, 33, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 53, 58, 69, 70, 71, 72], "dictionari": [35, 36, 37, 47, 51, 101, 114, 128, 130, 133, 138, 143], "did": [101, 108], "didn": 141, "diff_fi": 113, "differ": [6, 18, 19, 20, 21, 22, 30, 90, 91, 93, 96, 101, 106, 107, 108, 110, 113, 114, 123, 124, 127, 128, 129, 130, 132, 133, 134, 137, 138, 140, 141, 142], "difficult": [128, 130, 132], "digit": 129, "dimens": 140, "dimension": [106, 114, 127, 130, 142], "diment": 130, "direct": [129, 130], "directli": [50, 91, 125, 135], "directori": [121, 132], "disabl": 120, "disable_x_check": 120, "disable_x_verbos": 120, "disable_xtypes_check": 120, "disable_xtypes_verbos": 120, "disadvantag": 137, "discoveri": 128, "discret": [18, 19, 129, 142], "discrete_i": 129, "discuss": 114, "diseas": [89, 90, 105, 106, 117], "disk": 132, "dispatch": 132, "displai": [121, 132, 133, 140], "displot": 90, "dist": 126, "distanc": 126, "distinguish": [128, 134, 142], "distribut": [18, 19, 45, 88, 90, 92, 93, 96, 99, 100, 102, 107, 108, 109, 110, 113, 119, 128, 129, 132, 133, 140, 141, 142, 143], "dive": 140, "divid": 129, "do": [91, 99, 101, 106, 107, 108, 113, 114, 117, 119, 121, 125, 126, 128, 129, 130, 132, 134, 137, 138, 139, 140, 141, 142], "doc": [65, 90, 121, 126, 143], "document": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 86, 90, 96, 100, 119, 129, 130, 132, 140, 141, 142], "dodg": [113, 129], "doe": [38, 99, 132, 137, 142], "doesn": 141, "doi": [46, 125, 128], "domingo": 137, "don": [129, 130, 132], "done": [18, 19, 107, 121, 124, 126, 132, 133, 134, 140, 141, 142], "down": 45, "downcast": 133, "download": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117], "draft": [121, 126], "drop": [32, 46, 48, 57, 90, 93, 96, 101, 114, 119, 133, 143], "drop_column": 119, "dropcolumn": 119, "dropna": 133, "ds_split": 27, "dtype": [88, 89, 90, 92, 93, 96, 99, 100, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 130, 133, 135, 140, 141, 142], "dual": 130, "due": [127, 129, 130], "dummyclassifi": 119, "dummyregressor": 119, "duplic": [91, 120], "dure": [91, 92, 99, 124, 127, 128, 130, 133, 143], "dynam": [75, 124, 125], "dynamicselect": [119, 143], "e": [27, 30, 46, 52, 59, 65, 114, 119, 121, 124, 126, 127, 128, 129, 130, 132, 133, 141, 142], "each": [2, 6, 7, 8, 18, 19, 20, 21, 22, 27, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 58, 59, 88, 89, 90, 91, 92, 99, 100, 101, 102, 106, 113, 114, 117, 119, 121, 127, 128, 129, 130, 131, 132, 133, 137, 140, 141, 142], "earlier": 101, "easi": [3, 91, 125, 128, 130, 133, 134, 139, 140], "easier": [113, 121, 142, 143], "easili": [2, 127, 129, 132], "edit": 91, "effect": [128, 132, 133], "effici": 137, "either": [18, 19, 20, 21, 45, 99, 101, 119, 121, 128, 130, 132, 142], "element": [35, 36, 37, 65, 88, 91, 101, 120, 142, 143], "els": 88, "emb": 121, "emili": 127, "empir": [119, 129], "empty_lik": 88, "enabl": [18, 27, 120, 143], "enable_metadata_rout": [18, 27], "enable_parallel_column_transform": 120, "encapsul": [6, 7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 114], "encod": [32, 57], "end": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 124, 132, 143], "engag": [91, 92, 99, 107, 108, 109], "enh": 121, "enhanc": 121, "enough": 140, "ensembl": [27, 132, 134], "ensur": [10, 47, 49, 51, 52, 88, 129, 133], "enter": 132, "entir": [100, 141, 142], "entri": [65, 142], "enumer": [100, 113], "env": 124, "environ": [124, 125, 141], "equal": [35, 36, 37, 90, 119, 129], "equival": 130, "error": [18, 25, 27, 30, 35, 36, 37, 43, 55, 63, 65, 67, 88, 89, 91, 105, 106, 117, 120, 121, 129, 137, 140, 143], "error_scor": 133, "especi": 127, "essenc": 139, "essenti": [125, 133], "estim": [6, 7, 8, 18, 27, 33, 36, 37, 38, 39, 43, 46, 47, 48, 49, 50, 51, 52, 58, 69, 70, 71, 72, 99, 100, 101, 107, 108, 109, 110, 113, 114, 125, 127, 128, 129, 130, 131, 132, 133, 135, 137, 139, 140, 142], "estimator__memori": 133, "estimator__set_column_typ": 133, "estimator__set_column_types__row_select_col_typ": 133, "estimator__set_column_types__row_select_v": 133, "estimator__set_column_types__x_typ": 133, "estimator__step": 133, "estimator__svm": 133, "estimator__svm__break_ti": 133, "estimator__svm__c": 133, "estimator__svm__cache_s": 133, "estimator__svm__class_weight": 133, "estimator__svm__coef0": 133, "estimator__svm__decision_function_shap": 133, "estimator__svm__degre": 133, "estimator__svm__gamma": 133, "estimator__svm__kernel": 133, "estimator__svm__max_it": 133, "estimator__svm__prob": 133, "estimator__svm__random_st": 133, "estimator__svm__shrink": 133, "estimator__svm__tol": 133, "estimator__svm__verbos": 133, "estimator__transform_input": 133, "estimator__verbos": 133, "estimator__zscor": 133, "estimator__zscore__copi": 133, "estimator__zscore__with_mean": 133, "estimator__zscore__with_std": 133, "estimatorlik": [2, 38, 50], "estimatorlikef": [33, 68], "estimatorlikefit1": [33, 68, 72], "estimatorlikefit2": [33, 68], "et": [46, 119, 127, 128, 142], "etc": 130, "evalu": [2, 8, 36, 37, 40, 58, 82, 93, 99, 125, 129, 132, 133, 136, 137, 138, 139, 140, 142], "even": [90, 114, 130, 132, 141, 142], "event": [91, 92, 99, 107, 108, 109], "ever": 133, "everi": [6, 30, 35, 36, 37, 55, 126, 132, 133, 138, 142], "everyth": [91, 132, 139], "evid": [128, 129, 132], "exact": 137, "exactli": [92, 99, 133, 142], "exampl": [7, 37, 46, 47, 48, 49, 50, 51, 52, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143], "excel": [91, 129], "except": [60, 67, 121, 124], "execut": [94, 97, 103, 111, 115, 118, 120, 121, 132, 136], "exemplarili": 130, "exhaust": 132, "exist": [18, 19, 20, 21, 22, 27, 43, 65], "expand": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 127, 128, 130, 133, 134, 135, 140, 141, 142], "expect": 120, "expens": 132, "experi": 142, "experiment": [86, 130], "experimentalwarn": 130, "explain": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 129, 132, 142], "explained_vari": 141, "explicit": 132, "explicitli": [101, 107, 128, 130, 133], "explor": [108, 114, 133, 134], "export_metadata": 132, "express": [52, 114, 138], "extend": [116, 141], "extendeddataframepipelin": 143, "extra": [28, 50, 69, 70, 72, 79, 86, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 119, 120, 121, 134, 135, 142], "extract": [88, 91, 92, 99, 133], "extratreesclassifi": 119, "extratreesregressor": 119, "extrem": 129, "f": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 106, 107, 108, 109, 110, 113, 117, 127, 128, 130, 134], "f1": 141, "f1_macro": 141, "f1_micro": 141, "f1_sampl": 141, "f1_weight": 141, "fa5ab7a2b930761687a8e82d9971ebca": 88, "face": 143, "facetgrid": 90, "fact": [128, 133], "factor": [128, 132], "factori": 33, "fairli": 133, "fall": [52, 59, 114, 127, 141], "fals": [17, 18, 19, 25, 27, 30, 36, 43, 48, 52, 55, 58, 63, 65, 89, 90, 92, 93, 96, 99, 100, 101, 105, 106, 107, 108, 109, 110, 114, 117, 127, 128, 130, 133, 134, 135, 141, 142], "familiar": [132, 139], "fan": 121, "fanci": 139, "faq": 125, "far": [135, 138, 141, 142], "fashion": [69, 70, 71, 72, 128], "fdr": [45, 119], "fdr_bh": 45, "fdr_by": 45, "fdr_tsbh": 45, "fdr_tsbky": 45, "feat": 121, "featur": [16, 17, 18, 19, 20, 21, 22, 32, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 57, 59, 69, 70, 72, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 121, 124, 125, 127, 130, 131, 132, 133, 135, 137, 139, 140, 141], "feature_": [127, 128, 134], "feature_0": 128, "feature_1": [127, 128, 134], "feature_10": [127, 128, 134], "feature_11": [127, 128, 134], "feature_12": [127, 128, 134], "feature_13": [127, 128, 134], "feature_14": [127, 128, 134], "feature_15": [127, 128, 134], "feature_16": [127, 128, 134], "feature_17": [127, 128, 134], "feature_18": [127, 128, 134], "feature_19": [127, 128, 134], "feature_2": [127, 128, 134], "feature_20": [127, 134], "feature_3": [127, 128, 134], "feature_4": [127, 128, 134], "feature_5": [127, 128, 134], "feature_6": [127, 128, 134], "feature_7": [127, 128, 134], "feature_8": [127, 128, 134], "feature_9": [127, 128, 134], "feature_import": 113, "feature_importances_": [100, 113], "feature_nam": [114, 140], "feature_names_in_": 50, "februari": 128, "fed": 142, "fede": 143, "federico": [88, 89, 90, 91, 92, 93, 96, 99, 100, 102, 106, 107, 108, 109, 110, 113, 117, 125], "few": [129, 133, 137, 143], "fifth": 142, "fig": [88, 89, 90, 99, 100, 101, 106, 129], "figsiz": [88, 89, 90, 99, 100, 101, 106, 129], "figur": [99, 121], "file": [65, 91, 94, 97, 103, 111, 115, 118, 121, 132, 136], "filenam": [65, 121], "filesystem": 132, "filter": [6, 7, 8, 47, 48, 49, 50, 51, 52, 58, 119, 125, 142, 143], "filter_column": [6, 7, 8, 47, 48, 49, 50, 51, 52, 58, 110, 119, 132, 134], "filtercolumn": [119, 143], "final": [36, 37, 88, 89, 90, 91, 92, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 127, 129, 130, 132, 133, 134, 141, 142, 143], "final_estim": [36, 37, 132], "final_model": [127, 133], "find": [108, 109, 120, 130, 132, 139], "fine": 132, "fingerprint": 127, "finish": 132, "finn": [46, 127], "first": [18, 19, 20, 21, 45, 67, 73, 88, 92, 93, 96, 99, 101, 105, 106, 107, 108, 113, 114, 121, 127, 128, 130, 132, 134, 135, 138, 139, 140, 141, 142], "first_two": 101, "fit": [7, 8, 27, 32, 36, 37, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 69, 70, 71, 72, 99, 100, 106, 114, 119, 127, 128, 131, 132, 133, 137, 142, 143], "fit_param": [7, 8, 46, 47, 48, 49, 50, 51, 52, 58], "fit_tim": [36, 37, 88, 89, 102, 105, 106, 114, 117, 128, 135, 141, 142], "fit_transform": [7, 32, 46, 47, 48, 49, 50, 51, 52, 57, 59], "five": 141, "fix": [18, 19, 121, 129, 143], "fixtur": 143, "flag": [1, 120, 121], "flexibl": [125, 134], "flexibli": 134, "flipper_length_mm": 133, "flipper_length_mm__": 133, "float": [8, 27, 35, 36, 37, 41, 42, 46, 52, 58, 59, 74, 88, 109, 114, 130], "float64": [89, 90, 93, 96, 101, 105, 106, 110, 114, 117, 127, 128, 134, 135], "floatdistribut": 130, "flower": 130, "fluid": 127, "fmri": [91, 92, 99, 107, 108, 109], "fmt": [88, 89], "fname": 65, "focu": [133, 138], "fold": [2, 16, 18, 19, 20, 21, 22, 36, 65, 87, 88, 89, 94, 98, 99, 100, 103, 105, 106, 113, 114, 117, 128, 129, 130, 132, 133, 135, 136, 137, 141, 142, 143], "fold_inspector": 133, "fold_model": 133, "fold_predict": 133, "foldsinspector": [16, 133], "follow": [36, 37, 45, 46, 50, 65, 67, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 114, 117, 119, 121, 122, 124, 125, 126, 127, 130, 132, 133, 134, 138, 139, 140, 141, 142], "font_scal": [88, 89], "fontsiz": [89, 106], "forc": 130, "forest": [36, 65, 92, 96, 98, 101, 103, 113, 119, 134, 136, 140, 142], "forg": [123, 124], "fork": 121, "form": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 138, 142], "format": [7, 46, 47, 48, 49, 50, 51, 52, 65, 89, 91, 106, 107, 108, 109, 113, 121, 126, 128, 130, 143], "fortun": [91, 129, 130], "found": [46, 107, 108, 109, 141], "fourth": 141, "fowlkes_mallows_scor": 141, "fpr": 119, "fractal": 140, "frame": 91, "framework": 130, "frank": [91, 92, 99, 107, 108, 109], "free": 125, "freedom": 45, "frequentist": 113, "friendli": [120, 142], "from": [2, 3, 4, 6, 27, 32, 35, 36, 37, 46, 47, 52, 55, 57, 59, 63, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143], "from_list": 2, "frontal": [91, 92, 99, 107, 108, 109], "frontal__": 99, "frontal_cu": 91, "frontal_stim": 91, "full": [45, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 132, 133], "fun": 129, "func": 15, "function": [2, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 67, 73, 74, 87, 93, 96, 99, 100, 101, 112, 114, 116, 118, 120, 121, 123, 124, 125, 127, 128, 130, 132, 136, 137, 138, 139, 140, 141, 142, 143], "fundament": 139, "further": [128, 130, 132, 137], "furthermor": [114, 130], "futur": [86, 88, 129, 130, 133], "futurewarn": 133, "fwe": 119, "fz": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127], "g": [27, 30, 65, 106, 119, 124, 129, 130, 141], "gain": 133, "galleri": [87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 121, 136], "gamma": [107, 108, 109, 130, 132, 141], "gap": 113, "gauss": 119, "gaussian": 129, "gaussianis": 119, "gaussiannb": 119, "gaussianprocessclassifi": 119, "gaussianprocessregressor": 119, "gb": 132, "gener": [18, 19, 20, 21, 22, 36, 37, 50, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 121, 126, 129, 132, 135, 137, 141, 142, 143], "genericunivariateselect": 119, "gentoo": 133, "geomspac": [133, 134], "georgio": 106, "get": [2, 4, 6, 7, 8, 11, 13, 18, 19, 20, 21, 22, 23, 27, 28, 32, 39, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 61, 69, 70, 71, 72, 88, 89, 92, 99, 100, 101, 106, 114, 125, 127, 133, 134, 140, 141], "get_apply_to": [6, 7, 8, 47, 48, 49, 50, 51, 52, 58, 72], "get_feature_names_out": [46, 47, 49, 50, 51, 52], "get_fitted_param": 133, "get_metadata_rout": [6, 7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 114], "get_n_split": [18, 19, 20, 21, 22], "get_needed_typ": [6, 7, 8, 47, 48, 49, 50, 51, 52, 58, 72], "get_param": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 69, 70, 71, 72, 133], "get_support": [48, 52], "get_xlim": [89, 99, 106], "get_ylim": [89, 99, 106], "getattr": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 133, 134], "getting_start": [96, 140], "gigasci": 128, "git": [121, 126, 143], "github": [125, 141, 143], "give": [90, 119, 128, 130, 139, 140, 141], "given": [18, 27, 52, 99, 113, 114, 119, 120, 128, 132, 138, 141, 142], "glanc": [139, 141], "global": [1, 13, 14, 18, 19, 120], "glossari": [19, 20], "go": [36, 37, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 125, 132, 133, 139, 142], "goal": 137, "goe": [132, 139], "good": [90, 93, 108, 124, 129, 139, 140], "got": 141, "gradient": 119, "gradientboost": 119, "gradientboostingclassifi": 119, "gradientboostingregressor": 119, "grandvalet": 129, "granular": 90, "great": 132, "greater": [39, 43, 45, 133], "grid": [2, 36, 37, 65, 99, 104, 108, 111, 131, 132, 133, 134, 136, 143], "gridsearchcv": [36, 37, 130], "group": [15, 16, 18, 19, 20, 21, 22, 34, 35, 36, 37, 65, 87, 90, 94, 99, 106, 125, 127, 131, 136, 141], "groupbi": [92, 99], "groupkfold": 92, "groupshufflesplit": 99, "guess": 127, "guid": [6, 7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 114, 121], "guidelin": 125, "guyon": 142, "ha": [2, 36, 37, 46, 60, 88, 89, 90, 91, 92, 93, 96, 99, 100, 102, 106, 110, 113, 117, 120, 121, 127, 128, 129, 130, 132, 133, 137, 141, 142, 143], "had": [46, 108, 141, 143], "hamdan": [105, 114, 125, 128, 143], "hand": [101, 121, 127, 128, 134, 138], "handi": [133, 138, 142], "handl": 38, "happen": [108, 132, 133, 134], "har": 133, "has_model": 2, "have": [2, 6, 7, 8, 18, 19, 27, 35, 46, 47, 48, 49, 50, 51, 52, 58, 88, 91, 92, 93, 96, 99, 101, 107, 108, 109, 113, 114, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142], "he": 128, "head": [88, 89, 90, 91, 92, 99, 105, 106, 107, 108, 109, 113, 114, 117, 135, 138, 140, 142], "head2": 132, "header": 143, "heat": 89, "heatmap": [88, 89, 106], "heavili": 125, "height": 74, "help": [121, 124, 125, 128, 133, 140, 142], "helper": 2, "henc": [18, 19], "here": [47, 48, 49, 51, 90, 91, 92, 99, 101, 114, 120, 121, 125, 134, 140, 141, 142], "heurist": 142, "high": [101, 109, 120, 127, 130], "higher": [90, 113, 129], "histogram": 90, "histplot": 129, "histrogram": 90, "hochberg": 45, "hold": [4, 25, 141], "holdout": 129, "holm": 45, "holmberg": 128, "holoviz": [96, 140], "home": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 127, 130, 133, 134, 140], "hommel": 45, "homogeneity_scor": 141, "hook": [121, 143], "horizontalalign": [89, 106], "hostedtoolcach": [90, 93, 129, 130], "hour": 132, "hover": [96, 140], "how": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 87, 92, 93, 96, 98, 99, 100, 104, 106, 114, 119, 121, 124, 125, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143], "howev": [91, 96, 99, 100, 101, 114, 120, 123, 124, 128, 129, 130, 134, 135, 137, 140, 141, 142, 143], "howto": 65, "htc": 132, "htcondor": [131, 143], "html": [36, 65, 90, 96, 121, 125, 137, 140, 141], "http": [36, 46, 65, 90, 96, 121, 125, 129, 137, 140, 143], "hue": [99, 113], "huge": 132, "human": 128, "hundr": [132, 138], "hyperparamet": [2, 3, 25, 36, 37, 65, 96, 101, 104, 106, 110, 111, 113, 114, 125, 127, 128, 131, 132, 133, 134, 136, 139, 140, 143], "hyperparamt": 109, "hyperparemt": 143, "hyperparmet": 143, "hypothesi": [45, 113], "i": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 86, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 121, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143], "i_fold": [100, 113], "id": 121, "idea": [90, 132, 137], "ideal": 91, "ident": [18, 19, 20, 21, 22, 109, 129, 130], "identifi": [91, 93, 127, 128, 133, 140], "ignor": [18, 19, 20, 21, 22, 27, 114, 117, 130], "ijcai": 129, "imbal": 93, "impact": [132, 133], "implement": [18, 19, 46, 120, 125, 127, 128, 129, 134, 143], "import": [0, 32, 57, 88, 89, 90, 91, 92, 93, 96, 99, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142], "importantli": [128, 129, 132, 133, 137, 138, 142], "importlib": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 133, 134], "imposs": 129, "improv": [121, 124, 132], "inc": 121, "incl": [88, 89, 90, 92, 99, 100, 101, 102, 105, 106, 107, 108, 109, 114, 117, 127, 130, 133, 134, 141], "includ": [2, 3, 17, 100, 101, 114, 120, 121, 124, 130, 137, 143], "inclus": [17, 114], "inconsist": [34, 35], "increas": 127, "increment": [126, 142], "inde": [130, 132, 141], "independ": [45, 52, 59, 99, 113, 114, 119, 129, 132], "index": [88, 89, 90, 91, 92, 99, 101, 105, 106, 107, 108, 109, 113, 117, 121, 125, 133], "indic": [18, 19, 20, 21, 22, 36, 48, 52, 99, 119, 121, 129, 133, 141, 142, 143], "individu": [46, 127, 133, 141], "ineffect": 128, "infer": [92, 99], "infer_object": 133, "infinit": 129, "influenc": 133, "info": [65, 66, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 127, 128, 130, 132, 133, 134, 135, 140, 141, 142], "inform": [1, 6, 7, 8, 18, 19, 20, 21, 22, 27, 32, 36, 37, 46, 47, 48, 49, 50, 51, 52, 57, 58, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 121, 127, 128, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143], "initi": [2, 3, 25, 26, 45, 55, 56, 63, 64, 113, 128, 134, 142], "inm": [125, 132], "inm7": 132, "inner": [107, 108, 109, 130, 132, 133, 134, 143], "inner_max_num_thread": 132, "inplac": 89, "input": [7, 32, 34, 35, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 81, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 130, 133, 134, 135, 139, 140, 141, 142], "input_featur": [46, 47, 49, 50, 51, 52], "insert": 128, "insid": [30, 142], "insight": 133, "inspect": [2, 36, 65, 75, 101, 103, 106, 114, 122, 125, 131, 136, 137, 138, 140, 141, 143], "inspector": [36, 37, 102, 133, 143], "instal": [79, 86, 121, 123, 125, 126, 140, 143], "instanc": [6, 7, 8, 16, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 128, 133, 142], "instead": [4, 18, 19, 25, 27, 30, 43, 46, 55, 63, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 120, 128, 129, 130, 133, 134, 143], "institut": 125, "instruct": [132, 143], "int": [2, 7, 16, 18, 19, 20, 21, 22, 27, 33, 34, 35, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 65, 74, 114, 141], "int32": 133, "int64": [88, 92, 93, 96, 99, 100, 102, 107, 108, 109, 110, 113, 130, 133, 140, 141, 142], "intdistribut": 130, "integ": [18, 19, 20, 21, 22, 130, 141], "integr": 143, "intellig": [127, 132], "intend": [121, 132], "intens": 129, "interact": [96, 99, 125, 133, 140], "interest": [89, 90, 93, 105, 106, 113, 117, 139, 141, 142], "interfac": [121, 130, 132, 134], "intern": [100, 132, 133, 134, 141, 142, 143], "interpret": [35, 36, 37, 65, 113, 133], "interv": [74, 113], "intro": 121, "introduc": [7, 46, 47, 48, 49, 50, 51, 52, 128], "intuit": [129, 133, 140], "invers": [32, 58, 143], "inverse_transform": 32, "involv": 128, "ipynb": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117], "iqr": 119, "iri": [88, 93, 96, 100, 102, 110, 113, 121, 130, 138, 141, 142], "isin": [93, 96, 100, 102, 110, 113, 121, 130], "island": 133, "issu": [125, 126, 129, 132, 133, 143], "iter": [18, 19, 20, 21, 22, 36, 101, 109, 113, 127, 130, 133, 141, 143], "its": [2, 6, 26, 56, 64, 121, 130, 132, 133, 134, 137, 139, 142], "itself": [4, 134], "j": [88, 128], "jaccard": 141, "jaccard_macro": 141, "jaccard_micro": 141, "jaccard_sampl": 141, "jaccard_weight": 141, "jama": 128, "jan": [127, 128], "januari": 128, "jmlr": 129, "job": [36, 46, 132], "joblib": [36, 37, 46, 125, 131, 143], "joblib_htcondor": 132, "join": 99, "jointli": 128, "juaml": 121, "juelich": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127], "juestim": 72, "juestimatorlik": 33, "jul": 142, "julearn": [1, 77, 79, 86, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142], "jump": 142, "jupyt": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 123, 141], "jupyter_bokeh": 123, "jurs": 143, "just": [2, 121, 125, 129, 133, 139, 142], "jutargetpipelin": [3, 58, 105, 128, 135], "jutargettransform": [32, 61, 63], "jutransform": [47, 48, 49, 50, 51, 52], "k": [18, 19, 20, 21, 36, 65, 87, 88, 89, 92, 94, 99, 105, 106, 113, 119, 129, 130, 136, 137, 141], "kaustubh": [106, 125, 143], "kdeplot": 129, "keep": [49, 91, 93, 96, 100, 102, 106, 110, 113, 114, 121, 124, 125, 130, 132, 134, 142], "keep_confound": [52, 114], "keepdim": 88, "kei": [2, 13, 14, 35, 36, 37, 47, 51, 91, 101, 132, 138], "kept": [47, 49, 50, 51, 52, 114], "kernel": [96, 107, 108, 109, 128, 130, 132, 133, 134, 141, 142], "keyword": [28, 50, 69, 70, 72, 101, 127], "kfold": [36, 89, 90, 92, 93, 96, 99, 100, 101, 105, 106, 107, 108, 109, 110, 114, 117, 127, 128, 129, 130, 133, 134, 135, 141, 142], "kimia": 92, "kind": [36, 37, 88, 89, 92, 93, 96, 99, 100, 102, 107, 108, 109, 110, 113, 130, 138, 141], "klass": [67, 130], "knop": 27, "knora": 27, "knorau": 27, "know": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 106, 108, 125, 129, 132, 133, 137, 140, 142], "knowledg": [128, 133], "known": [138, 142], "kohavi": 129, "komey": 125, "kwarg": [8, 27, 28, 50, 57, 60, 69, 70, 71, 72], "l": [90, 91, 92, 99, 101, 105, 107, 108, 109, 113, 127], "l1": 130, "l2": [119, 130], "label": [16, 18, 19, 20, 21, 22, 35, 36, 37, 88, 93, 137, 138, 141, 142], "laid": 128, "languag": 143, "larg": 132, "larger": [36, 37], "last": [2, 101, 106, 114, 126, 128, 142], "lastli": [114, 128], "later": [99, 102, 121, 132, 140], "latest": [124, 126, 132, 143], "latter": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58], "layer": 129, "lazi": 143, "lead": [2, 124, 128, 129, 137, 142], "leak": [128, 137, 143], "leakag": [32, 57, 125, 128, 142], "learn": [18, 19, 20, 21, 22, 23, 25, 36, 37, 46, 47, 49, 50, 51, 52, 53, 57, 91, 93, 99, 100, 117, 119, 120, 121, 124, 125, 127, 128, 129, 130, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143], "learnt": 142, "least": [2, 18, 19, 20, 21, 36, 37, 90, 113, 119, 129], "leav": [18, 19, 106, 129, 132], "left": 132, "len": [113, 114, 128], "length": [93, 96, 102, 110, 113], "leonard": [90, 101, 113, 125, 127], "less": [45, 90, 101, 125, 129, 132, 137], "lest": 108, "let": [88, 89, 90, 91, 92, 99, 101, 105, 106, 107, 108, 113, 114, 117, 128, 129, 130, 132, 133, 134, 135, 138, 142], "letter": 45, "level": [36, 37, 65, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 127, 132, 133, 134], "levelnam": 65, "leverag": [127, 133], "lib": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 129, 130, 133, 134], "liblinear": 130, "librari": [92, 123, 125, 130, 132, 143], "licens": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 127], "light": 129, "like": [7, 8, 18, 19, 20, 21, 22, 30, 46, 47, 48, 49, 50, 51, 52, 55, 58, 69, 70, 71, 72, 96, 106, 121, 124, 129, 130, 132, 133, 137, 138, 141, 142], "limit": [128, 132], "line": [96, 121, 129, 140], "linear": [90, 96, 107, 108, 109, 114, 127, 128, 130, 133, 134, 142], "linearli": 99, "linearregress": [52, 59, 114, 119, 127, 128], "liner": [121, 140], "linestyl": [99, 129], "link": [119, 121, 139, 142, 143], "linreg": [90, 114, 119, 127, 128], "linspac": [99, 129], "linter": 143, "list": [2, 4, 5, 6, 7, 8, 16, 17, 24, 29, 32, 33, 35, 36, 37, 40, 47, 48, 49, 50, 51, 52, 54, 59, 62, 107, 109, 114, 119, 120, 130, 132, 133, 138, 141, 142, 143], "list_scor": 141, "littl": 128, "ll": [91, 106, 132], "load": [88, 89, 90, 105, 106, 107, 108, 109, 113, 114, 117, 121, 130, 135, 138, 141], "load_breast_canc": 140, "load_dataset": [88, 91, 92, 93, 96, 99, 100, 102, 107, 108, 109, 110, 113, 121, 130, 133, 138, 141, 142], "load_diabet": [89, 90, 105, 106, 114, 117, 135], "load_if_exist": 130, "loc": 90, "local": 125, "locat": 132, "log": [46, 65, 67, 73, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 130, 132, 133, 134, 143], "logger": [109, 133, 134], "logic": 143, "logist": [110, 119, 140, 142], "logisticregress": [119, 130, 132], "logisticregressioncv": 119, "logit": [119, 130, 140], "logitcv": 119, "loki": 132, "long": [91, 113, 132], "loocv": 129, "look": [96, 99, 101, 106, 114, 119, 127, 129, 130, 132, 133, 134, 137, 138, 139, 141, 142], "loop": 130, "loss": [119, 128], "lot": [130, 132, 133], "low": [90, 101, 109, 119, 127, 130, 132], "lower": [90, 129], "luka": 128, "lya": 105, "m": [91, 92, 99, 107, 108, 109, 121, 126, 132, 142], "machin": [88, 91, 92, 93, 99, 102, 107, 108, 109, 121, 125, 127, 128, 130, 133, 137, 138, 139, 140, 142], "made": [22, 133, 139, 140], "mae": [89, 106], "magic": 139, "mai": [18, 19, 20, 21, 22, 86, 127, 128, 133, 134], "main": [6, 75, 113, 121, 125, 126, 128, 129, 132, 137], "mainli": 132, "maintain": 125, "mainten": 143, "major": [126, 130], "make": [8, 12, 18, 19, 20, 21, 22, 27, 89, 91, 92, 99, 101, 106, 107, 108, 109, 113, 121, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 140, 141, 142, 143], "make_regress": [101, 127, 128, 134], "make_scor": 117, "malign": 140, "manag": [123, 132, 143], "mandal": 143, "mani": [2, 46, 92, 99, 128, 129, 130, 132, 141, 142], "manipul": 138, "manner": [135, 137, 138, 140, 142], "manual": [91, 123, 140, 142], "map": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 89, 114], "mar": [127, 128], "margin": 142, "mark": 143, "markupsaf": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 133, 134], "mask": [46, 48, 52], "mass": [89, 90, 105, 106, 117], "massiv": 131, "match": [4, 50, 91], "mathia": 128, "matplotlib": [88, 89, 90, 99, 100, 101, 106, 113, 125, 129], "matrix": 88, "matter": [129, 137, 140], "matthews_corrcoef": 141, "max": [89, 90, 101, 105, 106, 114, 117, 119, 135], "max_depth": [130, 134], "max_it": 141, "max_recursion_level": 132, "maxabsscal": 119, "maxent": 119, "maxim": 130, "maximum": 132, "mayb": [113, 140], "mb": [94, 97, 103, 111, 115, 118, 132, 136], "mcb": 27, "mean": [36, 37, 45, 46, 52, 59, 86, 89, 90, 92, 93, 99, 101, 105, 106, 107, 108, 109, 113, 114, 117, 119, 128, 129, 130, 132, 133, 135, 137, 140, 141, 142], "mean_absolute_error": [89, 106], "meaning": 138, "meant": 120, "measur": [89, 90, 105, 106, 114, 117, 128, 129, 130, 133], "mechan": [6, 7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 114, 132, 137], "medatada": 132, "median": 119, "medicin": 125, "meet": 121, "mem": [94, 97, 103, 111, 115, 118, 136], "member": [90, 129], "memori": [132, 141], "mention": 129, "merg": 126, "meshgrid": 99, "messag": [65, 67, 73, 121, 127, 143], "meta": [18, 27, 132], "metad": 27, "metadata": [6, 7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 132, 133, 134], "metadata_rout": [18, 27], "metadatarequest": [6, 7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 114], "method": [2, 6, 7, 8, 18, 19, 20, 21, 27, 45, 46, 47, 48, 49, 50, 51, 52, 58, 90, 91, 101, 107, 114, 120, 124, 127, 129, 130, 133, 142], "metric": [36, 37, 75, 88, 89, 91, 93, 96, 106, 113, 117, 125, 137, 139, 140], "micro": 126, "might": [34, 35, 86, 91, 93, 96, 100, 107, 108, 109, 120, 123, 124, 128, 129, 130, 132, 133, 135, 139, 141, 142, 143], "mileston": 126, "min": [89, 90, 101, 105, 106, 114, 117, 135], "min_samples_leaf": 134, "min_samples_split": 134, "mind": 134, "minim": 119, "minimum": 143, "minmaxscal": 119, "minor": [125, 126], "minut": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 129, 130, 133, 134, 135, 138, 140, 141, 142], "misc": 121, "miscellan": 121, "miss": [120, 143], "mistak": 137, "mitig": 128, "ml": [113, 125], "model": [2, 7, 8, 16, 17, 22, 36, 37, 40, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 65, 74, 75, 82, 88, 89, 90, 92, 93, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 114, 115, 117, 120, 122, 125, 128, 129, 131, 132, 135, 136, 137, 139, 143], "model1": 130, "model2": 130, "model3": 130, "model_1": [134, 140], "model_2": [96, 134, 140], "model__c": 130, "model__gamma": 130, "model__max_depth": 130, "model__penalti": 130, "model_confound": [52, 59, 114, 128], "model_evalu": 36, "model_iri": [88, 100], "model_nam": 30, "model_param": [2, 36, 37, 96, 143], "model_pet": [110, 132], "model_select": [88, 89, 90, 92, 96, 99, 102, 105, 106, 113, 129, 133, 140, 141, 143], "model_sep": [110, 132], "model_tun": 130, "modellik": [8, 27, 28, 30, 52, 58, 59, 114], "modern": 132, "modifi": [130, 142], "modul": [0, 1, 36, 79, 86, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 124, 125, 133, 134, 135, 137, 143], "moment": [41, 42, 117], "monica": 127, "monitor": 132, "month": 132, "more": [1, 2, 4, 36, 37, 45, 88, 89, 90, 91, 92, 93, 96, 99, 101, 106, 113, 117, 120, 121, 124, 125, 128, 129, 131, 132, 133, 134, 137, 139, 140, 141, 142, 143], "most": [114, 124, 127, 128, 129, 132, 133, 137, 142], "mostli": [2, 3, 129, 132], "msg": [67, 73], "much": [108, 129, 130, 133, 137], "multi": [88, 91, 140, 141, 142], "multiclass": [22, 36, 65, 87, 94, 119, 136], "multiindex": 91, "multinomi": 119, "multinomialnb": 119, "multipl": [2, 18, 19, 20, 21, 22, 36, 65, 101, 104, 111, 129, 130, 132, 136, 141, 142, 143], "multiple_class": [36, 37], "multipli": 128, "multiprocess": 143, "multivari": 119, "must": [18, 19, 20, 21, 45, 50, 74, 91, 92, 99, 106, 121, 129, 130, 132, 138, 142], "mutual_info_scor": 141, "my_target": 128, "n": [20, 21, 88, 89, 90, 101, 105, 106, 117, 119, 126, 129, 135, 142], "n_bin": [18, 19, 20, 21, 90, 129], "n_bootstrap": 113, "n_class": [8, 58], "n_compon": [101, 106, 130, 142], "n_element": 113, "n_estim": [101, 134], "n_featur": [7, 18, 19, 20, 21, 22, 46, 47, 48, 49, 50, 51, 52, 101, 127, 128, 134], "n_features_in_": 50, "n_features_new": [7, 46, 47, 48, 49, 50, 51, 52], "n_inform": 101, "n_iter": [109, 130], "n_job": [36, 46, 120, 132, 133, 143], "n_output": [7, 46, 47, 48, 49, 50, 51, 52], "n_repeat": [20, 21, 88, 96, 102, 133, 140, 141], "n_sampl": [7, 8, 18, 19, 20, 21, 22, 46, 47, 48, 49, 50, 51, 52, 58, 101, 127, 134], "n_split": [18, 19, 20, 21, 22, 27, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 129, 130, 133, 134, 135, 140, 141, 142, 143], "n_test": [88, 89, 114, 117, 128], "n_train": [88, 89, 114, 117, 128], "name": [2, 3, 6, 7, 8, 9, 17, 18, 23, 24, 25, 27, 28, 29, 30, 33, 36, 37, 39, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 65, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 121, 128, 130, 133, 134, 135, 137, 138, 140, 141, 142], "nan": [102, 133], "nat": [46, 127], "natur": 137, "navig": 133, "nazarzadeh": 92, "nb_bernoulli": 119, "nb_categor": 119, "nb_complement": 119, "nb_gaussian": 119, "nb_multinomi": 119, "nbsp": 141, "nbviewer": 141, "ncol": 88, "ncr_fi": 113, "ndarrai": [7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58], "ndim": 88, "neat": 142, "necessari": [92, 123, 128, 134], "need": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 91, 92, 93, 96, 99, 105, 113, 114, 117, 121, 123, 124, 125, 127, 128, 129, 130, 132, 133, 135, 137, 140, 141, 142, 143], "needed_typ": [6, 7, 8, 32, 33, 50, 59], "neg": [45, 46, 127], "neg_brier_scor": 141, "neg_log_loss": 141, "neg_max_error": 141, "neg_mean_absolute_error": [89, 90, 101, 105, 117, 141], "neg_mean_absolute_percentage_error": 141, "neg_mean_gamma_devi": 141, "neg_mean_poisson_devi": 141, "neg_mean_squared_error": 141, "neg_mean_squared_log_error": 141, "neg_median_absolute_error": 141, "neg_negative_likelihood_ratio": 141, "neg_root_mean_squared_error": 141, "neg_root_mean_squared_log_error": 141, "neg_significant_mask_": 46, "neglig": 132, "neither": 140, "nest": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 127, 130, 133, 137], "network": [128, 142], "neural": [128, 142], "neuroimag": [127, 128], "neuromark": 127, "neurosci": [125, 127], "never": [121, 142], "nevertheless": [124, 132, 142], "new": [9, 99, 114, 121, 125, 132, 137, 142], "new_df": 90, "new_object": 130, "new_object_param": 130, "new_typ": 9, "newer": 124, "newest": 124, "newsfrag": 121, "next": [113, 124, 126, 135, 138, 142], "nice": [125, 138, 141, 142], "no_silent_downcast": 133, "nois": [101, 128], "noise_conf_on": 128, "noise_conf_two": 128, "non": [45, 46, 132], "non_invers": 38, "none": [2, 3, 6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 30, 32, 33, 34, 35, 36, 37, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 63, 65, 67, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 127, 128, 130, 133, 134, 135, 140, 141, 142], "nor": 140, "norm": 119, "normal": [101, 114, 119, 121, 128, 129, 142, 143], "normal_dist_conf_on": 128, "normal_dist_conf_two": 128, "normalized_mutual_info_scor": 141, "nos": 143, "note": [18, 19, 20, 21, 22, 27, 36, 37, 60, 101, 113, 121, 128, 130, 132, 134], "notebook": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 123, 141], "noteworthi": 127, "noth": [99, 130, 141], "notic": [132, 133, 142], "notifi": [60, 65], "nov": 127, "now": [88, 89, 90, 91, 93, 96, 99, 100, 102, 105, 106, 107, 108, 109, 113, 114, 117, 121, 128, 129, 130, 132, 133, 134, 138, 140, 141, 142], "np": [8, 18, 19, 20, 21, 27, 46, 58, 88, 89, 92, 99, 106, 107, 108, 109, 127, 128, 129, 133, 134], "nprot": 46, "nrow": 88, "number": [16, 18, 19, 20, 21, 22, 36, 37, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 141, 142], "numpi": [48, 52, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 124, 127, 128, 129, 133, 134], "nutshel": 127, "o": 132, "obj": 25, "object": [2, 3, 6, 7, 8, 18, 19, 20, 21, 22, 27, 28, 34, 36, 37, 39, 43, 46, 47, 48, 49, 50, 51, 52, 53, 55, 58, 60, 61, 88, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 123, 128, 130, 133, 134, 135, 141, 142, 143], "observ": 128, "obtain": [2, 3, 8, 58, 100, 128, 132, 137], "obviou": 137, "oct": 128, "octob": 125, "offer": [125, 138], "offici": [121, 124], "often": [124, 128, 137, 142], "ola": 27, "old": 133, "older": [132, 143], "olivero": 105, "onc": [126, 132, 133, 137, 139, 142], "one": [2, 32, 36, 37, 45, 47, 48, 49, 51, 57, 89, 90, 91, 92, 99, 101, 105, 106, 107, 108, 109, 110, 114, 117, 119, 121, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143], "ones": [46, 130], "onli": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 90, 99, 101, 107, 113, 114, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143], "opaqu": 142, "open": [121, 132], "oper": [36, 37, 88, 114, 132], "opt": [90, 93, 129, 130, 133], "optim": [108, 124, 130, 132, 133, 142], "optimis": 143, "optimist": 130, "option": [2, 3, 7, 8, 16, 17, 18, 25, 27, 30, 33, 36, 37, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 63, 65, 67, 69, 70, 71, 72, 73, 74, 79, 86, 91, 114, 123, 125, 126, 130, 132, 138, 141, 143], "optuna": [36, 37, 124, 130, 143], "optuna_integr": 124, "optunasearchcv": [36, 37, 124, 130, 143], "order": [8, 18, 19, 27, 58, 91, 92, 99, 113, 114, 120, 121, 128, 130, 134, 137, 142, 143], "ordereddict": [109, 130], "ordin": [36, 37], "org": [36, 46, 65, 90, 96, 125, 137, 140, 141], "organis": [91, 128], "orient": 125, "origin": [18, 27, 46, 67, 121, 126, 132], "other": [2, 3, 18, 25, 27, 30, 55, 86, 91, 93, 106, 108, 114, 121, 123, 127, 128, 129, 130, 132, 139, 140, 142], "otherwis": [18, 19, 58, 65], "our": [88, 91, 92, 93, 99, 101, 110, 114, 121, 125, 128, 129, 130, 132, 133, 134, 137, 138, 140, 141, 142], "ourselv": 141, "out": [3, 23, 24, 52, 62, 96, 114, 119, 125, 128, 129, 130, 133, 134, 139, 140, 141], "outcom": [8, 27, 58, 142], "outdir": 126, "outer": [36, 37, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 130, 132, 133, 134, 135, 140, 141, 142, 143], "outlier": 90, "output": [7, 17, 18, 19, 20, 21, 22, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 65, 74, 90, 113, 121, 133, 137, 138, 139, 142], "output_format": 65, "over": [36, 88, 89, 93, 96, 101, 106, 127, 128, 133, 134, 140], "overal": 135, "overcom": [132, 137], "overestim": 129, "overfit": 141, "overlap": 143, "overview": [125, 133, 140, 142], "overwrit": [25, 30, 43, 55, 63, 65, 143], "ovr": [133, 141], "p": [46, 88, 96, 113, 127, 140], "paa": 105, "packag": [86, 90, 93, 121, 123, 124, 129, 130, 132, 134], "page": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 125, 128, 129, 141], "pair": 113, "pairwis": 140, "panda": [6, 7, 8, 34, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 58, 87, 88, 89, 90, 92, 93, 94, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 124, 125, 127, 128, 133, 134, 135, 136, 138, 140, 141], "panel": [74, 96, 123, 124, 140], "parallel": [36, 46, 120, 121, 125, 131, 143], "parallel_backend": 36, "parallel_config": 132, "param": [2, 3, 6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 53, 58, 61, 69, 70, 71, 72, 124, 127, 128, 130, 133, 135, 142], "param_grid": [130, 133], "paramet": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 61, 63, 65, 67, 69, 70, 71, 72, 73, 74, 81, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143], "parametr": [128, 130, 138, 142], "params_attr": 25, "params_to_tun": 33, "pariet": [91, 92, 99, 107, 108, 109], "parietal__": 99, "parietal_cu": 91, "parietal_stim": 91, "part": [99, 123, 125, 127, 129, 132, 137, 140, 142], "particular": [128, 133, 142], "particularli": [86, 129, 132, 141], "pass": [7, 8, 18, 19, 20, 21, 22, 27, 47, 48, 49, 50, 51, 52, 58, 107, 119, 121, 130, 135, 141, 142], "path": [65, 132], "pathlib": 65, "patient": [89, 90, 105, 106, 117], "patil": [106, 125, 143], "pattern": [4, 12, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 130, 133, 134, 135, 140, 141, 142], "pca": [2, 17, 36, 65, 98, 103, 106, 114, 119, 130, 136, 142], "pca0": 101, "pca1": [101, 106], "pca2": 106, "pca_1": 142, "pca__n_compon": 130, "pca__pca0": 114, "pca__pca1": 114, "pca__pca2": 114, "pca__pca3": 114, "pca__pca4": 114, "pca__pca5": 114, "pca__pca6": 114, "pca__pca7": 114, "pca__pca8": 114, "pca_feats1": 106, "pca_feats1__pca0": 106, "pca_feats2": 106, "pca_feats2__pca0": 106, "pd": [4, 6, 7, 8, 16, 17, 27, 32, 36, 37, 45, 47, 48, 49, 50, 51, 52, 57, 58, 59, 69, 72, 74, 88, 89, 90, 91, 99, 100, 101, 105, 106, 113, 117, 127, 128, 133, 134, 135, 140], "pearson": [41, 42, 117, 127], "pearson_scor": 117, "pearsonr": [46, 117, 141], "penalti": 130, "penguin": 133, "penguins_df": 133, "per": [46, 88, 92, 99, 106, 121, 129, 132], "percentag": 22, "percentil": [113, 119], "perform": [18, 19, 32, 36, 37, 45, 88, 89, 90, 92, 93, 95, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 127, 128, 129, 130, 132, 133, 137, 139, 140, 141, 142], "perimet": 140, "petal": [93, 96, 102, 110, 113, 132, 138, 142], "petal_length": [88, 93, 96, 100, 102, 110, 113, 130, 138, 141, 142], "petal_width": [110, 113, 130, 138, 141, 142], "pick": 143, "pictur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "pieplin": 2, "pii": 137, "pip": [121, 123, 124], "pipe": 142, "pipelin": [2, 3, 6, 7, 8, 17, 27, 34, 35, 36, 37, 38, 46, 47, 48, 49, 50, 51, 52, 57, 58, 75, 81, 99, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 125, 127, 128, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143], "pipeline_cr": [101, 106, 110, 114, 128, 130, 133, 134], "pipelinecr": [3, 36, 37, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 119, 127, 128, 130, 132, 133, 134, 135, 139, 140, 141, 143], "pipelineifit": 141, "pipelineinspector": [16, 102], "pivot": [91, 92, 99, 107, 108, 109], "place": [91, 143], "placehold": [18, 19, 20, 21], "plai": 133, "pleas": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 86, 101, 114, 121, 125, 132, 141, 142], "plot": [74, 88, 89, 90, 96, 99, 100, 101, 106, 113, 125, 129, 140], "plot_": 121, "plot_cm_acc_multiclass": [88, 94, 136], "plot_confound_removal_classif": [113, 115, 136], "plot_example_regress": [89, 94, 136], "plot_groupcv_inspect_svm": [99, 103, 136], "plot_inspect_random_forest": [100, 103, 136], "plot_preprocess": [101, 103, 136], "plot_scor": [96, 123, 140], "plot_simple_model_comparison": [96, 97, 136], "plot_stratified_kfold_reg": [90, 94, 136], "plt": [88, 89, 90, 99, 100, 101, 106, 113, 129], "plugin": 126, "po": [46, 127], "point": [2, 113, 121, 128, 129, 132, 137, 139, 140, 141, 142], "polar": [7, 46, 47, 48, 49, 50, 51, 52], "poli": 108, "poorli": 129, "popul": [90, 113, 129], "pos_label": [35, 36, 37, 93], "pos_mask_": 46, "pos_significant_mask_": 46, "posit": [35, 36, 37, 46, 89, 93, 127], "positive_likelihood_ratio": 141, "posneg": [46, 127], "possibl": [6, 7, 8, 25, 27, 30, 43, 46, 47, 48, 49, 50, 51, 52, 55, 58, 63, 91, 125, 129, 130, 132, 137, 141, 142], "potenti": [120, 128, 133], "power": [125, 133, 134], "powertransform": 119, "pprint": [130, 133, 141], "pr": 126, "practic": [128, 129], "pre": [121, 124, 126, 143], "pre_df": 99, "pre_dispatch": 133, "pre_x": 99, "preced": 121, "precis": [93, 141], "precision_macro": 141, "precision_micro": 141, "precision_sampl": 141, "precision_scor": 93, "precision_weight": 141, "predict": [2, 8, 15, 16, 27, 35, 36, 37, 41, 42, 46, 52, 58, 59, 65, 88, 89, 90, 91, 92, 93, 96, 98, 99, 103, 105, 106, 110, 114, 117, 119, 125, 128, 129, 131, 133, 134, 135, 136, 137, 140, 141, 142, 143], "predict_log_proba": [8, 15], "predict_proba": [8, 15, 27, 58], "predictor": 128, "prefer": 128, "prefix": 121, "prepar": [75, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 117, 125, 127, 128, 133, 134], "prepreprocess": 142, "preprocess": [2, 3, 36, 37, 65, 88, 89, 90, 92, 93, 96, 98, 99, 100, 103, 106, 113, 114, 117, 125, 127, 131, 136, 138, 139, 141], "presenc": 128, "present": [32, 57, 114, 120, 121, 127, 129, 143], "preserv": 22, "press": 132, "pressur": [89, 90, 105, 106, 114, 117], "pretti": 130, "prevent": [128, 130], "previou": [91, 96, 100, 101, 121, 132, 134, 140, 141, 142, 143], "previous": 142, "princip": [119, 142], "principl": 127, "print": [36, 37, 65, 88, 89, 90, 92, 93, 96, 99, 101, 102, 105, 106, 107, 108, 109, 110, 114, 117, 120, 127, 128, 130, 133, 135, 140, 141, 142], "prior": [109, 130], "probabl": [8, 27, 36, 37, 58, 132, 141], "problem": [2, 18, 19, 20, 21, 22, 28, 30, 34, 36, 37, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143], "problem_typ": [2, 28, 34, 36, 37, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 130, 132, 133, 134, 135, 140, 141, 142], "problemat": 127, "procedur": [46, 129, 137, 143], "proceed": [126, 142], "process": [106, 130, 132, 138, 141, 142], "processor": [36, 132], "produc": [22, 130], "product": [41, 42, 117], "progress": [89, 90, 105, 106, 117, 121], "project": 132, "promin": 124, "prone": [91, 137, 140], "proper": [100, 113, 126, 139], "properli": 126, "properti": [2, 4, 8, 16, 32, 58, 59, 129], "propos": 127, "protoc": [46, 127], "protocol": 85, "provid": [0, 2, 4, 6, 16, 18, 19, 22, 27, 36, 37, 58, 79, 91, 114, 120, 125, 128, 129, 130, 133, 134, 137, 138, 140, 141, 142, 143], "public": 125, "publish": 126, "pull": [125, 126], "purpos": [6, 90, 91, 141], "push": [121, 126], "put": [114, 128], "pvalu": 45, "py": [88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 121, 127, 129, 130, 133, 134, 136, 140], "pydata": 90, "pypi": [124, 126], "pyplot": [88, 89, 90, 99, 100, 101, 106, 113, 129], "pytest": [121, 143], "python": [65, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 124, 126, 129, 130, 132, 143], "python3": [90, 93, 129, 130], "quantil": [18, 19, 20, 21, 129], "quantiletransform": 119, "quantit": [89, 90, 105, 106, 117], "quantiz": 129, "queri": 133, "question": [128, 129], "queu": 132, "queue": 132, "quick": 133, "quickli": 137, "quit": [99, 124, 127, 132, 133], "r": [106, 117, 125], "r2": [101, 106, 128, 141], "r2_corr": [117, 141], "r_corr": 141, "radiu": 140, "raimondo": [88, 89, 90, 91, 92, 93, 96, 99, 100, 102, 106, 107, 108, 109, 110, 113, 117, 125, 143], "rais": [2, 16, 18, 23, 25, 27, 30, 34, 35, 43, 55, 61, 63, 65, 67, 138, 143], "rand": [128, 129], "rand_scor": 141, "random": [18, 19, 20, 21, 22, 27, 36, 37, 65, 92, 93, 96, 98, 101, 103, 107, 108, 109, 113, 119, 128, 129, 130, 133, 134, 136, 140, 142], "random_st": [18, 19, 20, 21, 22, 27, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 129, 130, 133, 134, 135, 140, 141, 142], "random_state_algorithm": 27, "randomforest": 27, "randomforestclassifi": [100, 119, 130, 132], "randomforestregressor": 119, "randomizedsearchcv": [36, 37, 130], "randomli": 99, "randomst": [18, 19, 20, 21, 22], "rang": [88, 91, 101, 119, 127, 134], "rank": 119, "rao": 128, "rare": [121, 132], "rate": 142, "rather": 128, "ratio": 93, "ravel": 99, "raw": [99, 101, 142], "rbf": [107, 108, 109, 130, 132, 141], "re": [121, 142], "reach": [126, 132], "read": [96, 100, 121, 125, 126, 129, 132, 137, 139, 140, 142], "readabl": 128, "readi": [91, 140, 142], "readm": 143, "real": [109, 128, 130, 133], "realiz": 133, "realli": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 113, 125], "reason": [128, 129, 132], "rebas": 126, "recal": 141, "recall_macro": 141, "recall_micro": 141, "recall_sampl": 141, "recall_weight": 141, "receiv": 130, "recent": 127, "recommend": [124, 132, 138], "record": 121, "recurs": 2, "red": 89, "reduc": [106, 114, 142], "reduct": 101, "refactor": [121, 143], "refer": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 101, 119, 121, 125, 130, 139], "referenc": [25, 30, 55, 63, 143], "refit": 133, "reflect": [126, 143], "regard": [4, 132, 138, 141], "regex": 4, "region": [91, 92, 99, 107, 108, 109], "regist": [25, 26, 30, 31, 36, 37, 43, 44, 55, 56, 63, 64, 117, 143], "register_htcondor": 132, "register_model": 143, "register_scor": 117, "register_search": [36, 37], "regress": [2, 17, 18, 19, 30, 34, 36, 37, 43, 65, 87, 94, 101, 104, 105, 110, 111, 114, 116, 118, 119, 127, 130, 131, 134, 135, 136, 140, 141, 142, 143], "regression_cl": 30, "regular": [52, 107, 108, 114, 119, 130, 138, 143], "regularli": 121, "rel": [128, 132, 134], "relas": 124, "relat": [112, 128, 138], "relationship": 128, "releas": [86, 124, 125, 143], "relev": [18, 27, 133], "reli": 86, "reliabl": 133, "reliant": 125, "remain": [129, 137], "rememb": [129, 133, 141], "remov": [2, 3, 17, 22, 36, 47, 52, 59, 65, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 112, 115, 117, 119, 121, 125, 131, 133, 134, 136, 140, 143], "remove_confound": 114, "render": [121, 141], "repat": 130, "repeat": [2, 20, 21, 88, 89, 106, 114, 117, 128, 129, 130, 133, 137, 141], "repeat0_p0": [102, 133], "repeat1_p0": [102, 133], "repeat2_p0": 102, "repeat3_p0": 102, "repeat7_p0": 133, "repeat8_p0": 133, "repeat9_p0": 133, "repeatedcontinuousstratifiedgroupkfold": 129, "repeatedcontinuousstratifiedkfold": [129, 143], "repeatedkfold": [88, 133], "repeatedstratifiedkfold": [96, 102, 140, 141], "repetit": [20, 21, 88, 89, 106], "replac": [46, 100, 113, 126, 133, 143], "report": 121, "repositori": [121, 143], "repres": [2, 4, 33, 52, 59, 90, 114, 129, 141], "represent": 141, "reproduc": [18, 19, 20, 21, 22, 27, 36, 37, 141], "request": [18, 27, 125, 132], "request_cpu": 132, "request_memori": 132, "requir": [32, 57, 79, 86, 121, 125, 130, 132, 133, 135, 139, 142, 143], "rerun": 141, "rescu": 129, "research": [125, 127, 128, 129], "resembl": 142, "reset": [26, 31, 44, 56, 64, 91], "reset_index": [90, 91, 92, 99, 107, 108, 109, 113], "reshap": [91, 99], "residu": [52, 59, 114, 128], "resourc": [120, 132, 137], "respect": [46, 119, 121, 132, 138, 140, 141, 142], "rest": [121, 132], "result": [18, 19, 20, 21, 22, 32, 36, 37, 57, 91, 99, 113, 114, 120, 128, 129, 132, 133, 137, 138, 140, 141, 143], "retain": [18, 27, 133], "return": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 32, 35, 36, 37, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 69, 70, 71, 72, 90, 99, 100, 112, 115, 117, 136, 142, 143], "return_estim": [36, 37, 88, 89, 90, 92, 99, 100, 101, 105, 106, 107, 108, 109, 113, 114, 117, 127, 130, 133, 134, 141], "return_inspector": [36, 37, 102, 133], "return_train_scor": [36, 133, 141], "return_x_i": [89, 90, 105, 106, 114, 117, 135], "revert": 120, "review": [100, 121], "revis": 128, "rf": [92, 96, 100, 101, 110, 113, 119, 130, 132, 134, 140], "rf__max_depth": 134, "rf__min_samples_leaf": 134, "rf__min_samples_split": 134, "rid": 127, "ridg": [89, 105, 106, 117, 119], "ridgeclassifi": 119, "ridgeclassifiercv": 119, "ridgecv": 119, "right": [89, 106, 107, 108, 109, 129, 130], "robust": [119, 123], "robustscal": [119, 130], "roc": 113, "roc_auc": [96, 113, 140, 141], "roc_auc_ovo": 141, "roc_auc_ovo_weight": 141, "roc_auc_ovr": 141, "roc_auc_ovr_weight": 141, "root": 132, "rosenberg": 127, "round": 140, "rout": [6, 7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 114], "row": [2, 7, 33, 47, 48, 49, 50, 51, 52, 89, 90, 91, 92, 96, 99, 101, 102, 105, 106, 114, 117, 132, 133, 135, 140, 141, 142], "row_index": 90, "row_select_col_typ": [2, 7, 33, 47, 48, 49, 50, 51, 52, 114, 141], "row_select_v": [2, 7, 33, 47, 48, 49, 50, 51, 52, 114, 141], "rst": [121, 126], "ruff": 143, "rule": [91, 119, 129, 132, 142], "run": [34, 36, 46, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 140, 141, 142], "run_": 121, "run_apply_to_target": [105, 111, 136], "run_binary_inspect_fold": [102, 103, 136], "run_cbpm_doc": 136, "run_combine_panda": [91, 94, 136], "run_confound_removal_doc": 136, "run_cross_valid": [28, 30, 45, 74, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 121, 127, 128, 130, 132, 133, 134, 135, 139, 140, 143], "run_custom_scorers_regress": [117, 118, 136], "run_cv_splitters_doc": 136, "run_data_doc": 136, "run_example_pca_featset": [106, 111, 136], "run_fit": 143, "run_grouped_cv": [92, 94, 136], "run_hyperparameter_multiple_grid": [107, 111, 136], "run_hyperparameter_tun": [108, 111, 136], "run_hyperparameter_tuning_bayessearch": [109, 111, 136], "run_hyperparameters_doc": 136, "run_model_comparison_doc": 136, "run_model_evaluation_doc": 136, "run_model_inspection_doc": [133, 136], "run_pipeline_doc": 136, "run_return_confound": [114, 115, 136], "run_simple_binary_classif": [93, 94, 136], "run_stacked_model": [110, 111, 136], "run_stacked_models_doc": 136, "run_target_transformer_doc": 136, "runner": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 127, 130, 133, 134, 140], "runtimewarn": [30, 34, 35, 55, 63, 73, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 117, 127, 133, 134, 140], "s0": [91, 92, 99, 107, 108, 109], "s1": [89, 90, 91, 92, 99, 105, 106, 114, 117, 135], "s10": [91, 92, 99, 107, 108, 109], "s105381191630595x": 137, "s1053811917305311": 137, "s11": [91, 92, 99, 107, 108, 109], "s12": [91, 92, 99, 107, 108, 109], "s13": [91, 92, 99, 107, 108, 109], "s2": [89, 90, 91, 92, 99, 105, 106, 114, 117, 135], "s3": [89, 90, 91, 92, 99, 105, 106, 114, 117, 135], "s4": [89, 90, 91, 92, 99, 105, 106, 114, 117, 135], "s41746": 137, "s5": [89, 90, 91, 92, 99, 105, 106, 107, 108, 109, 114, 117, 135], "s6": [89, 90, 91, 92, 99, 105, 106, 114, 117, 135], "s7": [91, 92, 99], "s8": [91, 92, 99], "s9": [91, 92, 99], "safe": 142, "sai": [132, 142], "same": [2, 18, 19, 36, 37, 51, 65, 93, 96, 99, 107, 108, 109, 113, 117, 121, 125, 127, 128, 129, 130, 132, 134, 137, 140, 141, 142, 143], "sami": [105, 114, 125, 128, 143], "sampl": [7, 8, 18, 19, 20, 21, 22, 27, 35, 45, 46, 47, 48, 49, 50, 51, 52, 58, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 129, 130, 133, 134, 135, 140, 141, 142], "sample_weight": 27, "sass": [90, 101, 113, 125, 127], "save": [121, 142], "saw": [138, 140, 141, 142], "scalar": [39, 43, 88], "scale": [89, 106, 107, 108, 119, 130, 133, 141, 142], "scaler": 142, "scaler_maxab": 119, "scaler_minmax": 119, "scaler_norm": 119, "scaler_pow": 119, "scaler_quantil": 119, "scaler_robust": 119, "scan": 91, "scanner": 91, "scatter": [89, 101, 106], "scatterplot": [89, 99, 101, 106], "scenario": [128, 141, 142], "scheinost": 46, "scheme": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 130, 133, 134, 135, 137, 140, 141, 142, 143], "scienc": [128, 137], "sciencedirect": 137, "scientif": 125, "scikit": [23, 25, 36, 37, 46, 47, 49, 50, 51, 52, 53, 57, 93, 99, 100, 117, 119, 120, 124, 125, 127, 128, 129, 130, 134, 135, 137, 140, 141, 142, 143], "scipi": [46, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 127, 133, 134], "score": [2, 3, 8, 15, 16, 27, 36, 37, 45, 58, 65, 74, 75, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 113, 114, 116, 118, 125, 127, 128, 130, 132, 133, 134, 135, 136, 139, 142, 143], "score_tim": [88, 89, 102, 105, 106, 114, 117, 128, 135, 141, 142], "scorer": [36, 39, 40, 43, 44, 117, 140, 141, 143], "scorer_nam": [43, 117], "scorerlik": [36, 38, 39, 43], "scores1": [96, 123, 130, 140], "scores2": [96, 123, 130, 140], "scores3": [96, 123, 130, 140], "scores_cr": 113, "scores_ncr": 113, "scores_strat": 90, "scores_tun": 130, "script": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 126, 127, 128, 129, 130, 133, 134, 135, 138, 140, 141, 142], "seaborn": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 106, 107, 108, 109, 110, 113, 121, 124, 125, 129, 130, 133, 138, 141, 142], "search": [2, 24, 25, 36, 37, 65, 101, 104, 107, 108, 111, 125, 130, 132, 133, 134, 136], "search_param": [2, 36, 37, 107, 108, 109, 130, 143], "searcher": [23, 24, 25, 26, 36, 37, 124, 131, 132, 143], "searcher_nam": 25, "second": [18, 19, 20, 21, 45, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 129, 130, 132, 133, 134, 135, 138, 140, 141, 142], "section": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 129, 132, 138, 140, 141, 142, 143], "see": [1, 7, 18, 19, 20, 27, 28, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 65, 79, 86, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 121, 123, 128, 129, 130, 132, 133, 134, 137, 138, 139, 140, 141, 142], "seed": [36, 37, 93, 96, 101, 107, 108, 109, 113, 133, 134], "seem": [99, 107, 108, 109, 113, 130, 139, 140, 141], "seen": [91, 142], "segment": 126, "select": [2, 7, 8, 12, 27, 33, 47, 48, 49, 50, 51, 52, 75, 101, 114, 125, 127, 129, 130, 133, 138, 139, 140], "select_fdr": 119, "select_fpr": 119, "select_fw": 119, "select_k": [119, 130], "select_k__k": 130, "select_percentil": 119, "select_univari": 119, "select_vari": [101, 119], "selectfdr": 119, "selectfpr": 119, "selectfw": 119, "selectkbest": [119, 130], "selector": [4, 12], "selectpercentil": 119, "self": [4, 6, 7, 18, 27, 32, 46, 47, 48, 49, 50, 51, 52, 58, 60], "semant": 121, "sens": [124, 130, 132], "sepal": [93, 96, 102, 110, 113, 132, 138, 142], "sepal_length": [88, 93, 96, 100, 102, 110, 113, 130, 138, 141, 142], "sepal_width": [88, 93, 96, 100, 102, 110, 113, 130, 138, 141, 142], "separ": [46, 99, 101, 132, 137, 141, 142], "seri": [34, 35, 59, 69, 72], "serum": [89, 90, 105, 106, 117], "serv": 133, "servabl": 123, "set": [1, 2, 4, 5, 6, 7, 8, 14, 16, 18, 19, 20, 21, 22, 25, 27, 32, 33, 36, 37, 43, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 69, 70, 71, 72, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 122, 125, 126, 127, 128, 129, 130, 132, 133, 134, 137, 139, 140, 141, 143], "set_column_typ": [107, 109, 130, 133, 141], "set_column_types__column_mapper_": 133, "set_column_types__feature_names_in_": 133, "set_column_types__row_select_col_typ": 133, "set_column_types__row_select_v": 133, "set_column_types__x_typ": 133, "set_config": [18, 27, 120], "set_index": [88, 89, 91, 106, 113], "set_opt": 133, "set_output": [7, 46, 47, 48, 49, 50, 51, 52], "set_param": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 69, 70, 71, 72], "set_score_request": 27, "set_split_request": 18, "set_styl": [89, 90, 106], "set_titl": [99, 100, 101, 129], "setcolumntyp": [107, 109, 130, 133, 141], "setosa": [88, 138, 141, 142], "settingwithcopywarn": 90, "setup": [125, 139], "setuptools_scm": 126, "setuptools_scm_debug": 126, "sever": [36, 37, 91, 92, 99, 120, 121, 129, 130, 132, 137, 141], "sex": [89, 90, 105, 106, 114, 117, 128, 133, 135], "sgd": 119, "sgdclassifi": 119, "sgdregressor": 119, "shall": [121, 129], "shammi": [88, 89, 90, 92, 99, 101, 106, 113, 117, 125, 128, 143], "shape": [7, 8, 18, 19, 20, 21, 22, 46, 47, 48, 49, 50, 51, 52, 58, 88, 99], "share": 132, "shared_data_dir": 132, "shed": 129, "shen": [46, 127], "shield": 143, "short": [119, 121, 128, 132], "should": [2, 6, 7, 18, 25, 27, 30, 33, 43, 46, 47, 48, 49, 50, 51, 52, 55, 63, 90, 101, 106, 113, 114, 119, 121, 126, 127, 129, 130, 131, 135, 137, 141, 142], "shouldn": 142, "show": [46, 87, 96, 104, 112, 116, 123, 129, 130, 140, 141, 143], "shown": 130, "shrink": [129, 141], "shuffl": [18, 19, 89, 90, 92, 93, 96, 99, 100, 101, 105, 106, 107, 108, 109, 110, 114, 117, 127, 128, 129, 130, 133, 134, 135, 141, 142], "shufflesplit": 102, "sidak": 45, "side": 45, "sigma": 142, "sign": 127, "signal": [91, 92, 99, 107, 108, 109], "signatur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "signific": [46, 96, 127, 132, 133], "significance_threshold": [46, 127], "significant_mask_": 46, "significantli": 46, "sime": 45, "similar": [91, 130, 132, 134, 141, 142], "similarli": [128, 133], "simpl": [6, 7, 8, 27, 36, 45, 46, 47, 48, 49, 50, 51, 52, 58, 65, 74, 87, 94, 95, 97, 99, 100, 101, 102, 107, 108, 109, 113, 114, 119, 121, 125, 127, 129, 130, 132, 133, 134, 136, 137, 142], "simpler": 125, "simpli": [101, 127, 128, 129, 132, 133, 134, 142], "simplifi": 142, "simul": 128, "sinc": [91, 96, 101, 105, 107, 125, 130, 132, 142], "singl": [88, 120, 132, 133, 140], "singlebest": 27, "site": [90, 93, 129, 130], "situat": [121, 132], "six": [89, 90, 105, 106, 117], "size": [127, 128, 129, 140], "skew": 90, "skip": 143, "sklearn": [2, 4, 6, 8, 12, 18, 27, 32, 50, 52, 59, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 129, 130, 133, 134, 135, 140, 141], "skopt": [124, 130], "slice": 90, "slightli": 128, "slot": 132, "small": [132, 137], "smaller": [121, 132], "smooth": 140, "sn": [88, 89, 90, 99, 100, 101, 106, 113, 129, 133], "snippet": [132, 143], "snoek": 128, "so": [2, 6, 7, 8, 27, 43, 46, 47, 48, 49, 50, 51, 52, 58, 90, 91, 93, 96, 101, 108, 119, 121, 123, 124, 129, 130, 132, 135, 138, 141, 142], "solv": [129, 137], "solver": 130, "some": [18, 27, 90, 91, 92, 99, 100, 121, 124, 127, 128, 129, 130, 132, 133, 134, 137, 138], "someon": [121, 129], "someth": 132, "sometim": [114, 128, 132, 133, 134, 135], "somewhat": [133, 134], "sort": [8, 27, 58, 92, 99, 119], "sort_valu": 89, "sound": 140, "sourc": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117], "space": [25, 130, 132], "span": 132, "spearman": 127, "spearmanr": 127, "speci": [88, 93, 96, 100, 102, 110, 113, 121, 130, 133, 138, 141, 142], "special": 101, "specif": [52, 93, 99, 101, 114, 128, 130, 131, 133, 137, 138, 139], "specifi": [2, 23, 25, 35, 36, 37, 49, 52, 59, 61, 91, 99, 100, 106, 107, 114, 119, 124, 125, 127, 128, 132, 134, 135, 137, 138, 139, 141, 142, 143], "speed": [107, 108, 109], "sphinx": [87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 121, 143], "split": [2, 18, 19, 20, 21, 22, 27, 36, 37, 88, 89, 90, 93, 96, 99, 105, 106, 117, 128, 129, 130, 132, 133, 137, 141, 143], "splitter": [18, 19, 20, 21, 22, 27, 36, 125, 131, 136, 139, 140], "spreadsheet": 91, "spuriou": 128, "squar": [41, 117, 119], "squeez": 117, "stabl": [36, 90, 124, 125, 137], "stack": [2, 36, 65, 104, 111, 113, 119, 125, 131, 132, 136], "stackedclassifi": 27, "stackexchang": 129, "stackingclassifi": [119, 132, 134], "stackingregressor": [119, 132, 134], "stage": 45, "stale": 143, "standalon": 123, "standard": [36, 37, 46, 101, 128, 134, 142, 143], "standardscal": [99, 109, 119, 130, 133, 135, 141, 142], "standrad": [36, 37], "start": [91, 121, 122, 125, 129, 130, 133, 134, 135, 139, 140, 142], "stat": [46, 75, 96, 117, 125, 127, 129, 140], "state": [20, 21, 26, 27, 31, 44, 56, 64, 128], "statement": 65, "staticselect": 27, "statist": [96, 101, 113, 125, 139, 141], "stats_df": [96, 140], "statsmodel": 124, "std": [89, 90, 101, 105, 106, 114, 117, 128, 135], "stdout": 65, "step": [2, 3, 17, 32, 36, 37, 45, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 125, 127, 128, 130, 133, 134, 135, 137, 138, 140, 141, 142, 143], "step__paramet": [36, 37], "still": [34, 91, 114, 124, 129, 132, 141, 143], "stim": [91, 92, 99, 107, 108, 109], "stop": 130, "store": 132, "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 63, 65, 67, 73, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 133, 134, 141, 142], "straightforward": [137, 142], "strategi": [36, 37, 141], "stratif": [18, 19, 90, 92, 131], "stratifi": [18, 19, 20, 21, 22, 36, 65, 87, 88, 94, 129, 136, 141, 143], "stratifiedbootstrap": [113, 143], "stratifiedgroupkfold": 92, "stratifiedkfold": [129, 141], "strength": 128, "string": [36, 37, 65, 119, 138, 140, 141, 142, 143], "strongli": 124, "structur": [133, 138], "studi": [92, 99, 128, 129, 130], "study_nam": 130, "stuff": 139, "sub": [18, 27, 139], "subclass": [67, 73], "subject": [91, 92, 99, 107, 108, 109, 129], "submiss": 132, "submit": [121, 132], "subobject": [6, 7, 8, 27, 46, 47, 48, 49, 51, 52, 58], "subplot": [88, 89, 90, 99, 100, 101, 106, 129], "subsequ": 127, "subset": [106, 130, 137, 143], "subtl": 91, "subtract": [52, 59, 114, 119], "success": [121, 130, 137], "suffici": [18, 19, 90], "suggest": [125, 129], "suit": [121, 133], "suitabl": [93, 124], "sum": [46, 88, 127, 143], "summar": 127, "summari": [101, 121, 132], "supercool_research": 132, "supervis": [18, 19, 20, 21, 22, 142], "support": [48, 52, 58, 79, 88, 92, 93, 99, 102, 107, 108, 109, 121, 129, 130, 133, 134, 141, 142, 143], "support_mask": [48, 52], "suppos": [91, 93, 128], "suptitl": 129, "sure": [91, 99, 121, 126, 128, 129, 130, 132], "surpris": 129, "surround": 143, "sustain": 127, "svc": [107, 109, 119, 130, 133, 141, 142], "svm": [17, 36, 37, 65, 88, 93, 96, 98, 102, 103, 107, 108, 109, 110, 119, 130, 132, 133, 134, 135, 136, 140, 141, 142], "svm__break_ti": 133, "svm__c": [107, 108, 109, 130, 133, 134], "svm__cache_s": 133, "svm__class_weight": [130, 133], "svm__class_weight_": 133, "svm__classes_": 133, "svm__coef0": 133, "svm__decision_function_shap": 133, "svm__degre": 133, "svm__dual_coef_": 133, "svm__feature_names_in_": 133, "svm__fit_status_": 133, "svm__gamma": [107, 108, 109, 130, 133], "svm__intercept_": 133, "svm__kernel": [96, 108, 130, 133], "svm__max_it": 133, "svm__n_features_in_": 133, "svm__n_iter_": 133, "svm__probabl": [36, 37, 133], "svm__random_st": 133, "svm__shape_fit_": 133, "svm__shrink": 133, "svm__support_": 133, "svm__support_vectors_": 133, "svm__tol": 133, "svm__verbos": 133, "svm_linear": 96, "svr": [119, 134, 135], "swarm": 113, "swarmplot": [90, 100], "switch": 140, "symmetri": 140, "sync": 126, "synchon": 143, "syntax": [52, 114], "system": [125, 126], "systemat": 113, "t": [45, 91, 96, 99, 129, 130, 132, 140, 141, 142, 143], "tabl": [91, 92, 99, 132], "tabul": 91, "tag": 126, "take": [117, 129, 132, 133, 142], "taken": 129, "target": [2, 3, 7, 8, 16, 18, 19, 20, 21, 22, 27, 32, 34, 35, 36, 37, 38, 46, 47, 48, 49, 50, 51, 52, 65, 69, 70, 71, 72, 75, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 113, 114, 117, 119, 125, 127, 129, 130, 131, 133, 134, 136, 138, 140, 141, 142, 143], "target_confound_remov": 128, "target_cr": [105, 135], "target_jutargetpipelin": 135, "target_pipelin": [3, 128, 135], "target_pipeline_cr": [105, 128], "targetconfoundremov": [32, 57, 128], "targetpipelinecr": [2, 105, 119, 128, 135], "task": [91, 99, 114, 130, 132, 135], "tb": [60, 132], "team": [121, 132], "technic": 132, "techniqu": [128, 129, 130, 133], "tediou": 140, "tell": [113, 128, 141], "templat": 121, "ten": [89, 90, 105, 106, 117], "term": [113, 129, 132, 138, 142], "test": [18, 19, 20, 21, 22, 27, 36, 45, 59, 88, 89, 90, 96, 99, 105, 106, 108, 113, 125, 128, 129, 130, 132, 133, 137, 140, 141, 143], "test_accuraci": [88, 93, 113, 140], "test_balanced_accuraci": [93, 96], "test_diabet": [89, 105, 106], "test_iri": 88, "test_neg_mean_absolute_error": 117, "test_r2_corr": 117, "test_roc_auc": [96, 113, 140], "test_scor": [89, 90, 92, 93, 96, 99, 105, 106, 107, 108, 109, 110, 114, 117, 128, 130, 141], "test_set": 129, "test_siz": [88, 89, 99, 105, 106, 143], "text": [88, 89, 99, 101, 106, 121, 129, 132], "textur": 140, "than": [2, 36, 37, 45, 90, 91, 99, 120, 125, 128, 129, 131, 132, 142], "thei": [6, 8, 27, 58, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 117, 123, 127, 130, 133, 134, 141, 142], "them": [113, 121, 123, 124, 125, 127, 129, 130, 132, 140, 141, 142], "theori": 142, "therebi": 125, "therefor": [120, 124, 127, 128, 141, 142], "thi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 86, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142], "thing": [117, 137, 142], "think": [120, 128], "third": [96, 141], "this_import": [100, 113], "thorough": 128, "those": [130, 137], "though": 132, "thought": [125, 142], "thousand": [132, 138], "thread": [129, 132], "three": [93, 96, 100, 102, 110, 113, 121, 125, 130, 140, 141], "threhsold": 46, "threshold": [2, 17, 36, 46, 52, 59, 65, 98, 103, 114, 119, 127, 136], "through": [123, 142], "thu": [2, 6, 99, 132, 137], "thumb": [129, 142], "tight_layout": [100, 113], "time": [20, 21, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 140, 141, 142], "timepoint": [91, 92, 99, 107, 108, 109], "titl": [88, 89, 106, 121], "to_pipelin": [2, 3], "to_plot": 100, "to_type_selector": 4, "togeth": [52, 89, 90, 105, 106, 114, 117, 119], "toi": [133, 134], "tol": 141, "tolist": [130, 140], "tong": 128, "too": [108, 130], "tool": [91, 120, 124, 133, 140, 143], "toolbox": 130, "top": [89, 106, 125, 132, 141], "top_k_accuraci": 141, "topic": [125, 129, 139, 140], "total": [88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142], "toward": 90, "towncrier": 126, "tox": 121, "tp": 93, "track": 128, "train": [2, 7, 18, 19, 20, 21, 22, 27, 33, 36, 46, 47, 48, 49, 50, 51, 52, 59, 88, 89, 90, 92, 99, 101, 105, 106, 113, 114, 117, 128, 129, 130, 132, 133, 135, 137, 140, 141, 142, 143], "train_diabet": [89, 105, 106], "train_iri": 88, "train_scor": 141, "train_set": 129, "train_siz": [99, 143], "train_test_split": [88, 89, 105, 106], "tranform_until": 143, "transform": [2, 3, 7, 32, 36, 37, 38, 65, 75, 91, 101, 104, 109, 111, 114, 120, 125, 127, 128, 130, 133, 135, 136, 137, 142, 143], "transform_input": 141, "transform_target": 58, "transformer_cl": [55, 63], "transformer_nam": [55, 63], "transformerlik": [32, 36, 37, 142], "transpar": [133, 137], "treat": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 117, 127, 133, 134], "tree": [101, 119, 132], "tri": 130, "trial": 130, "trick": 91, "trigger": 132, "true": [6, 7, 8, 18, 19, 25, 27, 30, 32, 36, 37, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 55, 58, 63, 69, 70, 71, 72, 88, 89, 90, 93, 99, 102, 105, 106, 113, 114, 117, 120, 128, 129, 130, 132, 133, 135, 137, 141, 142], "trust": 141, "try": [90, 92, 93, 96, 99, 102, 108, 110, 129, 130, 141], "tune": [2, 33, 36, 37, 65, 104, 111, 125, 127, 128, 131, 132, 133, 134, 135, 136, 142, 143], "tupl": [32, 46, 130], "turn": 142, "tutori": 125, "two": [2, 45, 90, 91, 93, 96, 99, 100, 101, 102, 106, 107, 110, 113, 114, 117, 121, 127, 128, 129, 130, 132, 134, 137, 140, 142], "type": [2, 4, 6, 7, 8, 9, 11, 12, 17, 28, 30, 32, 33, 34, 35, 36, 37, 47, 48, 49, 50, 51, 52, 58, 59, 75, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 121, 125, 127, 128, 130, 131, 133, 135, 137, 139, 140, 141], "type1": 134, "type1_": 134, "type1_1": 134, "type1_10": 134, "type1_2": 134, "type1_3": 134, "type1_4": 134, "type1_5": 134, "type1_6": 134, "type1_7": 134, "type1_8": 134, "type1_9": 134, "type2": 134, "type2_": 134, "type2_1": 134, "type2_10": 134, "type2_2": 134, "type2_3": 134, "type2_4": 134, "type2_5": 134, "type2_6": 134, "type2_7": 134, "type2_8": 134, "type2_9": 134, "typic": 127, "typo": [121, 143], "u": [93, 100, 113, 114, 124, 128, 132, 133, 140, 141], "ui": 132, "ultim": 128, "un": 128, "unabl": 141, "unbalanc": [93, 96], "unbias": 129, "unchang": [7, 18, 27, 46, 47, 48, 49, 50, 51, 52], "uncom": [96, 140], "unconclus": 129, "undefin": [50, 120], "under": [52, 59, 114, 117, 123, 124, 141, 142], "underli": [45, 119, 128, 133], "underscor": 91, "understand": [100, 114, 125, 128, 132, 133, 139, 140, 142], "unequ": 45, "uniform": [109, 119, 129, 130, 143], "uniformli": [90, 129], "union": [2, 32, 38], "uniqu": [88, 92, 99, 130, 133], "unit": [119, 125, 132], "unless": [36, 132], "unlik": [32, 57, 137], "unmaintain": 124, "unmatch": 120, "unnecessari": 130, "unseen": [99, 129, 137], "unstabl": 137, "unstack": [88, 89, 106], "unsupervis": [7, 46, 47, 48, 49, 50, 51, 52], "until": [17, 99, 101, 106, 114, 124, 132, 138, 140, 143], "untouch": 106, "up": [36, 37, 45, 67, 101, 107, 108, 109, 114, 125, 127, 132, 133, 139, 142], "updat": [4, 6, 7, 8, 18, 27, 46, 47, 48, 49, 50, 51, 52, 58, 121, 124, 143], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 79, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 113, 117, 119, 120, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143], "usabl": [4, 142], "usag": [121, 124, 137, 142, 143], "used_corr_sign_": 46, "used_significant_mask_": 46, "user": [2, 6, 7, 8, 18, 19, 20, 21, 22, 25, 27, 30, 36, 37, 43, 46, 47, 48, 49, 50, 51, 52, 55, 58, 60, 63, 65, 101, 114, 117, 120, 124, 125, 128, 130, 132, 137, 142, 143], "user_guid": 90, "userwarn": [43, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 129, 133, 134], "usual": [123, 130, 132, 142], "util": [18, 27, 75, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 125, 133, 134], "utmost": 139, "v": [89, 106, 126, 129, 131, 142], "v0": 130, "v_measure_scor": 141, "val": [96, 140], "valid": [2, 3, 16, 18, 19, 20, 21, 22, 34, 35, 36, 37, 81, 88, 89, 100, 106, 113, 114, 119, 125, 127, 130, 131, 132, 133, 136, 138, 139, 140, 142, 143], "valu": [2, 6, 7, 8, 13, 14, 27, 33, 36, 37, 41, 42, 46, 47, 48, 49, 50, 51, 52, 58, 59, 88, 89, 90, 91, 92, 93, 99, 101, 105, 106, 107, 108, 109, 113, 114, 117, 119, 120, 127, 130, 133, 138, 141, 142, 143], "valuabl": [128, 133, 137], "value_count": [93, 96], "valueerror": [2, 16, 23, 25, 30, 34, 35, 43, 55, 61, 63, 67], "vapnik": 142, "variabl": [2, 3, 18, 19, 20, 21, 22, 34, 35, 36, 65, 89, 90, 92, 99, 104, 106, 111, 114, 117, 128, 129, 130, 133, 135, 136, 141, 142, 143], "varianc": [2, 17, 36, 65, 98, 103, 119, 129, 133, 136, 142], "variancethreshold": 119, "variant": 129, "variou": 116, "vd": 126, "vector": [88, 92, 93, 99, 102, 107, 108, 109, 121, 130, 133, 134, 141, 142], "venv": 124, "vera": 125, "verbos": [36, 37, 46, 133, 141, 143], "veri": [130, 132, 133, 134, 137, 138], "verifi": [121, 141], "versicolor": [88, 93, 96, 100, 102, 110, 113, 121, 130, 141, 142], "version": [7, 18, 27, 46, 47, 48, 49, 50, 51, 52, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 124, 125, 129, 132, 133, 134, 143], "versu": 90, "verticalalign": [89, 106], "via": [124, 126, 139], "video": 125, "view": [90, 121], "viewer": 96, "virginica": [88, 93, 96, 100, 102, 110, 113, 121, 130, 141, 142], "virtual": [121, 124], "visual": [75, 99, 124, 125, 129, 137, 139], "viz": [86, 96, 124, 125, 140], "voil\u00e0": 142, "volum": [128, 129], "votingclassifi": 132, "votingregressor": 132, "vstack": 99, "vstring": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 133, 134], "vx": 126, "wa": [7, 46, 47, 48, 49, 50, 51, 52, 92, 99, 100, 101, 114, 127, 129, 130, 133, 141], "wagner": [91, 92, 99, 107, 108, 109], "wai": [3, 93, 96, 123, 125, 128, 129, 130, 132, 133, 134, 137, 140, 141, 142], "wait": 132, "wander": 100, "want": [43, 52, 88, 91, 92, 93, 99, 101, 113, 114, 117, 121, 123, 124, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142], "warn": [25, 30, 34, 35, 43, 55, 60, 63, 65, 73, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 117, 127, 129, 132, 133, 134, 138, 140, 143], "warn_with_log": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 117, 127, 133, 134, 140], "waskom": [91, 92, 99, 107, 108, 109], "we": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 137, 138, 140, 141, 142], "web": 121, "weight": [27, 130, 142], "well": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 120, 127, 128, 129, 130, 133, 134, 137, 138, 139, 140, 142], "were": [90, 91, 92, 99, 100, 113, 132, 133, 141], "what": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 91, 92, 99, 106, 108, 114, 119, 128, 129, 130, 133, 134, 135, 138, 141, 142], "whats_new": 126, "when": [18, 19, 27, 90, 113, 119, 120, 121, 123, 127, 128, 129, 130, 132, 135, 138, 141, 142, 143], "where": [18, 19, 20, 21, 22, 91, 126, 129, 130, 132, 133, 142, 143], "whether": [2, 17, 18, 19, 25, 27, 30, 36, 43, 46, 52, 55, 63, 69, 70, 71, 72, 92, 96, 99, 114, 121, 128, 141], "whi": 113, "which": [2, 6, 7, 18, 19, 25, 30, 33, 36, 37, 46, 47, 48, 49, 50, 51, 52, 55, 59, 63, 86, 89, 90, 92, 93, 99, 101, 105, 106, 107, 108, 109, 113, 114, 117, 121, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 141, 142, 143], "while": [18, 19, 20, 21, 22, 36, 37, 100, 107, 113, 120, 125, 128, 129, 130, 132, 134, 135, 137, 142, 143], "whisker": 113, "who": 130, "whole": [127, 130, 132], "whom": 99, "whose": 128, "why": [128, 129, 130, 139], "wide": 91, "width": [74, 93, 96, 102, 110, 113], "window": 132, "wip": 121, "wise": [2, 16, 22, 36, 65, 98, 103, 136, 137], "with_column_typ": [17, 99], "with_mean": [130, 141, 142], "with_std": 141, "with_traceback": 60, "within": [18, 19, 27, 121, 127, 128, 132, 134, 137, 138, 141], "without": [2, 25, 30, 43, 55, 63, 90, 92, 108, 113, 114, 119, 132, 137], "wonder": 142, "word": [129, 130], "work": [6, 7, 8, 18, 19, 20, 21, 22, 27, 32, 46, 47, 48, 49, 50, 51, 52, 57, 58, 87, 88, 89, 90, 92, 93, 94, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 127, 128, 129, 130, 132, 133, 134, 136, 140, 143], "worker": 132, "workflow": [127, 133, 139, 142, 143], "workshop": 142, "world": [128, 133], "worri": 141, "worst": 140, "would": [129, 130, 138, 140, 142, 143], "wrap": [8, 38, 58, 143], "wrap_scor": 38, "wrapper": [50, 58, 143], "write": [125, 142], "www": 137, "x": [6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 27, 32, 35, 36, 37, 39, 43, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 69, 70, 72, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 140, 141, 142, 143], "x0": 50, "x1": 50, "x27": 141, "x64": [90, 93, 129, 130], "x_after_pca": 101, "x_after_zscor": 101, "x_name": [127, 134], "x_new": [7, 46, 47, 48, 49, 50, 51, 52], "x_to_zscor": 101, "x_type": [2, 35, 36, 37, 47, 48, 49, 51, 52, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 127, 128, 130, 132, 133, 134, 135, 138, 140, 141, 142], "x_types_renam": 47, "x_y_correlations_": 46, "xilin": 127, "xlabel": [89, 106], "xlim": 99, "xmax": [89, 106], "xmin": [89, 106], "xticklabel": 89, "xx": 99, "xy": 99, "xy_df": 99, "y": [7, 8, 15, 16, 18, 19, 20, 21, 22, 27, 32, 34, 35, 36, 37, 39, 43, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 69, 70, 71, 72, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 140, 141, 142], "y_mean_": 46, "y_pred": [41, 42, 88, 89, 93, 106, 117], "y_true": [41, 42, 88, 89, 93, 106, 117], "yaml": 143, "ye": 142, "year": [89, 90, 105, 106, 117, 132], "yekuti": 45, "yet": [124, 138], "yield": [18, 19, 20, 21, 22, 36, 120, 133, 141], "ylabel": [89, 106, 129], "ylgnbu": [88, 89, 106], "ylim": 99, "ymax": [89, 106], "ymin": [89, 106], "you": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 88, 91, 96, 101, 114, 120, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 137, 138, 140, 141, 142], "your": [88, 91, 121, 124, 125, 127, 128, 129, 132, 133, 139, 142], "yourself": 121, "yticklabel": 89, "yy": 99, "z": [2, 3, 36, 65, 99, 104, 111, 126, 133, 135, 136, 141, 142], "zero": [18, 19, 20, 21, 101], "zip": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117], "zoom": [96, 140], "zscore": [2, 17, 36, 65, 88, 89, 90, 92, 93, 96, 98, 99, 100, 102, 103, 105, 107, 108, 109, 110, 113, 117, 119, 130, 132, 133, 135, 136, 140, 141, 142], "zscore__copi": 133, "zscore__feature_names_in_": 133, "zscore__mean_": 133, "zscore__n_features_in_": 133, "zscore__n_samples_seen_": 133, "zscore__scale_": 133, "zscore__var_": 133, "zscore__with_mean": [130, 133], "zscore__with_std": 133}, "titles": ["<span class=\"section-number\">9.4. </span>Base", "<span class=\"section-number\">9.17. </span>Config", "julearn.PipelineCreator", "julearn.TargetPipelineCreator", "julearn.base.ColumnTypes", "julearn.base.ColumnTypesLike", "julearn.base.JuBaseEstimator", "julearn.base.JuTransformer", "julearn.base.WrapModel", "julearn.base.change_column_type", "julearn.base.ensure_column_types", "julearn.base.get_column_type", "julearn.base.make_type_selector", "julearn.config.get_config", "julearn.config.set_config", "julearn.inspect.FoldsInspector", "julearn.inspect.Inspector", "julearn.inspect.preprocess", "julearn.model_selection.ContinuousStratifiedGroupKFold", "julearn.model_selection.ContinuousStratifiedKFold", "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold", "julearn.model_selection.RepeatedContinuousStratifiedKFold", "julearn.model_selection.StratifiedBootstrap", "julearn.model_selection.get_searcher", "julearn.model_selection.list_searchers", "julearn.model_selection.register_searcher", "julearn.model_selection.reset_searcher_register", "julearn.models.dynamic.DynamicSelection", "julearn.models.get_model", "julearn.models.list_models", "julearn.models.register_model", "julearn.models.reset_model_register", "julearn.pipeline.JuTargetPipeline", "julearn.pipeline.pipeline_creator.Step", "julearn.prepare.check_consistency", "julearn.prepare.prepare_input_data", "julearn.run_cross_validation", "julearn.run_fit", "julearn.scoring.check_scoring", "julearn.scoring.get_scorer", "julearn.scoring.list_scorers", "julearn.scoring.metrics.r2_corr", "julearn.scoring.metrics.r_corr", "julearn.scoring.register_scorer", "julearn.scoring.reset_scorer_register", "julearn.stats.corrected_ttest", "julearn.transformers.CBPM", "julearn.transformers.ChangeColumnTypes", "julearn.transformers.DropColumns", "julearn.transformers.FilterColumns", "julearn.transformers.JuColumnTransformer", "julearn.transformers.SetColumnTypes", "julearn.transformers.confound_remover.ConfoundRemover", "julearn.transformers.get_transformer", "julearn.transformers.list_transformers", "julearn.transformers.register_transformer", "julearn.transformers.reset_transformer_register", "julearn.transformers.target.JuTargetTransformer", "julearn.transformers.target.JuTransformedTargetModel", "julearn.transformers.target.TargetConfoundRemover", "julearn.transformers.target.TransformedTargetWarning", "julearn.transformers.target.get_target_transformer", "julearn.transformers.target.list_target_transformers", "julearn.transformers.target.register_target_transformer", "julearn.transformers.target.reset_target_transformer_register", "julearn.utils.configure_logging", "julearn.utils.logger", "julearn.utils.raise_error", "julearn.utils.typing.EstimatorLike", "julearn.utils.typing.EstimatorLikeFit1", "julearn.utils.typing.EstimatorLikeFit2", "julearn.utils.typing.EstimatorLikeFity", "julearn.utils.typing.JuEstimatorLike", "julearn.utils.warn_with_log", "julearn.viz.plot_scores", "<span class=\"section-number\">9. </span>API Reference", "<span class=\"section-number\">9.5. </span>Inspect", "<span class=\"section-number\">9.1. </span>Main API", "<span class=\"section-number\">9.3. </span>Model Selection", "<span class=\"section-number\">9.6. </span>Models", "<span class=\"section-number\">9.2. </span>Pipeline", "<span class=\"section-number\">9.14. </span>Prepare", "<span class=\"section-number\">9.8. </span>Scoring", "<span class=\"section-number\">9.15. </span>Stats", "<span class=\"section-number\">9.10. </span>Transformers", "<span class=\"section-number\">9.12. </span>Utils", "<span class=\"section-number\">9.16. </span>Visualization", "<span class=\"section-number\">8.1. </span>Starting with <code class=\"docutils literal notranslate\"><span class=\"pre\">julearn</span></code>", "Multiclass Classification", "Regression Analysis", "Stratified K-fold CV for regression analysis", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">pandas</span></code>", "Grouped CV", "Simple Binary Classification", "Computation times", "<span class=\"section-number\">8.2. </span>Model Comparison", "Simple Model Comparison", "Computation times", "<span class=\"section-number\">8.3. </span>Inspection", "Inspecting SVM models", "Inspecting Random Forest models", "Preprocessing with variance threshold, zscore and PCA", "Inspecting the fold-wise predictions", "Computation times", "<span class=\"section-number\">8.4. </span>Complex Models", "Transforming target variable with z-score", "Regression Analysis", "Tuning Multiple Hyperparameters Grids", "Tuning Hyperparameters", "Tuning Hyperparameters using Bayesian Search", "Stacking Classification", "Computation times", "<span class=\"section-number\">8.5. </span>Confounds", "Confound Removal (model comparison)", "Return Confounds in Confound Removal", "Computation times", "<span class=\"section-number\">8.6. </span>Customization", "Custom Scoring Function for Regression", "Computation times", "<span class=\"section-number\">7. </span>Overview of available Pipeline Steps", "<span class=\"section-number\">10. </span>Configuring <code class=\"docutils literal notranslate\"><span class=\"pre\">julearn</span></code>", "<span class=\"section-number\">11. </span>Contributing", "<span class=\"section-number\">8. </span>Examples", "<span class=\"section-number\">13. </span>FAQs", "<span class=\"section-number\">1. </span>Getting started", "Welcome to julearn\u2019s documentation!", "<span class=\"section-number\">12. </span>Maintaining", "<span class=\"section-number\">6.7. </span>Connectome-based Predictive Modeling (CBPM)", "<span class=\"section-number\">6.2. </span>Cross-validation consistent Confound Removal", "<span class=\"section-number\">6.5. </span>Cross-validation splitters", "<span class=\"section-number\">6.3. </span>Hyperparameter Tuning", "<span class=\"section-number\">6. </span>Selected deeper topics", "<span class=\"section-number\">6.8. </span>Parallelizing julearn with Joblib", "<span class=\"section-number\">6.4. </span>Inspecting Models", "<span class=\"section-number\">6.6. </span>Stacking Models", "<span class=\"section-number\">6.1. </span>Applying preprocessing to the target", "Computation times", "<span class=\"section-number\">5.1. </span>Why cross validation?", "<span class=\"section-number\">5.2. </span>Data", "<span class=\"section-number\">5. </span>What you really need to know", "<span class=\"section-number\">5.5. </span>Model Comparison", "<span class=\"section-number\">5.4. </span>Model Evaluation", "<span class=\"section-number\">5.3. </span>Model Building", "<span class=\"section-number\">14. </span>What\u2019s new"], "titleterms": {"": [125, 143], "0": 143, "01": 143, "03": 143, "05": 143, "07": 143, "09": 143, "1": 143, "10": 143, "11": 143, "16": 143, "17": 143, "19": 143, "2": 143, "2022": 143, "2023": 143, "2024": 143, "2025": 143, "21": 143, "23": 143, "3": 143, "4": 143, "5": 143, "The": [137, 141], "ad": 121, "all": 134, "analysi": [89, 90, 106], "api": [75, 77, 143], "appli": 135, "avail": 119, "base": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 127], "bay": 119, "bayesian": 109, "binari": 93, "bugfix": 143, "build": [121, 142], "case": 114, "cbpm": [46, 127], "chang": 143, "change_column_typ": 9, "changecolumntyp": 47, "check_consist": 34, "check_scor": 38, "class": [0, 76, 78, 79, 80, 84, 85], "classif": [88, 93, 110], "columntyp": 4, "columntypeslik": 5, "comparison": [95, 96, 113, 140], "complex": 104, "comput": [94, 97, 103, 111, 115, 118, 136], "config": [1, 13, 14], "configur": 120, "configure_log": 65, "confound": [112, 113, 114, 128], "confound_remov": 52, "confoundremov": 52, "connectom": 127, "consist": 128, "content": [122, 125, 131], "continuousstratifiedgroupkfold": 18, "continuousstratifiedkfold": 19, "contribut": 121, "corrected_ttest": 45, "cross": [92, 99, 128, 129, 137, 141], "custom": [116, 117, 119], "cv": [90, 92], "data": [132, 138], "datafram": [91, 119], "deal": [92, 99], "decomposit": 119, "deeper": 131, "depend": [123, 124], "deslib": 79, "dev73": 143, "develop": 121, "distribut": 130, "do": 123, "document": [121, 125, 143], "dropcolumn": 48, "dummi": 119, "dynam": [27, 79, 119], "dynamicselect": 27, "each": 134, "easi": 142, "enhanc": 143, "ensembl": 119, "ensure_column_typ": 10, "environ": 121, "essenc": 137, "estim": [119, 134, 141], "estimatorlik": 68, "estimatorlikef": 71, "estimatorlikefit1": 69, "estimatorlikefit2": 70, "evalu": 141, "exampl": [2, 3, 16, 17, 19, 22, 36, 40, 43, 45, 65, 74, 121, 122], "faq": 123, "featur": [119, 128, 134, 138, 142, 143], "filtercolumn": 49, "fit": 134, "fold": [90, 102], "foldsinspector": 15, "forest": 100, "from": 128, "function": [0, 1, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 117], "fundament": 137, "gaussian": 119, "get": 124, "get_column_typ": 11, "get_config": 13, "get_model": 28, "get_scor": 39, "get_search": 23, "get_target_transform": 61, "get_transform": 53, "github": 121, "give": 138, "grid": [107, 130], "group": [92, 129], "guidelin": 121, "have": 123, "how": 123, "htcondor": 132, "hyperparamet": [107, 108, 109, 130, 142], "i": [123, 125, 128], "import": 100, "improv": 143, "indic": 125, "input": 138, "inspect": [15, 16, 17, 76, 98, 99, 100, 102, 133], "inspector": 16, "instal": 124, "interact": 123, "issu": 123, "joblib": 132, "join": 91, "jubaseestim": 6, "jucolumntransform": 50, "juestimatorlik": 72, "julearn": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 87, 120, 125, 127, 128, 132, 143], "jutargetpipelin": 32, "jutargettransform": 57, "jutransform": 7, "jutransformedtargetmodel": 58, "k": 90, "know": 139, "learn": 132, "linear": 119, "list_model": 29, "list_scor": 40, "list_search": 24, "list_target_transform": 62, "list_transform": 54, "local": 121, "logger": 66, "machin": 119, "made": 142, "main": 77, "maintain": 126, "make_type_selector": 12, "massiv": 132, "merg": 91, "metric": [41, 42, 82, 141], "misc": 143, "model": [27, 28, 29, 30, 31, 78, 79, 95, 96, 99, 100, 104, 113, 119, 127, 130, 133, 134, 140, 141, 142], "model_select": [18, 19, 20, 21, 22, 23, 24, 25, 26], "modul": 123, "more": 130, "multiclass": 88, "multipl": 107, "naiv": 119, "need": 139, "new": [126, 143], "one": 130, "oper": 119, "option": 124, "output": 141, "overhead": 132, "overview": 119, "panda": 91, "parallel": 132, "paramet": 130, "pca": 101, "pipelin": [32, 33, 80, 119, 142], "pipeline_cr": 33, "pipelinecr": [2, 142], "plot": 123, "plot_scor": 74, "pool": 132, "predict": [102, 127], "prepar": [34, 35, 81], "prepare_input_data": 35, "preprocess": [17, 101, 135, 142], "process": 119, "progress": 132, "pull": 121, "r2_corr": 41, "r_corr": 42, "raise_error": 67, "random": 100, "realli": 139, "recurs": 132, "refer": [75, 91, 92, 99, 107, 108, 109, 127, 128, 129, 137, 142], "register_model": 30, "register_scor": 43, "register_search": 25, "register_target_transform": 63, "register_transform": 55, "regress": [89, 90, 106, 117, 128], "releas": 126, "remov": [113, 114, 128], "repeatedcontinuousstratifiedgroupkfold": 20, "repeatedcontinuousstratifiedkfold": 21, "request": 121, "requir": 124, "reset_model_regist": 31, "reset_scorer_regist": 44, "reset_searcher_regist": 26, "reset_target_transformer_regist": 64, "reset_transformer_regist": 56, "return": [114, 141], "run": 121, "run_cross_valid": [36, 137, 138, 141, 142], "run_fit": 37, "scaler": 119, "scikit": 132, "score": [38, 39, 40, 41, 42, 43, 44, 82, 105, 117, 140, 141], "search": 109, "searcher": 130, "select": [78, 79, 119, 131, 142], "set": [121, 142], "set_config": 14, "setcolumntyp": 51, "setup": 124, "should": 128, "simpl": [93, 96], "specif": [134, 142], "specifi": 130, "splitter": [129, 141], "stack": [110, 134], "start": [87, 124], "stat": [45, 83], "statist": 140, "step": [33, 119], "stratif": 129, "stratifi": 90, "stratifiedbootstrap": 22, "suggest": 124, "support": 119, "svm": 99, "tabl": [125, 131], "target": [57, 58, 59, 60, 61, 62, 63, 64, 84, 105, 128, 135], "targetconfoundremov": 59, "targetpipelinecr": 3, "techniqu": [92, 99], "test": 121, "than": 130, "threshold": 101, "throttl": 132, "time": [94, 97, 103, 111, 115, 118, 136], "topic": 131, "transfer": 132, "transform": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 84, 105, 119], "transformedtargetwarn": 60, "tune": [107, 108, 109, 130], "type": [68, 69, 70, 71, 72, 85, 134, 138, 142], "typic": 114, "unit": 121, "up": 121, "us": [2, 3, 16, 17, 19, 22, 36, 40, 43, 45, 65, 74, 109, 114, 123, 128, 142], "util": [65, 66, 67, 68, 69, 70, 71, 72, 73, 85], "v": 130, "valid": [92, 99, 128, 129, 137, 141], "variabl": [100, 105], "varianc": 101, "vector": 119, "version": 126, "visual": [86, 132, 140], "viz": [74, 123], "warn_with_log": 73, "welcom": 125, "what": [125, 139, 143], "why": [125, 137], "wise": 102, "work": 91, "wrapmodel": 8, "write": 121, "you": 139, "z": 105, "zscore": 101}})