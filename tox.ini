[tox]
envlist = isort, black, flake8, test, coverage, codespell, py3{8,9,10,11}
isolated_build = true

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: coverage
    3.11: py311

[testenv]
skip_install = false
# Required for git-annex
passenv =
    HOME
deps =
    pytest
    pytest-lazy-fixture
    seaborn
    deslib
    panel>=1.0.0b1
    bokeh>=3.0.0
    param
commands =
    pytest

[testenv:isort]
skip_install = true
deps =
    isort
commands =
    isort --check-only --diff {toxinidir}/julearn {toxinidir}/setup.py

[testenv:black]
skip_install = true
deps =
    black
commands =
    black --check --diff {toxinidir}/julearn {toxinidir}/setup.py

[testenv:flake8]
skip_install = true
deps =
    flake8
    # flake8-docstrings
    # flake8-bugbear
commands =
    flake8 {toxinidir}/julearn {toxinidir}/setup.py

[testenv:test]
skip_install = false
passenv =
    HOME
deps =
    pytest
    pytest-lazy-fixture
    seaborn
    deslib
    panel>=1.0.0b1
    bokeh>=3.0.0
    param
commands =
    pytest -vv

[testenv:coverage]
skip_install = false
deps =
    pytest
    pytest-lazy-fixture
    pytest-cov
    seaborn
    deslib
    panel>=1.0.0b1
    bokeh>=3.0.0
    param
commands =
    pytest --cov={envsitepackagesdir}/julearn --cov=./julearn --cov-report=xml --cov-report=term -vv

[testenv:codespell]
skip_install = true
deps =
    codespell
commands =
    codespell --config tox.ini examples/ julearn/ scratch/ tools/

################
# Tool configs #
################

[isort]
skip =
    __init__.py
profile = black
line_length = 79
lines_after_imports = 2
known_first_party = julearn
known_third_party =
    numpy
    pandas
    sklearn
    pytest
    bokeh

[flake8]
exclude =
    __init__.py
    julearn/utils/typing.py
max-line-length = 79
extend-ignore =
    ; abstract class with no abstract methods
    B024
    D202
    ; missing docstring in __init__, incompatible with numpydoc
    D107
    ; use r""" if any backslashes in a docstring
    D301
    ; whitespace after ‘(’
    E201
    ; whitespace before ‘)’
    E202
    ; whitespace before ‘,’, ‘;’, or ‘:’
    E203
    ; multiple spaces before operator
    E221
    ; multiple spaces after operator
    E222
    ; multiple spaces after ‘,’
    E241
    I100
    I101
    I201
    N806
    ; line break before binary operator
    W503
    ; line break after binary operator
    W504

[coverage:paths]
source =
    julearn
    */site-packages/julearn

[coverage:run]
branch = true
omit =
    */setup.py
    */_version.py
    */tests/*
    */utils/typing.py
    */viz/*
parallel = false

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Type checking if statements should not be considered
    if TYPE_CHECKING:
    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:
precision = 2

[codespell]
skip = docs/auto_*,*.html,.git/,*.pyc,docs/_build
count =
quiet-level = 3
ignore-words = ignore_words.txt
interactive = 0
builtin = clear,rare,informal,names,usage
