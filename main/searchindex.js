Search.setIndex({"docnames": ["api/base", "api/generated/julearn.PipelineCreator", "api/generated/julearn.TargetPipelineCreator", "api/generated/julearn.base.ColumnTypes", "api/generated/julearn.base.ColumnTypesLike", "api/generated/julearn.base.JuBaseEstimator", "api/generated/julearn.base.JuTransformer", "api/generated/julearn.base.WrapModel", "api/generated/julearn.base.change_column_type", "api/generated/julearn.base.ensure_column_types", "api/generated/julearn.base.get_column_type", "api/generated/julearn.base.make_type_selector", "api/generated/julearn.inspect.FoldsInspector", "api/generated/julearn.inspect.Inspector", "api/generated/julearn.inspect.preprocess", "api/generated/julearn.model_selection.ContinuousStratifiedGroupKFold", "api/generated/julearn.model_selection.ContinuousStratifiedKFold", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedGroupKFold", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedKFold", "api/generated/julearn.model_selection.StratifiedBootstrap", "api/generated/julearn.model_selection.get_searcher", "api/generated/julearn.model_selection.list_searchers", "api/generated/julearn.model_selection.register_searcher", "api/generated/julearn.model_selection.reset_searcher_register", "api/generated/julearn.models.dynamic.DynamicSelection", "api/generated/julearn.models.get_model", "api/generated/julearn.models.list_models", "api/generated/julearn.models.register_model", "api/generated/julearn.models.reset_model_register", "api/generated/julearn.pipeline.JuTargetPipeline", "api/generated/julearn.pipeline.pipeline_creator.Step", "api/generated/julearn.prepare.check_consistency", "api/generated/julearn.prepare.prepare_input_data", "api/generated/julearn.run_cross_validation", "api/generated/julearn.scoring.check_scoring", "api/generated/julearn.scoring.get_scorer", "api/generated/julearn.scoring.list_scorers", "api/generated/julearn.scoring.metrics.r2_corr", "api/generated/julearn.scoring.metrics.r_corr", "api/generated/julearn.scoring.register_scorer", "api/generated/julearn.scoring.reset_scorer_register", "api/generated/julearn.stats.corrected_ttest", "api/generated/julearn.transformers.CBPM", "api/generated/julearn.transformers.ChangeColumnTypes", "api/generated/julearn.transformers.DropColumns", "api/generated/julearn.transformers.FilterColumns", "api/generated/julearn.transformers.JuColumnTransformer", "api/generated/julearn.transformers.SetColumnTypes", "api/generated/julearn.transformers.confound_remover.ConfoundRemover", "api/generated/julearn.transformers.get_transformer", "api/generated/julearn.transformers.list_transformers", "api/generated/julearn.transformers.register_transformer", "api/generated/julearn.transformers.reset_transformer_register", "api/generated/julearn.transformers.target.JuTargetTransformer", "api/generated/julearn.transformers.target.JuTransformedTargetModel", "api/generated/julearn.transformers.target.TargetConfoundRemover", "api/generated/julearn.transformers.target.TransformedTargetWarning", "api/generated/julearn.transformers.target.get_target_transformer", "api/generated/julearn.transformers.target.list_target_transformers", "api/generated/julearn.transformers.target.register_target_transformer", "api/generated/julearn.transformers.target.reset_target_transformer_register", "api/generated/julearn.utils.configure_logging", "api/generated/julearn.utils.logger", "api/generated/julearn.utils.raise_error", "api/generated/julearn.utils.typing.EstimatorLike", "api/generated/julearn.utils.typing.EstimatorLikeFit1", "api/generated/julearn.utils.typing.EstimatorLikeFit2", "api/generated/julearn.utils.typing.EstimatorLikeFity", "api/generated/julearn.utils.typing.JuEstimatorLike", "api/generated/julearn.utils.warn_with_log", "api/generated/julearn.viz.plot_scores", "api/index", "api/inspect", "api/main", "api/model_selection", "api/models", "api/pipeline", "api/prepare", "api/scoring", "api/stats", "api/transformers", "api/utils", "api/viz", "auto_examples/00_starting/index", "auto_examples/00_starting/plot_cm_acc_multiclass", "auto_examples/00_starting/plot_example_regression", "auto_examples/00_starting/plot_stratified_kfold_reg", "auto_examples/00_starting/run_combine_pandas", "auto_examples/00_starting/run_grouped_cv", "auto_examples/00_starting/run_simple_binary_classification", "auto_examples/00_starting/sg_execution_times", "auto_examples/01_model_comparison/index", "auto_examples/01_model_comparison/plot_simple_model_comparison", "auto_examples/01_model_comparison/sg_execution_times", "auto_examples/02_inspection/index", "auto_examples/02_inspection/plot_groupcv_inspect_svm", "auto_examples/02_inspection/plot_inspect_random_forest", "auto_examples/02_inspection/plot_preprocess", "auto_examples/02_inspection/run_binary_inspect_folds", "auto_examples/02_inspection/sg_execution_times", "auto_examples/03_complex_models/index", "auto_examples/03_complex_models/run_apply_to_target", "auto_examples/03_complex_models/run_example_pca_featsets", "auto_examples/03_complex_models/run_hyperparameter_multiple_grids", "auto_examples/03_complex_models/run_hyperparameter_tuning", "auto_examples/03_complex_models/run_hyperparameter_tuning_bayessearch", "auto_examples/03_complex_models/run_stacked_models", "auto_examples/03_complex_models/sg_execution_times", "auto_examples/04_confounds/index", "auto_examples/04_confounds/plot_confound_removal_classification", "auto_examples/04_confounds/run_return_confounds", "auto_examples/04_confounds/sg_execution_times", "auto_examples/05_customization/index", "auto_examples/05_customization/run_custom_scorers_regression", "auto_examples/05_customization/sg_execution_times", "available_pipeline_steps", "configuration", "contributing", "examples", "faq", "getting_started", "index", "maintaining", "selected_deeper_topics/CBPM", "selected_deeper_topics/confound_removal", "selected_deeper_topics/cross_validation_splitter", "selected_deeper_topics/hyperparameter_tuning", "selected_deeper_topics/index", "selected_deeper_topics/model_inspect", "selected_deeper_topics/stacked_models", "selected_deeper_topics/target_transformers", "what_really_need_know/cross_validation", "what_really_need_know/data", "what_really_need_know/index", "what_really_need_know/model_comparison", "what_really_need_know/model_evaluation", "what_really_need_know/pipeline", "whats_new"], "filenames": ["api/base.rst", "api/generated/julearn.PipelineCreator.rst", "api/generated/julearn.TargetPipelineCreator.rst", "api/generated/julearn.base.ColumnTypes.rst", "api/generated/julearn.base.ColumnTypesLike.rst", "api/generated/julearn.base.JuBaseEstimator.rst", "api/generated/julearn.base.JuTransformer.rst", "api/generated/julearn.base.WrapModel.rst", "api/generated/julearn.base.change_column_type.rst", "api/generated/julearn.base.ensure_column_types.rst", "api/generated/julearn.base.get_column_type.rst", "api/generated/julearn.base.make_type_selector.rst", "api/generated/julearn.inspect.FoldsInspector.rst", "api/generated/julearn.inspect.Inspector.rst", "api/generated/julearn.inspect.preprocess.rst", "api/generated/julearn.model_selection.ContinuousStratifiedGroupKFold.rst", "api/generated/julearn.model_selection.ContinuousStratifiedKFold.rst", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.rst", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedKFold.rst", "api/generated/julearn.model_selection.StratifiedBootstrap.rst", "api/generated/julearn.model_selection.get_searcher.rst", "api/generated/julearn.model_selection.list_searchers.rst", "api/generated/julearn.model_selection.register_searcher.rst", "api/generated/julearn.model_selection.reset_searcher_register.rst", "api/generated/julearn.models.dynamic.DynamicSelection.rst", "api/generated/julearn.models.get_model.rst", "api/generated/julearn.models.list_models.rst", "api/generated/julearn.models.register_model.rst", "api/generated/julearn.models.reset_model_register.rst", "api/generated/julearn.pipeline.JuTargetPipeline.rst", "api/generated/julearn.pipeline.pipeline_creator.Step.rst", "api/generated/julearn.prepare.check_consistency.rst", "api/generated/julearn.prepare.prepare_input_data.rst", "api/generated/julearn.run_cross_validation.rst", "api/generated/julearn.scoring.check_scoring.rst", "api/generated/julearn.scoring.get_scorer.rst", "api/generated/julearn.scoring.list_scorers.rst", "api/generated/julearn.scoring.metrics.r2_corr.rst", "api/generated/julearn.scoring.metrics.r_corr.rst", "api/generated/julearn.scoring.register_scorer.rst", "api/generated/julearn.scoring.reset_scorer_register.rst", "api/generated/julearn.stats.corrected_ttest.rst", "api/generated/julearn.transformers.CBPM.rst", "api/generated/julearn.transformers.ChangeColumnTypes.rst", "api/generated/julearn.transformers.DropColumns.rst", "api/generated/julearn.transformers.FilterColumns.rst", "api/generated/julearn.transformers.JuColumnTransformer.rst", "api/generated/julearn.transformers.SetColumnTypes.rst", "api/generated/julearn.transformers.confound_remover.ConfoundRemover.rst", "api/generated/julearn.transformers.get_transformer.rst", "api/generated/julearn.transformers.list_transformers.rst", "api/generated/julearn.transformers.register_transformer.rst", "api/generated/julearn.transformers.reset_transformer_register.rst", "api/generated/julearn.transformers.target.JuTargetTransformer.rst", "api/generated/julearn.transformers.target.JuTransformedTargetModel.rst", "api/generated/julearn.transformers.target.TargetConfoundRemover.rst", "api/generated/julearn.transformers.target.TransformedTargetWarning.rst", "api/generated/julearn.transformers.target.get_target_transformer.rst", "api/generated/julearn.transformers.target.list_target_transformers.rst", "api/generated/julearn.transformers.target.register_target_transformer.rst", "api/generated/julearn.transformers.target.reset_target_transformer_register.rst", "api/generated/julearn.utils.configure_logging.rst", "api/generated/julearn.utils.logger.rst", "api/generated/julearn.utils.raise_error.rst", "api/generated/julearn.utils.typing.EstimatorLike.rst", "api/generated/julearn.utils.typing.EstimatorLikeFit1.rst", "api/generated/julearn.utils.typing.EstimatorLikeFit2.rst", "api/generated/julearn.utils.typing.EstimatorLikeFity.rst", "api/generated/julearn.utils.typing.JuEstimatorLike.rst", "api/generated/julearn.utils.warn_with_log.rst", "api/generated/julearn.viz.plot_scores.rst", "api/index.rst", "api/inspect.rst", "api/main.rst", "api/model_selection.rst", "api/models.rst", "api/pipeline.rst", "api/prepare.rst", "api/scoring.rst", "api/stats.rst", "api/transformers.rst", "api/utils.rst", "api/viz.rst", "auto_examples/00_starting/index.rst", "auto_examples/00_starting/plot_cm_acc_multiclass.rst", "auto_examples/00_starting/plot_example_regression.rst", "auto_examples/00_starting/plot_stratified_kfold_reg.rst", "auto_examples/00_starting/run_combine_pandas.rst", "auto_examples/00_starting/run_grouped_cv.rst", "auto_examples/00_starting/run_simple_binary_classification.rst", "auto_examples/00_starting/sg_execution_times.rst", "auto_examples/01_model_comparison/index.rst", "auto_examples/01_model_comparison/plot_simple_model_comparison.rst", "auto_examples/01_model_comparison/sg_execution_times.rst", "auto_examples/02_inspection/index.rst", "auto_examples/02_inspection/plot_groupcv_inspect_svm.rst", "auto_examples/02_inspection/plot_inspect_random_forest.rst", "auto_examples/02_inspection/plot_preprocess.rst", "auto_examples/02_inspection/run_binary_inspect_folds.rst", "auto_examples/02_inspection/sg_execution_times.rst", "auto_examples/03_complex_models/index.rst", "auto_examples/03_complex_models/run_apply_to_target.rst", "auto_examples/03_complex_models/run_example_pca_featsets.rst", "auto_examples/03_complex_models/run_hyperparameter_multiple_grids.rst", "auto_examples/03_complex_models/run_hyperparameter_tuning.rst", "auto_examples/03_complex_models/run_hyperparameter_tuning_bayessearch.rst", "auto_examples/03_complex_models/run_stacked_models.rst", "auto_examples/03_complex_models/sg_execution_times.rst", "auto_examples/04_confounds/index.rst", "auto_examples/04_confounds/plot_confound_removal_classification.rst", "auto_examples/04_confounds/run_return_confounds.rst", "auto_examples/04_confounds/sg_execution_times.rst", "auto_examples/05_customization/index.rst", "auto_examples/05_customization/run_custom_scorers_regression.rst", "auto_examples/05_customization/sg_execution_times.rst", "available_pipeline_steps.rst", "configuration.rst", "contributing.rst", "examples.rst", "faq.rst", "getting_started.rst", "index.rst", "maintaining.rst", "selected_deeper_topics/CBPM.rst", "selected_deeper_topics/confound_removal.rst", "selected_deeper_topics/cross_validation_splitter.rst", "selected_deeper_topics/hyperparameter_tuning.rst", "selected_deeper_topics/index.rst", "selected_deeper_topics/model_inspect.rst", "selected_deeper_topics/stacked_models.rst", "selected_deeper_topics/target_transformers.rst", "what_really_need_know/cross_validation.rst", "what_really_need_know/data.rst", "what_really_need_know/index.rst", "what_really_need_know/model_comparison.rst", "what_really_need_know/model_evaluation.rst", "what_really_need_know/pipeline.rst", "whats_new.rst"], "titles": ["<span class=\"section-number\">9.4. </span>Base", "julearn.PipelineCreator", "julearn.TargetPipelineCreator", "julearn.base.ColumnTypes", "julearn.base.ColumnTypesLike", "julearn.base.JuBaseEstimator", "julearn.base.JuTransformer", "julearn.base.WrapModel", "julearn.base.change_column_type", "julearn.base.ensure_column_types", "julearn.base.get_column_type", "julearn.base.make_type_selector", "julearn.inspect.FoldsInspector", "julearn.inspect.Inspector", "julearn.inspect.preprocess", "julearn.model_selection.ContinuousStratifiedGroupKFold", "julearn.model_selection.ContinuousStratifiedKFold", "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold", "julearn.model_selection.RepeatedContinuousStratifiedKFold", "julearn.model_selection.StratifiedBootstrap", "julearn.model_selection.get_searcher", "julearn.model_selection.list_searchers", "julearn.model_selection.register_searcher", "julearn.model_selection.reset_searcher_register", "julearn.models.dynamic.DynamicSelection", "julearn.models.get_model", "julearn.models.list_models", "julearn.models.register_model", "julearn.models.reset_model_register", "julearn.pipeline.JuTargetPipeline", "julearn.pipeline.pipeline_creator.Step", "julearn.prepare.check_consistency", "julearn.prepare.prepare_input_data", "julearn.run_cross_validation", "julearn.scoring.check_scoring", "julearn.scoring.get_scorer", "julearn.scoring.list_scorers", "julearn.scoring.metrics.r2_corr", "julearn.scoring.metrics.r_corr", "julearn.scoring.register_scorer", "julearn.scoring.reset_scorer_register", "julearn.stats.corrected_ttest", "julearn.transformers.CBPM", "julearn.transformers.ChangeColumnTypes", "julearn.transformers.DropColumns", "julearn.transformers.FilterColumns", "julearn.transformers.JuColumnTransformer", "julearn.transformers.SetColumnTypes", "julearn.transformers.confound_remover.ConfoundRemover", "julearn.transformers.get_transformer", "julearn.transformers.list_transformers", "julearn.transformers.register_transformer", "julearn.transformers.reset_transformer_register", "julearn.transformers.target.JuTargetTransformer", "julearn.transformers.target.JuTransformedTargetModel", "julearn.transformers.target.TargetConfoundRemover", "julearn.transformers.target.TransformedTargetWarning", "julearn.transformers.target.get_target_transformer", "julearn.transformers.target.list_target_transformers", "julearn.transformers.target.register_target_transformer", "julearn.transformers.target.reset_target_transformer_register", "julearn.utils.configure_logging", "julearn.utils.logger", "julearn.utils.raise_error", "julearn.utils.typing.EstimatorLike", "julearn.utils.typing.EstimatorLikeFit1", "julearn.utils.typing.EstimatorLikeFit2", "julearn.utils.typing.EstimatorLikeFity", "julearn.utils.typing.JuEstimatorLike", "julearn.utils.warn_with_log", "julearn.viz.plot_scores", "<span class=\"section-number\">9. </span>API Reference", "<span class=\"section-number\">9.5. </span>Inspect", "<span class=\"section-number\">9.1. </span>Main API", "<span class=\"section-number\">9.3. </span>Model Selection", "<span class=\"section-number\">9.6. </span>Models", "<span class=\"section-number\">9.2. </span>Pipeline", "<span class=\"section-number\">9.14. </span>Prepare", "<span class=\"section-number\">9.8. </span>Scoring", "<span class=\"section-number\">9.15. </span>Stats", "<span class=\"section-number\">9.10. </span>Transformers", "<span class=\"section-number\">9.12. </span>Utils", "<span class=\"section-number\">9.16. </span>Visualization", "<span class=\"section-number\">8.1. </span>Starting with <code class=\"docutils literal notranslate\"><span class=\"pre\">julearn</span></code>", "Multiclass Classification", "Regression Analysis", "Stratified K-fold CV for regression analysis", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">pandas</span></code>", "Grouped CV", "Simple Binary Classification", "Computation times", "<span class=\"section-number\">8.2. </span>Model Comparison", "Simple Model Comparison", "Computation times", "<span class=\"section-number\">8.3. </span>Inspection", "Inspecting SVM models", "Inspecting Random Forest models", "Preprocessing with variance threshold, zscore and PCA", "Inspecting the fold-wise predictions", "Computation times", "<span class=\"section-number\">8.4. </span>Complex Models", "Transforming target variable with z-score", "Regression Analysis", "Tuning Multiple Hyperparameters Grids", "Tuning Hyperparameters", "Tuning Hyperparameters using Bayesian Search", "Stacking Classification", "Computation times", "<span class=\"section-number\">8.5. </span>Confounds", "Confound Removal (model comparison)", "Return Confounds in Confound Removal", "Computation times", "<span class=\"section-number\">8.6. </span>Customization", "Custom Scoring Function for Regression", "Computation times", "<span class=\"section-number\">7. </span>Overview of available Pipeline Steps", "<span class=\"section-number\">10. </span>Configuring <code class=\"docutils literal notranslate\"><span class=\"pre\">julearn</span></code>", "<span class=\"section-number\">11. </span>Contributing", "<span class=\"section-number\">8. </span>Examples", "<span class=\"section-number\">13. </span>FAQs", "<span class=\"section-number\">1. </span>Getting started", "Welcome to julearn\u2019s documentation!", "<span class=\"section-number\">12. </span>Maintaining", "<span class=\"section-number\">6.7. </span>Connectome-based Predictive Modeling (CBPM)", "<span class=\"section-number\">6.2. </span>Cross-validation consistent Confound Removal", "<span class=\"section-number\">6.5. </span>Cross-validation splitters", "<span class=\"section-number\">6.3. </span>Hyperparameter Tuning", "<span class=\"section-number\">6. </span>Selected deeper topics", "<span class=\"section-number\">6.4. </span>Inspecting Models", "<span class=\"section-number\">6.6. </span>Stacking Models", "<span class=\"section-number\">6.1. </span>Applying preprocessing to the target", "<span class=\"section-number\">5.1. </span>Why cross validation?", "<span class=\"section-number\">5.2. </span>Data", "<span class=\"section-number\">5. </span>What you really need to know", "<span class=\"section-number\">5.5. </span>Model Comparison", "<span class=\"section-number\">5.4. </span>Model Evaluation", "<span class=\"section-number\">5.3. </span>Model Building", "<span class=\"section-number\">14. </span>What\u2019s new"], "terms": {"provid": [0, 1, 3, 5, 13, 15, 16, 19, 24, 33, 54, 75, 87, 110, 116, 121, 124, 125, 126, 128, 129, 131, 132, 134, 135, 136, 137], "import": [0, 29, 53, 84, 85, 86, 87, 88, 89, 92, 95, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 117, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136], "modul": [0, 33, 75, 82, 110, 116, 120, 121, 130, 131], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 82, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 116, 117, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136], "page": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 121, 124, 125, 135], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 101, 102, 103, 104, 105, 109, 110, 113, 115, 116, 117, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "refer": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 97, 115, 117, 121, 126, 133], "document": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 86, 92, 96, 115, 125, 126, 134, 135, 136], "It": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 95, 103, 104, 105, 120, 121, 123, 125, 126, 128, 135, 136], "onli": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 86, 95, 97, 103, 109, 110, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137], "explain": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 125, 136], "class": [1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24, 27, 29, 30, 33, 42, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 59, 62, 63, 64, 65, 66, 67, 68, 69, 84, 86, 88, 89, 92, 95, 96, 98, 103, 104, 105, 106, 109, 110, 115, 124, 125, 126, 128, 134, 135, 136], "signatur": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "how": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 83, 88, 89, 92, 94, 95, 96, 100, 102, 110, 115, 117, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "pleas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 82, 97, 110, 117, 121, 135, 136], "what": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 87, 88, 95, 102, 104, 110, 115, 124, 125, 126, 128, 129, 130, 132, 135, 136], "you": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 84, 87, 92, 97, 110, 116, 117, 119, 120, 121, 122, 123, 124, 125, 128, 129, 131, 132, 134, 135, 136], "realli": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 109, 121], "need": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 87, 88, 89, 92, 95, 101, 109, 110, 113, 117, 119, 120, 121, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137], "know": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 104, 121, 125, 128, 131, 134, 136], "section": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 125, 132, 134, 135, 136, 137], "big": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "pictur": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "problem_typ": [1, 25, 31, 33, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 126, 128, 129, 130, 134, 135, 136], "apply_to": [1, 5, 6, 7, 30, 43, 44, 45, 46, 47, 48, 54, 97, 101, 102, 106, 109, 110, 124, 128, 129, 130, 136], "continu": [1, 7, 30, 43, 45, 47, 48, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 109, 110, 113, 123, 125, 126, 128, 129, 130, 132, 134, 135, 136, 137], "creat": [1, 2, 3, 42, 84, 86, 87, 89, 95, 97, 101, 102, 106, 115, 117, 119, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136], "pipelin": [1, 2, 5, 6, 7, 14, 15, 24, 31, 32, 33, 34, 42, 43, 44, 45, 46, 47, 48, 53, 54, 71, 77, 95, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137], "As": [1, 87, 89, 92, 98, 106, 109, 110, 113, 117, 119, 123, 124, 125, 126, 128, 129, 134, 135, 136], "creation": 1, "bit": [1, 103, 120, 126, 129, 135], "more": [1, 3, 33, 41, 84, 85, 86, 87, 88, 89, 92, 95, 97, 102, 109, 113, 117, 120, 121, 124, 125, 127, 128, 129, 131, 133, 134, 135, 136, 137], "complic": [1, 131], "than": [1, 33, 41, 86, 87, 95, 121, 124, 125, 127, 136], "just": [1, 117, 121, 125, 128, 133, 136], "ad": [1, 6, 33, 42, 43, 44, 45, 46, 47, 48, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 121, 123, 124, 126, 128, 129, 130, 132, 134, 135, 136, 137], "step": [1, 2, 14, 29, 33, 41, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 117, 121, 123, 124, 126, 128, 129, 130, 131, 132, 134, 135, 136], "helper": 1, "so": [1, 5, 6, 7, 24, 39, 42, 43, 44, 45, 46, 47, 48, 54, 86, 87, 89, 92, 97, 104, 115, 117, 119, 120, 125, 126, 130, 132, 135, 136], "user": [1, 5, 6, 7, 15, 16, 17, 18, 19, 22, 24, 27, 33, 39, 42, 43, 44, 45, 46, 47, 48, 51, 54, 56, 59, 61, 97, 110, 113, 116, 120, 121, 124, 126, 131, 136, 137], "can": [1, 3, 15, 16, 17, 18, 19, 22, 24, 27, 29, 31, 33, 39, 41, 42, 46, 48, 51, 54, 59, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 109, 110, 113, 115, 116, 117, 119, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "easili": [1, 123, 125], "complex": [1, 87, 95, 106, 118, 121, 124, 125, 126, 128, 136], "sklearn": [1, 3, 5, 7, 11, 15, 24, 29, 46, 48, 55, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 125, 126, 128, 129, 130, 134, 135], "object": [1, 2, 5, 6, 7, 15, 16, 17, 18, 19, 24, 25, 31, 33, 35, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 57, 84, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 119, 124, 126, 128, 129, 130, 135, 136, 137], "paramet": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 59, 61, 63, 65, 66, 67, 68, 69, 70, 77, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "classif": [1, 27, 31, 33, 61, 83, 88, 90, 92, 95, 96, 98, 100, 103, 104, 105, 107, 109, 117, 125, 126, 128, 129, 134, 135, 136], "regress": [1, 14, 15, 16, 27, 31, 33, 39, 61, 83, 90, 97, 100, 101, 106, 107, 110, 112, 114, 115, 123, 126, 127, 129, 130, 134, 135, 136, 137], "The": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 29, 30, 31, 32, 33, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 59, 61, 63, 65, 66, 67, 68, 69, 70, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 132, 133, 134, 136, 137], "problem": [1, 15, 16, 17, 18, 19, 25, 27, 31, 33, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 116, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137], "type": [1, 3, 5, 6, 7, 8, 10, 11, 14, 25, 27, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 48, 54, 55, 71, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 116, 117, 121, 123, 124, 126, 127, 128, 130, 131, 133, 134, 135], "which": [1, 5, 6, 15, 16, 22, 27, 30, 33, 42, 43, 44, 45, 46, 47, 48, 51, 55, 59, 82, 85, 86, 88, 89, 95, 97, 101, 102, 103, 104, 105, 109, 110, 113, 117, 123, 124, 125, 126, 128, 129, 130, 131, 133, 135, 136, 137], "should": [1, 5, 6, 15, 19, 22, 24, 27, 30, 39, 42, 43, 44, 45, 46, 47, 48, 51, 59, 86, 97, 102, 109, 110, 115, 117, 122, 123, 125, 126, 127, 130, 131, 135, 136], "columntypeslik": [1, 30, 43, 44, 45, 46, 48, 110], "option": [1, 2, 6, 7, 13, 14, 15, 22, 24, 27, 30, 33, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 55, 59, 61, 63, 65, 66, 67, 68, 69, 70, 75, 82, 86, 87, 96, 109, 110, 119, 121, 122, 125, 126, 132, 135, 137], "To": [1, 46, 48, 95, 97, 103, 110, 117, 119, 121, 123, 125, 126, 129, 131, 132, 134, 135, 136], "transform": [1, 2, 6, 29, 33, 34, 61, 71, 87, 97, 100, 105, 107, 110, 121, 123, 124, 126, 128, 130, 131, 136, 137], "appli": [1, 2, 5, 6, 7, 30, 33, 42, 43, 44, 45, 46, 47, 48, 54, 55, 68, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 121, 123, 124, 126, 127, 128, 129, 134, 135, 136], "specifi": [1, 19, 20, 22, 32, 33, 45, 48, 55, 57, 87, 95, 96, 102, 103, 110, 115, 120, 121, 123, 124, 129, 130, 131, 132, 133, 135, 136, 137], "add": [1, 2, 3, 22, 27, 51, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 117, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136, 137], "method": [1, 5, 6, 7, 15, 16, 17, 18, 24, 41, 42, 43, 44, 45, 46, 47, 48, 54, 86, 87, 97, 103, 110, 116, 120, 123, 125, 126, 128, 136], "default": [1, 2, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 28, 30, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 54, 55, 59, 61, 63, 65, 66, 67, 68, 69, 70, 92, 95, 97, 103, 104, 106, 109, 110, 115, 119, 120, 123, 124, 126, 134, 135, 136, 137], "__init__": [1, 2, 3, 5, 6, 7, 12, 13, 15, 16, 17, 18, 19, 24, 29, 30, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 65, 66, 67, 68], "name": [1, 2, 5, 6, 7, 8, 14, 15, 20, 21, 22, 24, 25, 26, 27, 30, 33, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 61, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 116, 117, 124, 126, 128, 129, 130, 131, 132, 134, 135, 136], "none": [1, 2, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 29, 30, 31, 32, 33, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 55, 59, 61, 63, 85, 86, 87, 88, 89, 92, 95, 96, 97, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 126, 128, 129, 130, 134, 135, 136], "row_select_col_typ": [1, 6, 30, 43, 44, 45, 46, 47, 48, 110], "row_select_v": [1, 6, 30, 43, 44, 45, 46, 47, 48, 110], "param": [1, 2, 5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 49, 54, 57, 65, 66, 67, 68, 120, 123, 124, 126, 128, 130, 136], "estimatorlik": [1, 34, 46], "an": [1, 2, 6, 15, 16, 17, 18, 19, 24, 31, 33, 35, 42, 43, 44, 45, 46, 47, 48, 84, 87, 88, 89, 92, 95, 96, 97, 104, 109, 116, 117, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137], "available_transform": 1, "available_model": 1, "str": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 61, 63, 69, 84, 85, 102, 110, 135, 136], "compat": [1, 15, 16, 17, 18, 19, 20, 22, 24, 33, 43, 44, 45, 46, 47, 48, 49, 55, 110, 120, 123, 135, 136, 137], "model": [1, 6, 7, 13, 14, 19, 33, 36, 41, 42, 43, 44, 45, 46, 47, 48, 54, 55, 61, 70, 71, 78, 84, 85, 86, 88, 89, 93, 94, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 110, 111, 113, 116, 118, 121, 124, 125, 127, 130, 131, 133, 137], "If": [1, 2, 5, 6, 7, 13, 14, 19, 20, 22, 24, 27, 31, 32, 33, 42, 43, 44, 45, 46, 47, 48, 51, 54, 57, 59, 61, 87, 89, 95, 97, 109, 110, 113, 116, 117, 120, 121, 124, 125, 126, 132, 133, 135, 136], "obtain": [1, 2, 7, 54, 96, 124, 131], "from": [1, 2, 3, 5, 24, 29, 32, 33, 42, 43, 48, 51, 53, 55, 59, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 117, 120, 121, 122, 123, 125, 126, 128, 129, 130, 132, 134, 135, 136, 137], "repres": [1, 3, 19, 30, 48, 55, 86, 110, 125, 135], "column": [1, 3, 5, 6, 7, 8, 10, 11, 14, 24, 30, 32, 33, 43, 44, 45, 46, 47, 48, 54, 55, 68, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 109, 110, 113, 115, 116, 123, 124, 126, 128, 129, 130, 132, 134, 135, 136, 137], "list": [1, 3, 4, 5, 6, 7, 13, 14, 21, 26, 29, 30, 32, 33, 36, 43, 44, 45, 46, 47, 48, 50, 55, 58, 103, 105, 110, 115, 116, 126, 128, 132, 135, 136, 137], "attribut": [1, 5, 7, 9, 22, 24, 42, 54, 128], "set": [1, 3, 4, 5, 6, 7, 13, 15, 16, 17, 18, 19, 22, 24, 29, 30, 33, 39, 42, 43, 44, 45, 46, 47, 48, 54, 55, 56, 65, 66, 67, 68, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 116, 118, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 137], "columntyp": [1, 4, 5, 6, 7, 9, 30, 43, 44, 45, 46, 47, 48, 54, 55, 68, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 126, 128, 129, 130, 134, 135, 136], "select": [1, 6, 7, 11, 24, 30, 43, 44, 45, 46, 47, 48, 71, 97, 110, 121, 123, 125, 126, 128, 132, 133, 134], "row": [1, 6, 30, 43, 44, 45, 46, 47, 48, 85, 86, 87, 88, 92, 95, 97, 98, 101, 102, 110, 113, 128, 130, 134, 135, 136], "int": [1, 6, 13, 15, 16, 17, 18, 19, 24, 30, 31, 32, 33, 41, 42, 43, 44, 45, 46, 47, 48, 61, 70, 110, 135], "bool": [1, 5, 6, 7, 14, 15, 16, 22, 24, 27, 29, 30, 33, 34, 39, 42, 43, 44, 45, 46, 47, 48, 51, 54, 59, 61, 65, 66, 67, 68, 110], "valu": [1, 5, 6, 7, 19, 24, 30, 33, 37, 38, 42, 43, 44, 45, 46, 47, 48, 54, 55, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 103, 104, 105, 109, 110, 113, 115, 116, 123, 125, 126, 128, 132, 135, 136], "": [1, 5, 6, 7, 15, 16, 24, 30, 33, 42, 43, 44, 45, 46, 47, 48, 54, 55, 61, 84, 85, 86, 87, 88, 95, 97, 101, 102, 103, 104, 109, 110, 113, 115, 116, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136], "train": [1, 6, 15, 16, 17, 18, 19, 24, 30, 33, 42, 43, 44, 45, 46, 47, 48, 55, 84, 85, 86, 88, 95, 97, 101, 102, 109, 110, 113, 124, 125, 126, 128, 130, 131, 134, 135, 136], "mostli": [1, 2, 125], "includ": [1, 2, 14, 19, 96, 97, 110, 116, 117, 120, 126, 131], "hyperparamet": [1, 2, 22, 33, 61, 92, 97, 100, 102, 106, 107, 109, 110, 121, 123, 124, 127, 128, 129, 133, 134, 137], "ani": [1, 2, 6, 7, 22, 24, 27, 29, 30, 31, 32, 33, 39, 43, 44, 45, 46, 47, 48, 51, 53, 59, 86, 116, 123, 125, 126, 128, 136], "other": [1, 2, 15, 22, 24, 27, 51, 82, 87, 89, 102, 104, 110, 117, 119, 123, 124, 125, 126, 133, 134, 136], "initi": [1, 2, 22, 23, 41, 51, 52, 59, 60, 109, 124, 129, 136], "multipl": [1, 15, 16, 17, 18, 19, 33, 61, 97, 100, 107, 125, 126, 135, 136, 137], "lead": [1, 120, 124, 125, 131, 136], "search": [1, 21, 22, 33, 61, 97, 100, 103, 104, 107, 121, 126, 128, 129], "return": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 29, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 65, 66, 67, 68, 86, 95, 96, 108, 111, 113, 136], "its": [1, 5, 23, 52, 60, 117, 126, 128, 129, 131, 133, 136], "last": [1, 97, 102, 110, 122, 124, 136], "rais": [1, 13, 15, 20, 22, 24, 27, 31, 32, 39, 51, 57, 59, 61, 63, 132, 137], "valueerror": [1, 13, 20, 22, 27, 31, 32, 39, 51, 57, 59, 63], "valid": [1, 2, 13, 15, 16, 17, 18, 19, 31, 32, 33, 77, 84, 85, 96, 102, 109, 110, 115, 121, 123, 126, 127, 128, 132, 133, 134, 136], "targetpipelinecr": [1, 101, 115, 124, 130], "target": [1, 2, 6, 7, 13, 15, 16, 17, 18, 19, 24, 29, 31, 32, 33, 34, 42, 43, 44, 45, 46, 47, 48, 61, 65, 66, 67, 68, 71, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 109, 110, 113, 115, 121, 123, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137], "properti": [1, 3, 7, 13, 29, 54, 55, 125], "get": [1, 3, 5, 6, 7, 10, 15, 16, 17, 18, 19, 20, 24, 25, 29, 35, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 57, 65, 66, 67, 68, 84, 85, 88, 95, 96, 97, 102, 110, 121, 123, 128, 129, 134, 135], "have": [1, 5, 6, 7, 15, 16, 24, 32, 42, 43, 44, 45, 46, 47, 48, 54, 84, 87, 88, 89, 92, 95, 97, 103, 104, 105, 109, 110, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136], "been": [1, 56, 123, 125, 128, 137], "has_model": 1, "whether": [1, 14, 15, 16, 22, 27, 33, 39, 42, 48, 51, 59, 65, 66, 67, 68, 88, 92, 95, 110, 117, 124, 135], "ha": [1, 15, 24, 33, 42, 56, 84, 85, 86, 87, 88, 89, 92, 95, 96, 98, 102, 106, 109, 113, 116, 117, 123, 124, 125, 126, 128, 131, 135, 136, 137], "copi": [1, 3, 86, 110, 117, 128], "classmethod": 1, "from_list": 1, "model_param": [1, 33, 92, 137], "union": [1, 4, 29, 34, 64], "dict": [1, 5, 6, 7, 24, 25, 30, 32, 33, 42, 43, 44, 45, 46, 47, 48, 49, 54, 65, 66, 67, 68], "kei": [1, 32, 33, 43, 47, 87, 97, 132], "being": [1, 117, 120, 135, 136, 137], "pieplin": 1, "split": [1, 15, 16, 17, 18, 19, 24, 33, 84, 85, 86, 89, 92, 95, 101, 102, 113, 124, 125, 126, 128, 131, 135], "least": [1, 15, 16, 17, 18, 33, 86, 109, 115, 125], "two": [1, 41, 86, 87, 89, 92, 95, 96, 97, 98, 102, 103, 106, 109, 110, 113, 117, 123, 124, 125, 126, 129, 131, 134, 136], "same": [1, 15, 16, 33, 47, 61, 89, 92, 95, 103, 104, 105, 109, 113, 117, 121, 123, 124, 125, 126, 129, 131, 134, 135, 136], "consid": [1, 110, 116, 117, 122, 124, 126, 132, 135], "point": [1, 109, 117, 124, 125, 131, 133, 134, 135, 136], "tune": [1, 30, 33, 61, 100, 107, 121, 123, 124, 127, 128, 129, 130, 136, 137], "function": [1, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 50, 51, 52, 54, 57, 58, 59, 60, 61, 63, 69, 70, 83, 89, 92, 95, 96, 97, 108, 110, 112, 114, 116, 117, 119, 120, 121, 123, 124, 126, 131, 132, 133, 134, 135, 136, 137], "one": [1, 29, 33, 41, 43, 44, 45, 47, 53, 85, 86, 87, 88, 95, 97, 101, 102, 103, 104, 105, 106, 110, 113, 115, 117, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "each": [1, 5, 6, 7, 15, 16, 17, 18, 19, 24, 32, 33, 42, 43, 44, 45, 46, 47, 48, 54, 55, 84, 85, 86, 87, 88, 95, 96, 97, 98, 102, 109, 110, 113, 115, 117, 123, 124, 125, 126, 127, 128, 131, 134, 135, 136], "recurs": 1, "thu": [1, 5, 95, 131], "mani": [1, 42, 88, 95, 124, 125, 126, 135, 136], "all": [1, 3, 14, 21, 22, 26, 33, 36, 42, 43, 47, 48, 50, 55, 58, 84, 85, 88, 89, 95, 96, 97, 98, 102, 109, 110, 113, 115, 117, 120, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137], "configur": [1, 6, 42, 43, 44, 45, 46, 47, 48, 61, 121, 124, 128, 129, 136], "A": [1, 5, 6, 7, 13, 15, 16, 17, 18, 19, 21, 24, 26, 32, 33, 42, 43, 44, 45, 46, 47, 48, 50, 54, 58, 86, 87, 88, 89, 95, 103, 104, 105, 106, 110, 123, 124, 125, 126, 131, 132, 136], "without": [1, 22, 27, 39, 51, 59, 86, 88, 104, 109, 110, 115, 131], "repeat": [1, 17, 18, 84, 85, 102, 110, 113, 124, 125, 126, 128, 131, 135], "to_pipelin": [1, 2], "x_type": [1, 32, 33, 43, 44, 45, 47, 48, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 116, 123, 124, 126, 128, 129, 130, 132, 134, 135, 136], "search_param": [1, 33, 103, 104, 105, 126, 137], "data": [1, 5, 6, 7, 14, 15, 16, 17, 18, 19, 24, 29, 31, 32, 33, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 77, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136], "inspect": [1, 33, 61, 71, 97, 99, 102, 110, 118, 121, 127, 131, 132, 134, 135], "fold": [1, 13, 15, 16, 17, 18, 33, 61, 83, 84, 85, 90, 94, 95, 96, 99, 101, 102, 109, 110, 113, 124, 125, 126, 128, 130, 131, 135, 136], "wise": [1, 13, 33, 61, 94, 99, 131], "predict": [1, 7, 12, 13, 24, 32, 33, 37, 38, 42, 48, 54, 55, 61, 84, 85, 86, 87, 88, 89, 92, 94, 95, 99, 101, 102, 106, 110, 113, 115, 121, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136], "preprocess": [1, 2, 33, 61, 84, 85, 86, 88, 89, 92, 94, 95, 96, 99, 102, 109, 110, 113, 121, 123, 127, 132, 133, 135], "varianc": [1, 14, 33, 61, 94, 99, 115, 125, 128, 136], "threshold": [1, 14, 33, 42, 48, 55, 61, 94, 99, 110, 115, 123], "zscore": [1, 14, 33, 61, 84, 85, 86, 88, 89, 92, 94, 95, 96, 98, 99, 101, 103, 104, 105, 106, 109, 113, 115, 126, 128, 130, 134, 135, 136], "pca": [1, 14, 33, 61, 94, 99, 102, 110, 115, 126, 136], "variabl": [1, 2, 15, 16, 17, 18, 19, 31, 32, 33, 61, 85, 86, 88, 95, 100, 102, 107, 110, 113, 124, 125, 126, 128, 130, 135, 136, 137], "z": [1, 2, 33, 61, 95, 100, 107, 122, 128, 130, 135, 136], "score": [1, 2, 7, 12, 13, 24, 33, 41, 54, 61, 70, 71, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 109, 110, 112, 114, 121, 123, 124, 126, 128, 129, 130, 133, 136, 137], "grid": [1, 33, 61, 95, 100, 104, 107, 127, 128, 129, 137], "stack": [1, 33, 61, 100, 107, 109, 115, 121, 127], "analysi": [1, 14, 16, 33, 61, 83, 90, 100, 101, 107, 113, 115, 125, 136], "confound": [1, 2, 14, 19, 33, 43, 48, 55, 61, 87, 111, 115, 118, 121, 127, 134, 137], "remov": [1, 2, 14, 19, 33, 43, 48, 55, 61, 86, 96, 97, 108, 111, 115, 117, 121, 125, 127, 134, 137], "comparison": [1, 19, 33, 41, 61, 70, 93, 108, 111, 118, 121, 133], "connectom": [1, 33, 42, 115, 121, 127], "base": [1, 13, 15, 16, 19, 29, 33, 41, 42, 53, 71, 115, 119, 121, 124, 126, 127, 128, 131, 132, 133, 136], "cbpm": [1, 33, 115, 121, 127, 137], "evalu": [1, 7, 33, 36, 54, 78, 89, 95, 121, 125, 128, 131, 132, 133, 134, 136], "build": [1, 33, 84, 88, 95, 100, 121, 122, 123, 129, 130, 131, 133, 134], "cross": [1, 2, 13, 15, 16, 17, 18, 19, 31, 33, 84, 85, 96, 102, 109, 110, 115, 121, 123, 126, 127, 128, 132, 133, 134, 136, 137], "consist": [1, 2, 24, 31, 33, 116, 121, 123, 125, 127, 131, 132, 134, 136, 137], "analog": 2, "pipelinecr": [2, 33, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 115, 123, 124, 126, 128, 129, 130, 133, 134, 135, 137], "allow": [2, 15, 22, 24, 27, 39, 51, 59, 89, 109, 116, 119, 123, 124, 126, 132, 133, 136, 137], "target_pipelin": [2, 124, 130], "jutargetpipelin": [2, 54, 101, 124, 130], "easi": [2, 87, 121, 124, 126, 128, 129, 133, 134], "wai": [2, 89, 92, 119, 121, 124, 125, 126, 128, 129, 131, 134, 135, 136], "out": [2, 20, 21, 48, 58, 92, 110, 115, 121, 124, 125, 126, 128, 129, 133, 134, 135], "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 75, 82, 83, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 113, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137], "column_typ": [3, 128], "hold": [3, 22, 135], "regard": [3, 132, 135], "pd": [3, 5, 6, 7, 13, 14, 24, 29, 33, 41, 43, 44, 45, 46, 47, 48, 53, 54, 55, 65, 68, 70, 84, 85, 86, 87, 95, 96, 97, 101, 102, 109, 113, 123, 124, 125, 129, 130, 134], "datafram": [3, 5, 6, 7, 13, 14, 24, 29, 32, 33, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 70, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 116, 121, 123, 124, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137], "One": [3, 24, 87, 124, 126, 129, 136], "instead": [3, 15, 16, 19, 22, 24, 27, 39, 42, 51, 59, 86, 96, 109, 124, 125, 126, 129, 137], "also": [3, 84, 86, 89, 92, 97, 102, 103, 110, 116, 117, 119, 121, 123, 124, 126, 128, 129, 131, 132, 134, 135, 136], "itself": [3, 129], "self": [3, 5, 6, 15, 24, 29, 42, 43, 44, 45, 46, 47, 48, 54, 56], "updat": [3, 5, 6, 7, 15, 24, 42, 43, 44, 45, 46, 47, 48, 54, 117, 120, 137], "pattern": [3, 11, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 126, 128, 129, 130, 134, 135, 136], "regex": 3, "match": [3, 46, 87], "to_type_selector": 3, "selector": [3, 11], "usabl": [3, 136], "compos": [3, 11], "columntransform": [3, 11, 128], "callabl": [3, 34, 35, 39, 42, 137], "alia": [4, 15, 24, 62, 64], "needed_typ": [5, 6, 7, 29, 30, 46, 55], "estim": [5, 6, 7, 15, 24, 30, 33, 34, 35, 39, 42, 43, 44, 45, 46, 47, 48, 54, 65, 66, 67, 68, 95, 96, 97, 103, 104, 105, 106, 109, 110, 121, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 136], "everi": [5, 27, 32, 33, 51, 122, 128, 132, 136], "awar": [5, 120], "thei": [5, 7, 24, 54, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 105, 109, 113, 119, 123, 126, 128, 129, 135, 136], "abl": [5, 116, 131, 134], "main": [5, 71, 109, 117, 121, 122, 124, 125, 131], "differ": [5, 15, 16, 17, 18, 19, 27, 86, 87, 89, 92, 97, 102, 103, 104, 106, 109, 110, 119, 120, 123, 124, 125, 126, 128, 129, 131, 132, 134, 135, 136], "between": [5, 19, 31, 85, 109, 117, 123, 124, 125, 129, 131, 134, 136], "baseestim": [5, 137], "purpos": [5, 86, 87, 135], "That": [5, 123, 124, 125, 126, 128, 136], "ar": [5, 6, 7, 15, 16, 17, 18, 22, 24, 27, 29, 33, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 59, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 109, 110, 113, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137], "get_needed_typ": [5, 6, 7, 43, 44, 45, 46, 47, 48, 54, 68], "get_apply_to": [5, 6, 7, 43, 44, 45, 46, 47, 48, 54, 68], "filter_column": [5, 6, 7, 43, 44, 45, 46, 47, 48, 54, 106, 115, 129], "x": [5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 24, 29, 32, 33, 35, 39, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 65, 66, 68, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 116, 122, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136, 137], "panda": [5, 6, 7, 31, 32, 33, 42, 43, 44, 45, 46, 47, 48, 54, 83, 84, 85, 86, 88, 89, 90, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 113, 120, 121, 123, 124, 128, 129, 130, 132, 134, 135], "filter": [5, 6, 7, 43, 44, 45, 46, 47, 48, 54, 115, 121, 136, 137], "get_metadata_rout": [5, 6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 110], "metadata": [5, 6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 87, 110], "rout": [5, 6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 110], "check": [5, 6, 7, 9, 15, 16, 17, 18, 19, 24, 29, 31, 34, 42, 43, 44, 45, 46, 47, 48, 54, 81, 87, 88, 95, 97, 109, 110, 116, 117, 121, 122, 126, 135, 137], "guid": [5, 6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 110, 117], "mechan": [5, 6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 110, 131], "work": [5, 6, 7, 15, 16, 17, 18, 19, 24, 29, 42, 43, 44, 45, 46, 47, 48, 53, 54, 83, 84, 85, 86, 88, 89, 90, 92, 95, 96, 97, 98, 101, 103, 104, 105, 109, 110, 113, 117, 123, 124, 125, 126, 128, 129, 134, 137], "metadatarequest": [5, 6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 110], "encapsul": [5, 6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 110], "inform": [5, 6, 7, 15, 16, 17, 18, 19, 24, 29, 33, 42, 43, 44, 45, 46, 47, 48, 53, 54, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 116, 117, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "get_param": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 65, 66, 67, 68, 128], "deep": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 65, 66, 67, 68, 124], "true": [5, 6, 7, 15, 16, 22, 24, 27, 29, 33, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 54, 59, 65, 66, 67, 68, 84, 85, 86, 89, 95, 96, 98, 101, 102, 109, 110, 113, 116, 124, 125, 126, 128, 130, 131, 135, 136], "contain": [5, 6, 7, 24, 32, 33, 36, 41, 42, 43, 44, 45, 46, 47, 48, 54, 70, 84, 85, 86, 89, 101, 102, 113, 125, 128, 132, 135], "subobject": [5, 6, 7, 24, 42, 43, 44, 45, 47, 48, 54], "map": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 85, 110], "set_param": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 65, 66, 67, 68], "simpl": [5, 6, 7, 24, 33, 41, 42, 43, 44, 45, 46, 47, 48, 54, 61, 70, 83, 90, 91, 93, 95, 96, 97, 98, 103, 104, 105, 109, 110, 115, 117, 121, 123, 125, 126, 128, 129, 131, 136], "well": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 116, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 136], "nest": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 123, 126, 128, 131], "latter": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54], "form": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 132, 136], "compon": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 97, 102, 115, 136], "__": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 126, 129, 130, 134, 135, 136], "possibl": [5, 6, 7, 22, 24, 27, 39, 42, 43, 44, 45, 46, 47, 48, 51, 54, 59, 87, 121, 125, 126, 131, 135, 136], "instanc": [5, 6, 7, 13, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 124, 128, 136], "fit": [6, 7, 24, 29, 33, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 65, 66, 67, 68, 84, 85, 86, 88, 95, 96, 97, 98, 101, 102, 103, 104, 105, 110, 113, 115, 123, 124, 126, 127, 128, 131, 135, 136], "y": [6, 7, 12, 13, 15, 16, 17, 18, 19, 24, 29, 31, 32, 33, 35, 39, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 65, 66, 67, 68, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136], "fit_param": [6, 7, 42, 43, 44, 45, 46, 47, 48, 54], "datalik": [6, 7, 24, 29, 43, 44, 45, 46, 47, 48, 53, 54, 55, 65, 66, 67, 68], "addit": [6, 7, 24, 33, 42, 43, 44, 45, 46, 47, 48, 54, 120, 121, 123, 128, 129, 131, 134, 135], "pass": [6, 7, 15, 16, 17, 18, 19, 24, 43, 44, 45, 46, 47, 48, 54, 103, 115, 117, 126, 130, 135, 136], "fit_transform": [6, 29, 42, 43, 44, 45, 46, 47, 48, 53, 55], "version": [6, 15, 19, 24, 42, 43, 44, 45, 46, 47, 48, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 113, 117, 120, 121, 125, 128, 129, 137], "arrai": [6, 7, 15, 16, 17, 18, 19, 33, 42, 43, 44, 45, 46, 47, 48, 54, 84, 128], "like": [6, 7, 15, 16, 17, 18, 19, 27, 42, 43, 44, 45, 46, 47, 48, 51, 54, 65, 66, 67, 68, 92, 102, 117, 120, 125, 126, 128, 131, 132, 135, 136], "shape": [6, 7, 15, 16, 17, 18, 19, 42, 43, 44, 45, 46, 47, 48, 54, 84, 95], "n_sampl": [6, 7, 15, 16, 17, 18, 19, 42, 43, 44, 45, 46, 47, 48, 54, 97, 123, 129], "n_featur": [6, 15, 16, 17, 18, 19, 42, 43, 44, 45, 46, 47, 48, 97, 123, 124, 129], "input": [6, 29, 31, 32, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 77, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 126, 128, 129, 130, 133, 134, 135, 136], "sampl": [6, 7, 15, 16, 17, 18, 19, 24, 32, 41, 42, 43, 44, 45, 46, 47, 48, 54, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136], "n_output": [6, 42, 43, 44, 45, 46, 47, 48], "unsupervis": [6, 42, 43, 44, 45, 46, 47, 48], "x_new": [6, 42, 43, 44, 45, 46, 47, 48], "ndarrai": [6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54], "n_features_new": [6, 42, 43, 44, 45, 46, 47, 48], "set_output": [6, 42, 43, 44, 45, 46, 47, 48], "output": [6, 14, 15, 16, 17, 18, 19, 33, 41, 42, 43, 44, 45, 46, 47, 48, 61, 70, 86, 109, 117, 128, 131, 132, 133, 136], "see": [6, 15, 16, 17, 24, 25, 32, 33, 42, 43, 44, 45, 46, 47, 48, 61, 75, 82, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 116, 117, 119, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136], "introduc": [6, 42, 43, 44, 45, 46, 47, 48, 124], "api": [6, 42, 43, 44, 45, 46, 47, 48, 115, 117, 121, 129, 133, 136], "exampl": [6, 42, 43, 44, 45, 46, 47, 48, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 116, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137], "format": [6, 42, 43, 44, 45, 46, 47, 48, 61, 85, 87, 102, 103, 104, 105, 109, 117, 122, 124, 126, 137], "unchang": [6, 15, 24, 42, 43, 44, 45, 46, 47, 48], "wrap": [7, 34, 54, 137], "make": [7, 11, 15, 16, 17, 18, 19, 24, 85, 87, 88, 95, 97, 102, 103, 104, 105, 109, 117, 120, 122, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136, 137], "modellik": [7, 24, 25, 27, 48, 54, 55, 110], "float": [7, 19, 24, 32, 33, 37, 38, 42, 48, 54, 55, 70, 84, 105, 110, 126], "predict_proba": [7, 12, 24, 54], "comput": [7, 24, 33, 37, 38, 42, 54, 89, 102, 113, 116, 126, 131, 136], "probabl": [7, 24, 33, 54, 128], "outcom": [7, 24, 54, 136], "np": [7, 15, 16, 17, 18, 19, 24, 42, 54, 84, 85, 88, 95, 102, 103, 104, 105, 123, 124, 125, 128, 129], "correspond": [7, 24, 33, 54, 128], "sort": [7, 24, 54, 88, 95, 115], "order": [7, 15, 16, 24, 54, 87, 88, 95, 109, 110, 116, 117, 124, 126, 129, 131, 136, 137], "appear": [7, 24, 54, 135], "classes_": [7, 24, 54], "decision_funct": [7, 12, 54, 95, 137], "decis": [7, 54, 87, 88, 95, 103, 104, 105, 124, 128], "n_class": [7, 54], "1": [6, 7, 15, 19, 24, 32, 33, 42, 43, 44, 45, 46, 47, 48, 54, 65, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136], "2": [7, 15, 16, 17, 18, 19, 24, 54, 66, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 120, 121, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136], "predict_log_proba": [7, 12], "kwarg": [7, 24, 25, 46, 53, 56, 65, 66, 67, 68], "new_typ": 8, "chang": [8, 15, 19, 24, 43, 82, 104, 109, 115, 117, 120, 122, 125, 126, 135], "new": [6, 8, 15, 24, 42, 43, 44, 45, 46, 47, 48, 95, 110, 117, 121, 131, 136], "attr": 9, "ensur": [9, 43, 45, 47, 48, 84, 125, 128], "cv": [12, 13, 15, 16, 17, 18, 19, 24, 31, 32, 33, 61, 83, 84, 85, 89, 90, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136, 137], "func": 12, "group": [12, 13, 15, 16, 17, 18, 19, 31, 32, 33, 61, 83, 86, 90, 95, 102, 121, 123, 127, 135], "featur": [13, 14, 15, 16, 17, 18, 19, 29, 32, 33, 42, 43, 44, 45, 46, 47, 48, 53, 55, 65, 66, 68, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 116, 117, 120, 121, 123, 126, 127, 128, 130, 131, 133, 134, 135], "label": [13, 15, 16, 17, 18, 19, 32, 33, 84, 89, 131, 132, 135, 136], "case": [13, 15, 16, 17, 18, 24, 32, 33, 42, 86, 87, 95, 101, 113, 117, 123, 124, 125, 132, 135, 136], "number": [13, 15, 16, 17, 18, 19, 33, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136], "pipelineinspector": [13, 98], "foldsinspector": [13, 128], "until": [14, 95, 97, 102, 110, 120, 132, 134], "with_column_typ": [14, 95], "fals": [14, 15, 16, 22, 24, 27, 33, 39, 44, 48, 51, 54, 59, 61, 85, 86, 88, 89, 92, 95, 96, 97, 101, 102, 103, 104, 105, 106, 110, 113, 123, 124, 126, 128, 129, 130, 135, 136], "certain": [14, 116, 132, 135, 136], "inclus": [14, 110], "svm": [14, 33, 61, 84, 89, 92, 94, 98, 99, 103, 104, 105, 106, 115, 126, 128, 129, 130, 134, 135, 136], "n_bin": [15, 16, 17, 18, 86, 125], "bin": [15, 16, 17, 18, 86, 125], "n_split": [15, 16, 17, 18, 19, 24, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136], "5": [15, 16, 17, 18, 19, 33, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 106, 109, 110, 113, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136], "shuffl": [15, 16, 19, 85, 86, 88, 89, 92, 95, 96, 97, 101, 102, 103, 104, 105, 106, 110, 113, 123, 124, 125, 126, 128, 129, 130, 135, 136], "random_st": [15, 16, 17, 18, 19, 24, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136], "stratifi": [15, 16, 17, 18, 19, 33, 61, 83, 84, 90, 125, 135, 137], "k": [15, 16, 17, 18, 33, 61, 83, 84, 85, 88, 90, 95, 101, 102, 109, 115, 125, 126, 131, 135], "where": [15, 16, 17, 18, 19, 87, 122, 125, 126, 128, 136, 137], "stratif": [15, 16, 19, 86, 88, 127], "done": [15, 16, 19, 103, 117, 120, 122, 128, 129, 134, 135, 136], "discret": [15, 16, 125, 136], "fix": [15, 16, 117, 125, 137], "quantil": [15, 16, 17, 18, 125], "either": [15, 16, 17, 18, 41, 95, 97, 115, 117, 124, 126, 136], "In": [15, 16, 17, 18, 42, 86, 87, 88, 89, 95, 96, 109, 110, 113, 117, 121, 123, 124, 125, 128, 129, 131, 132, 134, 135, 136], "first": [15, 16, 17, 18, 41, 63, 69, 84, 88, 89, 92, 95, 97, 101, 102, 103, 104, 109, 110, 117, 123, 124, 126, 129, 130, 132, 133, 134, 135, 136], "second": [15, 16, 17, 18, 41, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136], "must": [15, 16, 17, 18, 41, 46, 70, 87, 88, 95, 102, 117, 125, 126, 132, 136], "befor": [15, 16, 33, 54, 84, 86, 87, 96, 109, 113, 117, 120, 122, 125, 126, 135, 136, 137], "batch": [15, 16], "note": [15, 16, 17, 18, 19, 24, 33, 97, 109, 117, 124, 126, 129], "within": [15, 16, 117, 123, 124, 129, 131, 132, 135], "implement": [15, 16, 42, 116, 121, 123, 124, 125, 129, 137], "approxim": [15, 16], "distribut": [15, 16, 19, 41, 84, 86, 88, 89, 92, 95, 96, 98, 103, 104, 105, 106, 109, 115, 124, 125, 128, 134, 135, 136, 137], "global": [15, 16, 116], "perform": [15, 16, 29, 33, 41, 84, 85, 86, 88, 89, 91, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 113, 117, 123, 124, 125, 126, 128, 131, 133, 134, 135, 136], "randomst": [15, 16, 17, 18, 19], "when": [15, 16, 24, 86, 109, 115, 116, 117, 119, 123, 124, 125, 126, 130, 132, 135, 136, 137], "affect": [15, 16, 128], "indic": [15, 16, 17, 18, 19, 33, 44, 48, 95, 115, 117, 125, 128, 135, 136], "control": [15, 16, 17, 18, 19, 87, 88, 95, 103, 104, 105, 112, 124, 126, 129, 131], "random": [15, 16, 17, 18, 19, 24, 33, 61, 88, 89, 92, 94, 97, 99, 103, 104, 105, 109, 115, 124, 125, 126, 128, 129, 134, 136], "otherwis": [15, 16, 19, 24, 54, 61], "leav": [15, 16, 102, 125], "reproduc": [15, 16, 17, 18, 19, 24, 33, 135], "across": [15, 16, 17, 18, 19, 85, 96, 101, 102, 113, 125, 128, 135], "call": [15, 16, 17, 18, 19, 22, 35, 39, 116, 119, 124, 125, 126, 128, 129, 132, 136, 137], "splitter": [15, 16, 17, 18, 19, 24, 33, 121, 127, 133, 134], "mai": [15, 16, 17, 18, 19, 82, 123, 124, 128, 129], "result": [15, 16, 17, 18, 19, 29, 33, 53, 87, 95, 109, 110, 116, 124, 125, 128, 131, 132, 134, 135, 137], "ident": [15, 16, 17, 18, 19, 105, 125, 126], "integ": [15, 16, 17, 18, 19, 126, 135], "gener": [15, 16, 17, 18, 19, 33, 46, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 117, 122, 125, 130, 131, 135, 136, 137], "test": [15, 16, 17, 18, 19, 24, 33, 41, 55, 84, 85, 86, 92, 95, 101, 102, 104, 109, 121, 124, 125, 126, 128, 131, 134, 135, 137], "suffici": [15, 16, 19, 86], "henc": [15, 16, 19], "zero": [15, 16, 17, 18, 19, 97], "placehold": [15, 16, 17, 18, 19], "actual": [15, 16, 19, 42, 48, 84, 85, 102, 110, 113, 128], "supervis": [15, 16, 17, 18, 19, 136], "learn": [15, 16, 17, 18, 19, 20, 22, 33, 42, 43, 45, 46, 47, 48, 49, 53, 87, 89, 95, 96, 113, 115, 117, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "while": [15, 16, 17, 18, 19, 33, 96, 103, 109, 116, 121, 124, 125, 126, 129, 130, 131, 136, 137], "dataset": [15, 16, 17, 18, 19, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 117, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136], "yield": [15, 16, 17, 18, 19, 33, 116, 128, 135], "get_n_split": [15, 16, 17, 18, 19], "iter": [15, 16, 17, 18, 19, 33, 97, 105, 109, 123, 126, 128, 135, 137], "alwai": [15, 16, 17, 18, 19, 89, 103, 104, 105, 109, 117, 124, 126, 129, 134, 135, 136], "ignor": [15, 16, 17, 18, 19, 24, 110, 113, 126], "exist": [15, 16, 17, 18, 19, 24, 39, 61], "set_split_request": 15, "request": [15, 24, 98, 121], "relev": [15, 24, 128], "enable_metadata_rout": [15, 24], "set_config": [15, 24, 116], "meta": [15, 24], "error": [15, 22, 24, 27, 32, 33, 39, 51, 59, 61, 63, 84, 85, 87, 101, 102, 113, 116, 117, 125, 131, 134, 137], "given": [15, 24, 48, 95, 109, 110, 115, 116, 124, 132, 135, 136], "origin": [15, 24, 42, 63, 117, 122], "util": [15, 24, 71, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 113, 117, 121, 128, 129], "metadata_rout": [15, 24], "retain": [15, 24], "some": [15, 24, 86, 87, 88, 95, 96, 117, 120, 123, 124, 125, 126, 128, 129, 131, 132], "3": [15, 24, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 117, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136], "sub": [15, 24, 133], "e": [15, 24, 27, 42, 48, 55, 61, 110, 115, 117, 120, 122, 123, 124, 125, 126, 128, 135, 136], "g": [15, 24, 27, 61, 102, 115, 120, 125, 126, 135], "insid": [15, 24, 27, 136], "effect": [15, 24, 124, 128], "glossari": [16, 17], "n_repeat": [17, 18, 84, 92, 98, 128, 134, 135], "10": [17, 18, 42, 84, 85, 86, 87, 88, 89, 95, 96, 98, 101, 102, 105, 109, 110, 113, 121, 124, 125, 126, 128, 129, 130, 134, 135], "continuousstratifiedgroupkfold": [17, 125], "n": [17, 18, 84, 85, 86, 97, 101, 102, 113, 115, 122, 125, 130, 136], "time": [17, 18, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136], "repetit": [17, 18, 84, 85, 102], "state": [17, 18, 23, 24, 28, 40, 52, 60, 124], "contion": 18, "continuousstratifiedkfold": [18, 86, 125, 137], "test_siz": [19, 84, 85, 95, 101, 102, 109], "0": [19, 24, 32, 33, 42, 48, 55, 70, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136], "train_siz": [19, 95, 98, 109], "bootstrap": [19, 109, 125], "resampl": 19, "replac": [19, 42, 96, 109, 122, 128], "respect": [19, 42, 115, 117, 132, 134, 135, 136], "re": [19, 117, 136], "proport": 19, "round": [19, 134], "up": [19, 33, 41, 63, 97, 103, 104, 105, 110, 121, 123, 128, 133, 136], "absolut": [19, 85, 101, 102, 113, 115], "complement": [19, 115], "size": [19, 123, 124, 125, 134], "21": [19, 87, 121, 123, 126, 129, 134], "remain": [19, 125, 131], "unspecifi": 19, "automat": [19, 117, 120, 122, 136], "produc": [19, 126], "n_label": 19, "searcher": [20, 21, 22, 23, 33, 120, 127, 137], "obj": 22, "scikit": [20, 22, 33, 42, 43, 45, 46, 47, 48, 49, 53, 89, 95, 96, 113, 115, 120, 121, 123, 124, 125, 126, 129, 130, 131, 134, 135, 136, 137], "avail": [20, 21, 22, 26, 33, 35, 36, 41, 50, 57, 58, 120, 121, 135, 136, 137], "algorithm": [21, 22, 24, 33, 96, 126, 131, 134, 136, 137], "searcher_nam": 22, "overwrit": [22, 27, 39, 51, 59, 61, 137], "regist": [22, 23, 27, 28, 33, 39, 40, 51, 52, 59, 60, 113, 137], "after": [22, 29, 48, 53, 55, 85, 86, 95, 97, 101, 102, 109, 110, 113, 117, 128], "referenc": [22, 27, 51, 59, 137], "decid": [22, 27, 39, 59], "warn": [22, 27, 31, 32, 39, 51, 56, 59, 61, 69, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 105, 109, 113, 123, 125, 128, 129, 132, 134, 137], "alreadi": [22, 27, 39, 51, 59, 95, 97, 117, 124, 125, 129, 133, 134, 136], "reset": [23, 28, 40, 52, 60, 87], "ensembl": [24, 129], "ds_split": 24, "random_state_algorithm": 24, "deslib": [24, 71, 115, 120, 121], "randomforest": 24, "metad": 24, "singlebest": 24, "staticselect": 24, "stackedclassifi": 24, "knorau": 24, "knora": 24, "desp": 24, "ola": 24, "mcb": 24, "knop": 24, "sample_weight": 24, "weight": [24, 126, 136], "set_score_request": 24, "run_cross_valid": [25, 27, 41, 70, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 116, 117, 123, 124, 126, 128, 129, 130, 133, 134, 137], "extra": [25, 46, 65, 66, 68, 75, 82, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 113, 115, 116, 117, 129, 130, 136], "keyword": [25, 46, 65, 66, 68, 97, 123], "argument": [25, 46, 65, 66, 68, 97, 110, 125], "model_nam": 27, "classification_cl": 27, "regression_cl": 27, "afterward": [27, 51, 129], "behav": [27, 51], "runtimewarn": [27, 31, 32, 51, 59, 69, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 105, 109, 113, 123, 128, 129, 134], "unlik": [29, 53, 131], "both": [29, 42, 53, 86, 88, 95, 109, 110, 124, 125, 126, 129, 130, 135, 136], "requir": [29, 53, 75, 82, 117, 121, 126, 128, 130, 133, 136, 137], "targetconfoundremov": [29, 53, 124], "encod": [29, 53], "present": [29, 53, 110, 116, 117, 123, 125, 137], "leakag": [29, 53, 121, 124, 136], "drop": [29, 42, 44, 53, 86, 89, 92, 97, 110, 115, 128], "tupl": [29, 42, 126], "jutargettransform": [29, 57, 59], "transformerlik": [29, 33, 136], "inverse_transform": 29, "invers": [29, 54, 137], "can_inverse_transform": [29, 54], "factori": 30, "params_to_tun": 30, "juestimatorlik": 30, "estimatorlikefit1": [30, 64, 68], "estimatorlikefit2": [30, 64], "estimatorlikef": [30, 64], "seri": [31, 32, 55, 65, 68], "inconsist": [31, 32], "might": [31, 32, 82, 87, 89, 92, 96, 103, 104, 105, 116, 119, 120, 124, 125, 126, 128, 130, 133, 135, 136, 137], "still": [31, 87, 110, 120, 125, 135, 137], "run": [31, 33, 42, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136], "df": [32, 41, 97, 126, 132, 134, 135, 136], "pos_label": [32, 33, 89], "detail": [32, 33, 117, 131], "interpret": [32, 33, 61, 109, 128], "posit": [32, 33, 42, 85, 89, 123], "element": [32, 33, 61, 84, 87, 97, 116, 136, 137], "convert": [32, 33, 86, 87, 96, 109, 113, 125], "equal": [32, 33, 86, 115, 125], "dictionari": [32, 33, 43, 47, 97, 110, 124, 126, 128, 132, 137], "df_x": 32, "df_y": 32, "df_group": 32, "return_estim": [33, 84, 85, 86, 88, 95, 96, 97, 98, 101, 102, 103, 104, 105, 109, 110, 113, 123, 126, 128, 129, 135], "return_inspector": [33, 98, 128], "return_train_scor": [33, 128, 135], "seed": [33, 89, 92, 97, 103, 104, 105, 109, 128, 129], "n_job": [33, 42, 128, 137], "verbos": [33, 42, 128, 137], "string": [33, 61, 115, 132, 134, 135, 136, 137], "kind": [33, 84, 85, 88, 89, 92, 95, 96, 98, 103, 104, 105, 106, 109, 126, 132, 135], "categor": [33, 102, 110, 115, 126, 130], "multiple_class": 33, "binari": [33, 61, 83, 88, 90, 92, 95, 96, 98, 103, 104, 105, 106, 109, 115, 117, 125, 126, 128, 134], "ordin": 33, "final": [33, 84, 85, 86, 87, 88, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 117, 123, 125, 126, 128, 129, 135, 136], "inspector": [33, 98, 128], "strategi": [33, 135], "kfold": [33, 85, 86, 88, 89, 92, 95, 96, 97, 101, 102, 103, 104, 105, 106, 110, 113, 123, 124, 125, 126, 128, 129, 130, 135, 136], "scorerlik": [33, 34, 35, 39], "metric": [33, 71, 84, 85, 87, 89, 92, 102, 109, 113, 121, 131, 133, 134], "http": [33, 42, 61, 86, 92, 117, 121, 125, 131, 134], "org": [33, 42, 61, 86, 92, 121, 131, 134, 135], "stabl": [33, 86, 120, 121, 131], "model_evalu": 33, "html": [33, 61, 86, 92, 117, 121, 131, 134, 135], "comprehens": [33, 116], "scorer": [33, 35, 36, 39, 40, 113, 134, 135, 137], "defin": [33, 41, 46, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 113, 123, 124, 125, 126, 128, 129, 135, 136, 137], "follow": [33, 41, 42, 46, 61, 63, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 105, 109, 110, 113, 115, 117, 118, 120, 121, 122, 123, 126, 128, 129, 132, 133, 134, 135, 136], "step__paramet": 33, "sever": [33, 87, 88, 95, 116, 117, 125, 126, 131, 135], "svm__probabl": 33, "go": [33, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 121, 128, 133, 136], "oper": [33, 84, 86, 96, 109, 110, 125], "job": [33, 42], "parallel": [33, 42, 117, 137], "over": [33, 84, 85, 89, 92, 97, 102, 123, 124, 128, 129, 134], "mean": [33, 41, 42, 48, 55, 82, 85, 86, 88, 89, 95, 97, 101, 102, 103, 104, 105, 109, 110, 113, 115, 124, 125, 126, 128, 130, 131, 134, 135, 136], "unless": 33, "joblib": [33, 42], "parallel_backend": 33, "context": [33, 87, 88, 95, 103, 104, 105, 128], "processor": 33, "level": [33, 61, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 113, 117, 123, 128, 129], "outer": [33, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 126, 128, 129, 130, 134, 135, 136, 137], "convernt": 33, "print": [33, 61, 84, 85, 86, 88, 89, 92, 95, 97, 98, 101, 102, 103, 104, 105, 106, 110, 113, 116, 123, 124, 126, 128, 130, 134, 135, 136], "larger": 33, "50": [33, 85, 86, 89, 92, 96, 97, 98, 101, 102, 106, 109, 110, 113, 126, 129, 130, 135, 136], "standard": [33, 42, 97, 124, 129, 136, 137], "standrad": 33, "addition": [33, 61, 89, 92, 121, 122, 124, 136], "fit_tim": [33, 84, 85, 98, 101, 102, 110, 113, 124, 130, 135, 136], "And": [33, 88, 95, 109, 125, 126], "final_estim": 33, "multiclass": [33, 61, 83, 90, 115], "forest": [33, 61, 88, 92, 94, 97, 99, 109, 115, 129, 134, 136], "custom": [33, 39, 61, 114, 118, 121, 123, 135, 136], "wrap_scor": 34, "doe": [34, 95, 131, 136], "handl": 34, "non_invers": 34, "scalar": [35, 39, 84], "greater": [35, 39, 41, 128], "better": [35, 39, 103, 104, 105, 126, 128, 134], "Will": [35, 39, 134], "y_true": [37, 38, 84, 85, 89, 102, 113], "y_pred": [37, 38, 84, 85, 89, 102, 113], "squar": [37, 113, 115], "pearson": [37, 38, 113, 123], "product": [37, 38, 113], "moment": [37, 38, 113], "correl": [37, 38, 42, 85, 113, 123], "coeffici": [37, 38, 85, 113, 135, 136], "arraylik": [37, 38], "scorer_nam": [39, 113], "access": [39, 87], "want": [39, 48, 84, 87, 88, 89, 95, 97, 109, 110, 113, 117, 119, 120, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136], "userwarn": [39, 86, 89, 125], "bonferroni": 41, "altern": [41, 109, 137], "side": 41, "correct": [41, 92, 129, 134, 137], "t": [41, 87, 92, 95, 125, 126, 134, 135, 136, 137], "degre": [41, 128], "freedom": 41, "adjust": 41, "pvalu": 41, "full": [41, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 117, 128], "letter": 41, "sidak": 41, "holm": 41, "down": 41, "sime": 41, "hochberg": 41, "independ": [41, 48, 55, 95, 109, 110, 115, 125], "hommel": 41, "close": [41, 122], "non": [41, 42], "neg": [41, 42, 123], "fdr_bh": 41, "benjamini": 41, "fdr_by": 41, "yekuti": 41, "fdr_tsbh": 41, "stage": 41, "fdr": [41, 115], "fdr_tsbky": 41, "less": [41, 86, 97, 121, 125, 131], "hypothesi": [41, 109], "underli": [41, 115, 124, 128], "unequ": 41, "significance_threshold": [42, 123], "05": [42, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 111, 113, 121, 123, 124, 126, 128, 129, 130, 134, 135, 136], "corr_method": [42, 123], "pearsonr": [42, 113, 135], "agg_method": [42, 123], "sum": [42, 84, 123, 137], "corr_sign": [42, 123], "posneg": [42, 123], "aggreg": [42, 123], "significantli": 42, "signific": [42, 92, 123, 128], "aggregate": 42, "separ": [42, 95, 97, 131, 135, 136], "ones": [42, 126], "choos": [42, 89, 92, 125, 126, 134, 136], "procedur": [42, 125, 131], "describ": [42, 85, 86, 97, 101, 102, 110, 113, 117, 130, 135], "p": [42, 84, 92, 109, 123, 134], "scipi": [42, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 113, 123, 128, 129], "stat": [42, 71, 92, 113, 121, 123, 125, 134], "convent": [42, 117, 126], "axi": [42, 84, 85, 86, 101, 102, 113, 125, 130], "po": [42, 123], "correlation_valu": 42, "found": [42, 103, 104, 105, 135], "used_corr_sign_": 42, "log": [42, 61, 63, 69, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 113, 117, 126, 137], "shen": [42, 123], "finn": [42, 123], "scheinost": 42, "d": [42, 84, 87, 88, 95, 103, 104, 105, 115, 122, 123, 125, 126], "et": [42, 115, 123, 124, 136], "al": [42, 123, 124], "individu": [42, 123, 128, 135], "behavior": [42, 87, 123, 124, 128, 137], "brain": [42, 88, 95, 121, 123, 124], "connect": [42, 123, 124], "nat": [42, 123], "protoc": [42, 123], "12": [42, 85, 87, 88, 92, 95, 97, 98, 102, 107, 120, 123, 124], "506": [42, 123], "518": [42, 88, 123], "2017": [42, 123, 124], "doi": [42, 121, 124], "1038": 42, "nprot": 42, "2016": [42, 87, 88, 95, 103, 104, 105, 123], "178": [42, 126], "y_mean_": 42, "show": [42, 83, 92, 100, 108, 112, 119, 125, 126, 134, 135, 137], "wa": [6, 42, 43, 44, 45, 46, 47, 48, 88, 95, 96, 97, 110, 123, 125, 126, 128, 135], "x_y_correlations_": 42, "significant_mask_": 42, "had": [42, 104, 135, 137], "pos_mask_": 42, "pos_significant_mask_": 42, "neg_significant_mask_": 42, "used_significant_mask_": 42, "threhsold": 42, "mask": [42, 44, 48], "per": [42, 84, 88, 95, 102, 117, 125], "get_feature_names_out": [42, 43, 45, 46, 47, 48], "input_featur": [42, 43, 45, 46, 47, 48], "x_types_renam": 43, "Not": [43, 44, 45, 46, 47, 109], "here": [43, 44, 45, 47, 86, 87, 88, 95, 97, 110, 116, 117, 121, 129, 134, 135, 136], "kept": [43, 45, 46, 47, 48, 110], "jutransform": [43, 44, 45, 46, 47, 48], "get_support": [44, 48], "support": [44, 48, 54, 75, 84, 88, 89, 95, 98, 103, 104, 105, 117, 125, 126, 128, 129, 135, 136, 137], "support_mask": [44, 48], "numpi": [44, 48, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 113, 120, 123, 124, 125, 128, 129], "keep": [45, 87, 89, 92, 96, 98, 102, 106, 109, 110, 117, 120, 121, 126, 129, 136], "wrapper": [46, 54, 137], "around": 46, "directli": [46, 87, 121, 130], "feature_names_in_": 46, "undefin": [46, 116], "x0": 46, "x1": 46, "n_features_in_": 46, "model_confound": [48, 55, 110, 124], "keep_confound": [48, 110], "specif": [48, 89, 95, 97, 110, 124, 126, 127, 128, 131, 132, 133], "subtract": [48, 55, 110, 115], "regular": [48, 103, 104, 110, 115, 126, 132], "express": [48, 110, 132], "syntax": [48, 110], "linearregress": [48, 55, 110, 115, 123, 124], "By": [48, 55, 95, 96, 97, 110, 115, 123, 126, 128, 135], "residu": [48, 55, 110, 124], "fall": [48, 55, 110, 123, 135], "under": [48, 55, 110, 113, 119, 120, 135, 136], "togeth": [48, 85, 86, 101, 102, 110, 113, 115], "deconfound": [48, 110], "transformer_nam": [51, 59], "transformer_cl": [51, 59], "arg": [53, 56, 65, 66, 67, 68], "_model_": 54, "transform_target": 54, "confoundremov": [55, 110, 115, 124, 137], "notifi": [56, 61], "with_traceback": 56, "except": [56, 63, 117, 120], "tb": 56, "__traceback__": 56, "fname": 61, "output_format": 61, "debug": [61, 131], "info": [61, 62, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 117, 123, 124, 126, 128, 129, 130, 134, 135, 136], "messag": [61, 63, 69, 117, 123, 137], "pathlib": 61, "path": 61, "filenam": [61, 117], "stdout": 61, "file": [61, 87, 90, 93, 99, 107, 111, 114, 117], "statement": 61, "append": [61, 96, 109, 122, 125, 128], "entri": [61, 136], "doc": [61, 86, 117, 122, 137], "python": [61, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 117, 120, 122, 125, 126, 137], "dev": [61, 117, 122], "howto": 61, "asctim": 61, "levelnam": 61, "msg": [63, 69], "klass": [63, 126], "subclass": [63, 69], "fashion": [65, 66, 67, 68, 124], "juestim": 68, "categori": 69, "width": [70, 89, 92, 98, 106, 109], "800": 70, "height": 70, "600": [70, 86], "ci": [70, 109, 122], "95": [70, 89, 92, 97, 98, 102, 106, 109, 125, 126], "plot": [70, 84, 85, 86, 92, 95, 96, 97, 102, 109, 121, 125, 134], "panel": [70, 92, 119, 120, 134], "dashboard": 70, "confid": [70, 109, 128], "interv": [70, 109], "dynam": [71, 120, 121], "prepar": [71, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 105, 109, 113, 121, 123, 124, 128, 129], "visual": [71, 95, 120, 121, 125, 131, 133], "julearn": [73, 75, 82, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 115, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "depend": [75, 82, 87, 88, 95, 103, 104, 105, 117, 121, 125, 128, 134, 137], "instal": [75, 82, 117, 119, 121, 122, 134, 137], "protocol": 81, "experiment": [82, 126], "futur": [82, 84, 86, 96, 109, 125, 126], "complet": [82, 117], "particularli": [82, 125, 135], "reli": 82, "beta": 82, "releas": [82, 120, 121, 137], "packag": [82, 86, 89, 96, 109, 117, 119, 120, 125, 126, 129], "viz": [82, 92, 120, 121, 134], "basic": [83, 117, 126, 132, 133, 135, 136, 137], "galleri": [83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 117], "sphinx": [83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 117, 137], "end": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 120], "download": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113], "code": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 117, 121, 124, 136, 137], "iri": [84, 89, 92, 96, 98, 106, 109, 117, 126, 132, 135, 136], "vector": [84, 88, 89, 95, 98, 103, 104, 105, 117, 126, 128, 129, 135, 136], "machin": [84, 87, 88, 89, 95, 98, 103, 104, 105, 117, 121, 123, 124, 126, 128, 131, 132, 133, 134, 136], "classifi": [84, 88, 89, 95, 96, 98, 103, 104, 105, 106, 109, 117, 128, 135, 136], "heatmap": [84, 85, 102], "accuraci": [84, 89, 104, 109, 124, 125, 134, 135], "confus": [84, 97, 135, 136], "matrix": 84, "author": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 117, 123], "shammi": [84, 85, 86, 88, 95, 97, 102, 109, 113, 121, 124, 137], "fz": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123], "juelich": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123], "de": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124], "federico": [84, 85, 86, 87, 88, 89, 92, 95, 96, 98, 102, 103, 104, 105, 106, 109, 113, 121], "raimondo": [84, 85, 86, 87, 88, 89, 92, 95, 96, 98, 102, 103, 104, 105, 106, 109, 113, 121, 137], "f": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 102, 103, 104, 105, 106, 109, 113, 123, 124, 126, 129], "licens": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 117, 123], "agpl": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123], "seaborn": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 102, 103, 104, 105, 106, 109, 117, 120, 121, 125, 126, 128, 132, 135, 136], "sn": [84, 85, 86, 95, 96, 97, 102, 109, 125, 128], "matplotlib": [84, 85, 86, 95, 96, 97, 102, 109, 121, 125], "pyplot": [84, 85, 86, 95, 96, 97, 102, 109, 125], "plt": [84, 85, 86, 95, 96, 97, 102, 109, 125], "load_dataset": [84, 87, 88, 89, 92, 95, 96, 98, 103, 104, 105, 106, 109, 117, 126, 128, 132, 135, 136], "model_select": [84, 85, 86, 88, 92, 95, 98, 101, 102, 109, 125, 128, 134, 135, 137], "train_test_split": [84, 85, 101, 102], "repeatedkfold": [84, 128], "confusion_matrix": 84, "configure_log": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 113, 117, 128, 129], "2023": 121, "11": [85, 86, 87, 88, 95, 98, 123, 124, 128, 129, 134, 135], "30": [89, 92, 95, 97, 104, 124, 126, 134], "452": [], "lib": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 113, 125, 126, 128, 129], "453": [], "26": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 113, 124, 128, 129, 134], "4": [6, 42, 43, 44, 45, 46, 47, 48, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136, 137], "dev110": [], "load": [84, 85, 86, 101, 102, 103, 104, 105, 109, 110, 113, 117, 126, 130, 132, 135], "df_iri": [84, 89, 92, 96, 98, 106, 109, 117], "sepal_length": [84, 89, 92, 96, 98, 106, 109, 126, 132, 135, 136], "sepal_width": [84, 89, 92, 96, 98, 106, 109, 126, 132, 135, 136], "petal_length": [84, 89, 92, 96, 98, 106, 109, 126, 132, 135, 136], "speci": [84, 89, 92, 96, 98, 106, 109, 117, 126, 128, 132, 135, 136], "train_iri": 84, "test_iri": 84, "200": [84, 97, 98, 109, 123, 125, 128, 129], "we": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 116, 117, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136], "model_iri": [84, 96], "456": 113, "457": 113, "expand": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 116, 123, 124, 126, 128, 129, 130, 134, 135, 136], "treat": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 105, 109, 113, 123, 128, 129], "home": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 105, 109, 113, 123, 126, 128, 129, 134], "runner": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 105, 109, 113, 123, 126, 128, 129, 134], "py": [84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 117, 123, 125, 126, 128, 129, 134], "503": 92, "warn_with_log": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 105, 109, 113, 123, 128, 129, 134], "458": [95, 99], "__continu": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 109, 110, 113, 123, 126, 128, 130, 134, 135, 136], "459": [], "120": 84, "versicolor": [84, 89, 92, 96, 98, 106, 109, 117, 126, 135, 136], "40": [84, 85, 86, 113, 123, 130], "virginica": [84, 89, 92, 96, 98, 106, 109, 117, 126, 135, 136], "setosa": [84, 132, 135, 136], "count": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 125, 126, 128, 130, 134, 135, 136], "dtype": [84, 85, 86, 88, 89, 92, 95, 96, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 126, 128, 130, 134, 135, 136], "int64": [84, 88, 89, 92, 95, 96, 98, 103, 104, 105, 106, 109, 126, 128, 134, 135, 136], "460": [], "scheme": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 126, 128, 129, 130, 131, 134, 135, 136, 137], "multi": [84, 87, 134, 135, 136], "detect": [84, 88, 89, 92, 95, 96, 98, 103, 104, 105, 106, 109, 116, 126, 128, 131, 134, 135, 136, 137], "head": [84, 85, 86, 87, 88, 95, 101, 102, 103, 104, 105, 109, 110, 113, 130, 132, 134, 136], "score_tim": [84, 85, 98, 101, 102, 110, 113, 124, 130, 135, 136], "test_accuraci": [84, 89, 109, 134], "n_train": [84, 85, 110, 113, 124], "n_test": [84, 85, 110, 113, 124], "cv_mdsum": [84, 85, 98, 101, 102, 110, 113, 124, 130, 135, 136], "004817": [], "002559": [], "916667": 84, "96": [84, 97, 98, 137], "24": [84, 103, 120, 126, 137], "fa5ab7a2b930761687a8e82d9971ebca": 84, "004397": [], "002450": [], "833333": 84, "004402": 113, "002457": [], "958333": 84, "004433": [], "002480": 98, "004379": [], "002462": 136, "now": [84, 85, 86, 87, 89, 92, 95, 96, 98, 101, 102, 103, 104, 105, 109, 110, 113, 117, 124, 125, 126, 128, 129, 132, 134, 135, 136], "df_accuraci": 84, "set_index": [84, 85, 87, 102, 109], "unstack": [84, 85, 102], "index": [84, 85, 86, 87, 88, 95, 97, 101, 102, 103, 104, 105, 109, 113, 117, 121, 128], "875000": 84, "750000": 84, "000000": [84, 85, 86, 92, 97, 101, 102, 109, 110, 113, 130, 134], "791667": 84, "font_scal": [84, 85], "fig": [84, 85, 86, 95, 96, 97, 102, 125], "ax": [84, 85, 86, 95, 96, 97, 102, 125], "subplot": [84, 85, 86, 95, 96, 97, 102, 125], "figsiz": [84, 85, 86, 95, 96, 97, 102, 125], "7": [84, 85, 86, 87, 88, 95, 98, 102, 117, 121, 125, 129, 131, 132, 135, 137], "cmap": [84, 85, 102], "ylgnbu": [84, 85, 102], "titl": [84, 85, 102, 117], "text": [84, 85, 95, 97, 102, 117, 125], "our": [84, 87, 88, 89, 95, 97, 106, 110, 117, 121, 124, 125, 126, 128, 129, 131, 132, 134, 135, 136], "annot": [84, 85], "cm": 84, "uniqu": [84, 88, 95, 126, 128], "9": [84, 85, 87, 88, 95, 97, 98, 102, 110, 124, 126, 132, 135, 136], "8": [84, 87, 88, 95, 98, 101, 102, 120, 124, 125, 126, 130, 131, 135, 136, 137], "let": [84, 85, 86, 87, 88, 95, 97, 101, 102, 103, 104, 109, 110, 113, 124, 125, 126, 128, 129, 130, 132, 136], "anoth": [84, 87, 97, 113, 125, 129, 136], "cm_sum": 84, "keepdim": 84, "cm_perc": 84, "astyp": 84, "100": [84, 89, 92, 96, 97, 98, 106, 109, 124, 126], "empty_lik": 84, "nrow": 84, "ncol": 84, "rang": [84, 87, 97, 115, 123, 129], "j": [84, 124], "c": [84, 87, 88, 95, 103, 104, 105, 119, 120, 126, 128, 129, 136], "els": 84, "1f": [84, 85], "tmp": [84, 86], "tmpcwtyqmh_": [], "2e7b1527c028733120aa7f73295f211297481781": [], "00_start": [84, 86], "plot_cm_acc_multiclass": [84, 90], "104": 84, "deprecationwarn": 84, "convers": 84, "ndim": 84, "deprec": [84, 86, 96, 109, 117, 125, 137], "extract": [84, 87, 88, 95, 128], "singl": [84, 116, 128, 134], "your": [84, 87, 117, 120, 121, 123, 124, 125, 128, 133, 136], "25": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 128, 130, 134, 135, 136], "fmt": [84, 85], "total": [84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136], "script": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 117, 122, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136], "minut": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136], "499": [113, 124], "sourc": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113], "jupyt": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 119, 135], "notebook": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 119, 135], "ipynb": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113], "diabet": [85, 86, 101, 102, 113, 130], "ridg": [85, 101, 102, 113, 115], "load_diabet": [85, 86, 101, 102, 110, 113, 130], "mean_absolute_error": [85, 102], "101": 117, "return_x_i": [85, 86, 101, 102, 110, 113, 130], "as_fram": [85, 86, 101, 102, 110, 113, 130], "ten": [85, 86, 101, 102, 113], "ag": [85, 86, 87, 101, 102, 110, 113, 130], "sex": [85, 86, 101, 102, 110, 113, 124, 128, 130], "bodi": [85, 86, 101, 102, 113], "mass": [85, 86, 101, 102, 113], "averag": [85, 86, 101, 102, 110, 113, 123, 125, 134], "blood": [85, 86, 101, 102, 110, 113], "pressur": [85, 86, 101, 102, 110, 113], "six": [85, 86, 101, 102, 113], "serum": [85, 86, 101, 102, 113], "measur": [85, 86, 101, 102, 110, 113, 124, 125, 126, 128], "s1": [85, 86, 87, 88, 95, 101, 102, 110, 113, 130], "s6": [85, 86, 87, 88, 95, 101, 102, 110, 113, 130], "patient": [85, 86, 101, 102, 113], "quantit": [85, 86, 101, 102, 113], "diseas": [85, 86, 101, 102, 113], "progress": [85, 86, 101, 102, 113, 117], "year": [85, 86, 101, 102, 113], "baselin": [85, 86, 101, 102, 113], "interest": [85, 86, 89, 101, 102, 109, 113, 133, 135, 136], "bmi": [85, 86, 101, 102, 110, 113, 130], "s4": [85, 86, 87, 88, 95, 101, 102, 110, 113, 130], "s5": [85, 86, 87, 88, 95, 101, 102, 103, 104, 105, 110, 113, 130], "038076": [85, 86, 101, 102, 110, 113, 130], "050680": [85, 86, 101, 102, 110, 113, 130], "061696": [85, 86, 101, 102, 110, 113, 130], "002592": [85, 86, 101, 102, 110, 113, 130], "019907": [85, 86, 101, 102, 110, 113, 130], "017646": [85, 86, 101, 102, 110, 113, 130], "001882": [85, 86, 101, 102, 110, 113, 130], "044642": [85, 86, 101, 102, 110, 113, 130], "051474": [85, 86, 101, 102, 110, 113, 130], "039493": [85, 86, 101, 102, 110, 113, 130], "068332": [85, 86, 101, 102, 110, 113, 130], "092204": [85, 86, 101, 102, 110, 113, 130], "085299": [85, 86, 101, 102, 110, 113, 130], "044451": [85, 86, 101, 102, 110, 113, 130], "002861": [85, 86, 101, 102, 110, 113, 130], "025930": [85, 86, 101, 102, 110, 113, 130], "089063": [85, 86, 101, 102, 110, 113, 130], "011595": [85, 86, 101, 102, 110, 113, 130], "034309": [85, 86, 101, 102, 110, 113, 130], "022688": [85, 86, 101, 102, 110, 113, 130], "009362": [85, 86, 101, 102, 110, 113, 130], "005383": [85, 86, 101, 102, 110, 113, 130], "036385": [85, 86, 101, 102, 110, 113, 130], "031988": [85, 86, 101, 102, 110, 113, 130], "046641": [85, 86, 101, 102, 110, 113, 130], "442": [85, 86, 101, 102, 110, 113, 129, 130], "152": [85, 86, 88, 101, 102, 110, 113, 130, 136, 137], "133484": [85, 86, 101, 102, 110, 113, 130], "std": [85, 86, 97, 101, 102, 110, 113, 124, 130], "77": [85, 86, 101, 102, 110, 113, 130, 134, 137], "093005": [85, 86, 101, 102, 110, 113, 130], "min": [85, 86, 97, 101, 102, 110, 113, 130], "87": [85, 86, 101, 102, 110, 113, 130], "140": [85, 86, 101, 102, 110, 113, 130], "500000": [85, 86, 101, 102, 110, 113, 130], "75": [85, 86, 89, 92, 97, 101, 102, 110, 113, 130], "211": [85, 86, 101, 102, 110, 113, 130], "max": [85, 86, 97, 101, 102, 110, 113, 115, 130], "346": [85, 86, 101, 102, 110, 113, 130], "float64": [85, 86, 89, 92, 97, 101, 102, 106, 110, 113, 123, 124, 129, 130], "combin": [85, 86, 87, 101, 102, 109, 113, 126, 136], "data_diabet": [85, 101, 102, 113, 130], "concat": [85, 86, 96, 101, 102, 109, 113, 130], "bp": [85, 86, 101, 102, 110, 113, 130], "s2": [85, 86, 87, 88, 95, 101, 102, 110, 113, 130], "s3": [85, 86, 87, 88, 95, 101, 102, 110, 113, 130], "calcul": 85, "heat": 85, "corr": [85, 102], "xticklabel": 85, "yticklabel": 85, "train_diabet": [85, 101, 102], "test_diabet": [85, 101, 102], "neg_mean_absolute_error": [85, 86, 97, 101, 113, 135], "299": [], "300": [106, 129], "301": [], "302": [], "309": [85, 101, 102, 106], "test_scor": [85, 86, 88, 89, 92, 95, 101, 102, 103, 104, 105, 106, 110, 113, 124, 126, 135], "004773": [], "002307": [], "48": [85, 87], "783874": 85, "247": [85, 137], "62": 85, "b10eef89b4192178d482d7a1587a248a": [85, 101, 102, 110, 113, 124, 130, 135, 136], "004258": [], "002250": [], "47": [85, 113, 126, 137], "573568": 85, "004443": [], "002321": [], "37": 85, "617474": 85, "004253": [], "002185": [], "686852": 85, "004255": [], "002206": [], "45": [85, 126], "558655": 85, "248": 85, "61": 85, "444084441470615": 85, "mae": [85, 102], "df_mae": [85, 102], "coef_": [85, 110], "sort_valu": 85, "ascend": 85, "inplac": 85, "barh": 85, "color": [85, 86, 95, 109, 125], "blue": 85, "red": 85, "xlabel": [85, 102], "249999999999986": 85, "scatterplot": [85, 95, 97, 102], "v": [85, 102, 122, 125, 127, 136], "2f": [85, 102], "corrcoef": [85, 102], "set_styl": [85, 86, 102], "darkgrid": [85, 86, 102], "scatter": [85, 97, 102], "xmin": [85, 102], "xmax": [85, 102], "get_xlim": [85, 95, 102], "ymin": [85, 102], "ymax": [85, 102], "get_ylim": [85, 95, 102], "ylabel": [85, 102, 125], "01": [85, 90, 97, 99, 102, 103, 104, 107, 121, 123, 126, 128, 129, 134], "verticalalign": [85, 102], "top": [85, 102, 121, 135], "horizontalalign": [85, 102], "right": [85, 102, 103, 104, 105, 125, 126], "fontsiz": [85, 102], "scale": [85, 102, 103, 104, 115, 126, 128, 136], "649999999999999": 85, "347": 85, "35": [85, 87], "660": 85, "plot_example_regress": [85, 90], "leonard": [86, 97, 109, 121, 123], "sass": [86, 97, 109, 121, 123], "l": [86, 87, 88, 95, 97, 101, 103, 104, 105, 109, 123], "128": 135, "outlier": 86, "data_df": 86, "new_df": 86, "145": [86, 102], "150": [86, 88, 124, 135, 136], "590": [86, 126], "580": 86, "597": 86, "595": 86, "reset_index": [86, 87, 88, 95, 103, 104, 105, 109], "plot_stratified_kfold_reg": [86, 90], "51": [86, 101], "settingwithcopywarn": 86, "try": [86, 88, 89, 92, 95, 98, 104, 106, 125, 126, 135], "slice": 86, "loc": 86, "row_index": 86, "col_index": 86, "caveat": 86, "pydata": 86, "user_guid": 86, "view": [86, 117], "versu": 86, "idea": [86, 131], "chosen": 86, "coupl": 86, "histrogram": 86, "displot": 86, "60": 86, "20": [86, 89, 92, 98, 101, 105, 109, 123, 124, 125, 129, 134, 136], "opt": [86, 89, 96, 109, 125, 126], "hostedtoolcach": [86, 89, 96, 109, 125, 126], "13": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 113, 120, 124, 126, 128, 129], "x64": [86, 89, 96, 109, 125, 126], "python3": [86, 89, 96, 109, 125, 126], "site": [86, 89, 96, 109, 125, 126], "_oldcor": [86, 96, 109, 125], "1498": [], "futurewarn": [86, 96, 109, 125], "is_categorical_dtyp": [], "isinst": [], "categoricaldtyp": [], "1119": [86, 96, 109, 125], "use_inf_as_na": [86, 96, 109, 125], "inf": [86, 96, 109, 125], "nan": [86, 96, 109, 125, 128], "option_context": [86, 96, 109, 125], "mode": [86, 96, 109, 125], "axisgrid": 86, "facetgrid": 86, "0x7fe724e4f2e0": [], "histogram": 86, "abov": [86, 109, 124, 126, 128, 135], "uniformli": [86, 125], "skew": 86, "toward": 86, "lower": [86, 125], "even": [86, 110, 126, 135, 136], "low": [86, 97, 105, 115, 123, 126], "give": [86, 115, 124, 126, 133, 134, 135], "good": [86, 89, 104, 120, 125, 133, 134], "granular": 86, "cv_stratifi": [86, 88], "linear": [86, 92, 103, 104, 105, 110, 123, 124, 126, 128, 129, 136], "scores_strat": 86, "linreg": [86, 110, 115, 123, 124], "716": [], "717": 110, "718": 110, "719": 110, "449": 86, "_split": [86, 125], "737": [86, 125], "popul": [86, 109, 125], "member": [86, 125], "761": [], "762": [], "763": [], "764": [], "compar": [86, 92, 109, 121, 124, 126, 131, 134, 135], "With": [86, 125, 128, 135], "df_score": 86, "boxplot": [86, 109], "higher": [86, 109, 125], "were": [86, 87, 88, 95, 96, 109, 128, 135], "swarmplot": [86, 96], "842": [], "fmri": [87, 88, 95, 103, 104, 105], "waskom": [87, 88, 95, 103, 104, 105], "m": [87, 88, 95, 103, 104, 105, 117, 122, 136], "frank": [87, 88, 95, 103, 104, 105], "wagner": [87, 88, 95, 103, 104, 105], "adapt": [87, 88, 95, 103, 104, 105], "engag": [87, 88, 95, 103, 104, 105], "cognit": [87, 88, 95, 103, 104, 105], "cerebr": [87, 88, 95, 103, 104, 105], "cortex": [87, 88, 95, 103, 104, 105], "similar": [87, 126, 129, 135, 136], "excel": [87, 125], "spreadsheet": 87, "csv": 87, "ideal": 87, "everyth": [87, 133], "tabul": 87, "organis": [87, 124], "demograph": [87, 124], "diagnost": 87, "manual": [87, 119, 134, 136], "edit": 87, "sure": [87, 95, 117, 122, 124, 125, 126], "readi": [87, 134, 136], "do": [87, 95, 97, 102, 103, 104, 109, 110, 113, 115, 117, 121, 122, 124, 125, 126, 129, 131, 132, 133, 134, 135, 136], "howev": [87, 92, 95, 96, 97, 110, 116, 119, 120, 124, 125, 126, 129, 130, 131, 134, 135, 136, 137], "prone": [87, 131, 134], "fortun": [87, 125, 126], "tool": [87, 116, 120, 128, 134], "deal": [87, 123, 132], "task": [87, 95, 110, 126, 130], "collect": [87, 109, 128], "start": [87, 117, 118, 121, 125, 126, 128, 129, 130, 133, 134, 136], "df_fmri": [87, 88, 95, 103, 104, 105], "subject": [87, 88, 95, 103, 104, 105, 125], "timepoint": [87, 88, 95, 103, 104, 105], "event": [87, 88, 95, 103, 104, 105], "region": [87, 88, 95, 103, 104, 105], "signal": [87, 88, 95, 103, 104, 105], "s13": [87, 88, 95, 103, 104, 105], "18": [87, 88, 95, 97, 98, 103, 104, 105, 123, 124], "stim": [87, 88, 95, 103, 104, 105], "pariet": [87, 88, 95, 103, 104, 105], "017552": [87, 88, 95, 103, 104, 105], "14": [86, 87, 88, 89, 95, 96, 97, 98, 103, 104, 105, 109, 124, 125, 126, 134], "080883": [87, 88, 95, 103, 104, 105], "s12": [87, 88, 95, 103, 104, 105], "081033": [87, 88, 95, 103, 104, 105], "s11": [87, 88, 95, 103, 104, 105], "046134": [87, 88, 95, 103, 104, 105], "s10": [87, 88, 95, 103, 104, 105], "037970": [87, 88, 95, 103, 104, 105], "long": [87, 109], "wide": 87, "seen": [87, 136], "pivot": [87, 88, 95, 103, 104, 105], "reshap": [87, 95], "tabl": [87, 88, 95], "becom": [87, 131, 136], "identifi": [87, 89, 123, 124, 128, 134], "rule": [87, 115, 125, 136], "duplic": [87, 116], "frontal": [87, 88, 95, 103, 104, 105], "s0": [87, 88, 95, 103, 104, 105], "cue": [87, 88, 95, 103, 104, 105], "007766": [87, 103, 104, 105], "006899": [87, 103, 104, 105], "021452": [87, 103, 104, 105], "039327": [87, 103, 104, 105], "016440": [87, 103, 104, 105], "000300": [87, 103, 104, 105], "021054": [87, 103, 104, 105], "035735": [87, 103, 104, 105], "024296": [87, 103, 104, 105], "033220": [87, 103, 104, 105], "subtl": 87, "For": [87, 89, 92, 97, 102, 110, 115, 116, 117, 119, 120, 123, 125, 126, 128, 129, 130, 132, 135, 136], "place": 87, "scan": 87, "ll": [87, 102], "23": [87, 121, 124, 126], "31": [87, 104, 134], "29": [87, 126, 129, 134], "43": [87, 113, 126], "28": [87, 126, 129], "34": [87, 109, 110, 134], "scanner": 87, "6": [87, 88, 92, 95, 96, 97, 98, 105, 110, 123, 125, 128, 131, 132, 135], "b": [87, 117, 126, 136], "df_meta": 87, "s7": [87, 88, 95], "s8": [87, 88, 95], "s9": [87, 88, 95], "16": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 126, 128, 129, 130, 134, 135, 136], "036739": 87, "131641": 87, "17": [87, 88, 95, 96, 97, 98, 126, 128, 134], "004900": [87, 136], "036362": 87, "030099": 87, "121574": 87, "000643": 87, "051040": 87, "009959": 87, "103513": 87, "532": [87, 88, 95, 103, 104, 105], "frame": 87, "suppos": [87, 89, 124], "dure": [87, 88, 95, 120, 123, 124, 126, 128], "There": [87, 125, 131, 133, 136], "009038": 87, "009642": 87, "047859": 87, "026727": 87, "085040": 87, "086399": 87, "069775": 87, "070558": 87, "115321": 87, "154058": 87, "010535": 87, "061817": 87, "034386": 87, "130267": 87, "15": [87, 88, 92, 95, 97, 98, 120, 124, 128, 129], "002170": 87, "048007": 87, "038257": 87, "134828": 87, "004290": 87, "035395": 87, "266": [87, 88, 95, 103, 104, 105], "sinc": [87, 92, 97, 101, 103, 121, 126, 136], "previou": [87, 92, 96, 97, 117, 129, 134, 135, 136, 137], "multiindex": 87, "trick": 87, "underscor": 87, "_": [87, 96, 109, 117], "frontal_cu": 87, "frontal_stim": 87, "parietal_cu": 87, "parietal_stim": 87, "829": [], "run_combine_panda": [87, 90], "groupkfold": 88, "kimia": 88, "nazarzadeh": 88, "necessari": [88, 119, 124, 129], "librari": [88, 119, 121, 126], "stratifiedgroupkfold": 88, "08": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 123, 124, 126, 128, 129, 130, 134, 135, 136], "942": [], "infer": [88, 95], "studi": [88, 95, 124, 125, 126], "condit": [88, 95], "groupbi": [88, 95], "1064": [88, 95], "exactli": [88, 95, 128, 136], "rf": [88, 92, 96, 97, 106, 109, 115, 126, 129, 134], "961": [], "962": [], "963": [], "964": [], "965": [], "6841826838300122": 88, "09": [84, 88], "605": [], "606": [], "607": [], "608": 136, "6898496240601504": 88, "966": [], "967": [], "968": [], "969": [], "970": [], "6879699248120301": 88, "389": 109, "run_grouped_cv": [88, 90], "308": [], "three": [89, 92, 96, 98, 106, 109, 117, 121, 126, 134, 135], "isin": [89, 92, 96, 98, 106, 109, 117, 126], "sepal": [89, 92, 98, 106, 109, 132, 136], "length": [89, 92, 98, 106, 109], "petal": [89, 92, 98, 106, 109, 132, 136], "679": [], "680": [], "681": [], "682": 110, "683": [], "90": [89, 92, 134], "70": [89, 92], "assess": [89, 92, 124, 128], "unbalanc": [89, 92], "df_unbalanc": [89, 92], "value_count": [89, 92], "account": [89, 124], "imbal": 89, "suitabl": [89, 120], "balanced_accuraci": [89, 92, 135], "balanced_accuracy_scor": 89, "42": [89, 92, 95, 103, 104, 105, 109, 113, 125, 128, 134, 135], "test_balanced_accuraci": [89, 92], "723": [], "724": [], "725": 136, "80": [89, 92, 124, 134], "726": [104, 136], "_classif": 89, "2399": [], "8625": 89, "8678571428571429": 89, "u": [89, 96, 109, 110, 120, 124, 128, 134, 135], "correctli": 89, "precis": [89, 135], "ratio": 89, "tp": 89, "precision_scor": 89, "771": [], "772": [], "773": [], "774": [], "514": [], "run_simple_binary_classif": [89, 90], "00": [90, 93, 97, 99, 106, 107, 111, 114, 128, 129, 134], "04": [90, 107], "733": 136, "execut": [90, 93, 99, 107, 111, 114, 117], "auto_examples_00_start": 90, "mb": [90, 93, 99, 107, 111, 114], "At": [92, 121, 131, 136], "statist": [92, 97, 109, 121, 133, 135], "repeatedstratifiedkfold": [92, 98, 134, 135], "corrected_ttest": [92, 134], "944": [], "945": [], "947": [95, 135], "948": [95, 135], "949": [95, 135], "950": 135, "951": [], "roc_auc": [92, 109, 134, 135], "scores1": [92, 119, 126, 134], "990": [], "991": 102, "992": 84, "993": [84, 90], "scores2": [92, 119, 126, 134], "273": 128, "274": 128, "275": [], "276": 86, "third": [92, 135], "kernel": [92, 103, 104, 105, 124, 126, 128, 129, 136], "scores3": [92, 119, 126, 134], "svm__kernel": [92, 104, 126], "svm_linear": 92, "971": [], "stats_df": [92, 134], "model_2": [92, 129, 134], "val": [92, 134], "175075": 92, "062567": 92, "895662": 92, "151390": 92, "782741": 92, "test_roc_auc": [92, 109, 134], "108944": 92, "835331": 92, "236153": 92, "685092": 92, "669010": 92, "324331": 92, "viewer": 92, "plot_scor": [92, 119, 134], "uncom": [92, 134], "line": [92, 117, 125, 134], "read": [92, 96, 117, 121, 122, 125, 131, 133, 134, 136], "holoviz": [92, 134], "getting_start": [92, 134], "build_app": [92, 134], "deploi": [92, 128, 134], "pane": [], "unknown": [], "widget": [], "could": [95, 97, 110, 121, 123, 128, 132, 134, 135, 136], "button_typ": [], "look": [92, 95, 97, 102, 110, 115, 123, 125, 126, 128, 129, 131, 132, 133, 135, 136], "interact": [92, 95, 121, 128, 134], "zoom": [92, 134], "hover": [92, 134], "button": [92, 134], "433": [], "plot_simple_model_comparison": [92, 93], "03": [93, 99, 107, 121], "auto_examples_01_model_comparison": 93, "demonstr": [94, 117, 129, 135], "analys": [95, 96, 124], "groupshufflesplit": 95, "419": [96, 99], "439": 129, "440": 129, "441": 129, "443": 129, "7218303650149884": 95, "decod": [95, 124], "claim": [95, 109, 125], "acquir": 95, "randomli": 95, "characterist": 95, "unseen": [95, 125, 131], "whom": 95, "later": [95, 98, 117, 134], "500": [92, 124], "501": [92, 129], "502": 92, "504": 92, "7210526315789474": 95, "part": [95, 119, 121, 123, 125, 131, 134, 136], "raw": [95, 97, 136], "hue": [95, 109], "set_titl": [95, 96, 97, 125], "pre_x": 95, "pre_df": 95, "join": 95, "parietal__": 95, "frontal__": 95, "noth": [95, 126, 135], "standardscal": [95, 105, 115, 126, 128, 130, 135, 136], "seem": [95, 103, 104, 105, 109, 126, 133, 134, 135], "quit": [95, 120, 123, 128], "linearli": 95, "clf": 95, "figur": [95, 117], "xlim": 95, "ylim": 95, "xx": 95, "linspac": [95, 125], "yy": 95, "meshgrid": 95, "xy": 95, "vstack": 95, "ravel": 95, "xy_df": 95, "contour": 95, "alpha": [95, 123, 125], "linestyl": [95, 125], "boundari": [95, 126], "492": [], "plot_groupcv_inspect_svm": [95, 99], "861": [], "862": [], "864": 103, "865": [103, 126], "866": [103, 126], "867": [87, 90, 126], "868": 126, "intern": [96, 128, 129, 135, 136], "caution": [96, 125], "proper": [96, 109, 122, 133], "randomforestclassifi": [96, 115, 126], "understand": [96, 110, 121, 124, 128, 133, 134, 136], "to_plot": 96, "feature_importances_": [96, 109], "barplot": 96, "tight_layout": [96, 109], "review": [96, 117], "wander": 96, "about": [96, 117, 121, 124, 125, 128, 129, 131, 133, 134, 135, 136], "entir": [96, 135, 136], "566": [], "567": [], "568": [], "569": 134, "570": [], "571": [], "i_fold": [96, 109], "enumer": [96, 109], "this_import": [96, 109], "416": 106, "plot_inspect_random_forest": [96, 99], "make_regress": [97, 123, 124, 129], "normal": [97, 110, 115, 117, 124, 125, 136, 137], "reduct": 97, "19": [97, 98, 121, 123, 126, 134], "065": [], "n_inform": 97, "nois": [97, 124], "first_two": 97, "determin": [97, 126, 136], "belong": [97, 110], "x_to_zscor": 97, "summari": [97, 117], "111790": 97, "141618": 97, "023682": 97, "167718": 97, "686170": 97, "977322": 97, "972988": 97, "087946": 97, "895011": 97, "79": [97, 117], "741431": 97, "069985": 97, "772593": 97, "552990": 97, "659172": 97, "204": 97, "293317": 97, "751257": 97, "484100": 97, "759419": 97, "688891": 97, "64": 97, "724008": 97, "206729": 97, "194442": 97, "028152": 97, "174160": 97, "789944": 97, "421885": 97, "724302": 97, "772156": 97, "408321": 97, "392804": 97, "943621": 97, "256723": 97, "383145": 97, "259309": 97, "216": [97, 105], "221085": 97, "explicitli": [97, 103, 124, 126], "declar": 97, "constructor": 97, "special": 97, "cannot": [97, 136], "tree": [97, 115], "pipeline_cr": [97, 102, 106, 110, 124, 126, 128, 129], "select_vari": [97, 115], "n_compon": [97, 102, 126, 136], "n_estim": [97, 129], "becaus": [97, 110, 124, 125, 126, 128, 131, 133, 134, 135, 136], "creator": [97, 98, 101, 102, 103, 104, 109, 110, 123, 126, 130, 135, 136], "simpli": [97, 123, 124, 125, 128, 129, 136], "did": [97, 104], "hand": [97, 117, 123, 124, 129, 132], "r2": [97, 102, 124, 135], "x_after_pca": 97, "earlier": 97, "x_after_zscor": 97, "high": [97, 105, 116, 123, 126], "pca__pca0": [97, 110], "pca__pca1": [97, 110], "080": [104, 134], "081": 104, "__x_to_zscor": 97, "082": [104, 123], "083": [104, 126, 134], "084": [], "085": [], "725696": 97, "582295": 97, "314458": 97, "942935": 97, "977336": 97, "463217": 97, "525139": 97, "219493": 97, "618559": 97, "908592": 97, "395105": 97, "743192": 97, "328111": 97, "670912": 97, "97": [97, 98, 109], "573900": 97, "401304": 97, "98": [97, 98, 125], "918034": 97, "137435": 97, "99": [97, 98, 134], "894566": 97, "357729": 97, "1__": 97, "4__": 97, "013728": 97, "426259": 97, "364686": 97, "944446": 97, "118838": 97, "931848": 97, "004437": 97, "030684": 97, "309092": 97, "523891": 97, "206189": 97, "157667": 97, "099154": 97, "028182": 97, "335538": 97, "252795": 97, "049139": 97, "133702": 97, "240085": 97, "443863": 97, "deviat": [97, 124], "000000e": 97, "02": [97, 107, 124, 128, 129, 134], "689893e": 97, "387779e": 97, "005038e": 97, "013728e": 97, "010202e": 97, "576015e": 97, "463286e": 97, "763131e": 97, "456486e": 97, "488094e": 97, "018781e": 97, "113700e": 97, "184776e": 97, "326": 86, "plot_preprocess": [97, 99], "shufflesplit": 98, "510": 88, "513": 129, "515": 110, "516": [88, 110], "004767": [], "002408": [], "42489ff0163b2f12752440a6b7ef74c7": 98, "004391": 98, "002318": 85, "004211": [], "002286": [], "004200": [], "002320": [], "004222": [], "002315": [], "004184": [], "002294": [], "004201": [], "002290": [], "004248": [], "002326": 101, "002363": [], "004217": [], "004238": [], "002298": [], "004229": [], "002311": 113, "004156": [], "002314": [], "004206": [], "004158": [], "002285": [], "004155": [], "002312": [], "002302": [], "004168": [], "002304": [], "004198": [], "002308": [], "004180": [], "002322": [], "cv_predict": 98, "repeat0_p0": [98, 128], "repeat1_p0": [98, 128], "repeat2_p0": [98, 128], "repeat3_p0": 98, "_pipelin": 98, "0x7fe724e89a20": [], "227": 126, "run_binary_inspect_fold": [98, 99], "auto_examples_02_inspect": 99, "Then": [101, 110, 122, 129, 131, 136], "lya": 101, "paa": 101, "olivero": 101, "sami": [101, 110, 121, 124, 137], "hamdan": [101, 110, 121, 124, 137], "547": [92, 97], "548": [92, 97], "target_cr": [101, 130], "target_pipeline_cr": [101, 124], "0x7fe724a38250": [], "563": [], "564": [], "565": [], "004338": [], "003049": [], "003920": [], "003011": [], "003896": [], "003113": [], "003907": [], "003016": [], "003901": [], "002966": [], "154": [], "0615805903489": [], "074": 96, "run_apply_to_target": [101, 107], "reduc": [102, 110, 136], "dimension": [102, 110, 123, 126, 136], "subset": [102, 126, 131], "georgio": 102, "antonopoulo": 102, "kaustubh": [102, 121, 137], "r": [102, 113, 121], "patil": [102, 121, 137], "709": [], "assign": [102, 117], "pca1": 102, "pca2": 102, "process": [102, 126, 132, 135, 136], "pca_feats1": 102, "pca_feats2": 102, "__pca1": 102, "__pca2": 102, "__categor": [102, 130], "0x7fe724870ac0": [], "727": 136, "728": 136, "729": 136, "012711": [], "005439": [], "011889": [], "005351": [], "012077": [], "005575": [], "011985": [], "005436": [], "011883": [], "005540": [], "3107976743678922": 102, "untouch": 102, "data_processed1": 102, "pca_feats1__pca0": 102, "161": 102, "063175": 102, "133274": 102, "131461": 102, "039719": 102, "108111": 102, "075741": 102, "085907": 102, "054779": 102, "030464": 102, "001314": 102, "043401": 102, "033246": 102, "015491": 102, "098172": 102, "033216": 102, "032629": 102, "011824": 102, "015999": 102, "050783": 102, "032289": 102, "012577": 102, "034508": 102, "024993": 102, "067737": 102, "013504": 102, "315": [102, 126], "045025": 102, "031454": 102, "020607": 102, "056003": 102, "010903": 102, "001078": 102, "data_processed2": 102, "pca_feats2__pca0": 102, "234716": 102, "012141": 102, "078784": 102, "006290": 102, "026190": 102, "341472": 102, "348168": 102, "269257": 102, "286067": 102, "309025": 102, "362": [86, 102, 104, 113], "404": [], "run_example_pca_featset": [102, 107], "755": [], "attempt": [103, 104], "765": [], "766": [], "767": [], "768": [], "5939164168576971": [103, 104], "gamma": [103, 104, 105, 126, 128], "But": [103, 109, 110, 125, 126, 128, 133, 135, 136], "rbf": [103, 104, 105, 126], "auto": [103, 126], "1e": [103, 104, 105, 126, 128, 129], "speed": [103, 104, 105], "823": [], "824": [], "001": [103, 104, 126, 128], "825": [], "svm__c": [103, 104, 105, 126, 128, 129], "826": [], "inner": [103, 104, 105, 126, 128, 129, 137], "827": [], "svm__gamma": [103, 104, 105, 126], "set_column_typ": [103, 105, 126, 128, 135], "setcolumntyp": [103, 105, 126, 128, 135], "828": [], "svc": [103, 105, 115, 126, 128, 135, 136], "830": [], "7087109857168048": [103, 104], "best_params_": [103, 104, 105, 126], "best_estimator_": [103, 104], "_gamma": [103, 104], "run_hyperparameter_multiple_grid": [103, 107], "analyz": [104, 105, 128], "177": 126, "186": [], "187": [], "188": [], "189": 84, "190": [], "optim": [104, 120, 126, 128, 136], "find": [104, 105, 116, 126, 133], "best": [104, 105, 126, 136], "252": [], "253": [], "254": 109, "255": 137, "256": [], "588308940222183": 104, "much": [104, 125, 126, 128, 131], "explor": [104, 110, 128, 129], "too": [104, 126], "poli": 104, "530": [], "531": [84, 90], "533": [], "534": [], "lest": 104, "27": [120, 124, 129], "250": [], "251": 137, "5188855581026275": 104, "happen": [104, 128, 129], "801": [], "802": [], "803": [], "804": [], "805": [], "406": [], "run_hyperparameter_tun": [104, 107], "logist": [106, 115, 134, 136], "22": [105, 124, 126], "208": [], "petal_width": [106, 109, 126, 132, 135, 136], "model_sep": 106, "model_pet": 106, "__sepal": [106, 136], "212": 134, "__petal": [106, 136], "213": [], "0x7fe724e28550": [], "0x7fe724e29a20": [], "214": [], "215": [], "217": 105, "323": 86, "324": 86, "85": 106, "run_stacked_model": [106, 107], "025": 126, "auto_examples_03_complex_model": 107, "relat": [108, 124, 132], "stratifiedbootstrap": 109, "ml": [109, 121], "classic": 109, "frequentist": 109, "contrast": 109, "gap": 109, "approach": [109, 123, 125, 126, 131, 136], "below": [109, 120, 123, 126], "2000": 109, "n_bootstrap": 109, "n_element": 109, "len": [109, 110, 124], "scores_ncr": 109, "028": [], "029": [], "030": 101, "031": 101, "next": [109, 120, 122, 130, 132, 136], "again": [109, 124, 125, 126, 128, 131, 136], "tell": [109, 124, 135], "confound_remov": [109, 110, 115, 124], "scores_cr": 109, "32": [102, 104, 126], "__featur": [109, 124], "__confound": [109, 124], "179": 126, "180": 126, "181": [], "182": [], "easier": [109, 117, 136, 137], "df_ncr_metric": 109, "df_cr_metric": 109, "df_metric": 109, "933333": 109, "968889": 109, "948889": 109, "catplot": 109, "col": 109, "swarm": 109, "them": [109, 117, 119, 120, 121, 123, 125, 126, 134, 135, 136], "pair": 109, "systemat": 109, "df_diff_metr": 109, "whisker": 109, "box": [109, 121], "whi": 109, "axhlin": 109, "roc": 109, "auc": 109, "term": [109, 125, 132, 136], "mayb": [109, 134], "percentil": [109, 115], "amount": [109, 121, 128], "ncr_fi": 109, "cr_fi": 109, "feature_import": 109, "dodg": [109, 125], "diff_fi": 109, "axvlin": [109, 125], "996": 84, "plot_confound_removal_classif": [109, 111], "most": [110, 120, 123, 124, 125, 128, 131, 136], "remove_confound": 110, "sometim": [110, 124, 128, 129, 130], "discuss": 110, "df_featur": 110, "furthermor": [110, 126], "put": [110, 124], "0x7fe724acfa00": [], "feature_nam": [110, 134], "303": 106, "304": 106, "305": 106, "df_deconfound": 110, "029271": 110, "057228": 110, "009658": 110, "046011": 110, "042050": 110, "024189": 110, "019424": 110, "012310": 110, "028194": 110, "005874": 110, "047538": 110, "015568": 110, "006874": 110, "012796": 110, "057488": 110, "024667": 110, "061639": 110, "082913": 110, "076494": 110, "039983": 110, "017885": 110, "047387": 110, "041423": 110, "013144": 110, "004736": 110, "036479": 110, "081307": 110, "007659": 110, "025897": 110, "013765": 110, "031358": 110, "052961": 110, "049135": 110, "029380": 110, "000071": 110, "013139": 110, "032449": 110, "032631": 110, "005510": 110, "021964": 110, "008781": 110, "012234": 110, "025295": 110, "037349": 110, "assum": [110, 125], "closer": [110, 115, 135], "achiev": [110, 124, 130, 135, 136], "496": 124, "497": [88, 124], "0x7fe724aceef0": [], "498": [88, 92, 124], "df_transform": 110, "pca__pca2": 110, "pca__pca3": 110, "pca__pca4": 110, "pca__pca5": 110, "pca__pca6": 110, "pca__pca7": 110, "pca__pca8": 110, "014051": 110, "075715": 110, "017395": 110, "012591": 110, "046676": 110, "013408": 110, "034497": 110, "008604": 110, "002330": 110, "099883": 110, "062829": 110, "014516": 110, "013673": 110, "048058": 110, "010254": 110, "004124": 110, "024022": 110, "002075": 110, "029015": 110, "053253": 110, "032477": 110, "061933": 110, "049167": 110, "029565": 110, "042031": 110, "001197": 110, "002579": [110, 136], "035162": 110, "001324": 110, "106807": 110, "028981": 110, "020850": 110, "023413": 110, "008421": 110, "006566": 110, "003545": 110, "003951": 110, "025445": 110, "000421": 110, "018411": 110, "039692": 110, "025022": 110, "043086": 110, "002095": 110, "000517": 110, "lastli": [110, 124], "703": [], "704": [], "705": [], "706": [], "021827": [], "008035": [], "429556": 110, "353": [110, 113], "89": [110, 113, 126], "021629": [], "008180": [], "522599": 110, "021726": [], "008151": [], "482681": 110, "354": [110, 113], "88": [110, 113], "021698": [], "008026": [], "426498": 110, "021542": [], "008160": [], "550248": 110, "603": [], "run_return_confound": [110, 111], "06": [105, 111], "599": [], "auto_examples_04_confound": 111, "extend": [112, 135], "variou": 112, "aspect": [112, 125, 136], "make_scor": 113, "register_scor": 113, "36": 109, "201": [], "218": 105, "004503": [], "002230": [], "104359": 113, "004208": 101, "002166": [], "44": [113, 126], "861364": 113, "002147": [], "981407": 113, "004207": [], "002215": [], "956254": 113, "004205": [], "002177": [], "419886": 113, "264653948271885": 113, "thing": [113, 131, 136], "r2_corr": [113, 135], "260": [109, 137], "261": [], "262": 137, "test_neg_mean_absolute_error": 113, "test_r2_corr": 113, "264654": 113, "486498": 113, "take": [113, 125, 128, 136], "def": 113, "pearson_scor": 113, "squeez": 113, "306": 106, "307": 106, "157": [], "run_custom_scorers_regress": [113, 114], "auto_examples_05_custom": 114, "descript": [115, 116, 117, 136], "short": [115, 117, 124], "link": [115, 117, 133, 136, 137], "unit": [115, 121], "scaler_robust": 115, "median": 115, "iqr": 115, "robustscal": [115, 126], "scaler_minmax": 115, "minmaxscal": 115, "scaler_maxab": 115, "maxabsscal": 115, "scaler_norm": 115, "norm": 115, "scaler_quantil": 115, "uniform": [105, 115, 125, 126, 137], "robust": [115, 119], "quantiletransform": 115, "scaler_pow": 115, "gaussianis": 115, "powertransform": 115, "select_univari": 115, "genericunivariateselect": 115, "select_percentil": 115, "rank": 115, "selectpercentil": 115, "select_k": [115, 126], "selectkbest": [115, 126], "select_fdr": 115, "selectfdr": 115, "select_fpr": 115, "fpr": 115, "selectfpr": 115, "select_fw": 115, "fwe": 115, "selectfw": 115, "variancethreshold": 115, "drop_column": 115, "dropcolumn": 115, "change_column_typ": 115, "changecolumntyp": 115, "filtercolumn": 115, "princip": [115, 136], "svr": [115, 129, 130], "randomforestregressor": 115, "extratreesclassifi": 115, "extratreesregressor": 115, "adaboost": 115, "adaboostclassifi": 115, "adaboostregressor": 115, "bag": 115, "baggingclassifi": 115, "baggingregressor": 115, "gradientboost": 115, "gradient": 115, "boost": 115, "gradientboostingclassifi": 115, "gradientboostingregressor": 115, "stackingclassifi": [115, 129], "stackingregressor": [115, 129], "gauss": 115, "gaussianprocessclassifi": 115, "gaussianprocessregressor": 115, "logit": [115, 126, 134], "aka": 115, "maxent": 115, "logisticregress": [115, 126], "logitcv": 115, "logisticregressioncv": 115, "l2": [115, 126], "ridgeclassifi": 115, "ridgecv": 115, "built": [115, 121, 129, 134, 135, 136], "ridgeclassifiercv": 115, "sgd": 115, "minim": 115, "empir": [115, 125], "loss": [115, 124], "sgdclassifi": 115, "sgdregressor": 115, "nb_bernoulli": 115, "multivari": 115, "bernoulli": 115, "bernoullinb": 115, "nb_categor": 115, "categoricalnb": 115, "nb_complement": 115, "complementnb": 115, "nb_gaussian": 115, "gaussiannb": 115, "nb_multinomi": 115, "multinomi": 115, "multinomialnb": 115, "dynamicselect": [115, 137], "dummyclassifi": 115, "dummyregressor": 115, "meant": 116, "friendli": [116, 136], "come": [116, 117, 125, 128, 132, 136], "cost": 116, "potenti": [116, 124, 128], "These": [116, 119, 120, 123, 135], "therefor": [116, 120, 123, 124, 135, 136], "flag": [116, 117], "enabl": [116, 137], "disabl": 116, "config": 116, "disable_x_check": 116, "unmatch": 116, "think": [116, 124], "disable_xtypes_check": 116, "miss": [116, 137], "disable_x_verbos": 116, "disable_xtypes_verbos": 116, "fork": 117, "com": [117, 125, 131], "juaml": 117, "repositori": 117, "never": [117, 136], "offici": [117, 120], "clone": 117, "virtual": [117, 120], "pip": [117, 119, 120], "branch": [117, 122], "refactor": [117, 137], "feat": 117, "prefix": 117, "git": [117, 122, 137], "checkout": [117, 122], "pre": [117, 120, 122, 137], "commit": [117, 122, 137], "hook": [117, 137], "help": [117, 120, 121, 124, 128, 134, 136], "regularli": 117, "On": [117, 124, 135], "save": [117, 136], "smaller": 117, "semant": 117, "wip": 117, "verifi": [117, 135], "suit": [117, 128], "tox": 117, "push": [117, 122], "open": 117, "displai": [117, 128, 134], "submit": 117, "templat": 117, "web": 117, "interfac": [117, 126, 129], "meet": 117, "directori": 117, "rare": 117, "circumst": 117, "coverag": 117, "decreas": 117, "report": 117, "codecov": 117, "usag": [117, 120, 131, 136], "draft": [117, 122], "id": 117, "liner": [117, 134], "newsfrag": 117, "bug": [117, 137], "bugfix": 117, "enhanc": 117, "enh": 117, "improv": [117, 120], "miscellan": 117, "misc": 117, "record": 117, "content": 117, "typo": [117, 137], "intro": 117, "biggest": 117, "fan": 117, "yourself": 117, "contributor": 117, "inc": 117, "against": 117, "someon": [117, 125], "core": [117, 131, 134], "team": 117, "success": [117, 126, 131], "pytest": [117, 137], "intend": 117, "cd": 117, "_build": 117, "situat": 117, "clean": [117, 120], "rest": 117, "rst": [117, 122], "plot_": 117, "run_": 117, "block": 117, "comment": 117, "render": [117, 135], "emb": 117, "shall": [117, 125], "preced": 117, "bokeh": [119, 120, 137], "develop": [119, 120, 121, 122, 137], "usual": [119, 126, 136], "through": [119, 136], "manag": [119, 137], "conda": [119, 120], "forg": [119, 120], "standalon": 119, "applic": [119, 123, 124, 128], "browser": 119, "jupyter_bokeh": 119, "servabl": 119, "statsmodel": 120, "0b1": [], "nevertheless": [120, 136], "although": 120, "strongli": 120, "recommend": [120, 132], "environ": [120, 121, 135], "promin": 120, "venv": 120, "env": 120, "latest": [120, 122, 137], "often": [120, 124, 131, 136], "newest": 120, "sens": [120, 126], "aim": [120, 121, 136], "pypi": [120, 122], "relas": 120, "yet": [120, 132], "orient": 121, "aml": 121, "institut": 121, "neurosci": [121, 123], "medicin": 121, "behaviour": [121, 126, 135], "inm": 121, "thought": [121, 136], "research": [121, 123, 124, 125], "simpler": 121, "abstract": 121, "power": [121, 128, 129], "minor": [121, 122], "flexibl": [121, 129], "video": 121, "tutori": 121, "offer": [121, 132], "essenti": [121, 128], "benefit": 121, "therebi": 121, "avoid": [121, 124, 125, 126, 137], "nice": [121, 132, 135, 136], "system": [121, 122], "accord": [121, 123, 125, 129, 137], "setup": [121, 133], "suggest": [121, 125], "deeper": [121, 128, 133, 134], "topic": [121, 125, 133, 134], "overview": [121, 128, 134, 136], "contribut": 121, "local": 121, "github": [121, 135, 137], "pull": [121, 122], "guidelin": 121, "write": [121, 136], "maintain": 121, "faq": 121, "issu": [121, 122, 125, 128, 137], "2022": [121, 124], "07": [89, 121, 126], "scientif": 121, "public": 121, "vera": 121, "komey": 121, "free": 121, "arxiv": [121, 124], "octob": 121, "48550": 121, "2310": 121, "12568": 121, "heavili": 121, "reliant": 121, "cite": 121, "major": [122, 126], "micro": 122, "devn": 122, "distanc": 122, "setuptools_scm": 122, "plugin": 122, "tag": 122, "increment": [122, 136], "segment": 122, "publish": 122, "onc": [122, 128, 131, 133, 136], "mileston": 122, "reach": 122, "towncrier": 122, "proceed": [122, 136], "sync": 122, "rebas": 122, "changelog": 122, "properli": 122, "reflect": [122, 137], "whats_new": 122, "pr": 122, "merg": 122, "via": [120, 122, 133], "vx": 122, "setuptools_scm_debug": 122, "outdir": 122, "dist": 122, "bump": [122, 137], "vd": 122, "neuroimag": [123, 124], "typic": 123, "problemat": 123, "due": [123, 125, 126], "curs": 123, "especi": 123, "recent": 123, "propos": 123, "fluid": 123, "intellig": 123, "sustain": 123, "attent": 123, "nutshel": 123, "summar": 123, "subsequ": 123, "commonli": [123, 136], "principl": 123, "leverag": [123, 128], "workflow": [123, 128, 133, 136], "x_name": [123, 129], "feature_": [123, 124, 129], "cbpm_pipeline_cr": 123, "final_model": [123, 128], "836": 92, "837": [], "feature_1": [123, 124, 129], "feature_2": [123, 124, 129], "feature_3": [123, 124, 129], "feature_4": [123, 124, 129], "feature_5": [123, 124, 129], "feature_6": [123, 124, 129], "feature_7": [123, 124, 129], "feature_8": [123, 124, 129], "feature_9": [123, 124, 129], "feature_10": [123, 124, 129], "feature_11": [123, 124, 129], "feature_12": [123, 124, 129], "feature_13": [123, 124, 129], "feature_14": [123, 124, 129], "feature_15": [123, 124, 129], "feature_16": [123, 124, 129], "feature_17": [123, 124, 129], "feature_18": [123, 124, 129], "feature_19": [123, 124, 129], "feature_20": [123, 129], "838": [], "839": [], "840": [], "857": 85, "No": [123, 125], "rid": 123, "265": [], "878": [], "898": 85, "918": [], "937": [106, 107], "957": [], "customis": 123, "increas": 123, "960": [], "cbpm__significance_threshold": 123, "noteworthi": 123, "sign": 123, "spearmanr": 123, "0x7fe72c12c280": [], "0x7fe74d54a290": [], "0x7fe74d54e230": [], "guess": 123, "spearman": 123, "xilin": 123, "mar": [123, 124], "emili": 123, "fingerprint": 123, "2015": 123, "nov": 123, "1664": 123, "71": 123, "rosenberg": 123, "monica": 123, "neuromark": 123, "whole": [123, 126], "jan": [123, 124], "165": [123, 126], "129": 135, "ultim": 124, "real": [105, 124, 126, 128], "world": [124, 128], "scenario": [124, 135, 136], "relationship": 124, "un": 124, "observ": 124, "similarli": [124, 128], "rather": 124, "jointli": 124, "prevent": [124, 126], "laid": 124, "rel": [124, 129], "littl": 124, "involv": 124, "simul": 124, "artifici": [124, 129, 136], "normal_dist_conf_on": 124, "normal_dist_conf_two": 124, "noise_conf_on": 124, "rand": [124, 125], "noise_conf_two": 124, "multipli": 124, "factor": 124, "confound_on": 124, "confound_two": 124, "prefer": 124, "human": 124, "readabl": 124, "confound_1": 124, "confound_2": 124, "my_target": 124, "distinguish": [124, 129, 136], "predictor": 124, "accordingli": [124, 131], "crucial": 124, "parametr": [124, 126, 132, 136], "57": 134, "562": 136, "whose": 124, "feature_0": 124, "024047": [], "006615": [], "786706": 124, "022957": [], "006627": [], "592156": 124, "023007": [], "006605": [], "722494": 124, "022952": [], "006688": [], "674188": 124, "022834": [], "006726": [], "570243": 124, "slightli": 124, "target_confound_remov": 124, "0x7fe72498ef80": [], "insert": 124, "importantli": [124, 125, 128, 131, 132, 136], "0x7fe72498fe20": [], "738": [], "space": [22, 126], "748": 104, "758": [], "769": [], "778": [], "005694": [], "003726": [], "253033": 124, "005696": [], "003706": [], "059126": 124, "005645": [], "003686": [], "256962": 124, "005920": 136, "003683": [], "096475": 124, "005604": [], "534386": 124, "reason": [124, 125], "further": [124, 126, 131], "consider": 124, "why": [124, 125, 126, 133], "mitig": 124, "bia": [124, 125], "accur": 124, "argu": 124, "appropri": 124, "valuabl": [124, 128, 131], "difficult": [124, 126], "challeng": 124, "ineffect": 124, "particular": [124, 128, 136], "fact": [124, 128], "collid": 124, "spuriou": 124, "evid": [124, 125], "leak": [124, 131], "bias": [124, 125], "care": [124, 136], "question": [124, 125], "thorough": 124, "strength": 124, "limit": 124, "techniqu": [124, 125, 126, 128], "rao": 124, "anil": 124, "presenc": 124, "volum": [124, 125], "april": 124, "49": 124, "snoek": 124, "luka": 124, "184": [124, 134], "januari": 124, "2019": 124, "741": 124, "760": 124, "he": 124, "tong": 124, "neural": [124, 136], "network": [124, 136], "206": 124, "februari": 124, "2020": 124, "116276": 124, "practic": [124, 125], "knowledg": [124, 128], "discoveri": 124, "databas": 124, "scienc": [124, 131], "demo": 124, "track": 124, "2021": 124, "12461": 124, "chyzhyk": 124, "darya": 124, "biomark": 124, "gigasci": 124, "holmberg": 124, "mathia": 124, "jama": 124, "327": 124, "1282": 124, "1283": 124, "1001": [124, 134], "1820": 124, "2210": 124, "09232": 124, "revis": 124, "oct": 124, "222": 105, "mention": 125, "don": [125, 126], "almost": 125, "infinit": 125, "unbias": 125, "overestim": 125, "rememb": [125, 128, 135], "surpris": 125, "would": [125, 126, 132, 134, 136], "answer": 125, "imposs": 125, "bengio": 125, "grandvalet": 125, "colleagu": 125, "few": [125, 128, 131, 137], "word": [125, 126], "thumb": [125, 136], "compromis": 125, "loocv": 125, "holdout": 125, "taken": 125, "intens": 125, "unconclus": 125, "intuit": [125, 128, 134], "direct": [125, 126], "thread": 125, "extrem": 125, "choic": 125, "fun": 125, "begin": 125, "variant": 125, "solv": [125, 131], "shed": 125, "light": 125, "poorli": 125, "stratifiedkfold": [125, 135], "rescu": 125, "matter": [125, 131, 134], "quantiz": 125, "divid": 125, "histplot": 125, "train_set": 125, "test_set": 125, "shrink": [125, 128], "suptitl": 125, "gaussian": 125, "discrete_i": 125, "digit": 125, "kdeplot": 125, "layer": 125, "dash": 125, "repeatedcontinuousstratifiedkfold": [125, 137], "repeatedcontinuousstratifiedgroupkfold": 125, "jmlr": 125, "decemb": 125, "2004": 125, "1089": 125, "1105": 125, "stackexchang": 125, "61783": 125, "kohavi": 125, "ijcai": 125, "1137": 125, "1145": 125, "473": [], "flower": 126, "pprint": [126, 128, 135], "pretti": 126, "tolist": [126, 134], "who": 126, "common": [126, 131], "creator2": [105, 126, 134], "591": 126, "592": 126, "593": 126, "594": [], "8099999999999999": 126, "632": [], "633": 126, "634": 126, "635": 126, "etc": 126, "optimist": 126, "loop": 126, "672": [], "673": [], "scores_tun": 126, "model_tun": 126, "674": 126, "675": 126, "676": 126, "677": 126, "9100000000000001": 126, "tri": 126, "conclud": 126, "585": 126, "586": 126, "587": 126, "588": 126, "589": 126, "0001": 126, "066": 126, "067": 126, "068": 126, "069": 126, "39": [], "268": [], "269": 128, "select_k__k": 126, "270": 128, "271": 128, "272": 128, "concept": [126, 131], "receiv": 126, "gridsearchcv": [33, 126], "veri": [126, 128, 129, 131, 132], "construct": 126, "diment": 126, "randomizedsearchcv": [33, 126], "lot": [126, 128], "consum": 126, "55": [], "775": [], "776": [], "those": [126, 131], "unnecessari": 126, "model1": 126, "777": [], "779": [], "780": [], "781": [], "782": 130, "783": 130, "784": 130, "93": 126, "forc": 126, "repat": 126, "creator1": [105, 126, 134], "model2": 126, "257": 109, "258": 109, "259": 109, "inde": [126, 135], "equival": 126, "param_grid": [126, 128], "stop": 126, "creator3": [126, 134], "max_depth": [126, 129], "creator4": 126, "penalti": 126, "l1": 126, "dual": 126, "solver": 126, "liblinear": 126, "model3": 126, "754": 104, "756": [], "757": 126, "model__c": 126, "model__gamma": 126, "759": [], "model__max_depth": 126, "model__penalti": 126, "9200000000000002": 126, "beat": 126, "976": [], "gain": 128, "insight": 128, "impact": 128, "abil": 128, "critic": 128, "influenc": 128, "deploy": 128, "focu": [128, 132], "anomali": 128, "logger": [105, 128, 129], "toi": [128, 129], "plai": 128, "penguin": 128, "penguins_df": 128, "island": 128, "queri": 128, "chinstrap": 128, "dropna": 128, "adeli": 128, "gentoo": 128, "105": [123, 137], "fairli": 128, "geomspac": [128, 129], "1e2": [128, 129], "946": 95, "notic": [128, 136], "bill_length_mm": 128, "bill_depth_mm": 128, "flipper_length_mm": 128, "body_mass_g": 128, "952": [], "151": [88, 128, 137], "123": 128, "953": [], "quick": 128, "error_scor": 128, "jucolumntransform": 128, "with_mean": [126, 128, 136], "with_std": 128, "wrapmodel": 128, "break_ti": 128, "cache_s": 128, "class_weight": [126, 128], "coef0": 128, "decision_function_shap": 128, "ovr": 128, "max_it": 128, "tol": 128, "estimator__memori": 128, "estimator__set_column_typ": 128, "estimator__set_column_types__x_typ": 128, "estimator__set_column_types__row_select_col_typ": 128, "estimator__set_column_types__row_select_v": 128, "estimator__step": 128, "estimator__svm": 128, "estimator__svm__c": 128, "estimator__svm__apply_to": 128, "estimator__svm__break_ti": 128, "estimator__svm__cache_s": 128, "estimator__svm__class_weight": 128, "estimator__svm__coef0": 128, "estimator__svm__decision_function_shap": 128, "estimator__svm__degre": 128, "estimator__svm__gamma": 128, "estimator__svm__kernel": 128, "estimator__svm__max_it": 128, "estimator__svm__model": 128, "estimator__svm__needed_typ": 128, "estimator__svm__prob": 128, "estimator__svm__random_st": 128, "estimator__svm__shrink": 128, "estimator__svm__tol": 128, "estimator__svm__verbos": 128, "estimator__verbos": 128, "estimator__zscor": 128, "estimator__zscore__apply_to": 128, "estimator__zscore__copi": 128, "estimator__zscore__nam": 128, "estimator__zscore__needed_typ": 128, "estimator__zscore__row_select_col_typ": 128, "estimator__zscore__row_select_v": 128, "estimator__zscore__transform": 128, "estimator__zscore__with_mean": 128, "estimator__zscore__with_std": 128, "pre_dispatch": 128, "refit": 128, "get_fitted_param": 128, "set_column_types__column_mapper_": 128, "bill_depth_mm__": 128, "bill_length_mm__": 128, "body_mass_g__": 128, "flipper_length_mm__": 128, "set_column_types__feature_names_in_": 128, "svm__model_": 128, "zscore__column_transformer_": 128, "remaind": 128, "passthrough": 128, "make_type_selector": 128, "0x7fe7271821d0": [], "verbose_feature_names_out": 128, "zscore__feature_names_in_": 128, "zscore__mean_": 128, "70291971": 128, "83613139": 128, "202": 128, "17883212": 128, "4318": 128, "06569343": 128, "zscore__n_features_in_": 128, "zscore__n_samples_seen_": 128, "zscore__scale_": 128, "18607683": 128, "00973207": 128, "02045287": 128, "834": [92, 128, 129], "40628575": 128, "zscore__var_": 128, "68953929e": 128, "03902299e": 128, "25614004e": 128, "96233850e": 128, "somewhat": [128, 129], "structur": [128, 132], "made": [128, 133, 134], "handi": [128, 132, 136], "fold_predict": 128, "repeat8_p0": 128, "repeat9_p0": 128, "c_valu": 128, "fold_inspector": 128, "fold_model": 128, "realiz": 128, "ever": 128, "address": 128, "aris": 128, "serv": 128, "asset": 128, "transpar": [128, 131], "reliabl": 128, "capabl": [128, 129, 137], "navig": 128, "har": 128, "872": 126, "customiz": 129, "cours": 129, "914": [], "mind": 129, "arbitrari": [129, 135], "model_1": [129, 134], "916": [109, 111], "00000000e": 129, "78255940e": 129, "74263683e": 129, "15443469e": 129, "99484250e": 129, "66810054e": 129, "64158883e": 129, "29154967e": 129, "59381366e": 129, "917": [], "0x7fe7247d57b0": [], "min_samples_leaf": 129, "min_samples_split": 129, "0x7fe7247d60e0": [], "0x7fe7247d59c0": [], "919": [], "920": [], "921": [], "922": 103, "923": 103, "rf__max_depth": 129, "rf__min_samples_leaf": 129, "rf__min_samples_split": 129, "924": 103, "58": [128, 134, 135], "061": [95, 123, 135], "062": 135, "desir": [129, 136], "type1": 129, "type2": 129, "type1_": 129, "type2_": 129, "465": [], "__type1": 129, "466": [], "0x7fe7246f8430": [], "__type2": 129, "467": [], "0x7fe7247d4e50": [], "468": [], "type1_1": 129, "type1_2": 129, "type1_3": 129, "type1_4": 129, "type1_5": 129, "type1_6": 129, "type1_7": 129, "type1_8": 129, "type1_9": 129, "type1_10": 129, "type2_1": 129, "type2_2": 129, "type2_3": 129, "type2_4": 129, "type2_5": 129, "type2_6": 129, "type2_7": 129, "type2_8": 129, "type2_9": 129, "type2_10": 129, "469": [], "470": [], "471": [], "472": [], "652": [], "653": [], "flexibli": 129, "Of": 129, "911": [], "cover": [130, 132, 136], "far": [130, 132, 135, 136], "conist": 130, "manner": [130, 131, 132, 134, 136], "clear": 130, "628": [], "target_jutargetpipelin": 130, "0x7fe7249787f0": [], "629": 129, "630": 129, "631": [], "009775": [], "003319": [], "008625": [], "003251": [], "009010": [], "003214": [], "008810": [], "003242": [], "008754": [], "003206": [], "overal": 130, "091": [], "goal": 131, "beyond": 131, "exact": 131, "domingo": 131, "2012": 131, "resourc": 131, "efficeint": [], "disadvantag": 131, "small": 131, "unstabl": 131, "overcom": 131, "accident": 131, "quickli": 131, "obviou": 131, "straightforward": [131, 136], "mistak": 131, "www": 131, "sciencedirect": 131, "articl": 131, "pii": 131, "s105381191630595x": 131, "natur": 131, "s41746": 131, "022": [126, 131], "00592": 131, "s1053811917305311": 131, "cross_valid": 131, "commun": 132, "known": [132, 136], "capac": 132, "colum": 132, "manipul": 132, "anyth": [132, 135], "meaning": 132, "hundr": 132, "thousand": 132, "saw": [132, 134, 135, 136], "advanc": 132, "004": 132, "backbon": 133, "magic": 133, "goe": 133, "utmost": 133, "glanc": [133, 135], "chapter": 133, "familiar": 133, "along": 133, "fundament": 133, "essenc": 133, "click": 133, "fanci": 133, "stuff": 133, "decent": 134, "benchmark": 134, "enough": 134, "tediou": 134, "sound": 134, "switch": 134, "breast": 134, "cancer": 134, "malign": 134, "benign": 134, "load_breast_canc": 134, "radiu": 134, "textur": 134, "perimet": 134, "area": 134, "worst": 134, "concav": 134, "symmetri": 134, "fractal": 134, "dimens": 134, "38": [129, 134], "122": [134, 137], "2654": 134, "4601": 134, "11890": 134, "132": 134, "1326": 134, "1860": 134, "2750": 134, "08902": 134, "69": 134, "130": [134, 135], "1203": 134, "2430": 134, "3613": 134, "08758": 134, "386": 134, "2575": 134, "6638": 134, "17300": 134, "135": [134, 137], "1297": 134, "1625": 134, "2364": 134, "07678": 134, "cv_splitter": [134, 135], "139": 126, "smooth": 134, "compact": 134, "141": [], "142": [], "143": [], "144": 136, "357": [102, 107, 134], "088": [], "089": [], "090": [], "092": 130, "169": [126, 134], "pairwis": 134, "neither": 134, "nor": 134, "946304": 134, "083461": 134, "250382": 134, "140882": 134, "891066": 134, "285373": 134, "048138": 134, "144413": 134, "361847": 134, "206356": 134, "619069": 134, "014156": [], "989015": [], "093249": [], "302681": [], "908044": [], "dive": 134, "curiou": 134, "296": [], "54": [], "110": 126, "111": 126, "112": 126, "113": [126, 135], "004829": [], "002383": [], "004336": [], "002324": [], "004236": [], "004270": [], "004303": [], "002331": [], "933": [110, 135], "overfit": 135, "158": [], "159": [], "160": [], "004474": [], "004308": [], "002382": [], "004384": [85, 98], "002352": [], "004287": [], "002356": [], "004291": [], "002316": [], "train_scor": 135, "cryptic": 135, "worri": 135, "doesn": 135, "219": 105, "004396": [], "002346": [], "004398": [], "002376": [], "004302": [], "002328": [], "004329": [], "x27": 135, "rerun": 135, "cell": 135, "represent": 135, "trust": 135, "unabl": 135, "nbviewer": 135, "pipelinepipelin": [], "setcolumntypessetcolumntyp": 135, "standardscalerstandardscal": 135, "svcsvc": 135, "didn": 135, "got": 135, "five": 135, "back": 135, "ourselv": 135, "fourth": 135, "283": 89, "284": 89, "285": [], "286": [], "004549": [], "002460": 135, "7449876d309382acfef94df9d102aa76": 135, "004315": [], "002289": 85, "004343": [], "002323": [], "004316": [], "002317": [], "004354": [], "004300": [], "004393": 98, "002341": [], "004328": [], "002334": [], "assumpt": 135, "list_scor": 135, "adjusted_mutual_info_scor": 135, "adjusted_rand_scor": 135, "average_precis": 135, "completeness_scor": 135, "explained_vari": 135, "f1": 135, "f1_macro": 135, "f1_micro": 135, "f1_sampl": 135, "f1_weight": 135, "fowlkes_mallows_scor": 135, "homogeneity_scor": 135, "jaccard": 135, "jaccard_macro": 135, "jaccard_micro": 135, "jaccard_sampl": 135, "jaccard_weight": 135, "matthews_corrcoef": 135, "max_error": 135, "mutual_info_scor": 135, "neg_brier_scor": 135, "neg_log_loss": 135, "neg_mean_absolute_percentage_error": 135, "neg_mean_gamma_devi": 135, "neg_mean_poisson_devi": 135, "neg_mean_squared_error": 135, "neg_mean_squared_log_error": 135, "neg_median_absolute_error": 135, "neg_negative_likelihood_ratio": 135, "neg_root_mean_squared_error": 135, "normalized_mutual_info_scor": 135, "positive_likelihood_ratio": 135, "precision_macro": 135, "precision_micro": 135, "precision_sampl": 135, "precision_weight": 135, "rand_scor": 135, "recal": 135, "recall_macro": 135, "recall_micro": 135, "recall_sampl": 135, "recall_weight": 135, "roc_auc_ovo": 135, "roc_auc_ovo_weight": 135, "roc_auc_ovr": 135, "roc_auc_ovr_weight": 135, "top_k_accuraci": 135, "v_measure_scor": 135, "r_corr": 135, "394": [], "395": [], "396": [], "005110": [], "003991": 135, "004383": 98, "003855": [], "004703": [], "004382": [], "003874": [], "004333": [], "003808": [], "003833": [], "004355": [], "003815": [], "004449": [], "003821": [], "004362": [], "003844": [], "003806": [], "430": [], "autom": 136, "pipe": 136, "fed": 136, "modifi": [126, 136], "safe": 136, "664": [85, 90], "665": [], "666": 136, "667": 136, "668": 136, "003031": [], "001701": [], "002752": [], "001656": [], "002821": [], "001617": [], "002672": [], "001606": [], "002671": [], "001612": [], "voil\u00e0": 136, "resembl": 136, "scaler": 136, "700": [], "701": [], "702": [], "004473": [], "002371": [], "002339": [], "004313": [], "002338": [], "004395": 98, "002336": [], "decomposit": 136, "previous": 136, "746": 126, "747": [], "749": 104, "005647": [], "003119": [], "005471": [], "003121": [], "005386": [], "003105": [], "005390": [], "003154": [], "005360": [], "003070": [], "opaqu": 136, "simplifi": 136, "neat": 136, "806": [], "807": [], "005523": [], "003087": [], "005363": [], "003052": [], "005296": [], "003073": [], "003067": [], "005323": [], "003042": [], "awesom": 136, "prepreprocess": 136, "jump": 136, "aren": 136, "shouldn": 136, "ye": 136, "turn": 136, "learnt": 136, "experi": 136, "heurist": 136, "rate": 136, "sigma": 136, "sai": 136, "860": 85, "basi": 136, "comma": 136, "wonder": 136, "besid": 136, "definit": 136, "pca_1": 136, "869": 126, "016169": [], "006721": [], "015728": [], "006825": [], "015750": [], "006704": [], "015719": [], "006840": [], "015959": [], "006748": [], "boser": 136, "guyon": 136, "vapnik": 136, "margin": 136, "colt": 136, "92": 136, "fifth": 136, "annual": 136, "workshop": 136, "theori": 136, "1992": 136, "jul": 136, "338": [], "surround": 137, "146": 137, "instruct": 137, "fede": 137, "94": 137, "108": [126, 137], "multiprocess": 137, "nos": 137, "extendeddataframepipelin": 137, "tranform_until": 137, "63": 137, "minimum": 137, "face": 137, "create_pipelin": 137, "register_model": 137, "dev111": [], "133": [], "134": [], "136": [], "137": [], "004774": [], "002519": 98, "004399": [], "002484": [], "004342": 98, "002470": [], "004352": [], "002487": [], "004312": [], "tmp4efeun6v": [], "eb6ea4db6c3c19d60a4593e8907522ae5f153cf0": [], "517": [88, 110], "980": [104, 123], "981": 123, "982": 123, "983": 123, "004750": [], "002277": [], "004232": [], "002136": [], "002157": [], "004153": [], "002168": [], "004163": [], "002131": [], "817": [], "0x7f1605de0ca0": [], "400": 113, "401": [], "402": [], "403": [], "446": 129, "447": 135, "448": [99, 113], "835": [92, 129], "620": 126, "638": 126, "639": 126, "640": [], "641": [], "642": [], "280": [], "281": 89, "282": 89, "644": [], "645": [], "646": [], "647": [], "648": [], "388": 109, "818": [], "371": [96, 104], "372": [88, 90, 96, 104], "373": [96, 104], "374": [96, 104], "375": [96, 104], "415": [], "417": 106, "418": [], "461": [], "462": [], "463": [], "694": 104, "731": [107, 136], "596": [], "636": 126, "637": 126, "912": [], "913": [], "925": 103, "943": [], "003": [], "005": 95, "006": [95, 102], "464": [], "332": [89, 124], "521": [104, 136], "535": 125, "536": [], "537": [], "538": [], "539": 111, "540": [], "119": 126, "124": [], "125": 126, "004663": [], "004239": [], "002414": 98, "004185": [], "002301": [], "004344": [], "004215": [], "002268": [], "004150": [], "004188": [], "004262": [], "002349": [], "004194": [], "004162": [], "004210": [], "002325": 113, "004218": [], "004246": [], "002372": [], "004214": [], "002303": [], "004235": [], "0x7f1605e02bc0": [], "330": [89, 124], "33": [102, 110, 126], "995": 84, "0x7f160585fca0": [], "011": [102, 134], "012": 134, "013": 134, "014": [98, 101], "004371": [], "002176": [], "003941": [], "002218": [], "003949": [], "002130": [], "003996": [], "002120": [], "003880": [], "002065": [], "51357151914367": 101, "070": [101, 126], "41": [123, 128], "0x7f1605ac25f0": [], "997": 135, "998": 135, "999": 135, "000": [123, 135], "012722": [], "005367": [], "011701": [], "005322": [], "011638": [], "005394": [], "011692": [], "005252": [], "011647": [], "005430": [], "341": [], "196": 134, "197": [], "198": [], "199": [], "298": [], "480": [], "489": [], "490": [], "491": [], "549": [], "550": [], "551": [], "542": [], "543": 97, "544": [92, 97], "545": [92, 97], "546": [92, 97], "378": [], "609": 136, "610": 136, "0x7f16061f13f0": [], "0x7f16061f2890": [], "611": 136, "612": [], "613": [], "614": 126, "841": [], "194": [], "352": [], "355": 136, "356": [], "785": 130, "0x7f1605de2620": [], "493": [], "495": [], "0x7f1605de1ae0": [], "684": 129, "686": [86, 129], "885": [], "886": [], "887": [], "888": [], "021313": [], "007902": [], "021067": [], "007909": [], "020898": [], "007873": [], "021204": [], "007906": [], "021056": [], "007852": [], "147": [], "148": [], "162": [], "163": [113, 114], "164": [], "004529": 135, "002174": [], "002255": [], "004221": [], "002198": [], "004199": [], "002179": [], "207": 105, "209": [], "155": [], "820": [], "881": 134, "884": 134, "0x7f160c0b8280": [], "0x7f162d432290": [], "0x7f162d435a30": [], "131": 123, "397": [], "398": [], "399": [], "023874": [], "006735": [], "022810": [], "006667": [], "022894": [], "006629": [], "006662": [], "022813": [], "0x7f16057b5660": [], "556": [], "0x7f16057b6e60": [], "557": [], "558": [], "559": 136, "560": 136, "005703": [], "003682": [], "005627": [], "003597": [], "005663": [], "003630": [], "005707": [], "003674": [], "005672": [], "003560": [], "221": 105, "277": 86, "278": 86, "316": [], "317": [], "318": [], "358": [], "359": [], "360": 113, "310": [], "311": [], "312": 126, "46": [], "753": 104, "230": 126, "231": [126, 137], "232": [126, 137], "233": [126, 137], "234": [105, 126, 137], "235": [89, 105, 128, 137], "236": [89, 105, 128, 137], "237": [89, 98, 99, 126], "238": [89, 126], "239": [89, 126], "643": [], "649": [], "106": 123, "107": 123, "109": 126, "114": [], "115": [], "116": 102, "008": [95, 102, 134], "843": 126, "844": [], "845": [86, 90], "846": [], "0x7f1605e03d60": [], "742": 126, "744": 126, "0x7f1605f3fb20": [], "745": 126, "0x7f16060fca30": [], "0x7f16060ff730": [], "750": 104, "751": 104, "0x7f1605b660b0": [], "0x7f16060fe1a0": [], "279": 86, "455": 113, "0x7f1605b3beb0": [], "009635": [], "003238": [], "008474": [], "003198": [], "008955": [], "003142": [], "008747": [], "003164": [], "008746": [], "003134": [], "972": [], "973": [], "974": [], "975": [], "928": [95, 103], "929": 103, "930": [], "931": [], "932": 110, "004994": [], "002482": 98, "004544": [], "004400": [], "002373": 85, "004407": [], "002357": [], "004409": [], "002396": [], "004505": [], "002404": [], "004373": [], "002384": [], "004375": [], "002337": [], "004357": [], "002409": 135, "004348": [], "002397": [], "056": [], "057": [], "058": [], "004412": [], "004284": [], "002283": [], "004281": [], "002306": [], "121": [], "004477": [], "004220": [], "002273": [], "004251": [], "002253": [], "002265": [], "004332": [], "002309": [], "002426": 98, "002387": [], "004353": [], "003954": [], "003798": [], "003779": [], "004323": [], "003774": [], "004268": [], "003767": 124, "004296": [], "003824": [], "004299": [], "003776": [], "003783": [], "004306": [], "003750": [], "426": [], "003093": [], "001751": [], "002808": [], "001657": [], "002763": [], "001620": [], "002725": [], "001616": [], "002722": [], "001631": [], "004560": [], "002369": [], "004403": [], "002405": [], "004346": [], "002366": [], "581": [], "582": 126, "583": [126, 128], "584": 126, "005722": [], "003159": [], "005462": [], "003138": [], "005371": [], "003109": [], "005410": [], "003101": [], "006259": [], "003074": [], "005451": [], "003139": [], "005391": [], "003158": [], "005382": [], "005380": [], "003026": [], "697": [], "698": [], "699": [], "016282": [], "015637": [], "006749": [], "015843": [], "006714": [], "015613": [], "006821": [], "2024": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 113, 121, 123, 124, 126, 128, 129, 130, 134, 135, 136], "59": [135, 136], "dev112": [], "004766": [], "002513": [], "004318": [], "002461": 135, "002452": [], "004381": 98, "002443": [], "tmpbti83iq_": [], "ffc61acfa75ef10b46f5b265f4f257b1789532fa": [], "342": [], "004727": [], "004301": [], "002234": [], "004324": [], "004277": [], "002251": [], "002241": [], "656": [], "0x7f016dd825c0": [], "984": [], "985": [], "027": 126, "366": [], "367": [], "368": 96, "369": 96, "370": [], "019": 98, "020": 98, "021": [98, 123], "387": 109, "407": 113, "096": [], "097": [], "098": 110, "099": [], "191": [], "192": [], "541": [], "166": 126, "167": 126, "486": [], "487": [], "488": [], "451": [], "657": [], "678": [], "735": [], "736": [], "739": 88, "086": 134, "087": [123, 134], "793": [], "794": [], "795": [], "796": [], "797": [], "798": [], "434": 104, "287": [], "288": [], "351": [], "734": 136, "740": [], "004742": [], "002417": [], "002354": [], "004261": [], "002370": [], "002368": [], "004272": [], "004286": [], "002413": [], "004252": [], "004271": [], "004295": [], "002342": [], "004297": [], "004209": [], "002359": [], "004278": [], "002353": [], "004240": [], "004242": [], "004276": [], "004289": [], "002351": [], "0x7f01747ecbe0": [], "0x7f01707f3550": [], "004350": [], "002181": [], "004019": [], "003937": [], "004080": [], "003917": [], "002167": [], "0x7f016d9d9d20": [], "012650": [], "005520": [], "011843": [], "005446": [], "012108": [], "005570": [], "011927": [], "005421": [], "011857": [], "005587": [], "343": [], "977": [], "978": [], "979": 123, "035": [], "036": 128, "037": 128, "038": 128, "039": 128, "040": 128, "041": [123, 128], "319": 86, "320": [], "376": [], "377": [], "379": [], "654": [], "655": [], "658": [], "380": [], "381": [], "382": 88, "935": 110, "936": [], "938": [], "939": [], "408": 113, "393": [], "0x7f0170209ff0": [], "0x7f017020b220": [], "507": 88, "808": 105, "033": 101, "034": [], "321": [], "322": [], "0x7f0170176ad0": [], "325": 86, "0x7f0170176ec0": [], "519": [88, 110], "520": [88, 104], "021865": [], "008237": [], "021556": [], "008142": [], "021440": [], "008092": [], "021584": [], "008106": [], "008099": [], "604": [], "445": 129, "004489": [], "002225": [], "002173": [], "004241": [], "002186": [], "002199": [], "079": [104, 134], "126": [], "156": [], "598": [], "617": 126, "721": 110, "722": [], "0x7f01750717e0": [], "0x7f01965225f0": [], "0x7f019652a2b0": [], "889": [], "890": [], "891": [], "892": [], "023952": [], "006817": [], "022981": [], "006685": [], "023014": [], "006705": [], "022914": [], "022857": [], "006808": [], "0x7f01700b5ba0": [], "049": [], "0x7f016d494250": [], "050": [], "051": [], "052": [], "053": [], "005770": [], "006350": [], "004781": [], "005739": [], "003699": [], "005869": [], "003708": [], "005691": [], "003650": [], "225": 105, "577": [], "926": 103, "927": [95, 103], "007": [95, 102], "009": [95, 102, 134], "010": 102, "474": [], "475": [], "476": [], "477": [], "478": [], "732": 136, "405": [], "907": [], "908": [], "909": [], "910": 126, "444": 129, "450": [], "553": [], "226": [105, 126], "228": 124, "229": 126, "0x7f016dc28b20": [], "526": [], "0x7f016d6d2680": [], "0x7f016d6d3190": [], "0x7f016d6d1c00": [], "752": 104, "0x7f016daa3f70": [], "0x7f016d4c1e10": [], "940": [], "855": [], "412": [], "0x7f016de0d210": [], "413": [], "414": [], "009619": [], "003284": [], "008549": [], "003224": [], "009034": [], "003204": [], "008809": [], "008751": [], "003205": [], "485": 92, "438": [104, 129], "483": 92, "484": 92, "004869": [], "002365": [], "004439": [], "004322": [], "004330": [], "004455": [], "002401": 98, "004368": [], "004351": [], "002347": [], "004334": [], "004326": [], "004472": 135, "002360": [], "004337": [], "004621": [], "004349": [], "004428": [], "004445": [], "004376": [], "002361": [], "004369": [], "004460": [], "004419": [], "002362": [], "770": [], "004426": [], "004004": [], "004356": [], "003843": [], "004411": [], "003893": [], "004436": 113, "003852": [], "003857": [], "003870": [], "004414": 85, "003865": [], "004366": [], "032": 101, "003096": [], "001655": [], "002753": [], "001594": [], "002683": [], "001580": [], "002802": [], "001663": [], "002811": [], "001660": [], "064": [], "004519": [], "004339": [], "002344": [], "002379": [], "005665": [], "003127": [], "005331": [], "005424": [], "003079": [], "005379": [], "003092": [], "168": [126, 137], "170": [126, 134, 137], "171": [126, 134], "005467": [], "003137": [], "005362": [], "003077": [], "005312": [], "003041": [], "005341": [], "003057": [], "005318": [], "223": 105, "224": [105, 126, 137], "016257": [], "007108": [], "015859": [], "006730": [], "015880": [], "006824": [], "015691": [], "006778": [], "015935": [], "006796": [], "337": [], "dev113": [], "954": 103, "955": [], "956": [], "958": [], "004788": [], "002506": [], "002400": [], "004304": [], "002422": [], "004317": [], "002439": 98, "tmp8qc31nnz": [], "4a1172d2cfb09b6dfae4e8c22cf3c06c515de63c": [], "004666": [], "002259": [], "002231": [], "004142": [], "002188": [], "575": [], "576": [], "0x7f7066eb42e0": [], "054": [], "055": [], "601": [], "117": [], "118": [], "482": 92, "071": [101, 107, 126], "072": [96, 126], "073": [96, 126], "383": [], "384": [], "411": [], "425": [], "427": [], "428": [], "423": [], "627": [], "344": [], "986": [], "987": [], "988": [], "989": 84, "615": 126, "616": 126, "618": [], "619": [], "004640": [], "002378": [], "002288": 113, "004152": [], "004193": [], "004187": [], "002300": [], "004164": [], "002261": 113, "004147": [], "004175": [], "004174": [], "002275": [], "004172": [], "004173": [], "002319": [], "004166": [], "002280": [], "002305": [], "002310": 85, "004148": [], "002297": [], "004267": [], "004160": [], "0x7f7066e9b070": [], "0x7f7066c419f0": [], "004310": [], "002104": [], "003891": [], "002115": [], "002072": [], "003922": [], "002114": [], "003882": [], "0x7f7066bc1c00": [], "012735": [], "005387": [], "011879": [], "005435": [], "011796": [], "005484": [], "011734": [], "005356": [], "011713": [], "005500": [], "625": [], "626": [], "685": 86, "687": 129, "688": 129, "689": 129, "690": 129, "691": 129, "294": [], "994": 84, "002": [], "552": [], "554": [], "018": 98, "0x7f7066c42bf0": [], "0x7f7066c43790": [], "023": 126, "026": 126, "788": [], "897": [], "659": [], "661": [], "0x7f70674084f0": [], "0x7f706740b3d0": [], "349": [], "350": [], "021916": [], "008052": [], "021770": [], "008082": [], "021483": [], "008040": [], "021679": [], "008064": [], "021400": [], "008032": [], "004485": [], "002187": [], "004149": [], "002139": [], "004134": [], "002148": [], "004123": [], "002160": [], "809": [], "851": [], "852": [], "853": [], "854": 103, "340": [], "361": 113, "422": [], "0x7f706c271c60": [], "0x7f708dcc65f0": [], "0x7f708dccdd30": [], "024103": [], "006737": [], "022960": [], "006699": [], "023182": [], "022971": [], "006775": [], "023304": [], "006834": [], "0x7f7066eb6e60": [], "0x7f7066eb5150": [], "707": [], "708": [], "005803": [], "005683": [], "003680": [], "005679": [], "003654": [], "005767": [], "003653": [], "005646": [], "003664": [], "365": [], "602": [], "578": [], "579": [], "015": 98, "016": [], "017": 98, "138": [], "819": [], "821": [], "822": [], "56": [], "313": [], "314": [], "153": [], "0x7f7066bc3be0": [], "436": 104, "880": 134, "882": 134, "0x7f706754aad0": [], "883": [110, 134], "0x7f7066985120": [], "0x7f7066c5dab0": [], "295": [], "0x7f7066c5d540": [], "297": [], "0x7f7066dca350": [], "149": 88, "0x7f7066cadcc0": [], "009641": [], "003247": [], "008512": [], "003185": [], "008942": [], "003178": [], "008721": [], "003171": 130, "008777": [], "003146": [], "289": [], "290": [], "291": [], "292": [], "293": [], "093": [], "004909": [], "002399": [], "004413": 85, "004347": [], "004341": [], "002340": [], "185": [], "002333": [], "002281": [], "243": 135, "244": [135, 137], "245": [135, 137], "246": 135, "004360": [], "002291": [], "002287": [], "002272": [], "002463": 136, "004515": [], "002329": [], "004279": [], "004292": [], "002299": [], "004325": [], "002279": [], "004335": [], "002276": [], "420": [], "004386": 98, "003939": [], "004269": [], "003758": [], "004309": [], "003752": [], "003751": [], "003823": [], "003789": [], "004363": [], "003781": [], "003757": [], "001661": [], "002773": [], "001596": [], "002696": [], "001687": [], "002609": 84, "001581": [], "002627": [], "001599": [], "715": [89, 90], "002284": [], "005579": [], "005333": [], "003036": [], "005244": [], "003043": [], "005289": [], "003045": [], "003063": [], "816": [], "005378": [], "003076": [], "005294": [], "003028": [], "005231": [], "005199": [], "003050": [], "005240": [], "873": 126, "874": 96, "875": [], "876": [], "877": [], "879": [], "015980": [], "006822": [], "015488": [], "006616": [], "015593": [], "006713": [], "015495": [], "006651": [], "015677": [], "006716": [], "dev1": [], "572": [], "004903": [], "002554": 135, "004478": 136, "002493": [], "004484": [], "002507": 135, "004486": [], "002784": [], "004496": [], "002502": [], "tmp0ppxbe_6": [], "d789025717531c6d3d884e7cfb4848f3bef8ef3": [], "528": 97, "005089": [], "002438": 135, "004557": [], "002267": [], "002244": 101, "002227": [], "671": 136, "264": [], "0x7f1fc9ab1c00": [], "858": 85, "859": 85, "904": [], "905": [], "906": [], "848": [], "059": 135, "060": 135, "810": [], "811": [], "812": [], "856": [], "331": [89, 124], "094": [], "095": [], "494": [], "045": [], "048": [], "432": [], "692": 129, "695": [], "696": [], "004790": [], "002453": [], "002381": [], "004495": 135, "002435": [], "004264": [], "004243": [], "002364": [], "004245": [], "004250": [], "004311": [], "002335": [], "004257": [], "0x7f1fc9918910": [], "508": 88, "0x7f1fc95b4100": [], "004422": [], "004050": [], "002161": [], "004016": [], "002194": [], "004111": [], "002172": [], "003959": [], "0x7f1fc95b5000": [], "013158": [], "005594": [], "012160": [], "005527": [], "012252": [], "012121": [], "005585": [], "012167": [], "005633": [], "959": [], "385": [], "730": 136, "0x7f1fc94a0b80": [], "0x7f1fc94a0ca0": [], "522": [104, 136], "523": [104, 136], "240": 126, "241": 126, "242": 126, "509": [88, 97, 104, 107], "0x7f1fcb469a50": [], "511": [], "512": [], "0x7f1fc946ad10": [], "710": [], "711": [], "022244": [], "008280": [], "021958": [], "008224": [], "021985": [], "008192": [], "022113": [], "008217": [], "021868": [], "008235": [], "004540": [], "002240": [], "004273": [], "002201": [], "002205": [], "720": 110, "dev105": [], "267": 123, "0x7f1fcfb6a170": [], "0x7f1ff152e9e0": [], "0x7f1ff1536870": [], "024610": [], "007007": 124, "023787": [], "006902": [], "023661": [], "006833": [], "023379": [], "006835": [], "023397": [], "006945": [], "0x7f1fc9548220": [], "0x7f1fc9548700": [], "005967": [], "003761": [], "005837": [], "003727": [], "005784": [], "003735": [], "005876": [], "003720": [], "005778": [], "003718": [], "410": [], "662": [], "663": [], "903": [], "481": 92, "0x7f1fc991a9e0": [], "0x7f1fc906fd00": [], "0x7f1fc906f880": [], "0x7f1fc906c2e0": [], "0x7f1fc91ec9d0": [], "0x7f1fc9dbf790": [], "693": 129, "0x7f1fc992f6d0": [], "009726": [], "008579": [], "003313": [], "009081": [], "003264": [], "008874": [], "003257": [], "008852": [], "003226": [], "333": 89, "334": [97, 99, 124], "335": 124, "005002": [], "002432": [], "002385": [], "004451": [], "004528": 135, "004423": [], "002410": [], "002374": [], "002394": [], "004404": 98, "002403": [], "004510": 135, "002407": 98, "004385": [], "002418": [], "004675": [], "004450": [], "004431": 113, "002395": [], "004410": [], "002380": [], "004465": [], "004427": [], "004446": 98, "004491": [], "004062": [], "003876": [], "004401": [], "003867": [], "003839": [], "004527": [], "003872": [], "004444": [], "003889": [], "004435": [], "003847": [], "435": 104, "863": 103, "001697": [], "002810": [], "001662": [], "002729": [], "001637": [], "002751": [], "001624": [], "002743": [], "001615": [], "896": [], "899": [], "900": [], "005014": [], "004441": [], "002358": [], "004374": [], "005748": [], "005488": [], "003126": [], "005426": [], "003140": [], "005427": [], "003160": [], "005529": [], "003114": [], "003176": [], "005375": [], "003100": [], "005453": [], "003124": [], "005447": [], "003103": [], "016581": [], "006876": [], "015869": [], "006885": [], "016133": [], "016070": [], "006865": [], "016045": [], "006831": [], "skip": 137, "synchon": 137, "mandal": 137, "header": 137, "languag": 137, "snippet": 137, "adopt": 137, "ruff": 137, "linter": 137, "codebas": 137, "codespel": 137, "dev2": [], "004795": [], "002666": [], "004714": 135, "002685": [], "002567": 84, "004678": [], "002593": [], "004823": [], "002669": [], "tmpl0etqc38": [], "8d0fd89ae680d7887d646283adf3698b823e1d36": [], "421": [], "621": 126, "004887": [], "002295": 85, "004392": 113, "002495": [], "002269": [], "002264": [], "670": 136, "0x7f890d751d20": [], "046": [], "047": [], "870": 126, "871": 126, "336": [], "831": [], "193": 105, "195": [], "893": [], "894": [], "895": [], "849": [], "004754": [], "002367": [], "002343": [], "002345": [], "004263": [], "004254": [], "002406": [], "002348": [], "004244": [], "002350": [], "0x7f890d3fff10": [], "0x7f890fb87400": [], "004868": [], "004041": [], "002197": [], "004109": 124, "003963": [], "0x7f890d9bbe50": [], "013399": [], "005693": [], "012183": [], "005460": [], "012069": [], "005602": [], "012034": [], "012631": [], "005975": [], "102": 123, "103": [], "573": [], "574": [], "0x7f890d703730": [], "0x7f890d703250": [], "0x7f891025f760": [], "0x7f8926057790": [], "022386": [], "008354": [], "022887": [], "008436": [], "021805": [], "008265": [], "023222": [], "008270": [], "021786": [], "008165": [], "004556": [], "002220": [], "004249": [], "002184": [], "004195": [], "004231": [], "561": 136, "220": 105, "0x7f8914a1e290": [], "0x7f893642ea70": [], "0x7f89364363b0": [], "53": 126, "024629": [], "006807": [], "023118": [], "023805": [], "006767": [], "023166": [], "006745": [], "025147": [], "007090": [], "0x7f890fe335b0": [], "0x7f890fe32770": [], "006037": [], "003725": [], "005716": [], "003746": [], "005697": [], "003645": [], "005860": [], "003705": [], "005738": [], "847": [], "850": [], "934": [], "424": [], "799": [], "263": [], "0x7f890d5ec3d0": [], "0x7f890d1e5930": [], "0x7f890d1c94b0": [], "0x7f890d1c9f30": [], "249": 137, "0x7f890d3e7310": [], "0x7f890d41efe0": [], "0x7f890d3c2080": [], "009920": [], "003334": [], "008616": [], "003225": [], "008998": [], "003262": 136, "008818": [], "003222": [], "008866": [], "003308": [], "409": 113, "004902": [], "004448": [], "002474": [], "004751": [], "002440": [], "004487": [], "002390": [], "004438": [], "004468": [], "002472": 135, "004589": [], "004581": 135, "002424": [], "004463": [], "004364": [], "004935": [], "004520": [], "002434": [], "004507": [], "004430": [], "004567": [], "004506": [], "004429": [], "004110": [], "004424": [], "003856": [], "004390": [], "003888": [], "004432": [], "004612": [], "004107": [], "004526": [], "003906": [], "004483": 135, "003873": [], "003903": [], "003919": [], "003144": [], "001669": [], "001614": [], "001610": [], "002677": [], "001621": [], "002630": [], "001699": [], "004577": [], "002392": [], "002531": [], "004735": [], "002610": [], "004988": [], "002485": [], "004555": 135, "005769": [], "003125": [], "005442": [], "003149": [], "005499": [], "005485": [], "003253": [], "005908": [], "005545": [], "003118": [], "005395": [], "005404": [], "003110": [], "003071": [], "172": [98, 134], "173": 126, "174": 126, "175": [126, 134], "176": 126, "017283": [], "006841": [], "015957": [], "007164": [], "016626": [], "006900": [], "015987": [], "006870": [], "016107": [], "006940": [], "dev11": [], "524": [104, 136], "525": 136, "004738": [], "002540": [], "004307": [], "004320": [], "tmpg8da_yv0": [], "d1f915eee0902cee00b744c8ba7e9509ada8b578": [], "004756": [], "002260": [], "002229": [], "002214": [], "002178": [], "004228": [], "0x7f7aa0939e10": [], "791": [], "714": [], "669": [89, 136], "792": 126, "002332": [], "002355": [], "004203": [], "004233": [], "004256": [], "004223": [], "0x7f7aa08d8f10": [], "0x7f7aa06f3070": [], "004377": [], "003961": 135, "002171": [], "003987": 135, "002119": [], "004047": [], "002126": [], "003980": [], "002165": [], "0x7f7aa0238370": [], "012866": [], "005492": [], "011937": [], "012027": [], "005550": [], "011842": [], "005414": [], "005549": [], "901": [], "902": [], "0x7f7aa0980670": [], "0x7f7aa0980730": [], "076": 96, "0x7f7aa05b5030": [], "0x7f7aa05b49d0": [], "021761": [], "008126": [], "021662": [], "008140": [], "021575": [], "008163": [], "021776": [], "008139": [], "021530": [], "008112": [], "002203": [], "002149": [], "002155": [], "004213": [], "0x7f7aa5a06200": [], "0x7f7ac7422a70": [], "0x7f7ac7429e30": [], "024077": [], "006696": [], "023107": [], "006668": [], "023280": [], "022945": [], "006683": [], "006753": [], "0x7f7aa0074400": [], "0x7f7aa0076dd0": [], "005802": [], "003659": [], "005678": [], "005712": [], "003655": [], "005726": [], "003745": [], "005695": [], "003644": [], "183": [], "814": [], "815": [], "363": [104, 113], "832": [], "339": [], "345": 113, "348": [], "0x7f7aa02e77c0": [], "0x7f7aa00b8880": [], "0x7f7aa00b82e0": [], "0x7f7aa00b8310": [], "0x7f7aa05b4fa0": [], "0x7f7aa00ba0e0": [], "0x7f7aa0307820": [], "009708": [], "003329": [], "008650": [], "003211": [], "009128": [], "008821": [], "008857": [], "003232": [], "52": [126, 129], "004858": [], "002416": [], "004606": [], "004388": [], "002327": [], "004365": 98, "004370": [], "004479": [], "004009": [], "004480": 135, "004417": [], "003848": [], "003838": [], "003842": [], "004440": [], "003841": [], "004447": 85, "003859": [], "003089": [], "001672": [], "002764": [], "002694": [], "001634": [], "002661": [], "001629": [], "001592": [], "004570": [], "004494": [], "004294": [], "005669": [], "003143": [], "005385": [], "003085": [], "005511": [], "003098": [], "005370": [], "003117": [], "005489": [], "003081": [], "003051": [], "005286": [], "003059": [], "005329": [], "003083": [], "005308": [], "429": [], "431": [], "016311": [], "006806": [], "015796": [], "015952": [], "015850": [], "016063": [], "dev14": [], "004682": [], "002499": 136, "002393": [], "tmp41fuw6eo": [], "8c908ce8343743e208f0cd5e6a8d0fd9bcb6ac1b": [], "024": 126, "004691": [], "002296": [], "004191": [], "002196": [], "0x7f7f19dba080": [], "743": 126, "789": [], "790": [], "004569": [], "004183": [], "004151": [], "002278": [], "004189": [], "004176": [], "004196": [], "002547": [], "004139": [], "002270": [], "004128": [], "0x7f7f3074ba30": [], "0x7f7f1a080580": [], "063": [], "004275": [], "003936": [], "002089": [], "002097": [], "003979": [], "002121": [], "003900": [], "002085": [], "0x7f7f1a0827d0": [], "012637": [], "011853": [], "005373": [], "011762": [], "005491": [], "011773": [], "005343": [], "011771": [], "005508": [], "0x7f7f1ab41900": [], "0x7f7f1ab419c0": [], "0x7f7f1a307040": [], "555": [], "0x7f7f1ab41090": [], "021678": [], "021481": [], "008005": [], "021421": [], "008043": [], "021585": [], "021387": [], "008049": [], "004611": [], "002216": 101, "004161": [], "002154": [], "002153": [], "0x7f7f1f16e680": [], "0x7f7f3cf4ab00": [], "0x7f7f3cf52230": [], "392": 109, "023907": [], "022962": [], "006744": [], "022931": [], "006557": [], "022816": [], "006620": [], "022823": [], "006732": [], "0x7f7f19e35930": [], "0x7f7f19e37910": [], "005593": [], "005610": 136, "005731": [], "003671": [], "005640": [], "003628": [], "624": [], "075": 96, "077": 96, "078": [], "527": [105, 107], "529": 97, "0x7f7f19c564d0": [], "0x7f7f197ae6b0": [], "0x7f7f197ac970": [], "0x7f7f197afdc0": [], "0x7f7f19e023b0": [], "0x7f7f1a985180": [], "0x7f7f19c72e00": [], "009716": [], "008483": [], "003186": [], "008957": [], "003187": [], "008826": [], "003165": [], "008755": [], "003147": [], "004872": [], "004493": 84, "004405": [], "004425": [], "004533": [], "004378": [], "004563": [], "004319": [], "002445": 98, "004345": [], "003973": [], "004361": [], "003794": [], "003868": [], "003785": [], "003788": [], "003793": [], "003768": [], "001678": [], "001643": [], "002708": [], "001601": [], "002727": [], "001607": [], "001571": [], "622": [], "005578": [], "005285": [], "005415": [], "005282": [], "005450": [], "003123": [], "003306": [], "006172": [], "003933": [], "005573": [], "003046": [], "005338": [], "003075": [], "016094": [], "006694": [], "015606": [], "006738": [], "015814": [], "006698": [], "015557": [], "006656": [], "015768": [], "006652": [], "polar": [6, 42, 43, 44, 45, 46, 47, 48], "post1": [], "dev21": [], "813": [], "_valid": [], "73": [], "004952": [], "004497": 135, "002660": [], "004456": 135, "002550": [], "004471": [], "002521": [], "002728": [], "tmpu80_b84v": [], "2e30b6e0eaeae095c39a3a68c315c7535b10aea9": [], "004923": [], "004387": [], "004359": [], "0x7fecc237d270": [], "2458": 89, "391": [104, 109], "328": [], "329": [103, 107], "002386": [], "002377": [], "004305": [], "002613": [], "005709": [], "002843": [], "0x7fecc1d21810": [], "0x7fecc1d8b250": [], "390": [92, 93, 109], "003981": [], "002180": [], "004097": [], "002207": [], "003931": [], "0x7fecc1decaf0": [], "013715": [], "005825": [], "012791": [], "005855": [], "012915": [], "005766": [], "012731": [], "012781": [], "0x7fecc1f23a00": [], "0x7fecc1f23970": [], "203": [], "0x7fecc1e9dd50": [], "0x7fecc21d48b0": [], "022514": [], "010690": [], "022798": [], "008836": [], "022989": [], "008530": [], "023710": [], "008603": [], "022472": [], "008469": [], "004643": [], "002257": [], "004475": [], "002235": [], "002223": [], "712": [], "713": [], "0x7fecc77e9360": [], "0x7fece9222b90": [], "0x7fece922e5f0": [], "024242": [], "023331": [], "006956": [], "023449": [], "006827": [], "023320": [], "006862": [], "023826": [], "006934": [], "0x7fecc1ba1cc0": [], "0x7fecc1d35e10": [], "005772": [], "003753": [], "005756": [], "005698": [], "003736": [], "005830": 124, "003710": [], "0x7fecc1e159f0": [], "0x7fecc1d8b130": [], "0x7fecc1d8b3d0": [], "0x7fecc21aaf80": [], "0x7fecc1ba2b00": [], "0x7fecc1bbad70": [], "0x7fecc2637a30": [], "009912": [], "003343": [], "008687": [], "003237": [], "009151": [], "008944": [], "003196": [], "008983": [], "029499": 134, "977110": 134, "084010": 134, "306544": 134, "919632": 134, "005114": [], "004548": [], "002447": [], "004523": [], "004542": [], "002427": [], "364": [], "004759": [], "004508": [], "002423": [], "004457": [], "002456": 98, "004849": [], "004593": [], "002520": [], "004845": [], "002486": [], "004639": [], "002508": [], "nbsp": 135, "pipelineifittedpipelin": 135, "004791": [], "002431": 98, "004499": [], "004462": 136, "neg_root_mean_squared_log_error": 135, "004618": 135, "003993": 135, "003913": [], "003909": [], "003897": [], "003943": [], "003918": [], "003905": [], "003208": [], "001822": [], "002894": [], "001646": [], "002824": [], "002835": [], "002714": [], "001632": [], "004706": [], "002429": [], "002433": [], "004623": [], "004434": [], "005819": [], "005702": [], "005543": [], "003174": [], "005564": [], "003190": [], "005639": [], "003177": [], "005635": [], "003175": [], "005612": [], "003209": [], "017310": [], "007522": [], "017276": [], "007345": [], "016864": [], "007283": [], "016881": [], "007315": [], "017165": [], "007360": [], "dev24": [], "004889": [], "002651": [], "004534": 98, "002624": [], "004633": [], "002621": [], "002600": [], "tmpc24z3no1": [], "08dde702168d8353d5c4904cf06762ef906d64e": [], "004961": [], "004389": 98, "002292": 113, "0x7fdaccd796f0": [], "437": [104, 129], "623": [110, 111], "127": [], "004800": [], "002491": [], "002412": [98, 135], "002419": [], "004418": [], "002476": [], "002466": 135, "002464": 135, "004380": 98, "002454": 135, "0x7fdad3c042e0": [], "0x7fdacd21c940": [], "004112": [], "004034": [], "003992": [], "002236": [], "505": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 105, 109, 113, 123, 128, 129], "0x7fdacc7c14b0": [], "013614": [], "012943": [], "005957": [], "013193": [], "005888": [], "013221": [], "006012": [], "013484": [], "006091": [], "0x7fdacf7f8c40": [], "0x7fdacf7f8f70": [], "0x7fdacd3c7820": [], "0x7fdacd3c5ae0": [], "022809": [], "008506": [], "027137": [], "008872": [], "025200": [], "009709": [], "024055": [], "009382": [], "023276": [], "008520": [], "004632": [], "004420": [], "941": [], "0x7fdad450d480": [], "0x7fdaf5f3ed40": [], "0x7fdaf5f50670": [], "024634": [], "007000": [], "023741": [], "006941": [], "024270": [], "006926": [], "024003": [], "007084": [], "024462": [], "007086": [], "0x7fdacc43ac50": [], "0x7fdacc45d840": [], "005993": [], "003810": [], "005790": [], "003827": [], "005805": [], "003816": [], "005894": [], "005788": [], "0x7fdaccd9f940": [], "0x7fdacc46c370": [], "0x7fdacc46cd00": [], "0x7fdacc46d330": [], "0x7fdacc7e0940": [], "0x7fdacc6da1a0": [], "0x7fdacc6d9ff0": [], "009713": [], "003417": [], "008941": [], "003342": [], "008959": [], "003259": [], "008783": [], "008764": [], "003330": [], "005142": [], "002516": [], "004654": [], "004550": [], "002475": [], "004547": [], "002490": [], "002477": [], "004537": [], "002478": [], "004551": 84, "004749": [], "004576": 135, "002489": [], "004720": [], "002503": [], "004568": 135, "004565": [], "002530": 135, "004993": [], "002522": [], "004562": [], "002468": [], "004598": [], "004580": [], "004601": 135, "002444": 135, "004575": [], "004594": 135, "002446": [98, 135], "004591": [], "004595": 135, "004780": [], "004090": [], "003999": [], "004002": [], "004622": [], "004063": [], "004086": [], "004003": [], "004018": [], "004032": [], "004630": [], "004054": [], "004053": [], "003150": [], "001806": [], "002901": [], "001690": [], "002790": [], "002849": [], "001683": [], "002735": [], "001695": [], "004709": [], "002471": [], "004524": [], "004459": [], "004637": [], "006042": [], "003290": [], "005618": [], "005659": [], "003261": [], "005699": [], "003245": 136, "005796": [], "003367": [], "005865": [], "003298": [], "005710": [], "003278": [], "005759": 124, "003287": [], "005749": [], "003252": [], "018129": [], "007479": [], "017345": [], "007464": [], "016987": [], "007411": [], "017203": [], "007388": [], "017149": [], "007520": [], "bayesian": [1, 33, 61, 100, 107, 126], "params_attr": 22, "bay": [33, 105, 120, 126, 137], "dev57": [], "005056": [], "004513": [], "002574": [], "002538": [], "002512": [], "tmpixoh8x_o": [], "239c2c40d7fceb1b2e1c50e50e8636c118790cc1": [], "004942": [], "004452": [], "002263": [], "0x7fe306626b30": [], "833": 92, "004847": [], "002451": [98, 135], "005829": 124, "004579": 135, "004288": [], "002415": [], "004314": [], "004331": [], "002436": [], "004280": [], "002389": [], "0x7fe3066f5ae0": [], "479": [], "0x7fe306b0a740": [], "002245": [], "004056": [], "002175": [], "003975": [], "002162": [], "003942": [], "0x7fe3064b83a0": [], "013603": [], "005783": [], "012702": [], "005746": [], "012927": [], "005757": [], "012586": [], "005704": [], "012766": [], "005765": [], "650": [], "651": [], "hyperparamt": 105, "1e3": 105, "1e1": 105, "n_iter": [105, 126], "1000": 105, "6203007518796992": 105, "ordereddict": [105, 126], "62585277239563": 105, "909675645518994": 105, "run_hyperparameter_tuning_bayessearch": [105, 107], "0x7fe3064b9480": [], "0x7fe3064b9030": [], "0x7fe30629c040": [], "0x7fe30629ecb0": [], "022632": [], "008376": [], "022496": [], "008399": [], "022337": [], "008374": [], "022584": [], "008360": [], "022354": [], "008425": [], "004586": 135, "002228": [], "002233": 101, "newer": 120, "unmaintain": 120, "skopt": [120, 126], "bayessearchcv": [33, 120, 126, 137], "0x7fe30c0d8dc0": [], "0x7fe32db4ad40": [], "0x7fe32db5c8f0": [], "024275": [], "006866": [], "023473": [], "023477": [], "006816": [], "023190": [], "006679": [], "023148": [], "006867": [], "0x7fe306075000": [], "0x7fe306076740": [], "005847": [], "005736": [], "003755": [], "005719": [], "003731": [], "005799": [], "005723": [], "003763": [], "_grid_": 126, "constraint": 126, "prior": [105, 126], "77140446796582": 126, "022636153281629743": 126, "accept": 126, "9099999999999999": 126, "8975984906619887": 126, "028707916525659204": 126, "0x7fe306c92f20": [], "454": 113, "0x7fe3069912a0": [], "0x7fe306990ac0": [], "0x7fe306990400": [], "0x7fe3063eceb0": [], "0x7fe3069915a0": [], "0x7fe3064197e0": [], "009789": [], "003202": 136, "008546": [], "003155": [], "009091": [], "008926": [], "008935": [], "786": 130, "787": [], "005070": [], "004645": [], "002428": 135, "004673": [], "004416": [], "002388": [], "004461": [], "004509": [], "004670": [], "004025": [], "003972": [], "004761": [], "003925": [], "004546": 135, "003927": [], "001704": [], "002838": [], "002770": [], "001677": [], "002817": [], "001676": [], "002749": [], "001653": [], "004538": [], "004571": [], "005979": [], "003374": [], "005755": [], "005662": [], "005590": [], "003193": [], "005637": [], "005724": [], "005481": [], "005466": [], "005504": [], "017416": [], "007382": [], "016899": [], "007221": [], "016704": [], "007205": [], "016822": [], "007252": [], "016716": [], "007177": [], "dev61": [], "004970": [], "002620": [], "004659": [], "002578": [], "004467": 101, "002560": [], "004458": [], "002755": [], "tmp1ujwkgb2": [], "dbdbbfc14f3144ed54ef9c5fc5e6a6c677996639": [], "004974": [], "0x7f3c2f93ab60": [], "915": [], "004442": [], "002411": [], "002576": [], "002391": [], "002421": [], "0x7f3c2f5d3520": [], "0x7f3c2f6685b0": [], "004764": [], "002836": [], "004698": [], "004481": [], "004007": [], "002191": [], "0x7f3c2f27f880": [], "013696": [], "005987": [], "012803": [], "005813": [], "014671": [], "005988": [], "013537": [], "005943": 102, "013086": [], "005867": [], "0x7f3c2f27fd30": [], "0x7f3c2f27f6d0": [], "0x7f3c2fb002b0": [], "0x7f3c2fb00220": [], "022970": [], "008559": [], "022451": [], "008395": 110, "022563": [], "008337": [], "022768": [], "008403": [], "022315": [], "008420": [], "004660": [], "002237": [], "004327": [], "002258": [], "0x7f3c3509cdc0": [], "0x7f3c56b5ad40": [], "0x7f3c56b6cd30": [], "007079": [], "024928": [], "007144": [], "024803": [], "007062": [], "024911": [], "007154": [], "024057": [], "007115": [], "0x7f3c2f1ab760": [], "0x7f3c2f015630": [], "006134": [], "005946": [], "005890": [], "006020": [], "003965": [], "006036": [], "0x7f3c2f30fd90": [], "0x7f3c2efde020": [], "0x7f3c2efdf9a0": [], "0x7f3c2efdee00": [], "0x7f3c2f588bb0": [], "0x7f3c2efef0a0": [], "0x7f3c2f588130": [], "009890": [], "003254": [], "008669": [], "003216": [], "009220": [], "003168": [], "009032": [], "003173": 130, "009048": [], "003182": [], "005197": [], "002571": [], "002465": 135, "004893": [], "002517": [], "004697": [], "004679": [], "004719": [], "004950": [], "004844": [], "002504": 135, "004883": [], "004694": [], "004688": [], "004699": [], "004693": [], "004638": [], "002546": [], "004739": [], "004716": [], "004684": [], "002498": [], "005200": [], "004674": [], "004690": [], "004017": [], "004685": [], "003982": [], "004644": [], "004776": [], "004044": [], "003977": [], "004000": [], "004918": [], "004077": 101, "004747": [], "003969": [], "003244": [], "001711": [], "002885": [], "001706": [], "002789": [], "001679": [], "002893": [], "001667": [], "002785": [], "004812": [], "004536": [], "004490": [], "002479": 98, "002505": [], "006057": [], "003258": [], "005761": [], "003220": 136, "005801": [], "006123": [], "003299": [], "005995": [], "003269": [], "005840": [], "003230": 136, "018349": [], "007506": [], "017389": [], "007482": [], "017434": [], "007410": [], "017572": [], "017690": [], "007364": [], "optuna": [33, 120, 126, 137], "optunasearchcv": [33, 120, 126, 137], "register_search": 33, "dev78": [], "005464": [], "002961": [], "004959": [], "002907": [], "004976": [], "002921": [], "004966": [], "002904": [], "004957": [], "002876": [], "tmp48xnsgm5": [], "130b4c867e64371aac71a46309d70616822bb92c": [], "005177": [], "002525": [], "004603": [], "0x7f549547d2d0": [], "043": 128, "044": [], "005103": [], "002545": [], "004454": [], "002488": 135, "002734": [], "004500": [], "0x7f5497bee170": [], "0x7f549541a230": [], "002249": [], "002274": [], "004064": [], "002243": [], "004030": [], "0x7f5499121480": [], "013880": [], "006051": [], "012946": [], "013015": [], "005934": [], "012983": [], "005972": [], "013083": [], "005892": [], "0x7f549534a980": [], "0x7f549534ad40": [], "0x7f54990aae90": [], "0x7f54953dbf70": [], "022715": [], "008492": [], "022858": [], "008513": [], "022564": [], "008464": [], "022694": [], "008502": [], "022662": [], "008460": [], "004939": [], "004516": [], "0x7f549e0dd000": [], "0x7f54bfbced40": [], "0x7f54bfbdd0f0": [], "024855": [], "006943": [], "023625": [], "006923": [], "006915": [], "023538": [], "007097": [], "023771": [], "007049": [], "0x7f549523b220": [], "0x7f5495238070": [], "005927": [], "003853": [], "005864": [], "003817": [], "005810": [], "003836": [], "005906": [], "006177": [], "framework": 126, "shown": 126, "exemplarili": 126, "balanc": 126, "svm__class_weight": 126, "trial": 126, "create_studi": 126, "maxim": 126, "study_nam": 126, "load_if_exist": 126, "0x7f54859ffb20": [], "1041": 126, "experimentalwarn": 126, "v0": 126, "new_object": 126, "new_object_param": 126, "9400000000000001": [], "7051874114555626": [], "013927802622730131": [], "toolbox": 126, "zscore__with_mean": 126, "categoricaldistribut": 126, "floatdistribut": 126, "intdistribut": 126, "0x7f549514d6f0": [], "0x7f54954458a0": [], "0x7f5495445a20": [], "0x7f5495348c10": [], "0x7f5495095900": [], "0x7f5495349270": [], "0x7f54954d2a10": [], "010188": [], "003302": [], "009212": [], "003217": [], "009043": [], "003197": [], "009171": [], "005167": [], "002587": [], "004695": [], "002570": [], "002496": [], "002511": [], "004712": [], "002455": 135, "004541": [], "004517": [], "004884": [], "002467": 136, "004615": [], "004553": [], "002473": [], "004741": [], "004106": [], "004545": [], "004079": [], "004631": [], "004038": [], "004590": [], "004051": [], "004616": [], "004035": [], "004641": [], "004626": [], "004582": [], "004070": [], "004084": [], "003372": [], "001845": [], "002925": [], "001735": [], "002822": [], "002881": [], "001700": [], "002794": [], "001673": [], "004758": [], "004683": [], "002542": [], "004686": [], "002523": [], "005940": [], "003285": [], "003289": [], "005650": [], "005708": [], "003310": [], "003277": [], "005780": [], "003283": [], "005807": [], "003219": [], "005689": [], "003317": [], "004137": [], "017628": [], "017115": [], "007456": [], "017270": [], "007625": [], "017662": [], "017467": [], "007474": [], "dev4": [], "005051": [], "002689": [], "002635": [], "004588": [], "002615": [], "004488": [], "002599": [], "tmp0ov61jai": [], "215a773cf07102509cf52165021b8c4297f9e888": [], "005083": [], "004574": [], "0x7f764c266680": [], "004891": [], "002448": 98, "002442": [], "002577": [], "002492": [], "002449": 98, "0x7f764c83f790": [], "0x7f764c12a770": [], "004144": [], "003985": [], "0x7f764bd62dd0": [], "013960": [], "005951": [], "013029": [], "006070": [], "013400": [], "005873": [], "012785": [], "005841": [], "013022": [], "0x7f764c5c0a90": [], "0x7f764c5c2170": [], "0x7f764c9bad40": [], "0x7f764c9bb130": [], "022820": [], "008505": [], "022832": [], "008423": [], "022434": [], "008366": [], "022408": [], "008368": [], "022206": [], "008355": [], "004752": [], "002293": [], "002282": [], "optuna_integr": 120, "0x7f7651f1dbd0": [], "0x7f766fd7b910": [], "0x7f766fd9c130": [], "024913": [], "006991": [], "023580": [], "006936": [], "023705": [], "006846": [], "023516": [], "006832": [], "023452": [], "006942": [], "0x7f764bca3730": [], "0x7f764c20f190": [], "005762": [], "003770": [], "005896": [], "005777": 124, "0x7f7649676d10": [], "9299999999999999": [], "7132948101954109": [], "005760963091525674": [], "0x7f764c0e8070": [], "0x7f764bcf5b10": [], "0x7f764bc99990": [], "0x7f764bff4280": [], "0x7f764bff67a0": [], "0x7f764bec6bc0": [], "0x7f764c2bc2e0": [], "009979": [], "003255": [], "008667": [], "009199": [], "003241": [], "009228": [], "005262": [], "002573": [], "004653": [], "004726": [], "004530": [], "002441": [], "004525": [], "004771": [], "004514": [], "004502": 135, "004085": [], "004125": [], "004656": [], "004661": [], "004040": [], "003978": [], "004584": [], "003940": [], "004023": [], "003207": 136, "001726": [], "002892": [], "001721": [], "001696": 136, "002896": [], "002771": [], "004578": [], "003335": [], "005812": [], "003303": [], "003256": [], "005613": [], "003228": [], "005863": [], "005643": [], "003239": [], "005664": [], "003194": [], "017661": [], "007366": [], "017387": [], "007361": [], "016880": [], "007332": [], "016972": [], "007294": [], "016954": [], "007296": [], "hyperparemt": 137, "hyperparmet": 137, "action": 137, "mark": 137, "stale": 137, "lazi": 137, "fixtur": 137, "005641": [], "002926": [], "002711": [], "005180": [], "002745": [], "002787": [], "004969": [], "002726": [], "tmpb294bj9m": [], "242982e60c7334d9cd612ff37cd36349f60a5b25": [], "005015": [], "0x7ff2c80e6da0": [], "005237": [], "002594": 84, "004676": [], "002650": [], "004854": [], "004821": [], "002509": [], "002501": [], "004573": [], "005011": [], "002603": [], "004715": [], "002483": [], "004592": 135, "0x7ff2c82435e0": [], "0x7ff2c7d51300": [], "210": [], "0x7ff2c817da50": [], "014696": [], "006073": [], "013764": [], "006082": [], "013638": [], "006184": [], "013828": [], "006068": [], "013677": [], "006064": [], "042": 128, "0x7ff2c7e7a200": [], "0x7ff2c7e784f0": [], "0x7ff2c8847ac0": [], "0x7ff2c8231ab0": [], "024534": [], "008960": 130, "024921": [], "009236": [], "024530": [], "009299": [], "025229": [], "009402": [], "025688": [], "009150": [], "005068": [], "004723": [], "004713": [], "0x7ff2cdd85bd0": [], "0x7ff2edd67910": [], "0x7ff2edd73e30": [], "025367": [], "024343": [], "007077": [], "024738": [], "007192": [], "024525": [], "007191": [], "024790": [], "007472": [], "0x7ff2c7ba7eb0": [], "0x7ff2c7b6a1a0": [], "006357": [], "003899": [], "006014": [], "005871": [], "005986": [], "005809": [], "003747": [], "0x7ff2c7dca290": [], "0593748500392722": [], "07262925360645738": [], "0x7ff2c83a7d30": [], "0x7ff2c829de70": [], "0x7ff2c82432b0": [], "0x7ff2c829d690": [], "0x7ff2c7b95e70": [], "0x7ff2c829f430": [], "0x7ff2c8760a00": [], "010403": [], "003734": [], "009149": [], "003348": [], "009472": [], "003474": [], "009282": [], "003318": [], "009403": [], "effici": 131, "002641": [], "004731": [], "004543": 135, "005328": [], "002860": [], "004856": [], "002469": [], "004667": [], "004624": [], "004853": [], "004583": [], "004710": [], "004535": [], "005093": [], "002561": [], "004602": [], "002437": 135, "002430": 98, "004599": [], "004882": [], "004031": [], "003911": [], "004802": [], "003984": [], "003934": [], "004646": [], "003947": [], "003986": [], "001737": [], "002884": [], "001744": [], "002804": [], "001651": [], "002923": [], "002801": [], "001627": [], "005028": [], "004642": [], "004464": [], "005849": [], "003183": [], "005611": [], "003153": [], "005530": [], "003181": [], "005688": [], "005958": [], "005715": [], "003180": [], "005553": [], "003200": [], "005538": [], "005544": [], "017827": [], "007339": [], "017509": [], "007399": [], "016958": [], "007355": 136, "017510": [], "007568": [], "017495": [], "007484": [], "dev18": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 113, 128, 129], "004965": 84, "002691": 84, "004604": [84, 135], "002649": 84, "004469": 84, "tmprmlbtji7": [84, 86], "186c063d8513b83e8d4130c354d05a8630b5ba5d": [84, 86], "004830": 85, "0x7fc2268744f0": 86, "004861": 98, "004561": 98, "002425": 98, "002642": 98, "0x7fc2262e6a40": 98, "0x7fc227286110": 101, "004012": [101, 135], "002242": 101, "004026": 101, "0x7fc226b46920": 102, "013769": 102, "005959": 102, "012892": 102, "013000": 102, "005980": 102, "012908": 102, "005879": 102, "012923": 102, "005909": 102, "0x7fc2269d1f60": 106, "0x7fc2269d1f30": 106, "0x7fc226328730": 110, "0x7fc22634b220": 110, "022627": 110, "008527": 110, "022419": 110, "008499": 110, "022343": 110, "008431": 110, "022586": 110, "022345": 110, "008459": 110, "004806": 113, "0x7fc22c2eb640": 123, "0x7fc24a17f910": 123, "0x7fc24a19c2f0": 123, "024220": 124, "006968": 124, "023496": 124, "006909": 124, "023669": 124, "006879": 124, "023369": 124, "006914": 124, "023614": 124, "0x7fc2262e5330": 124, "0x7fc2262e4460": 124, "003800": 124, "003791": 124, "005903": 124, "003813": 124, "0x7fc225b21b10": 126, "74": 126, "2417627018563466": 126, "05926827334724916": 126, "0x7fc226750a60": 128, "0x7fc22654da20": 129, "0x7fc22654ea10": 129, "0x7fc22654d9f0": 129, "0x7fc22654c160": 129, "0x7fc226055c60": 129, "0x7fc226a1f970": 130, "009885": 130, "003250": 130, "008652": 130, "003184": 130, "009079": 130, "003163": 130, "009071": 130, "005072": 135, "002458": 135, "004954": 135, "004672": 135, "002459": 135, "004794": 135, "004539": 135, "004052": 135, "004531": 135, "004554": 135, "004001": 135, "003974": 135, "003966": 135, "001796": 136, "002913": 136, "001708": 136, "002807": 136, "001691": 136, "002833": 136, "002908": 136, "001807": 136, "004852": 136, "004566": 136, "005557": 136, "005625": 136, "003352": 136, "005559": 136, "003203": 136, "005690": 136, "003227": 136, "005808": 136, "003243": 136, "005632": 136, "005653": 136, "005572": 136, "003218": 136, "017483": 136, "007461": 136, "017083": 136, "007369": 136, "016843": 136, "007379": 136, "017082": 136, "016984": 136}, "objects": {"julearn": [[1, 0, 1, "", "PipelineCreator"], [2, 0, 1, "", "TargetPipelineCreator"], [73, 3, 0, "-", "api"], [0, 3, 0, "-", "base"], [72, 3, 0, "-", "inspect"], [74, 3, 0, "-", "model_selection"], [75, 3, 0, "-", "models"], [76, 3, 0, "-", "pipeline"], [77, 3, 0, "-", "prepare"], [33, 5, 1, "", "run_cross_validation"], [78, 3, 0, "-", "scoring"], [79, 3, 0, "-", "stats"], [80, 3, 0, "-", "transformers"], [81, 3, 0, "-", "utils"], [82, 3, 0, "-", "viz"]], "julearn.PipelineCreator": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "add"], [1, 1, 1, "", "copy"], [1, 1, 1, "", "from_list"], [1, 1, 1, "", "has_model"], [1, 1, 1, "", "split"], [1, 2, 1, "", "steps"], [1, 1, 1, "", "to_pipeline"]], "julearn.TargetPipelineCreator": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "add"], [2, 1, 1, "", "to_pipeline"]], "julearn.base": [[3, 0, 1, "", "ColumnTypes"], [4, 4, 1, "", "ColumnTypesLike"], [5, 0, 1, "", "JuBaseEstimator"], [6, 0, 1, "", "JuTransformer"], [7, 0, 1, "", "WrapModel"], [8, 5, 1, "", "change_column_type"], [9, 5, 1, "", "ensure_column_types"], [10, 5, 1, "", "get_column_type"], [11, 5, 1, "", "make_type_selector"]], "julearn.base.ColumnTypes": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "add"], [3, 1, 1, "", "copy"], [3, 2, 1, "", "pattern"], [3, 1, 1, "", "to_type_selector"]], "julearn.base.JuBaseEstimator": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "filter_columns"], [5, 1, 1, "", "get_apply_to"], [5, 1, 1, "", "get_metadata_routing"], [5, 1, 1, "", "get_needed_types"], [5, 1, 1, "", "get_params"], [5, 1, 1, "", "set_params"]], "julearn.base.JuTransformer": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "filter_columns"], [6, 1, 1, "", "fit"], [6, 1, 1, "", "fit_transform"], [6, 1, 1, "", "get_apply_to"], [6, 1, 1, "", "get_metadata_routing"], [6, 1, 1, "", "get_needed_types"], [6, 1, 1, "", "get_params"], [6, 1, 1, "", "set_output"], [6, 1, 1, "", "set_params"]], "julearn.base.WrapModel": [[7, 1, 1, "", "__init__"], [7, 2, 1, "", "classes_"], [7, 1, 1, "", "decision_function"], [7, 1, 1, "", "filter_columns"], [7, 1, 1, "", "fit"], [7, 1, 1, "", "get_apply_to"], [7, 1, 1, "", "get_metadata_routing"], [7, 1, 1, "", "get_needed_types"], [7, 1, 1, "", "get_params"], [7, 1, 1, "", "predict"], [7, 1, 1, "", "predict_log_proba"], [7, 1, 1, "", "predict_proba"], [7, 1, 1, "", "score"], [7, 1, 1, "", "set_params"]], "julearn.inspect": [[12, 0, 1, "", "FoldsInspector"], [13, 0, 1, "", "Inspector"], [14, 5, 1, "", "preprocess"]], "julearn.inspect.FoldsInspector": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "decision_function"], [12, 1, 1, "", "predict"], [12, 1, 1, "", "predict_log_proba"], [12, 1, 1, "", "predict_proba"]], "julearn.inspect.Inspector": [[13, 1, 1, "", "__init__"], [13, 2, 1, "", "folds"], [13, 2, 1, "", "model"]], "julearn.model_selection": [[15, 0, 1, "", "ContinuousStratifiedGroupKFold"], [16, 0, 1, "", "ContinuousStratifiedKFold"], [17, 0, 1, "", "RepeatedContinuousStratifiedGroupKFold"], [18, 0, 1, "", "RepeatedContinuousStratifiedKFold"], [19, 0, 1, "", "StratifiedBootstrap"], [20, 5, 1, "", "get_searcher"], [21, 5, 1, "", "list_searchers"], [22, 5, 1, "", "register_searcher"], [23, 5, 1, "", "reset_searcher_register"]], "julearn.model_selection.ContinuousStratifiedGroupKFold": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "get_metadata_routing"], [15, 1, 1, "", "get_n_splits"], [15, 1, 1, "", "set_split_request"], [15, 1, 1, "", "split"]], "julearn.model_selection.ContinuousStratifiedKFold": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "get_metadata_routing"], [16, 1, 1, "", "get_n_splits"], [16, 1, 1, "", "split"]], "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold": [[17, 1, 1, "", "__init__"], [17, 1, 1, "", "get_metadata_routing"], [17, 1, 1, "", "get_n_splits"], [17, 1, 1, "", "split"]], "julearn.model_selection.RepeatedContinuousStratifiedKFold": [[18, 1, 1, "", "__init__"], [18, 1, 1, "", "get_metadata_routing"], [18, 1, 1, "", "get_n_splits"], [18, 1, 1, "", "split"]], "julearn.model_selection.StratifiedBootstrap": [[19, 1, 1, "", "__init__"], [19, 1, 1, "", "get_metadata_routing"], [19, 1, 1, "", "get_n_splits"], [19, 1, 1, "", "split"]], "julearn.models": [[75, 3, 0, "-", "dynamic"], [25, 5, 1, "", "get_model"], [26, 5, 1, "", "list_models"], [27, 5, 1, "", "register_model"], [28, 5, 1, "", "reset_model_register"]], "julearn.models.dynamic": [[24, 0, 1, "", "DynamicSelection"]], "julearn.models.dynamic.DynamicSelection": [[24, 1, 1, "", "__init__"], [24, 1, 1, "", "fit"], [24, 1, 1, "", "get_metadata_routing"], [24, 1, 1, "", "get_params"], [24, 1, 1, "", "predict"], [24, 1, 1, "", "predict_proba"], [24, 1, 1, "", "score"], [24, 1, 1, "", "set_params"], [24, 1, 1, "", "set_score_request"]], "julearn.pipeline": [[29, 0, 1, "", "JuTargetPipeline"]], "julearn.pipeline.JuTargetPipeline": [[29, 1, 1, "", "__init__"], [29, 1, 1, "", "can_inverse_transform"], [29, 1, 1, "", "fit"], [29, 1, 1, "", "fit_transform"], [29, 1, 1, "", "inverse_transform"], [29, 2, 1, "", "needed_types"], [29, 1, 1, "", "transform"]], "julearn.pipeline.pipeline_creator": [[30, 0, 1, "", "Step"]], "julearn.pipeline.pipeline_creator.Step": [[30, 1, 1, "", "__init__"], [30, 4, 1, "", "apply_to"], [30, 4, 1, "", "estimator"], [30, 4, 1, "", "name"], [30, 4, 1, "", "needed_types"], [30, 4, 1, "", "params_to_tune"], [30, 4, 1, "", "row_select_col_type"], [30, 4, 1, "", "row_select_vals"]], "julearn.prepare": [[31, 5, 1, "", "check_consistency"], [32, 5, 1, "", "prepare_input_data"]], "julearn.scoring": [[34, 5, 1, "", "check_scoring"], [35, 5, 1, "", "get_scorer"], [36, 5, 1, "", "list_scorers"], [78, 3, 0, "-", "metrics"], [39, 5, 1, "", "register_scorer"], [40, 5, 1, "", "reset_scorer_register"]], "julearn.scoring.metrics": [[37, 5, 1, "", "r2_corr"], [38, 5, 1, "", "r_corr"]], "julearn.stats": [[41, 5, 1, "", "corrected_ttest"]], "julearn.transformers": [[42, 0, 1, "", "CBPM"], [43, 0, 1, "", "ChangeColumnTypes"], [44, 0, 1, "", "DropColumns"], [45, 0, 1, "", "FilterColumns"], [46, 0, 1, "", "JuColumnTransformer"], [47, 0, 1, "", "SetColumnTypes"], [49, 5, 1, "", "get_transformer"], [50, 5, 1, "", "list_transformers"], [51, 5, 1, "", "register_transformer"], [52, 5, 1, "", "reset_transformer_register"], [80, 3, 0, "-", "target"]], "julearn.transformers.CBPM": [[42, 1, 1, "", "__init__"], [42, 1, 1, "", "aggregate"], [42, 1, 1, "", "fit"], [42, 1, 1, "", "fit_transform"], [42, 1, 1, "", "get_feature_names_out"], [42, 1, 1, "", "get_metadata_routing"], [42, 1, 1, "", "get_params"], [42, 1, 1, "", "set_output"], [42, 1, 1, "", "set_params"], [42, 1, 1, "", "transform"]], "julearn.transformers.ChangeColumnTypes": [[43, 1, 1, "", "__init__"], [43, 1, 1, "", "filter_columns"], [43, 1, 1, "", "fit"], [43, 1, 1, "", "fit_transform"], [43, 1, 1, "", "get_apply_to"], [43, 1, 1, "", "get_feature_names_out"], [43, 1, 1, "", "get_metadata_routing"], [43, 1, 1, "", "get_needed_types"], [43, 1, 1, "", "get_params"], [43, 1, 1, "", "set_output"], [43, 1, 1, "", "set_params"], [43, 1, 1, "", "transform"]], "julearn.transformers.DropColumns": [[44, 1, 1, "", "__init__"], [44, 1, 1, "", "filter_columns"], [44, 1, 1, "", "fit"], [44, 1, 1, "", "fit_transform"], [44, 1, 1, "", "get_apply_to"], [44, 1, 1, "", "get_metadata_routing"], [44, 1, 1, "", "get_needed_types"], [44, 1, 1, "", "get_params"], [44, 1, 1, "", "get_support"], [44, 1, 1, "", "set_output"], [44, 1, 1, "", "set_params"], [44, 1, 1, "", "transform"]], "julearn.transformers.FilterColumns": [[45, 1, 1, "", "__init__"], [45, 1, 1, "", "filter_columns"], [45, 1, 1, "", "fit"], [45, 1, 1, "", "fit_transform"], [45, 1, 1, "", "get_apply_to"], [45, 1, 1, "", "get_feature_names_out"], [45, 1, 1, "", "get_metadata_routing"], [45, 1, 1, "", "get_needed_types"], [45, 1, 1, "", "get_params"], [45, 1, 1, "", "set_output"], [45, 1, 1, "", "set_params"], [45, 1, 1, "", "transform"]], "julearn.transformers.JuColumnTransformer": [[46, 1, 1, "", "__init__"], [46, 1, 1, "", "filter_columns"], [46, 1, 1, "", "fit"], [46, 1, 1, "", "fit_transform"], [46, 1, 1, "", "get_apply_to"], [46, 1, 1, "", "get_feature_names_out"], [46, 1, 1, "", "get_metadata_routing"], [46, 1, 1, "", "get_needed_types"], [46, 1, 1, "", "get_params"], [46, 1, 1, "", "set_output"], [46, 1, 1, "", "set_params"], [46, 1, 1, "", "transform"]], "julearn.transformers.SetColumnTypes": [[47, 1, 1, "", "__init__"], [47, 1, 1, "", "filter_columns"], [47, 1, 1, "", "fit"], [47, 1, 1, "", "fit_transform"], [47, 1, 1, "", "get_apply_to"], [47, 1, 1, "", "get_feature_names_out"], [47, 1, 1, "", "get_metadata_routing"], [47, 1, 1, "", "get_needed_types"], [47, 1, 1, "", "get_params"], [47, 1, 1, "", "set_output"], [47, 1, 1, "", "set_params"], [47, 1, 1, "", "transform"]], "julearn.transformers.confound_remover": [[48, 0, 1, "", "ConfoundRemover"]], "julearn.transformers.confound_remover.ConfoundRemover": [[48, 1, 1, "", "__init__"], [48, 1, 1, "", "filter_columns"], [48, 1, 1, "", "fit"], [48, 1, 1, "", "fit_transform"], [48, 1, 1, "", "get_apply_to"], [48, 1, 1, "", "get_feature_names_out"], [48, 1, 1, "", "get_metadata_routing"], [48, 1, 1, "", "get_needed_types"], [48, 1, 1, "", "get_params"], [48, 1, 1, "", "get_support"], [48, 1, 1, "", "set_output"], [48, 1, 1, "", "set_params"], [48, 1, 1, "", "transform"]], "julearn.transformers.target": [[53, 0, 1, "", "JuTargetTransformer"], [54, 0, 1, "", "JuTransformedTargetModel"], [55, 0, 1, "", "TargetConfoundRemover"], [56, 0, 1, "", "TransformedTargetWarning"], [57, 5, 1, "", "get_target_transformer"], [58, 5, 1, "", "list_target_transformers"], [59, 5, 1, "", "register_target_transformer"], [60, 5, 1, "", "reset_target_transformer_register"]], "julearn.transformers.target.JuTargetTransformer": [[53, 1, 1, "", "__init__"], [53, 1, 1, "", "fit"], [53, 1, 1, "", "fit_transform"], [53, 1, 1, "", "transform"]], "julearn.transformers.target.JuTransformedTargetModel": [[54, 1, 1, "", "__init__"], [54, 1, 1, "", "can_inverse_transform"], [54, 2, 1, "", "classes_"], [54, 1, 1, "", "decision_function"], [54, 1, 1, "", "filter_columns"], [54, 1, 1, "", "fit"], [54, 1, 1, "", "get_apply_to"], [54, 1, 1, "", "get_metadata_routing"], [54, 1, 1, "", "get_needed_types"], [54, 1, 1, "", "get_params"], [54, 1, 1, "", "predict"], [54, 1, 1, "", "predict_proba"], [54, 1, 1, "", "score"], [54, 1, 1, "", "set_params"], [54, 1, 1, "", "transform_target"]], "julearn.transformers.target.TargetConfoundRemover": [[55, 1, 1, "", "__init__"], [55, 1, 1, "", "fit"], [55, 1, 1, "", "fit_transform"], [55, 2, 1, "", "needed_types"], [55, 1, 1, "", "transform"]], "julearn.transformers.target.TransformedTargetWarning": [[56, 1, 1, "", "__init__"], [56, 4, 1, "", "args"], [56, 1, 1, "", "with_traceback"]], "julearn.utils": [[61, 5, 1, "", "configure_logging"], [62, 4, 1, "", "logger"], [63, 5, 1, "", "raise_error"], [81, 3, 0, "-", "typing"], [69, 5, 1, "", "warn_with_log"]], "julearn.utils.typing": [[64, 4, 1, "", "EstimatorLike"], [65, 0, 1, "", "EstimatorLikeFit1"], [66, 0, 1, "", "EstimatorLikeFit2"], [67, 0, 1, "", "EstimatorLikeFity"], [68, 0, 1, "", "JuEstimatorLike"]], "julearn.utils.typing.EstimatorLikeFit1": [[65, 1, 1, "", "__init__"], [65, 1, 1, "", "fit"], [65, 1, 1, "", "get_params"], [65, 1, 1, "", "set_params"]], "julearn.utils.typing.EstimatorLikeFit2": [[66, 1, 1, "", "__init__"], [66, 1, 1, "", "fit"], [66, 1, 1, "", "get_params"], [66, 1, 1, "", "set_params"]], "julearn.utils.typing.EstimatorLikeFity": [[67, 1, 1, "", "__init__"], [67, 1, 1, "", "fit"], [67, 1, 1, "", "get_params"], [67, 1, 1, "", "set_params"]], "julearn.utils.typing.JuEstimatorLike": [[68, 1, 1, "", "__init__"], [68, 1, 1, "", "fit"], [68, 1, 1, "", "get_apply_to"], [68, 1, 1, "", "get_needed_types"], [68, 1, 1, "", "get_params"], [68, 1, 1, "", "set_params"]], "julearn.viz": [[70, 5, 1, "", "plot_scores"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:module", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "module", "Python module"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"base": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 123], "class": [0, 72, 74, 75, 76, 80, 81], "function": [0, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 113], "julearn": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 83, 116, 121, 123, 124, 137], "pipelinecr": [1, 136], "exampl": [1, 2, 13, 14, 16, 19, 33, 36, 39, 41, 61, 70, 117, 118], "us": [1, 2, 13, 14, 16, 19, 33, 36, 39, 41, 61, 70, 105, 110, 119, 124, 136], "targetpipelinecr": 2, "columntyp": 3, "columntypeslik": 4, "jubaseestim": 5, "jutransform": 6, "wrapmodel": 7, "change_column_typ": 8, "ensure_column_typ": 9, "get_column_typ": 10, "make_type_selector": 11, "inspect": [12, 13, 14, 72, 94, 95, 96, 98, 128], "foldsinspector": 12, "inspector": 13, "preprocess": [14, 97, 130, 136], "model_select": [15, 16, 17, 18, 19, 20, 21, 22, 23], "continuousstratifiedgroupkfold": 15, "continuousstratifiedkfold": 16, "repeatedcontinuousstratifiedgroupkfold": 17, "repeatedcontinuousstratifiedkfold": 18, "stratifiedbootstrap": 19, "get_search": 20, "list_search": 21, "register_search": 22, "reset_searcher_regist": 23, "model": [24, 25, 26, 27, 28, 74, 75, 91, 92, 95, 96, 100, 109, 115, 123, 126, 128, 129, 134, 135, 136], "dynam": [24, 75, 115], "dynamicselect": 24, "get_model": 25, "list_model": 26, "register_model": 27, "reset_model_regist": 28, "pipelin": [29, 30, 76, 115, 136], "jutargetpipelin": 29, "pipeline_cr": 30, "step": [30, 115], "prepar": [31, 32, 77], "check_consist": 31, "prepare_input_data": 32, "run_cross_valid": [33, 131, 132, 135, 136], "score": [34, 35, 36, 37, 38, 39, 40, 78, 101, 113, 134, 135], "check_scor": 34, "get_scor": 35, "list_scor": 36, "metric": [37, 38, 78, 135], "r2_corr": 37, "r_corr": 38, "register_scor": 39, "reset_scorer_regist": 40, "stat": [41, 79], "corrected_ttest": 41, "transform": [42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 80, 101, 115], "cbpm": [42, 123], "changecolumntyp": 43, "dropcolumn": 44, "filtercolumn": 45, "jucolumntransform": 46, "setcolumntyp": 47, "confound_remov": 48, "confoundremov": 48, "get_transform": 49, "list_transform": 50, "register_transform": 51, "reset_transformer_regist": 52, "target": [53, 54, 55, 56, 57, 58, 59, 60, 80, 101, 124, 130], "jutargettransform": 53, "jutransformedtargetmodel": 54, "targetconfoundremov": 55, "transformedtargetwarn": 56, "get_target_transform": 57, "list_target_transform": 58, "register_target_transform": 59, "reset_target_transformer_regist": 60, "util": [61, 62, 63, 64, 65, 66, 67, 68, 69, 81], "configure_log": 61, "logger": 62, "raise_error": 63, "type": [64, 65, 66, 67, 68, 81, 129, 132, 136], "estimatorlik": 64, "estimatorlikefit1": 65, "estimatorlikefit2": 66, "estimatorlikef": 67, "juestimatorlik": 68, "warn_with_log": 69, "viz": [70, 119], "plot_scor": 70, "api": [71, 73, 137], "refer": [71, 87, 88, 95, 103, 104, 105, 123, 124, 125, 131, 136], "main": 73, "select": [74, 75, 115, 127, 136], "deslib": 75, "visual": [82, 134], "start": [83, 120], "multiclass": 84, "classif": [84, 89, 106], "regress": [85, 86, 102, 113, 124], "analysi": [85, 86, 102], "stratifi": 86, "k": 86, "fold": [86, 98], "cv": [86, 88], "work": 87, "panda": 87, "merg": 87, "join": 87, "datafram": [87, 115], "group": [88, 125], "deal": [88, 95], "cross": [88, 95, 124, 125, 131, 135], "valid": [88, 95, 124, 125, 131, 135], "techniqu": [88, 95], "simpl": [89, 92], "binari": 89, "comput": [90, 93, 99, 107, 111, 114], "time": [90, 93, 99, 107, 111, 114], "comparison": [91, 92, 109, 134], "svm": 95, "random": 96, "forest": 96, "variabl": [96, 101], "import": 96, "varianc": 97, "threshold": 97, "zscore": 97, "pca": 97, "wise": 98, "predict": [98, 123], "complex": 100, "z": 101, "tune": [103, 104, 105, 126], "multipl": 103, "hyperparamet": [103, 104, 105, 126, 136], "grid": [103, 126], "stack": [106, 129], "confound": [108, 109, 110, 124], "remov": [109, 110, 124], "return": [110, 135], "typic": 110, "case": 110, "custom": [112, 113, 115], "overview": 115, "avail": 115, "scaler": 115, "featur": [115, 124, 129, 132, 136, 137], "oper": 115, "decomposit": 115, "estim": [115, 129, 135], "support": 115, "vector": 115, "machin": 115, "ensembl": 115, "gaussian": 115, "process": 115, "linear": 115, "naiv": 115, "bay": 115, "dummi": 115, "configur": 116, "contribut": 117, "set": [117, 136], "up": 117, "local": 117, "develop": 117, "environ": 117, "github": 117, "pull": 117, "request": 117, "guidelin": 117, "run": 117, "unit": 117, "test": 117, "ad": 117, "build": [117, 136], "document": [117, 121, 137], "write": 117, "content": [118, 121, 127], "faq": 119, "i": [119, 121, 124], "have": 119, "issu": 119, "depend": [119, 120], "modul": 119, "how": 119, "do": 119, "interact": 119, "plot": 119, "get": 120, "requir": 120, "setup": 120, "suggest": 120, "instal": 120, "option": 120, "welcom": 121, "": [121, 137], "what": [121, 133, 137], "why": [121, 131], "tabl": [121, 127], "indic": 121, "maintain": 122, "version": 122, "releas": 122, "new": [122, 137], "connectom": 123, "consist": 124, "from": 124, "should": 124, "splitter": [125, 135], "stratif": 125, "paramet": 126, "v": 126, "searcher": 126, "more": 126, "than": 126, "one": 126, "deeper": 127, "topic": 127, "fit": 129, "each": 129, "all": 129, "specif": [129, 136], "appli": 130, "The": [131, 135], "fundament": 131, "essenc": 131, "data": 132, "input": 132, "give": 132, "you": 133, "realli": 133, "need": 133, "know": 133, "statist": 134, "evalu": 135, "output": 135, "made": 136, "easi": 136, "0": 137, "2": 137, "5": 137, "2022": 137, "07": 137, "21": 137, "chang": 137, "bugfix": 137, "improv": 137, "enhanc": 137, "3": 137, "1": 137, "dev105": [], "2024": 137, "01": 137, "23": 137, "misc": 137, "2023": 137, "19": 137, "bayesian": 105, "search": 105, "specifi": 126, "distribut": 126, "05": 137, "03": 137}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Base": [[0, "module-julearn.base"]], "Classes": [[0, "classes"], [72, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [80, "classes"], [80, "id1"], [81, "classes"], [81, "id1"]], "Functions": [[0, "functions"], [72, "functions"], [73, "functions"], [74, "functions"], [75, "functions"], [77, "functions"], [78, "functions"], [78, "id1"], [79, "functions"], [80, "functions"], [80, "id2"], [81, "functions"], [82, "functions"]], "julearn.PipelineCreator": [[1, "julearn-pipelinecreator"]], "Examples using julearn.PipelineCreator": [[1, "examples-using-julearn-pipelinecreator"]], "julearn.TargetPipelineCreator": [[2, "julearn-targetpipelinecreator"]], "Examples using julearn.TargetPipelineCreator": [[2, "examples-using-julearn-targetpipelinecreator"]], "julearn.base.ColumnTypes": [[3, "julearn-base-columntypes"]], "julearn.base.ColumnTypesLike": [[4, "julearn-base-columntypeslike"]], "julearn.base.JuBaseEstimator": [[5, "julearn-base-jubaseestimator"]], "julearn.base.JuTransformer": [[6, "julearn-base-jutransformer"]], "julearn.base.WrapModel": [[7, "julearn-base-wrapmodel"]], "julearn.base.change_column_type": [[8, "julearn-base-change-column-type"]], "julearn.base.ensure_column_types": [[9, "julearn-base-ensure-column-types"]], "julearn.base.get_column_type": [[10, "julearn-base-get-column-type"]], "julearn.base.make_type_selector": [[11, "julearn-base-make-type-selector"]], "julearn.inspect.FoldsInspector": [[12, "julearn-inspect-foldsinspector"]], "julearn.inspect.Inspector": [[13, "julearn-inspect-inspector"]], "Examples using julearn.inspect.Inspector": [[13, "examples-using-julearn-inspect-inspector"]], "julearn.inspect.preprocess": [[14, "julearn-inspect-preprocess"]], "Examples using julearn.inspect.preprocess": [[14, "examples-using-julearn-inspect-preprocess"]], "julearn.model_selection.ContinuousStratifiedGroupKFold": [[15, "julearn-model-selection-continuousstratifiedgroupkfold"]], "julearn.model_selection.ContinuousStratifiedKFold": [[16, "julearn-model-selection-continuousstratifiedkfold"]], "Examples using julearn.model_selection.ContinuousStratifiedKFold": [[16, "examples-using-julearn-model-selection-continuousstratifiedkfold"]], "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold": [[17, "julearn-model-selection-repeatedcontinuousstratifiedgroupkfold"]], "julearn.model_selection.RepeatedContinuousStratifiedKFold": [[18, "julearn-model-selection-repeatedcontinuousstratifiedkfold"]], "julearn.model_selection.StratifiedBootstrap": [[19, "julearn-model-selection-stratifiedbootstrap"]], "Examples using julearn.model_selection.StratifiedBootstrap": [[19, "examples-using-julearn-model-selection-stratifiedbootstrap"]], "julearn.model_selection.get_searcher": [[20, "julearn-model-selection-get-searcher"]], "julearn.model_selection.list_searchers": [[21, "julearn-model-selection-list-searchers"]], "julearn.model_selection.register_searcher": [[22, "julearn-model-selection-register-searcher"]], "julearn.model_selection.reset_searcher_register": [[23, "julearn-model-selection-reset-searcher-register"]], "julearn.models.dynamic.DynamicSelection": [[24, "julearn-models-dynamic-dynamicselection"]], "julearn.models.get_model": [[25, "julearn-models-get-model"]], "julearn.models.list_models": [[26, "julearn-models-list-models"]], "julearn.models.register_model": [[27, "julearn-models-register-model"]], "julearn.models.reset_model_register": [[28, "julearn-models-reset-model-register"]], "julearn.pipeline.JuTargetPipeline": [[29, "julearn-pipeline-jutargetpipeline"]], "julearn.pipeline.pipeline_creator.Step": [[30, "julearn-pipeline-pipeline-creator-step"]], "julearn.prepare.check_consistency": [[31, "julearn-prepare-check-consistency"]], "julearn.prepare.prepare_input_data": [[32, "julearn-prepare-prepare-input-data"]], "julearn.run_cross_validation": [[33, "julearn-run-cross-validation"]], "Examples using julearn.run_cross_validation": [[33, "examples-using-julearn-run-cross-validation"]], "julearn.scoring.check_scoring": [[34, "julearn-scoring-check-scoring"]], "julearn.scoring.get_scorer": [[35, "julearn-scoring-get-scorer"]], "julearn.scoring.list_scorers": [[36, "julearn-scoring-list-scorers"]], "Examples using julearn.scoring.list_scorers": [[36, "examples-using-julearn-scoring-list-scorers"]], "julearn.scoring.metrics.r2_corr": [[37, "julearn-scoring-metrics-r2-corr"]], "julearn.scoring.metrics.r_corr": [[38, "julearn-scoring-metrics-r-corr"]], "julearn.scoring.register_scorer": [[39, "julearn-scoring-register-scorer"]], "Examples using julearn.scoring.register_scorer": [[39, "examples-using-julearn-scoring-register-scorer"]], "julearn.scoring.reset_scorer_register": [[40, "julearn-scoring-reset-scorer-register"]], "julearn.stats.corrected_ttest": [[41, "julearn-stats-corrected-ttest"]], "Examples using julearn.stats.corrected_ttest": [[41, "examples-using-julearn-stats-corrected-ttest"]], "julearn.transformers.CBPM": [[42, "julearn-transformers-cbpm"]], "julearn.transformers.ChangeColumnTypes": [[43, "julearn-transformers-changecolumntypes"]], "julearn.transformers.DropColumns": [[44, "julearn-transformers-dropcolumns"]], "julearn.transformers.FilterColumns": [[45, "julearn-transformers-filtercolumns"]], "julearn.transformers.JuColumnTransformer": [[46, "julearn-transformers-jucolumntransformer"]], "julearn.transformers.SetColumnTypes": [[47, "julearn-transformers-setcolumntypes"]], "julearn.transformers.confound_remover.ConfoundRemover": [[48, "julearn-transformers-confound-remover-confoundremover"]], "julearn.transformers.get_transformer": [[49, "julearn-transformers-get-transformer"]], "julearn.transformers.list_transformers": [[50, "julearn-transformers-list-transformers"]], "julearn.transformers.register_transformer": [[51, "julearn-transformers-register-transformer"]], "julearn.transformers.reset_transformer_register": [[52, "julearn-transformers-reset-transformer-register"]], "julearn.transformers.target.JuTargetTransformer": [[53, "julearn-transformers-target-jutargettransformer"]], "julearn.transformers.target.JuTransformedTargetModel": [[54, "julearn-transformers-target-jutransformedtargetmodel"]], "julearn.transformers.target.TargetConfoundRemover": [[55, "julearn-transformers-target-targetconfoundremover"]], "julearn.transformers.target.TransformedTargetWarning": [[56, "julearn-transformers-target-transformedtargetwarning"]], "julearn.transformers.target.get_target_transformer": [[57, "julearn-transformers-target-get-target-transformer"]], "julearn.transformers.target.list_target_transformers": [[58, "julearn-transformers-target-list-target-transformers"]], "julearn.transformers.target.register_target_transformer": [[59, "julearn-transformers-target-register-target-transformer"]], "julearn.transformers.target.reset_target_transformer_register": [[60, "julearn-transformers-target-reset-target-transformer-register"]], "julearn.utils.configure_logging": [[61, "julearn-utils-configure-logging"]], "Examples using julearn.utils.configure_logging": [[61, "examples-using-julearn-utils-configure-logging"]], "julearn.utils.logger": [[62, "julearn-utils-logger"]], "julearn.utils.raise_error": [[63, "julearn-utils-raise-error"]], "julearn.utils.typing.EstimatorLike": [[64, "julearn-utils-typing-estimatorlike"]], "julearn.utils.typing.EstimatorLikeFit1": [[65, "julearn-utils-typing-estimatorlikefit1"]], "julearn.utils.typing.EstimatorLikeFit2": [[66, "julearn-utils-typing-estimatorlikefit2"]], "julearn.utils.typing.EstimatorLikeFity": [[67, "julearn-utils-typing-estimatorlikefity"]], "julearn.utils.typing.JuEstimatorLike": [[68, "julearn-utils-typing-juestimatorlike"]], "julearn.utils.warn_with_log": [[69, "julearn-utils-warn-with-log"]], "julearn.viz.plot_scores": [[70, "julearn-viz-plot-scores"]], "Examples using julearn.viz.plot_scores": [[70, "examples-using-julearn-viz-plot-scores"]], "API Reference": [[71, "api-reference"]], "Inspect": [[72, "module-julearn.inspect"]], "Main API": [[73, "module-julearn.api"]], "Model Selection": [[74, "module-julearn.model_selection"]], "Models": [[75, "module-julearn.models"]], "Dynamic Selection (DESLib)": [[75, "dynamic-selection-deslib"]], "Pipeline": [[76, "module-julearn.pipeline"]], "Prepare": [[77, "module-julearn.prepare"]], "Scoring": [[78, "module-julearn.scoring"]], "Scoring Metrics": [[78, "module-julearn.scoring.metrics"]], "Stats": [[79, "module-julearn.stats"]], "Transformers": [[80, "module-julearn.transformers"], [115, "transformers"]], "Target Transformers": [[80, "module-julearn.transformers.target"]], "Utils": [[81, "module-julearn.utils"]], "Typing": [[81, "module-julearn.utils.typing"]], "Visualization": [[82, "visualization"]], "Starting with julearn": [[83, "starting-with-julearn"]], "Multiclass Classification": [[84, "multiclass-classification"]], "Regression Analysis": [[85, "regression-analysis"], [102, "regression-analysis"]], "Stratified K-fold CV for regression analysis": [[86, "stratified-k-fold-cv-for-regression-analysis"]], "Working with pandas": [[87, "working-with-pandas"]], "References": [[87, "references"], [88, "references"], [95, "references"], [103, "references"], [104, "references"], [105, "references"]], "Merging or joining DataFrame": [[87, "merging-or-joining-dataframe"]], "Grouped CV": [[88, "grouped-cv"]], "Dealing with Cross-Validation techniques": [[88, "dealing-with-cross-validation-techniques"], [95, "dealing-with-cross-validation-techniques"]], "Simple Binary Classification": [[89, "simple-binary-classification"]], "Computation times": [[90, "computation-times"], [93, "computation-times"], [99, "computation-times"], [107, "computation-times"], [111, "computation-times"], [114, "computation-times"]], "Model Comparison": [[91, "model-comparison"], [134, "model-comparison"]], "Simple Model Comparison": [[92, "simple-model-comparison"]], "Inspection": [[94, "inspection"]], "Inspecting SVM models": [[95, "inspecting-svm-models"]], "Inspecting Random Forest models": [[96, "inspecting-random-forest-models"]], "Random Forest variable importance": [[96, "random-forest-variable-importance"]], "Preprocessing with variance threshold, zscore and PCA": [[97, "preprocessing-with-variance-threshold-zscore-and-pca"]], "Inspecting the fold-wise predictions": [[98, "inspecting-the-fold-wise-predictions"]], "Complex Models": [[100, "complex-models"]], "Transforming target variable with z-score": [[101, "transforming-target-variable-with-z-score"]], "Tuning Multiple Hyperparameters Grids": [[103, "tuning-multiple-hyperparameters-grids"]], "Tuning Hyperparameters": [[104, "tuning-hyperparameters"]], "Tuning Hyperparameters using Bayesian Search": [[105, "tuning-hyperparameters-using-bayesian-search"]], "Stacking Classification": [[106, "stacking-classification"]], "Confounds": [[108, "confounds"]], "Confound Removal (model comparison)": [[109, "confound-removal-model-comparison"]], "Return Confounds in Confound Removal": [[110, "return-confounds-in-confound-removal"]], "Confound Removal Typical Use Case": [[110, "confound-removal-typical-use-case"]], "Customization": [[112, "customization"]], "Custom Scoring Function for Regression": [[113, "custom-scoring-function-for-regression"]], "Overview of available Pipeline Steps": [[115, "overview-of-available-pipeline-steps"]], "Scalers": [[115, "scalers"]], "Feature Selection": [[115, "feature-selection"]], "DataFrame operations": [[115, "dataframe-operations"]], "Decomposition": [[115, "decomposition"]], "Custom": [[115, "custom"]], "Models (Estimators)": [[115, "models-estimators"]], "Support Vector Machines": [[115, "support-vector-machines"]], "Ensemble": [[115, "ensemble"]], "Gaussian Processes": [[115, "gaussian-processes"]], "Linear Models": [[115, "linear-models"]], "Naive Bayes": [[115, "naive-bayes"]], "Dynamic Selection": [[115, "dynamic-selection"]], "Dummy": [[115, "dummy"]], "Configuring julearn": [[116, "configuring-julearn"]], "Contributing": [[117, "contributing"]], "Setting up the local development environment": [[117, "setting-up-the-local-development-environment"]], "GitHub Pull Request guidelines": [[117, "github-pull-request-guidelines"]], "Running unit tests": [[117, "running-unit-tests"]], "Adding and building documentation": [[117, "adding-and-building-documentation"]], "Writing Examples": [[117, "writing-examples"]], "Examples": [[118, "examples"]], "Contents:": [[118, null]], "FAQs": [[119, "faqs"]], "I have issues with the dependencies for the viz module.": [[119, "i-have-issues-with-the-dependencies-for-the-viz-module"]], "How do I use the viz interactive plots?": [[119, "how-do-i-use-the-viz-interactive-plots"]], "Getting started": [[120, "getting-started"]], "Requirements": [[120, "requirements"]], "Setup suggestion": [[120, "setup-suggestion"]], "Installing": [[120, "installing"]], "Optional Dependencies": [[120, "optional-dependencies"]], "Welcome to julearn\u2019s documentation!": [[121, "welcome-to-julearn-s-documentation"]], "What is julearn?": [[121, "what-is-julearn"]], "Why julearn?": [[121, "why-julearn"]], "Table of Contents": [[121, "table-of-contents"], [127, null]], "Indices and tables": [[121, "indices-and-tables"], [121, "id1"]], "Maintaining": [[122, "maintaining"]], "Versioning": [[122, "versioning"]], "Releasing a new version": [[122, "releasing-a-new-version"]], "Connectome-based Predictive Modeling (CBPM)": [[123, "connectome-based-predictive-modeling-cbpm"]], "CBPM in julearn": [[123, "cbpm-in-julearn"]], "References:": [[123, null], [124, null], [125, null], [131, null], [136, null]], "Cross-validation consistent Confound Removal": [[124, "cross-validation-consistent-confound-removal"]], "Confound Removal in julearn": [[124, "confound-removal-in-julearn"]], "Removing Confounds from the Features": [[124, "removing-confounds-from-the-features"]], "Removing Confounds from the Target": [[124, "removing-confounds-from-the-target"]], "Should I use Confound Regression?": [[124, "should-i-use-confound-regression"]], "Cross-validation splitters": [[125, "cross-validation-splitters"], [135, "cross-validation-splitters"]], "Stratification": [[125, "stratification"]], "Grouping": [[125, "grouping"]], "Hyperparameter Tuning": [[126, "hyperparameter-tuning"], [126, "id1"]], "Parameters vs Hyperparameters": [[126, "parameters-vs-hyperparameters"]], "Searchers": [[126, "searchers"]], "Specifying distributions": [[126, "specifying-distributions"]], "Tuning more than one grid": [[126, "tuning-more-than-one-grid"]], "Models as hyperparameters": [[126, "models-as-hyperparameters"]], "Selected deeper topics": [[127, "selected-deeper-topics"]], "Inspecting Models": [[128, "inspecting-models"]], "Stacking Models": [[129, "stacking-models"]], "Fitting each estimator on all of the features": [[129, "fitting-each-estimator-on-all-of-the-features"]], "Fitting each estimator on a specific feature type": [[129, "fitting-each-estimator-on-a-specific-feature-type"]], "Applying preprocessing to the target": [[130, "applying-preprocessing-to-the-target"]], "Why cross validation?": [[131, "why-cross-validation"]], "Cross-validation - The fundamentals": [[131, "cross-validation-the-fundamentals"]], "The essence of run_cross_validation()": [[131, "the-essence-of-run-cross-validation"]], "Data": [[132, "data"]], "Data input to run_cross_validation()": [[132, "data-input-to-run-cross-validation"]], "Giving types to features": [[132, "giving-types-to-features"]], "What you really need to know": [[133, "what-you-really-need-to-know"]], "Statistical comparisons": [[134, "statistical-comparisons"]], "Score visualizations": [[134, "score-visualizations"]], "Model Evaluation": [[135, "model-evaluation"]], "The output of run_cross_validation()": [[135, "the-output-of-run-cross-validation"]], "Cross-validation scores": [[135, "cross-validation-scores"]], "Returning a model (estimator)": [[135, "returning-a-model-estimator"]], "Scoring metrics": [[135, "scoring-metrics"]], "Model Building": [[136, "model-building"]], "Pipeline specification in run_cross_validation()": [[136, "pipeline-specification-in-run-cross-validation"]], "Feature preprocessing": [[136, "feature-preprocessing"]], "Pipeline specification made easy with the PipelineCreator": [[136, "pipeline-specification-made-easy-with-the-pipelinecreator"]], "Setting hyperparameters": [[136, "setting-hyperparameters"]], "Selective preprocessing using feature types": [[136, "selective-preprocessing-using-feature-types"]], "What\u2019s new": [[137, "what-s-new"]], "Julearn 0.3.2 (2024-05-03)": [[137, "julearn-0-3-2-2024-05-03"]], "Bugfixes": [[137, "bugfixes"], [137, "id1"], [137, "id6"]], "Improved Documentation": [[137, "improved-documentation"], [137, "id2"], [137, "id7"]], "Enhancements": [[137, "enhancements"], [137, "id3"], [137, "id8"]], "Features": [[137, "features"], [137, "id4"], [137, "id9"]], "Misc": [[137, "misc"], [137, "id5"]], "Julearn 0.3.1 (2024-01-23)": [[137, "julearn-0-3-1-2024-01-23"]], "Julearn 0.3.0 (2023-07-19)": [[137, "julearn-0-3-0-2023-07-19"]], "Julearn 0.2.5 (2022-07-21)": [[137, "julearn-0-2-5-2022-07-21"]], "API Changes": [[137, "api-changes"]]}, "indexentries": {"julearn.base": [[0, "module-julearn.base"]], "module": [[0, "module-julearn.base"], [72, "module-julearn.inspect"], [73, "module-julearn.api"], [74, "module-julearn.model_selection"], [75, "module-julearn.models"], [75, "module-julearn.models.dynamic"], [76, "module-julearn.pipeline"], [77, "module-julearn.prepare"], [78, "module-julearn.scoring"], [78, "module-julearn.scoring.metrics"], [79, "module-julearn.stats"], [80, "module-julearn.transformers"], [80, "module-julearn.transformers.target"], [81, "module-julearn.utils"], [81, "module-julearn.utils.typing"], [82, "module-julearn.viz"]], "pipelinecreator (class in julearn)": [[1, "julearn.PipelineCreator"]], "__init__() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.__init__"]], "add() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.add"]], "copy() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.copy"]], "from_list() (julearn.pipelinecreator class method)": [[1, "julearn.PipelineCreator.from_list"]], "has_model() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.has_model"]], "split() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.split"]], "steps (julearn.pipelinecreator property)": [[1, "julearn.PipelineCreator.steps"]], "to_pipeline() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.to_pipeline"]], "targetpipelinecreator (class in julearn)": [[2, "julearn.TargetPipelineCreator"]], "__init__() (julearn.targetpipelinecreator method)": [[2, "julearn.TargetPipelineCreator.__init__"]], "add() (julearn.targetpipelinecreator method)": [[2, "julearn.TargetPipelineCreator.add"]], "to_pipeline() (julearn.targetpipelinecreator method)": [[2, "julearn.TargetPipelineCreator.to_pipeline"]], "columntypes (class in julearn.base)": [[3, "julearn.base.ColumnTypes"]], "__init__() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.__init__"]], "add() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.add"]], "copy() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.copy"]], "pattern (julearn.base.columntypes property)": [[3, "julearn.base.ColumnTypes.pattern"]], "to_type_selector() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.to_type_selector"]], "columntypeslike (in module julearn.base)": [[4, "julearn.base.ColumnTypesLike"]], "jubaseestimator (class in julearn.base)": [[5, "julearn.base.JuBaseEstimator"]], "__init__() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.__init__"]], "filter_columns() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.filter_columns"]], "get_apply_to() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.get_apply_to"]], "get_metadata_routing() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.get_metadata_routing"]], "get_needed_types() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.get_needed_types"]], "get_params() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.get_params"]], "set_params() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.set_params"]], "jutransformer (class in julearn.base)": [[6, "julearn.base.JuTransformer"]], "__init__() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.__init__"]], "filter_columns() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.filter_columns"]], "fit() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.fit"]], "fit_transform() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.fit_transform"]], "get_apply_to() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.get_apply_to"]], "get_metadata_routing() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.get_metadata_routing"]], "get_needed_types() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.get_needed_types"]], "get_params() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.get_params"]], "set_output() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.set_output"]], "set_params() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.set_params"]], "wrapmodel (class in julearn.base)": [[7, "julearn.base.WrapModel"]], "__init__() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.__init__"]], "classes_ (julearn.base.wrapmodel property)": [[7, "julearn.base.WrapModel.classes_"]], "decision_function() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.decision_function"]], "filter_columns() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.filter_columns"]], "fit() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.fit"]], "get_apply_to() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.get_apply_to"]], "get_metadata_routing() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.get_metadata_routing"]], "get_needed_types() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.get_needed_types"]], "get_params() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.get_params"]], "predict() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.predict"]], "predict_log_proba() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.predict_log_proba"]], "predict_proba() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.predict_proba"]], "score() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.score"]], "set_params() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.set_params"]], "change_column_type() (in module julearn.base)": [[8, "julearn.base.change_column_type"]], "ensure_column_types() (in module julearn.base)": [[9, "julearn.base.ensure_column_types"]], "get_column_type() (in module julearn.base)": [[10, "julearn.base.get_column_type"]], "make_type_selector() (in module julearn.base)": [[11, "julearn.base.make_type_selector"]], "foldsinspector (class in julearn.inspect)": [[12, "julearn.inspect.FoldsInspector"]], "__init__() (julearn.inspect.foldsinspector method)": [[12, "julearn.inspect.FoldsInspector.__init__"]], "decision_function() (julearn.inspect.foldsinspector method)": [[12, "julearn.inspect.FoldsInspector.decision_function"]], "predict() (julearn.inspect.foldsinspector method)": [[12, "julearn.inspect.FoldsInspector.predict"]], "predict_log_proba() (julearn.inspect.foldsinspector method)": [[12, "julearn.inspect.FoldsInspector.predict_log_proba"]], "predict_proba() (julearn.inspect.foldsinspector method)": [[12, "julearn.inspect.FoldsInspector.predict_proba"]], "inspector (class in julearn.inspect)": [[13, "julearn.inspect.Inspector"]], "__init__() (julearn.inspect.inspector method)": [[13, "julearn.inspect.Inspector.__init__"]], "folds (julearn.inspect.inspector property)": [[13, "julearn.inspect.Inspector.folds"]], "model (julearn.inspect.inspector property)": [[13, "julearn.inspect.Inspector.model"]], "preprocess() (in module julearn.inspect)": [[14, "julearn.inspect.preprocess"]], "continuousstratifiedgroupkfold (class in julearn.model_selection)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold"]], "__init__() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold.get_n_splits"]], "set_split_request() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold.set_split_request"]], "split() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold.split"]], "continuousstratifiedkfold (class in julearn.model_selection)": [[16, "julearn.model_selection.ContinuousStratifiedKFold"]], "__init__() (julearn.model_selection.continuousstratifiedkfold method)": [[16, "julearn.model_selection.ContinuousStratifiedKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.continuousstratifiedkfold method)": [[16, "julearn.model_selection.ContinuousStratifiedKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.continuousstratifiedkfold method)": [[16, "julearn.model_selection.ContinuousStratifiedKFold.get_n_splits"]], "split() (julearn.model_selection.continuousstratifiedkfold method)": [[16, "julearn.model_selection.ContinuousStratifiedKFold.split"]], "repeatedcontinuousstratifiedgroupkfold (class in julearn.model_selection)": [[17, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold"]], "__init__() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[17, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[17, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[17, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.get_n_splits"]], "split() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[17, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.split"]], "repeatedcontinuousstratifiedkfold (class in julearn.model_selection)": [[18, "julearn.model_selection.RepeatedContinuousStratifiedKFold"]], "__init__() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[18, "julearn.model_selection.RepeatedContinuousStratifiedKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[18, "julearn.model_selection.RepeatedContinuousStratifiedKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[18, "julearn.model_selection.RepeatedContinuousStratifiedKFold.get_n_splits"]], "split() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[18, "julearn.model_selection.RepeatedContinuousStratifiedKFold.split"]], "stratifiedbootstrap (class in julearn.model_selection)": [[19, "julearn.model_selection.StratifiedBootstrap"]], "__init__() (julearn.model_selection.stratifiedbootstrap method)": [[19, "julearn.model_selection.StratifiedBootstrap.__init__"]], "get_metadata_routing() (julearn.model_selection.stratifiedbootstrap method)": [[19, "julearn.model_selection.StratifiedBootstrap.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.stratifiedbootstrap method)": [[19, "julearn.model_selection.StratifiedBootstrap.get_n_splits"]], "split() (julearn.model_selection.stratifiedbootstrap method)": [[19, "julearn.model_selection.StratifiedBootstrap.split"]], "get_searcher() (in module julearn.model_selection)": [[20, "julearn.model_selection.get_searcher"]], "list_searchers() (in module julearn.model_selection)": [[21, "julearn.model_selection.list_searchers"]], "register_searcher() (in module julearn.model_selection)": [[22, "julearn.model_selection.register_searcher"]], "reset_searcher_register() (in module julearn.model_selection)": [[23, "julearn.model_selection.reset_searcher_register"]], "dynamicselection (class in julearn.models.dynamic)": [[24, "julearn.models.dynamic.DynamicSelection"]], "__init__() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.__init__"]], "fit() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.fit"]], "get_metadata_routing() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.get_metadata_routing"]], "get_params() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.get_params"]], "predict() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.predict"]], "predict_proba() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.predict_proba"]], "score() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.score"]], "set_params() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.set_params"]], "set_score_request() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.set_score_request"]], "get_model() (in module julearn.models)": [[25, "julearn.models.get_model"]], "list_models() (in module julearn.models)": [[26, "julearn.models.list_models"]], "register_model() (in module julearn.models)": [[27, "julearn.models.register_model"]], "reset_model_register() (in module julearn.models)": [[28, "julearn.models.reset_model_register"]], "jutargetpipeline (class in julearn.pipeline)": [[29, "julearn.pipeline.JuTargetPipeline"]], "__init__() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.__init__"]], "can_inverse_transform() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.can_inverse_transform"]], "fit() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.fit"]], "fit_transform() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.fit_transform"]], "inverse_transform() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.inverse_transform"]], "needed_types (julearn.pipeline.jutargetpipeline property)": [[29, "julearn.pipeline.JuTargetPipeline.needed_types"]], "transform() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.transform"]], "step (class in julearn.pipeline.pipeline_creator)": [[30, "julearn.pipeline.pipeline_creator.Step"]], "__init__() (julearn.pipeline.pipeline_creator.step method)": [[30, "julearn.pipeline.pipeline_creator.Step.__init__"]], "apply_to (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.apply_to"]], "estimator (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.estimator"]], "name (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.name"]], "needed_types (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.needed_types"]], "params_to_tune (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.params_to_tune"]], "row_select_col_type (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.row_select_col_type"]], "row_select_vals (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.row_select_vals"]], "check_consistency() (in module julearn.prepare)": [[31, "julearn.prepare.check_consistency"]], "prepare_input_data() (in module julearn.prepare)": [[32, "julearn.prepare.prepare_input_data"]], "run_cross_validation() (in module julearn)": [[33, "julearn.run_cross_validation"]], "check_scoring() (in module julearn.scoring)": [[34, "julearn.scoring.check_scoring"]], "get_scorer() (in module julearn.scoring)": [[35, "julearn.scoring.get_scorer"]], "list_scorers() (in module julearn.scoring)": [[36, "julearn.scoring.list_scorers"]], "r2_corr() (in module julearn.scoring.metrics)": [[37, "julearn.scoring.metrics.r2_corr"]], "r_corr() (in module julearn.scoring.metrics)": [[38, "julearn.scoring.metrics.r_corr"]], "register_scorer() (in module julearn.scoring)": [[39, "julearn.scoring.register_scorer"]], "reset_scorer_register() (in module julearn.scoring)": [[40, "julearn.scoring.reset_scorer_register"]], "corrected_ttest() (in module julearn.stats)": [[41, "julearn.stats.corrected_ttest"]], "cbpm (class in julearn.transformers)": [[42, "julearn.transformers.CBPM"]], "__init__() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.__init__"]], "aggregate() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.aggregate"]], "fit() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.fit"]], "fit_transform() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.fit_transform"]], "get_feature_names_out() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.get_metadata_routing"]], "get_params() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.get_params"]], "set_output() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.set_output"]], "set_params() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.set_params"]], "transform() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.transform"]], "changecolumntypes (class in julearn.transformers)": [[43, "julearn.transformers.ChangeColumnTypes"]], "__init__() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.__init__"]], "filter_columns() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.filter_columns"]], "fit() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.fit"]], "fit_transform() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.fit_transform"]], "get_apply_to() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.get_apply_to"]], "get_feature_names_out() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.get_metadata_routing"]], "get_needed_types() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.get_needed_types"]], "get_params() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.get_params"]], "set_output() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.set_output"]], "set_params() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.set_params"]], "transform() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.transform"]], "dropcolumns (class in julearn.transformers)": [[44, "julearn.transformers.DropColumns"]], "__init__() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.__init__"]], "filter_columns() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.filter_columns"]], "fit() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.fit"]], "fit_transform() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.fit_transform"]], "get_apply_to() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.get_apply_to"]], "get_metadata_routing() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.get_metadata_routing"]], "get_needed_types() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.get_needed_types"]], "get_params() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.get_params"]], "get_support() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.get_support"]], "set_output() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.set_output"]], "set_params() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.set_params"]], "transform() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.transform"]], "filtercolumns (class in julearn.transformers)": [[45, "julearn.transformers.FilterColumns"]], "__init__() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.__init__"]], "filter_columns() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.filter_columns"]], "fit() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.fit"]], "fit_transform() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.fit_transform"]], "get_apply_to() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.get_apply_to"]], "get_feature_names_out() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.get_metadata_routing"]], "get_needed_types() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.get_needed_types"]], "get_params() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.get_params"]], "set_output() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.set_output"]], "set_params() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.set_params"]], "transform() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.transform"]], "jucolumntransformer (class in julearn.transformers)": [[46, "julearn.transformers.JuColumnTransformer"]], "__init__() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.__init__"]], "filter_columns() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.filter_columns"]], "fit() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.fit"]], "fit_transform() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.fit_transform"]], "get_apply_to() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.get_apply_to"]], "get_feature_names_out() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.get_metadata_routing"]], "get_needed_types() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.get_needed_types"]], "get_params() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.get_params"]], "set_output() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.set_output"]], "set_params() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.set_params"]], "transform() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.transform"]], "setcolumntypes (class in julearn.transformers)": [[47, "julearn.transformers.SetColumnTypes"]], "__init__() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.__init__"]], "filter_columns() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.filter_columns"]], "fit() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.fit"]], "fit_transform() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.fit_transform"]], "get_apply_to() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.get_apply_to"]], "get_feature_names_out() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.get_metadata_routing"]], "get_needed_types() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.get_needed_types"]], "get_params() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.get_params"]], "set_output() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.set_output"]], "set_params() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.set_params"]], "transform() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.transform"]], "confoundremover (class in julearn.transformers.confound_remover)": [[48, "julearn.transformers.confound_remover.ConfoundRemover"]], "__init__() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.__init__"]], "filter_columns() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.filter_columns"]], "fit() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.fit"]], "fit_transform() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.fit_transform"]], "get_apply_to() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.get_apply_to"]], "get_feature_names_out() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.get_metadata_routing"]], "get_needed_types() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.get_needed_types"]], "get_params() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.get_params"]], "get_support() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.get_support"]], "set_output() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.set_output"]], "set_params() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.set_params"]], "transform() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.transform"]], "get_transformer() (in module julearn.transformers)": [[49, "julearn.transformers.get_transformer"]], "list_transformers() (in module julearn.transformers)": [[50, "julearn.transformers.list_transformers"]], "register_transformer() (in module julearn.transformers)": [[51, "julearn.transformers.register_transformer"]], "reset_transformer_register() (in module julearn.transformers)": [[52, "julearn.transformers.reset_transformer_register"]], "jutargettransformer (class in julearn.transformers.target)": [[53, "julearn.transformers.target.JuTargetTransformer"]], "__init__() (julearn.transformers.target.jutargettransformer method)": [[53, "julearn.transformers.target.JuTargetTransformer.__init__"]], "fit() (julearn.transformers.target.jutargettransformer method)": [[53, "julearn.transformers.target.JuTargetTransformer.fit"]], "fit_transform() (julearn.transformers.target.jutargettransformer method)": [[53, "julearn.transformers.target.JuTargetTransformer.fit_transform"]], "transform() (julearn.transformers.target.jutargettransformer method)": [[53, "julearn.transformers.target.JuTargetTransformer.transform"]], "jutransformedtargetmodel (class in julearn.transformers.target)": [[54, "julearn.transformers.target.JuTransformedTargetModel"]], "__init__() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.__init__"]], "can_inverse_transform() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.can_inverse_transform"]], "classes_ (julearn.transformers.target.jutransformedtargetmodel property)": [[54, "julearn.transformers.target.JuTransformedTargetModel.classes_"]], "decision_function() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.decision_function"]], "filter_columns() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.filter_columns"]], "fit() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.fit"]], "get_apply_to() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.get_apply_to"]], "get_metadata_routing() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.get_metadata_routing"]], "get_needed_types() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.get_needed_types"]], "get_params() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.get_params"]], "predict() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.predict"]], "predict_proba() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.predict_proba"]], "score() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.score"]], "set_params() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.set_params"]], "transform_target() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.transform_target"]], "targetconfoundremover (class in julearn.transformers.target)": [[55, "julearn.transformers.target.TargetConfoundRemover"]], "__init__() (julearn.transformers.target.targetconfoundremover method)": [[55, "julearn.transformers.target.TargetConfoundRemover.__init__"]], "fit() (julearn.transformers.target.targetconfoundremover method)": [[55, "julearn.transformers.target.TargetConfoundRemover.fit"]], "fit_transform() (julearn.transformers.target.targetconfoundremover method)": [[55, "julearn.transformers.target.TargetConfoundRemover.fit_transform"]], "needed_types (julearn.transformers.target.targetconfoundremover property)": [[55, "julearn.transformers.target.TargetConfoundRemover.needed_types"]], "transform() (julearn.transformers.target.targetconfoundremover method)": [[55, "julearn.transformers.target.TargetConfoundRemover.transform"]], "transformedtargetwarning (class in julearn.transformers.target)": [[56, "julearn.transformers.target.TransformedTargetWarning"]], "__init__() (julearn.transformers.target.transformedtargetwarning method)": [[56, "julearn.transformers.target.TransformedTargetWarning.__init__"]], "args (julearn.transformers.target.transformedtargetwarning attribute)": [[56, "julearn.transformers.target.TransformedTargetWarning.args"]], "with_traceback() (julearn.transformers.target.transformedtargetwarning method)": [[56, "julearn.transformers.target.TransformedTargetWarning.with_traceback"]], "get_target_transformer() (in module julearn.transformers.target)": [[57, "julearn.transformers.target.get_target_transformer"]], "list_target_transformers() (in module julearn.transformers.target)": [[58, "julearn.transformers.target.list_target_transformers"]], "register_target_transformer() (in module julearn.transformers.target)": [[59, "julearn.transformers.target.register_target_transformer"]], "reset_target_transformer_register() (in module julearn.transformers.target)": [[60, "julearn.transformers.target.reset_target_transformer_register"]], "configure_logging() (in module julearn.utils)": [[61, "julearn.utils.configure_logging"]], "logger (in module julearn.utils)": [[62, "julearn.utils.logger"]], "raise_error() (in module julearn.utils)": [[63, "julearn.utils.raise_error"]], "estimatorlike (in module julearn.utils.typing)": [[64, "julearn.utils.typing.EstimatorLike"]], "estimatorlikefit1 (class in julearn.utils.typing)": [[65, "julearn.utils.typing.EstimatorLikeFit1"]], "__init__() (julearn.utils.typing.estimatorlikefit1 method)": [[65, "julearn.utils.typing.EstimatorLikeFit1.__init__"]], "fit() (julearn.utils.typing.estimatorlikefit1 method)": [[65, "julearn.utils.typing.EstimatorLikeFit1.fit"]], "get_params() (julearn.utils.typing.estimatorlikefit1 method)": [[65, "julearn.utils.typing.EstimatorLikeFit1.get_params"]], "set_params() (julearn.utils.typing.estimatorlikefit1 method)": [[65, "julearn.utils.typing.EstimatorLikeFit1.set_params"]], "estimatorlikefit2 (class in julearn.utils.typing)": [[66, "julearn.utils.typing.EstimatorLikeFit2"]], "__init__() (julearn.utils.typing.estimatorlikefit2 method)": [[66, "julearn.utils.typing.EstimatorLikeFit2.__init__"]], "fit() (julearn.utils.typing.estimatorlikefit2 method)": [[66, "julearn.utils.typing.EstimatorLikeFit2.fit"]], "get_params() (julearn.utils.typing.estimatorlikefit2 method)": [[66, "julearn.utils.typing.EstimatorLikeFit2.get_params"]], "set_params() (julearn.utils.typing.estimatorlikefit2 method)": [[66, "julearn.utils.typing.EstimatorLikeFit2.set_params"]], "estimatorlikefity (class in julearn.utils.typing)": [[67, "julearn.utils.typing.EstimatorLikeFity"]], "__init__() (julearn.utils.typing.estimatorlikefity method)": [[67, "julearn.utils.typing.EstimatorLikeFity.__init__"]], "fit() (julearn.utils.typing.estimatorlikefity method)": [[67, "julearn.utils.typing.EstimatorLikeFity.fit"]], "get_params() (julearn.utils.typing.estimatorlikefity method)": [[67, "julearn.utils.typing.EstimatorLikeFity.get_params"]], "set_params() (julearn.utils.typing.estimatorlikefity method)": [[67, "julearn.utils.typing.EstimatorLikeFity.set_params"]], "juestimatorlike (class in julearn.utils.typing)": [[68, "julearn.utils.typing.JuEstimatorLike"]], "__init__() (julearn.utils.typing.juestimatorlike method)": [[68, "julearn.utils.typing.JuEstimatorLike.__init__"]], "fit() (julearn.utils.typing.juestimatorlike method)": [[68, "julearn.utils.typing.JuEstimatorLike.fit"]], "get_apply_to() (julearn.utils.typing.juestimatorlike method)": [[68, "julearn.utils.typing.JuEstimatorLike.get_apply_to"]], "get_needed_types() (julearn.utils.typing.juestimatorlike method)": [[68, "julearn.utils.typing.JuEstimatorLike.get_needed_types"]], "get_params() (julearn.utils.typing.juestimatorlike method)": [[68, "julearn.utils.typing.JuEstimatorLike.get_params"]], "set_params() (julearn.utils.typing.juestimatorlike method)": [[68, "julearn.utils.typing.JuEstimatorLike.set_params"]], "warn_with_log() (in module julearn.utils)": [[69, "julearn.utils.warn_with_log"]], "plot_scores() (in module julearn.viz)": [[70, "julearn.viz.plot_scores"]], "julearn.inspect": [[72, "module-julearn.inspect"]], "julearn.api": [[73, "module-julearn.api"]], "julearn.model_selection": [[74, "module-julearn.model_selection"]], "julearn.models": [[75, "module-julearn.models"]], "julearn.models.dynamic": [[75, "module-julearn.models.dynamic"]], "julearn.pipeline": [[76, "module-julearn.pipeline"]], "julearn.prepare": [[77, "module-julearn.prepare"]], "julearn.scoring": [[78, "module-julearn.scoring"]], "julearn.scoring.metrics": [[78, "module-julearn.scoring.metrics"]], "julearn.stats": [[79, "module-julearn.stats"]], "julearn.transformers": [[80, "module-julearn.transformers"]], "julearn.transformers.target": [[80, "module-julearn.transformers.target"]], "julearn.utils": [[81, "module-julearn.utils"]], "julearn.utils.typing": [[81, "module-julearn.utils.typing"]], "julearn.viz": [[82, "module-julearn.viz"]]}})