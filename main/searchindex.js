Search.setIndex({"docnames": ["api/base", "api/config", "api/generated/julearn.PipelineCreator", "api/generated/julearn.TargetPipelineCreator", "api/generated/julearn.base.ColumnTypes", "api/generated/julearn.base.ColumnTypesLike", "api/generated/julearn.base.JuBaseEstimator", "api/generated/julearn.base.JuTransformer", "api/generated/julearn.base.WrapModel", "api/generated/julearn.base.change_column_type", "api/generated/julearn.base.ensure_column_types", "api/generated/julearn.base.get_column_type", "api/generated/julearn.base.make_type_selector", "api/generated/julearn.config.get_config", "api/generated/julearn.config.set_config", "api/generated/julearn.inspect.FoldsInspector", "api/generated/julearn.inspect.Inspector", "api/generated/julearn.inspect.preprocess", "api/generated/julearn.model_selection.ContinuousStratifiedGroupKFold", "api/generated/julearn.model_selection.ContinuousStratifiedKFold", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedGroupKFold", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedKFold", "api/generated/julearn.model_selection.StratifiedBootstrap", "api/generated/julearn.model_selection.get_searcher", "api/generated/julearn.model_selection.list_searchers", "api/generated/julearn.model_selection.register_searcher", "api/generated/julearn.model_selection.reset_searcher_register", "api/generated/julearn.models.dynamic.DynamicSelection", "api/generated/julearn.models.get_model", "api/generated/julearn.models.list_models", "api/generated/julearn.models.register_model", "api/generated/julearn.models.reset_model_register", "api/generated/julearn.pipeline.JuTargetPipeline", "api/generated/julearn.pipeline.pipeline_creator.Step", "api/generated/julearn.prepare.check_consistency", "api/generated/julearn.prepare.prepare_input_data", "api/generated/julearn.run_cross_validation", "api/generated/julearn.run_fit", "api/generated/julearn.scoring.check_scoring", "api/generated/julearn.scoring.get_scorer", "api/generated/julearn.scoring.list_scorers", "api/generated/julearn.scoring.metrics.r2_corr", "api/generated/julearn.scoring.metrics.r_corr", "api/generated/julearn.scoring.register_scorer", "api/generated/julearn.scoring.reset_scorer_register", "api/generated/julearn.stats.corrected_ttest", "api/generated/julearn.transformers.CBPM", "api/generated/julearn.transformers.ChangeColumnTypes", "api/generated/julearn.transformers.DropColumns", "api/generated/julearn.transformers.FilterColumns", "api/generated/julearn.transformers.JuColumnTransformer", "api/generated/julearn.transformers.SetColumnTypes", "api/generated/julearn.transformers.confound_remover.ConfoundRemover", "api/generated/julearn.transformers.get_transformer", "api/generated/julearn.transformers.list_transformers", "api/generated/julearn.transformers.register_transformer", "api/generated/julearn.transformers.reset_transformer_register", "api/generated/julearn.transformers.target.JuTargetTransformer", "api/generated/julearn.transformers.target.JuTransformedTargetModel", "api/generated/julearn.transformers.target.TargetConfoundRemover", "api/generated/julearn.transformers.target.TransformedTargetWarning", "api/generated/julearn.transformers.target.get_target_transformer", "api/generated/julearn.transformers.target.list_target_transformers", "api/generated/julearn.transformers.target.register_target_transformer", "api/generated/julearn.transformers.target.reset_target_transformer_register", "api/generated/julearn.utils.configure_logging", "api/generated/julearn.utils.logger", "api/generated/julearn.utils.raise_error", "api/generated/julearn.utils.typing.EstimatorLike", "api/generated/julearn.utils.typing.EstimatorLikeFit1", "api/generated/julearn.utils.typing.EstimatorLikeFit2", "api/generated/julearn.utils.typing.EstimatorLikeFity", "api/generated/julearn.utils.typing.JuEstimatorLike", "api/generated/julearn.utils.warn_with_log", "api/generated/julearn.viz.plot_scores", "api/index", "api/inspect", "api/main", "api/model_selection", "api/models", "api/pipeline", "api/prepare", "api/scoring", "api/stats", "api/transformers", "api/utils", "api/viz", "auto_examples/00_starting/index", "auto_examples/00_starting/plot_cm_acc_multiclass", "auto_examples/00_starting/plot_example_regression", "auto_examples/00_starting/plot_stratified_kfold_reg", "auto_examples/00_starting/run_combine_pandas", "auto_examples/00_starting/run_grouped_cv", "auto_examples/00_starting/run_simple_binary_classification", "auto_examples/00_starting/sg_execution_times", "auto_examples/01_model_comparison/index", "auto_examples/01_model_comparison/plot_simple_model_comparison", "auto_examples/01_model_comparison/sg_execution_times", "auto_examples/02_inspection/index", "auto_examples/02_inspection/plot_groupcv_inspect_svm", "auto_examples/02_inspection/plot_inspect_random_forest", "auto_examples/02_inspection/plot_preprocess", "auto_examples/02_inspection/run_binary_inspect_folds", "auto_examples/02_inspection/sg_execution_times", "auto_examples/03_complex_models/index", "auto_examples/03_complex_models/run_apply_to_target", "auto_examples/03_complex_models/run_example_pca_featsets", "auto_examples/03_complex_models/run_hyperparameter_multiple_grids", "auto_examples/03_complex_models/run_hyperparameter_tuning", "auto_examples/03_complex_models/run_hyperparameter_tuning_bayessearch", "auto_examples/03_complex_models/run_stacked_models", "auto_examples/03_complex_models/sg_execution_times", "auto_examples/04_confounds/index", "auto_examples/04_confounds/plot_confound_removal_classification", "auto_examples/04_confounds/run_return_confounds", "auto_examples/04_confounds/sg_execution_times", "auto_examples/05_customization/index", "auto_examples/05_customization/run_custom_scorers_regression", "auto_examples/05_customization/sg_execution_times", "available_pipeline_steps", "configuration", "contributing", "examples", "faq", "getting_started", "index", "maintaining", "selected_deeper_topics/CBPM", "selected_deeper_topics/confound_removal", "selected_deeper_topics/cross_validation_splitter", "selected_deeper_topics/hyperparameter_tuning", "selected_deeper_topics/index", "selected_deeper_topics/joblib", "selected_deeper_topics/model_inspect", "selected_deeper_topics/stacked_models", "selected_deeper_topics/target_transformers", "what_really_need_know/cross_validation", "what_really_need_know/data", "what_really_need_know/index", "what_really_need_know/model_comparison", "what_really_need_know/model_evaluation", "what_really_need_know/pipeline", "whats_new"], "filenames": ["api/base.rst", "api/config.rst", "api/generated/julearn.PipelineCreator.rst", "api/generated/julearn.TargetPipelineCreator.rst", "api/generated/julearn.base.ColumnTypes.rst", "api/generated/julearn.base.ColumnTypesLike.rst", "api/generated/julearn.base.JuBaseEstimator.rst", "api/generated/julearn.base.JuTransformer.rst", "api/generated/julearn.base.WrapModel.rst", "api/generated/julearn.base.change_column_type.rst", "api/generated/julearn.base.ensure_column_types.rst", "api/generated/julearn.base.get_column_type.rst", "api/generated/julearn.base.make_type_selector.rst", "api/generated/julearn.config.get_config.rst", "api/generated/julearn.config.set_config.rst", "api/generated/julearn.inspect.FoldsInspector.rst", "api/generated/julearn.inspect.Inspector.rst", "api/generated/julearn.inspect.preprocess.rst", "api/generated/julearn.model_selection.ContinuousStratifiedGroupKFold.rst", "api/generated/julearn.model_selection.ContinuousStratifiedKFold.rst", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.rst", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedKFold.rst", "api/generated/julearn.model_selection.StratifiedBootstrap.rst", "api/generated/julearn.model_selection.get_searcher.rst", "api/generated/julearn.model_selection.list_searchers.rst", "api/generated/julearn.model_selection.register_searcher.rst", "api/generated/julearn.model_selection.reset_searcher_register.rst", "api/generated/julearn.models.dynamic.DynamicSelection.rst", "api/generated/julearn.models.get_model.rst", "api/generated/julearn.models.list_models.rst", "api/generated/julearn.models.register_model.rst", "api/generated/julearn.models.reset_model_register.rst", "api/generated/julearn.pipeline.JuTargetPipeline.rst", "api/generated/julearn.pipeline.pipeline_creator.Step.rst", "api/generated/julearn.prepare.check_consistency.rst", "api/generated/julearn.prepare.prepare_input_data.rst", "api/generated/julearn.run_cross_validation.rst", "api/generated/julearn.run_fit.rst", "api/generated/julearn.scoring.check_scoring.rst", "api/generated/julearn.scoring.get_scorer.rst", "api/generated/julearn.scoring.list_scorers.rst", "api/generated/julearn.scoring.metrics.r2_corr.rst", "api/generated/julearn.scoring.metrics.r_corr.rst", "api/generated/julearn.scoring.register_scorer.rst", "api/generated/julearn.scoring.reset_scorer_register.rst", "api/generated/julearn.stats.corrected_ttest.rst", "api/generated/julearn.transformers.CBPM.rst", "api/generated/julearn.transformers.ChangeColumnTypes.rst", "api/generated/julearn.transformers.DropColumns.rst", "api/generated/julearn.transformers.FilterColumns.rst", "api/generated/julearn.transformers.JuColumnTransformer.rst", "api/generated/julearn.transformers.SetColumnTypes.rst", "api/generated/julearn.transformers.confound_remover.ConfoundRemover.rst", "api/generated/julearn.transformers.get_transformer.rst", "api/generated/julearn.transformers.list_transformers.rst", "api/generated/julearn.transformers.register_transformer.rst", "api/generated/julearn.transformers.reset_transformer_register.rst", "api/generated/julearn.transformers.target.JuTargetTransformer.rst", "api/generated/julearn.transformers.target.JuTransformedTargetModel.rst", "api/generated/julearn.transformers.target.TargetConfoundRemover.rst", "api/generated/julearn.transformers.target.TransformedTargetWarning.rst", "api/generated/julearn.transformers.target.get_target_transformer.rst", "api/generated/julearn.transformers.target.list_target_transformers.rst", "api/generated/julearn.transformers.target.register_target_transformer.rst", "api/generated/julearn.transformers.target.reset_target_transformer_register.rst", "api/generated/julearn.utils.configure_logging.rst", "api/generated/julearn.utils.logger.rst", "api/generated/julearn.utils.raise_error.rst", "api/generated/julearn.utils.typing.EstimatorLike.rst", "api/generated/julearn.utils.typing.EstimatorLikeFit1.rst", "api/generated/julearn.utils.typing.EstimatorLikeFit2.rst", "api/generated/julearn.utils.typing.EstimatorLikeFity.rst", "api/generated/julearn.utils.typing.JuEstimatorLike.rst", "api/generated/julearn.utils.warn_with_log.rst", "api/generated/julearn.viz.plot_scores.rst", "api/index.rst", "api/inspect.rst", "api/main.rst", "api/model_selection.rst", "api/models.rst", "api/pipeline.rst", "api/prepare.rst", "api/scoring.rst", "api/stats.rst", "api/transformers.rst", "api/utils.rst", "api/viz.rst", "auto_examples/00_starting/index.rst", "auto_examples/00_starting/plot_cm_acc_multiclass.rst", "auto_examples/00_starting/plot_example_regression.rst", "auto_examples/00_starting/plot_stratified_kfold_reg.rst", "auto_examples/00_starting/run_combine_pandas.rst", "auto_examples/00_starting/run_grouped_cv.rst", "auto_examples/00_starting/run_simple_binary_classification.rst", "auto_examples/00_starting/sg_execution_times.rst", "auto_examples/01_model_comparison/index.rst", "auto_examples/01_model_comparison/plot_simple_model_comparison.rst", "auto_examples/01_model_comparison/sg_execution_times.rst", "auto_examples/02_inspection/index.rst", "auto_examples/02_inspection/plot_groupcv_inspect_svm.rst", "auto_examples/02_inspection/plot_inspect_random_forest.rst", "auto_examples/02_inspection/plot_preprocess.rst", "auto_examples/02_inspection/run_binary_inspect_folds.rst", "auto_examples/02_inspection/sg_execution_times.rst", "auto_examples/03_complex_models/index.rst", "auto_examples/03_complex_models/run_apply_to_target.rst", "auto_examples/03_complex_models/run_example_pca_featsets.rst", "auto_examples/03_complex_models/run_hyperparameter_multiple_grids.rst", "auto_examples/03_complex_models/run_hyperparameter_tuning.rst", "auto_examples/03_complex_models/run_hyperparameter_tuning_bayessearch.rst", "auto_examples/03_complex_models/run_stacked_models.rst", "auto_examples/03_complex_models/sg_execution_times.rst", "auto_examples/04_confounds/index.rst", "auto_examples/04_confounds/plot_confound_removal_classification.rst", "auto_examples/04_confounds/run_return_confounds.rst", "auto_examples/04_confounds/sg_execution_times.rst", "auto_examples/05_customization/index.rst", "auto_examples/05_customization/run_custom_scorers_regression.rst", "auto_examples/05_customization/sg_execution_times.rst", "available_pipeline_steps.rst", "configuration.rst", "contributing.rst", "examples.rst", "faq.rst", "getting_started.rst", "index.rst", "maintaining.rst", "selected_deeper_topics/CBPM.rst", "selected_deeper_topics/confound_removal.rst", "selected_deeper_topics/cross_validation_splitter.rst", "selected_deeper_topics/hyperparameter_tuning.rst", "selected_deeper_topics/index.rst", "selected_deeper_topics/joblib.rst", "selected_deeper_topics/model_inspect.rst", "selected_deeper_topics/stacked_models.rst", "selected_deeper_topics/target_transformers.rst", "what_really_need_know/cross_validation.rst", "what_really_need_know/data.rst", "what_really_need_know/index.rst", "what_really_need_know/model_comparison.rst", "what_really_need_know/model_evaluation.rst", "what_really_need_know/pipeline.rst", "whats_new.rst"], "titles": ["<span class=\"section-number\">9.4. </span>Base", "<span class=\"section-number\">9.17. </span>Config", "julearn.PipelineCreator", "julearn.TargetPipelineCreator", "julearn.base.ColumnTypes", "julearn.base.ColumnTypesLike", "julearn.base.JuBaseEstimator", "julearn.base.JuTransformer", "julearn.base.WrapModel", "julearn.base.change_column_type", "julearn.base.ensure_column_types", "julearn.base.get_column_type", "julearn.base.make_type_selector", "julearn.config.get_config", "julearn.config.set_config", "julearn.inspect.FoldsInspector", "julearn.inspect.Inspector", "julearn.inspect.preprocess", "julearn.model_selection.ContinuousStratifiedGroupKFold", "julearn.model_selection.ContinuousStratifiedKFold", "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold", "julearn.model_selection.RepeatedContinuousStratifiedKFold", "julearn.model_selection.StratifiedBootstrap", "julearn.model_selection.get_searcher", "julearn.model_selection.list_searchers", "julearn.model_selection.register_searcher", "julearn.model_selection.reset_searcher_register", "julearn.models.dynamic.DynamicSelection", "julearn.models.get_model", "julearn.models.list_models", "julearn.models.register_model", "julearn.models.reset_model_register", "julearn.pipeline.JuTargetPipeline", "julearn.pipeline.pipeline_creator.Step", "julearn.prepare.check_consistency", "julearn.prepare.prepare_input_data", "julearn.run_cross_validation", "julearn.run_fit", "julearn.scoring.check_scoring", "julearn.scoring.get_scorer", "julearn.scoring.list_scorers", "julearn.scoring.metrics.r2_corr", "julearn.scoring.metrics.r_corr", "julearn.scoring.register_scorer", "julearn.scoring.reset_scorer_register", "julearn.stats.corrected_ttest", "julearn.transformers.CBPM", "julearn.transformers.ChangeColumnTypes", "julearn.transformers.DropColumns", "julearn.transformers.FilterColumns", "julearn.transformers.JuColumnTransformer", "julearn.transformers.SetColumnTypes", "julearn.transformers.confound_remover.ConfoundRemover", "julearn.transformers.get_transformer", "julearn.transformers.list_transformers", "julearn.transformers.register_transformer", "julearn.transformers.reset_transformer_register", "julearn.transformers.target.JuTargetTransformer", "julearn.transformers.target.JuTransformedTargetModel", "julearn.transformers.target.TargetConfoundRemover", "julearn.transformers.target.TransformedTargetWarning", "julearn.transformers.target.get_target_transformer", "julearn.transformers.target.list_target_transformers", "julearn.transformers.target.register_target_transformer", "julearn.transformers.target.reset_target_transformer_register", "julearn.utils.configure_logging", "julearn.utils.logger", "julearn.utils.raise_error", "julearn.utils.typing.EstimatorLike", "julearn.utils.typing.EstimatorLikeFit1", "julearn.utils.typing.EstimatorLikeFit2", "julearn.utils.typing.EstimatorLikeFity", "julearn.utils.typing.JuEstimatorLike", "julearn.utils.warn_with_log", "julearn.viz.plot_scores", "<span class=\"section-number\">9. </span>API Reference", "<span class=\"section-number\">9.5. </span>Inspect", "<span class=\"section-number\">9.1. </span>Main API", "<span class=\"section-number\">9.3. </span>Model Selection", "<span class=\"section-number\">9.6. </span>Models", "<span class=\"section-number\">9.2. </span>Pipeline", "<span class=\"section-number\">9.14. </span>Prepare", "<span class=\"section-number\">9.8. </span>Scoring", "<span class=\"section-number\">9.15. </span>Stats", "<span class=\"section-number\">9.10. </span>Transformers", "<span class=\"section-number\">9.12. </span>Utils", "<span class=\"section-number\">9.16. </span>Visualization", "<span class=\"section-number\">8.1. </span>Starting with <code class=\"docutils literal notranslate\"><span class=\"pre\">julearn</span></code>", "Multiclass Classification", "Regression Analysis", "Stratified K-fold CV for regression analysis", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">pandas</span></code>", "Grouped CV", "Simple Binary Classification", "Computation times", "<span class=\"section-number\">8.2. </span>Model Comparison", "Simple Model Comparison", "Computation times", "<span class=\"section-number\">8.3. </span>Inspection", "Inspecting SVM models", "Inspecting Random Forest models", "Preprocessing with variance threshold, zscore and PCA", "Inspecting the fold-wise predictions", "Computation times", "<span class=\"section-number\">8.4. </span>Complex Models", "Transforming target variable with z-score", "Regression Analysis", "Tuning Multiple Hyperparameters Grids", "Tuning Hyperparameters", "Tuning Hyperparameters using Bayesian Search", "Stacking Classification", "Computation times", "<span class=\"section-number\">8.5. </span>Confounds", "Confound Removal (model comparison)", "Return Confounds in Confound Removal", "Computation times", "<span class=\"section-number\">8.6. </span>Customization", "Custom Scoring Function for Regression", "Computation times", "<span class=\"section-number\">7. </span>Overview of available Pipeline Steps", "<span class=\"section-number\">10. </span>Configuring <code class=\"docutils literal notranslate\"><span class=\"pre\">julearn</span></code>", "<span class=\"section-number\">11. </span>Contributing", "<span class=\"section-number\">8. </span>Examples", "<span class=\"section-number\">13. </span>FAQs", "<span class=\"section-number\">1. </span>Getting started", "Welcome to julearn\u2019s documentation!", "<span class=\"section-number\">12. </span>Maintaining", "<span class=\"section-number\">6.7. </span>Connectome-based Predictive Modeling (CBPM)", "<span class=\"section-number\">6.2. </span>Cross-validation consistent Confound Removal", "<span class=\"section-number\">6.5. </span>Cross-validation splitters", "<span class=\"section-number\">6.3. </span>Hyperparameter Tuning", "<span class=\"section-number\">6. </span>Selected deeper topics", "<span class=\"section-number\">6.8. </span>Parallelizing julearn with Joblib", "<span class=\"section-number\">6.4. </span>Inspecting Models", "<span class=\"section-number\">6.6. </span>Stacking Models", "<span class=\"section-number\">6.1. </span>Applying preprocessing to the target", "<span class=\"section-number\">5.1. </span>Why cross validation?", "<span class=\"section-number\">5.2. </span>Data", "<span class=\"section-number\">5. </span>What you really need to know", "<span class=\"section-number\">5.5. </span>Model Comparison", "<span class=\"section-number\">5.4. </span>Model Evaluation", "<span class=\"section-number\">5.3. </span>Model Building", "<span class=\"section-number\">14. </span>What\u2019s new"], "terms": {"provid": [0, 2, 4, 6, 16, 18, 19, 22, 27, 36, 37, 58, 79, 91, 114, 120, 125, 128, 129, 130, 133, 134, 136, 137, 139, 140, 141, 142], "import": [0, 32, 57, 88, 89, 90, 91, 92, 93, 96, 99, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "modul": [0, 1, 36, 79, 86, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 124, 125, 133, 134, 135, 136], "thi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 86, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "page": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 125, 128, 129, 140], "i": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 86, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 121, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "refer": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 101, 119, 121, 125, 130, 138], "document": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 86, 90, 96, 100, 119, 129, 130, 132, 139, 140, 141], "It": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 99, 107, 108, 109, 124, 125, 127, 129, 130, 132, 133, 140, 141], "onli": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 90, 99, 101, 107, 113, 114, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142], "explain": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 129, 132, 141], "class": [2, 3, 4, 5, 6, 7, 8, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 30, 32, 33, 36, 37, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 63, 66, 67, 68, 69, 70, 71, 72, 73, 88, 90, 92, 93, 96, 99, 100, 102, 107, 108, 109, 110, 113, 114, 119, 128, 129, 130, 133, 139, 140, 141], "signatur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "how": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 87, 92, 93, 96, 98, 99, 100, 104, 106, 114, 119, 121, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "pleas": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 86, 101, 114, 121, 125, 132, 140, 141], "what": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 91, 92, 99, 106, 108, 114, 119, 128, 129, 130, 133, 134, 135, 137, 140, 141], "you": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 88, 90, 91, 96, 100, 101, 114, 120, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 137, 139, 140, 141], "realli": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 113, 125], "need": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 90, 91, 92, 93, 96, 99, 100, 105, 113, 114, 117, 121, 123, 124, 125, 127, 128, 129, 130, 132, 133, 135, 136, 139, 140, 141, 142], "know": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 106, 108, 125, 129, 132, 133, 136, 139, 141], "section": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 129, 132, 137, 139, 140, 141, 142], "big": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 132], "pictur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "problem_typ": [2, 28, 34, 36, 37, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 130, 132, 133, 134, 135, 139, 140, 141], "apply_to": [2, 6, 7, 8, 33, 47, 48, 49, 50, 51, 52, 58, 101, 105, 106, 110, 113, 114, 128, 132, 133, 134, 135, 141], "continu": [2, 8, 33, 47, 49, 51, 52, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 113, 114, 117, 127, 129, 130, 133, 134, 135, 137, 139, 140, 141, 142], "creat": [2, 3, 4, 46, 88, 90, 91, 93, 99, 101, 105, 106, 110, 119, 121, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 141], "pipelin": [2, 3, 6, 7, 8, 17, 18, 27, 34, 35, 36, 37, 38, 46, 47, 48, 49, 50, 51, 52, 57, 58, 75, 81, 99, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 125, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142], "As": [2, 91, 93, 96, 102, 110, 113, 114, 117, 121, 123, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141], "creation": 2, "bit": [2, 107, 124, 130, 134, 140], "more": [1, 2, 4, 36, 37, 45, 88, 89, 90, 91, 92, 93, 96, 99, 101, 106, 113, 117, 120, 121, 124, 125, 128, 129, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142], "complic": [2, 132, 136], "than": [2, 36, 37, 45, 90, 91, 99, 120, 125, 128, 129, 131, 132, 141], "just": [2, 121, 125, 129, 133, 138, 141], "ad": [2, 7, 36, 37, 46, 47, 48, 49, 50, 51, 52, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 125, 127, 128, 130, 133, 134, 135, 137, 139, 140, 141, 142], "step": [2, 3, 17, 32, 36, 37, 45, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 125, 127, 128, 130, 133, 134, 135, 136, 137, 139, 140, 141, 142], "helper": 2, "so": [2, 6, 7, 8, 27, 43, 46, 47, 48, 49, 50, 51, 52, 58, 90, 91, 93, 96, 101, 108, 119, 121, 123, 124, 129, 130, 132, 135, 137, 140, 141], "user": [2, 6, 7, 8, 18, 19, 20, 21, 22, 25, 27, 30, 36, 37, 43, 46, 47, 48, 49, 50, 51, 52, 55, 58, 60, 63, 65, 101, 114, 117, 120, 124, 125, 128, 130, 132, 136, 141, 142], "can": [1, 2, 4, 18, 19, 20, 21, 22, 25, 27, 30, 32, 34, 36, 37, 43, 45, 46, 50, 52, 55, 58, 63, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 113, 114, 117, 119, 120, 121, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "easili": [2, 127, 129, 132], "complex": [2, 91, 99, 110, 122, 125, 128, 129, 130, 132, 133, 141], "sklearn": [2, 4, 6, 8, 12, 18, 27, 32, 50, 52, 59, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 129, 130, 133, 134, 135, 139, 140], "object": [2, 3, 6, 7, 8, 18, 19, 20, 21, 22, 27, 28, 34, 36, 37, 39, 43, 46, 47, 48, 49, 50, 51, 52, 53, 55, 58, 61, 88, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 123, 128, 130, 133, 134, 135, 140, 141, 142], "paramet": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 61, 63, 65, 67, 69, 70, 71, 72, 73, 74, 81, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "classif": [2, 30, 34, 36, 37, 65, 87, 92, 94, 96, 99, 100, 102, 104, 107, 108, 109, 111, 113, 121, 129, 130, 132, 133, 134, 139, 140, 141], "regress": [2, 17, 18, 19, 30, 34, 36, 37, 43, 65, 87, 94, 101, 104, 105, 110, 111, 114, 116, 118, 119, 127, 130, 131, 134, 135, 139, 140, 141, 142], "The": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 30, 32, 33, 34, 35, 36, 37, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 61, 63, 65, 67, 69, 70, 71, 72, 73, 74, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 139, 141, 142], "problem": [2, 18, 19, 20, 21, 22, 28, 30, 34, 36, 37, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 140, 141, 142], "type": [2, 4, 6, 7, 8, 9, 11, 12, 17, 28, 30, 32, 33, 34, 35, 36, 37, 47, 48, 49, 50, 51, 52, 58, 59, 75, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 121, 125, 127, 128, 130, 131, 133, 135, 136, 138, 139, 140], "which": [2, 6, 7, 18, 19, 25, 30, 33, 36, 37, 46, 47, 48, 49, 50, 51, 52, 55, 59, 63, 86, 89, 90, 92, 93, 99, 101, 105, 106, 107, 108, 109, 113, 114, 117, 121, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142], "should": [2, 6, 7, 18, 22, 25, 27, 30, 33, 43, 46, 47, 48, 49, 50, 51, 52, 55, 63, 90, 101, 106, 113, 114, 119, 121, 126, 127, 129, 130, 131, 135, 136, 140, 141], "columntypeslik": [2, 33, 47, 48, 49, 50, 52, 114], "option": [2, 3, 7, 8, 16, 17, 18, 25, 27, 30, 33, 36, 37, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 63, 65, 67, 69, 70, 71, 72, 73, 74, 79, 86, 90, 91, 100, 113, 114, 123, 125, 126, 129, 130, 132, 137, 140, 142], "To": [2, 50, 52, 99, 101, 107, 114, 121, 123, 125, 127, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141], "transform": [2, 3, 7, 32, 36, 37, 38, 65, 75, 91, 101, 104, 109, 111, 114, 120, 125, 127, 128, 130, 133, 135, 136, 141, 142], "appli": [2, 3, 6, 7, 8, 33, 36, 37, 46, 47, 48, 49, 50, 51, 52, 58, 59, 72, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 125, 127, 128, 130, 131, 132, 133, 134, 139, 140, 141], "specifi": [2, 22, 23, 25, 35, 36, 37, 49, 52, 59, 61, 91, 99, 100, 106, 107, 114, 119, 124, 125, 127, 128, 132, 134, 135, 136, 137, 138, 140, 141, 142], "add": [2, 3, 4, 25, 30, 55, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 121, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141, 142], "method": [2, 6, 7, 8, 18, 19, 20, 21, 27, 45, 46, 47, 48, 49, 50, 51, 52, 58, 90, 91, 101, 107, 114, 120, 124, 127, 129, 130, 133, 141], "default": [2, 3, 6, 7, 8, 16, 17, 18, 19, 20, 21, 22, 25, 27, 30, 31, 33, 36, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 58, 59, 63, 65, 67, 69, 70, 71, 72, 73, 74, 96, 99, 101, 107, 108, 110, 113, 114, 119, 120, 123, 124, 127, 128, 130, 132, 139, 140, 141, 142], "__init__": [2, 3, 4, 6, 7, 8, 15, 16, 18, 19, 20, 21, 22, 27, 32, 33, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 69, 70, 71, 72], "name": [2, 3, 6, 7, 8, 9, 17, 18, 23, 24, 25, 27, 28, 29, 30, 33, 36, 37, 39, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 65, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 121, 128, 129, 130, 133, 134, 135, 136, 137, 139, 140, 141], "none": [2, 3, 6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 30, 32, 33, 34, 35, 36, 37, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 63, 65, 67, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 127, 128, 130, 133, 134, 135, 139, 140, 141], "row_select_col_typ": [2, 7, 33, 47, 48, 49, 50, 51, 52, 114], "row_select_v": [2, 7, 33, 47, 48, 49, 50, 51, 52, 114], "param": [2, 3, 6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 53, 58, 61, 69, 70, 71, 72, 124, 127, 128, 130, 133, 135, 141], "estimatorlik": [2, 38, 50], "an": [2, 3, 7, 18, 19, 20, 21, 22, 27, 34, 36, 37, 39, 46, 47, 48, 49, 50, 51, 52, 88, 91, 92, 93, 96, 99, 100, 101, 108, 113, 120, 121, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142], "available_transform": 2, "available_model": 2, "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 63, 65, 67, 73, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 133, 134, 140, 141], "compat": [2, 18, 19, 20, 21, 22, 23, 25, 27, 36, 37, 47, 48, 49, 50, 51, 52, 53, 59, 114, 124, 127, 140, 141, 142], "model": [2, 7, 8, 16, 17, 22, 36, 37, 40, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 65, 74, 75, 82, 88, 89, 90, 92, 93, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 114, 115, 117, 120, 122, 125, 128, 129, 131, 132, 135, 136, 138, 142], "If": [2, 3, 6, 7, 8, 16, 17, 22, 23, 25, 27, 30, 34, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 55, 58, 61, 63, 65, 91, 93, 99, 101, 113, 114, 117, 120, 121, 124, 125, 128, 129, 130, 132, 137, 138, 140, 141], "obtain": [2, 3, 8, 58, 100, 128, 132, 136], "from": [2, 3, 4, 6, 27, 32, 35, 36, 37, 46, 47, 52, 55, 57, 59, 63, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 121, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141, 142], "repres": [2, 4, 22, 33, 52, 59, 90, 114, 129, 140], "column": [2, 4, 6, 7, 8, 9, 11, 12, 17, 27, 33, 35, 36, 37, 47, 48, 49, 50, 51, 52, 58, 59, 72, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 113, 114, 117, 119, 120, 127, 128, 130, 133, 134, 135, 137, 139, 140, 141, 142], "list": [2, 4, 5, 6, 7, 8, 16, 17, 24, 29, 32, 33, 35, 36, 37, 40, 47, 48, 49, 50, 51, 52, 54, 59, 62, 90, 100, 107, 109, 114, 119, 120, 129, 130, 132, 133, 137, 140, 141, 142], "attribut": [2, 6, 8, 10, 25, 27, 46, 58, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 133, 134], "set": [1, 2, 4, 5, 6, 7, 8, 14, 16, 18, 19, 20, 21, 22, 25, 27, 32, 33, 36, 37, 43, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 69, 70, 71, 72, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 122, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 138, 139, 140, 142], "columntyp": [2, 5, 6, 7, 8, 10, 33, 47, 48, 49, 50, 51, 52, 58, 59, 72, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 130, 133, 134, 135, 139, 140, 141], "select": [2, 7, 8, 12, 27, 33, 47, 48, 49, 50, 51, 52, 75, 101, 114, 125, 127, 129, 130, 133, 137, 138, 139], "row": [2, 7, 33, 47, 48, 49, 50, 51, 52, 89, 90, 91, 92, 96, 99, 101, 102, 105, 106, 114, 117, 132, 133, 135, 139, 140, 141], "int": [2, 7, 16, 18, 19, 20, 21, 22, 27, 33, 34, 35, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 65, 74, 114, 140], "bool": [2, 6, 7, 8, 17, 18, 19, 25, 27, 30, 32, 33, 36, 38, 43, 46, 47, 48, 49, 50, 51, 52, 55, 58, 63, 65, 69, 70, 71, 72, 114], "valu": [2, 6, 7, 8, 13, 14, 22, 27, 33, 36, 37, 41, 42, 46, 47, 48, 49, 50, 51, 52, 58, 59, 88, 89, 90, 91, 92, 93, 99, 100, 101, 105, 106, 107, 108, 109, 113, 114, 117, 119, 120, 127, 129, 130, 133, 134, 137, 140, 141], "": [2, 6, 7, 8, 18, 19, 27, 33, 36, 46, 47, 48, 49, 50, 51, 52, 58, 59, 65, 88, 89, 90, 91, 92, 99, 101, 105, 106, 107, 108, 113, 114, 117, 119, 120, 121, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "train": [2, 7, 18, 19, 20, 21, 22, 27, 33, 36, 46, 47, 48, 49, 50, 51, 52, 59, 88, 89, 90, 92, 99, 101, 105, 106, 113, 114, 117, 128, 129, 130, 132, 133, 135, 136, 139, 140, 141], "mostli": [2, 3, 129, 132], "includ": [2, 3, 17, 22, 100, 101, 114, 120, 121, 124, 130, 136], "hyperparamet": [2, 3, 25, 36, 37, 65, 96, 101, 104, 106, 110, 111, 113, 114, 125, 127, 128, 131, 132, 133, 134, 138, 139, 142], "ani": [2, 3, 7, 8, 13, 14, 25, 27, 30, 32, 33, 34, 35, 36, 37, 43, 47, 48, 49, 50, 51, 52, 55, 57, 63, 90, 120, 127, 129, 130, 132, 133, 141], "other": [2, 3, 18, 25, 27, 30, 55, 86, 91, 93, 106, 108, 114, 121, 123, 127, 128, 129, 130, 132, 138, 139, 141], "initi": [2, 3, 25, 26, 45, 55, 56, 63, 64, 113, 128, 134, 141], "multipl": [2, 18, 19, 20, 21, 22, 36, 65, 101, 104, 111, 129, 130, 132, 140, 141, 142], "lead": [2, 124, 128, 129, 136, 141], "search": [2, 24, 25, 36, 37, 65, 101, 104, 107, 108, 111, 125, 130, 132, 133, 134], "return": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 32, 35, 36, 37, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 69, 70, 71, 72, 90, 99, 100, 112, 115, 117, 141, 142], "its": [2, 6, 26, 56, 64, 121, 130, 132, 133, 134, 136, 138, 141], "last": [2, 101, 106, 114, 126, 128, 141], "rais": [2, 16, 18, 23, 25, 27, 30, 34, 35, 43, 55, 61, 63, 65, 67, 137, 142], "valueerror": [2, 16, 23, 25, 30, 34, 35, 43, 55, 61, 63, 67], "valid": [2, 3, 16, 18, 19, 20, 21, 22, 34, 35, 36, 37, 81, 88, 89, 100, 106, 113, 114, 119, 125, 127, 130, 131, 132, 133, 137, 138, 139, 141, 142], "targetpipelinecr": [2, 105, 119, 128, 135], "target": [2, 3, 7, 8, 16, 18, 19, 20, 21, 22, 27, 32, 34, 35, 36, 37, 38, 46, 47, 48, 49, 50, 51, 52, 65, 69, 70, 71, 72, 75, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 113, 114, 117, 119, 125, 127, 129, 130, 131, 133, 134, 137, 139, 140, 141, 142], "properti": [2, 4, 8, 16, 32, 58, 59, 129], "get": [2, 4, 6, 7, 8, 11, 13, 18, 19, 20, 21, 22, 23, 27, 28, 32, 39, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 61, 69, 70, 71, 72, 88, 89, 92, 99, 100, 101, 106, 114, 125, 127, 133, 134, 139, 140], "have": [2, 6, 7, 8, 18, 19, 27, 35, 46, 47, 48, 49, 50, 51, 52, 58, 88, 91, 92, 93, 96, 99, 101, 107, 108, 109, 113, 114, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "been": [2, 60, 127, 129, 132, 133, 142], "has_model": 2, "whether": [2, 17, 18, 19, 25, 30, 36, 43, 46, 52, 55, 63, 69, 70, 71, 72, 92, 96, 99, 114, 121, 128, 140], "ha": [2, 18, 27, 36, 37, 46, 60, 88, 89, 90, 91, 92, 93, 96, 99, 100, 102, 106, 110, 113, 117, 120, 121, 127, 128, 129, 130, 132, 133, 136, 140, 141, 142], "copi": [2, 4, 90, 114, 121, 133, 134], "classmethod": 2, "from_list": 2, "model_param": [2, 36, 37, 96, 142], "union": [2, 5, 32, 38, 68], "dict": [2, 6, 7, 8, 27, 28, 33, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 53, 58, 69, 70, 71, 72], "kei": [2, 13, 14, 35, 36, 37, 47, 51, 91, 101, 132, 137], "being": [2, 121, 124, 140, 141, 142], "pieplin": 2, "split": [2, 18, 19, 20, 21, 22, 27, 36, 37, 88, 89, 90, 93, 96, 99, 105, 106, 117, 128, 129, 130, 132, 133, 136, 140, 142], "least": [2, 18, 19, 20, 21, 36, 37, 90, 113, 119, 129], "two": [2, 45, 90, 91, 93, 96, 99, 100, 101, 102, 106, 107, 110, 113, 114, 117, 121, 127, 128, 129, 130, 132, 134, 136, 139, 141], "same": [2, 18, 19, 36, 37, 51, 65, 93, 96, 99, 107, 108, 109, 113, 117, 121, 125, 127, 128, 129, 130, 132, 134, 136, 139, 140, 141, 142], "consid": [2, 114, 120, 121, 126, 128, 130, 137, 140], "point": [2, 113, 121, 128, 129, 132, 136, 138, 139, 140, 141], "tune": [2, 33, 36, 37, 65, 104, 111, 125, 127, 128, 131, 132, 133, 134, 135, 141, 142], "function": [2, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 67, 73, 74, 87, 93, 96, 99, 100, 101, 112, 114, 116, 118, 120, 121, 123, 124, 125, 127, 128, 130, 132, 136, 137, 138, 139, 140, 141, 142], "one": [2, 32, 36, 37, 45, 47, 48, 49, 51, 57, 89, 90, 91, 92, 99, 101, 105, 106, 107, 108, 109, 110, 114, 117, 119, 121, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "each": [2, 6, 7, 8, 18, 19, 20, 21, 22, 27, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 58, 59, 88, 89, 90, 91, 92, 99, 100, 101, 102, 106, 113, 114, 117, 119, 121, 127, 128, 129, 130, 131, 132, 133, 136, 139, 140, 141], "recurs": 2, "thu": [2, 6, 99, 132, 136], "mani": [2, 46, 92, 99, 128, 129, 130, 132, 140, 141], "all": [2, 4, 17, 24, 25, 29, 36, 37, 40, 46, 47, 51, 52, 54, 59, 62, 88, 89, 92, 93, 99, 100, 101, 106, 113, 114, 117, 119, 121, 124, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142], "configur": [1, 2, 7, 46, 47, 48, 49, 50, 51, 52, 65, 125, 128, 132, 133, 134, 141], "A": [2, 6, 7, 8, 16, 18, 19, 20, 21, 22, 24, 27, 29, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 54, 58, 62, 90, 91, 92, 93, 99, 107, 108, 109, 110, 114, 127, 128, 129, 130, 132, 136, 137, 141], "without": [2, 25, 30, 43, 55, 63, 90, 92, 108, 113, 114, 119, 132, 136], "repeat": [2, 20, 21, 88, 89, 106, 114, 117, 128, 129, 130, 133, 136, 140], "to_pipelin": [2, 3], "x_type": [2, 35, 36, 37, 47, 48, 49, 51, 52, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 127, 128, 130, 132, 133, 134, 135, 137, 139, 140, 141], "search_param": [2, 36, 37, 107, 108, 109, 130, 142], "data": [2, 6, 7, 8, 17, 18, 19, 20, 21, 22, 27, 32, 34, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 81, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 125, 127, 128, 129, 130, 133, 134, 135, 136, 138, 139, 140, 141], "inspect": [2, 36, 65, 75, 101, 103, 106, 114, 122, 125, 131, 136, 137, 139, 140], "fold": [2, 16, 18, 19, 20, 21, 36, 65, 87, 88, 89, 94, 98, 99, 100, 103, 105, 106, 113, 114, 117, 128, 129, 130, 132, 133, 135, 136, 140, 141], "wise": [2, 16, 36, 65, 98, 103, 136], "predict": [2, 8, 15, 16, 27, 35, 36, 37, 41, 42, 46, 52, 58, 59, 65, 88, 89, 90, 91, 92, 93, 96, 98, 99, 103, 105, 106, 110, 114, 117, 119, 125, 128, 129, 131, 133, 134, 135, 136, 139, 140, 141], "preprocess": [2, 3, 36, 37, 65, 88, 89, 90, 92, 93, 96, 98, 99, 100, 103, 106, 113, 114, 117, 125, 127, 131, 137, 138, 140], "varianc": [2, 17, 36, 65, 98, 103, 119, 129, 133, 141], "threshold": [2, 17, 36, 46, 52, 59, 65, 98, 103, 114, 119, 127], "zscore": [2, 17, 36, 65, 88, 89, 90, 92, 93, 96, 98, 99, 100, 102, 103, 105, 107, 108, 109, 110, 113, 117, 119, 130, 132, 133, 135, 139, 140, 141], "pca": [2, 17, 36, 65, 98, 103, 106, 114, 119, 130, 141], "variabl": [2, 3, 18, 19, 20, 21, 22, 34, 35, 36, 65, 89, 90, 92, 99, 104, 106, 111, 114, 117, 128, 129, 130, 133, 135, 140, 141, 142], "z": [2, 3, 36, 65, 99, 104, 111, 126, 133, 135, 140, 141], "score": [2, 3, 8, 15, 16, 27, 36, 37, 45, 58, 65, 74, 75, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 113, 114, 116, 118, 125, 127, 128, 130, 132, 133, 134, 135, 138, 141, 142], "grid": [2, 36, 37, 65, 99, 104, 108, 111, 131, 132, 133, 134, 142], "stack": [2, 36, 65, 104, 111, 113, 119, 125, 131, 132], "analysi": [2, 17, 19, 36, 65, 87, 94, 104, 105, 111, 117, 119, 129, 141], "confound": [2, 3, 17, 22, 36, 47, 52, 59, 65, 91, 115, 119, 122, 125, 131, 139, 142], "remov": [2, 3, 17, 22, 36, 47, 52, 59, 65, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 112, 115, 117, 119, 121, 125, 129, 131, 133, 134, 139, 142], "comparison": [2, 22, 36, 45, 65, 74, 97, 112, 115, 122, 125, 138], "connectom": [2, 36, 46, 119, 125, 131], "base": [2, 16, 18, 19, 22, 32, 36, 45, 46, 57, 75, 119, 123, 125, 128, 130, 131, 132, 133, 136, 137, 138, 141], "cbpm": [2, 36, 119, 125, 131, 142], "evalu": [2, 8, 36, 37, 40, 58, 82, 93, 99, 125, 129, 132, 133, 136, 137, 138, 139, 141], "build": [2, 36, 88, 92, 99, 104, 125, 126, 127, 134, 135, 136, 138, 139], "cross": [2, 3, 16, 18, 19, 20, 21, 22, 34, 36, 37, 88, 89, 100, 106, 113, 114, 119, 125, 127, 130, 131, 132, 133, 137, 138, 139, 141, 142], "consist": [2, 3, 27, 34, 36, 120, 125, 127, 129, 131, 136, 137, 139, 141, 142], "analog": 3, "pipelinecr": [3, 36, 37, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 119, 127, 128, 130, 132, 133, 134, 135, 138, 139, 140, 142], "allow": [3, 18, 25, 27, 30, 43, 55, 63, 93, 113, 120, 123, 127, 128, 130, 132, 137, 138, 141, 142], "target_pipelin": [3, 128, 135], "jutargetpipelin": [3, 58, 105, 128, 135], "easi": [3, 91, 125, 128, 130, 133, 134, 138, 139], "wai": [3, 93, 96, 123, 125, 128, 129, 130, 132, 133, 134, 136, 139, 140, 141], "out": [3, 23, 24, 52, 62, 96, 114, 119, 125, 128, 129, 130, 133, 134, 138, 139, 140], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 79, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 113, 117, 119, 120, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142], "column_typ": 4, "hold": [4, 25, 140], "regard": [4, 132, 137, 140], "pd": [4, 6, 7, 8, 16, 17, 27, 32, 36, 37, 45, 47, 48, 49, 50, 51, 52, 57, 58, 59, 69, 72, 74, 88, 89, 90, 91, 99, 100, 101, 105, 106, 113, 117, 127, 128, 129, 133, 134, 135, 139], "datafram": [4, 6, 7, 8, 16, 17, 27, 32, 35, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 74, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 125, 127, 128, 130, 133, 134, 135, 136, 137, 139, 140, 141, 142], "One": [4, 27, 91, 128, 130, 132, 134, 141], "instead": [4, 18, 19, 22, 25, 27, 30, 43, 46, 55, 63, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 120, 128, 129, 130, 133, 134, 142], "also": [4, 88, 90, 93, 96, 101, 106, 107, 114, 120, 121, 123, 125, 127, 128, 130, 132, 133, 134, 136, 137, 139, 140, 141], "itself": [4, 134], "self": [4, 6, 7, 18, 27, 32, 46, 47, 48, 49, 50, 51, 52, 58, 60], "updat": [4, 6, 7, 8, 18, 27, 46, 47, 48, 49, 50, 51, 52, 58, 121, 124, 142], "pattern": [4, 12, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 130, 133, 134, 135, 139, 140, 141], "regex": 4, "match": [4, 50, 91], "to_type_selector": 4, "selector": [4, 12], "usabl": [4, 141], "compos": [4, 12], "columntransform": [4, 12], "callabl": [4, 38, 39, 43, 46, 142], "alia": [5, 18, 27, 66, 68], "needed_typ": [6, 7, 8, 32, 33, 50, 59], "estim": [6, 7, 8, 18, 27, 33, 36, 37, 38, 39, 43, 46, 47, 48, 49, 50, 51, 52, 58, 69, 70, 71, 72, 99, 100, 101, 107, 108, 109, 110, 113, 114, 125, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 141], "everi": [6, 30, 35, 36, 37, 55, 126, 132, 133, 137, 141], "awar": [6, 124], "thei": [6, 8, 27, 58, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 117, 123, 127, 130, 133, 134, 140, 141], "abl": [6, 120, 136, 139], "main": [6, 75, 113, 121, 125, 126, 128, 129, 132, 136], "differ": [6, 18, 19, 20, 21, 22, 30, 90, 91, 93, 96, 101, 106, 107, 108, 110, 113, 114, 123, 124, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141], "between": [6, 22, 34, 89, 113, 121, 127, 128, 129, 132, 134, 136, 139, 141], "baseestim": [6, 142], "purpos": [6, 90, 91, 140], "That": [6, 127, 128, 129, 130, 132, 133, 141], "ar": [6, 7, 8, 18, 19, 20, 21, 25, 27, 30, 32, 36, 37, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 63, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 113, 114, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142], "get_needed_typ": [6, 7, 8, 47, 48, 49, 50, 51, 52, 58, 72], "get_apply_to": [6, 7, 8, 47, 48, 49, 50, 51, 52, 58, 72], "filter_column": [6, 7, 8, 47, 48, 49, 50, 51, 52, 58, 110, 119, 132, 134], "x": [6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 27, 32, 35, 36, 37, 39, 43, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 69, 70, 72, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141, 142], "panda": [6, 7, 8, 34, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 58, 87, 88, 89, 90, 92, 93, 94, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 124, 125, 127, 128, 129, 133, 134, 135, 137, 139, 140], "filter": [6, 7, 8, 47, 48, 49, 50, 51, 52, 58, 119, 125, 141, 142], "get_metadata_rout": [6, 7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 114], "metadata": [6, 7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 132, 133, 134], "rout": [6, 7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 114], "check": [6, 7, 8, 10, 18, 19, 20, 21, 22, 27, 32, 34, 38, 46, 47, 48, 49, 50, 51, 52, 58, 85, 91, 92, 99, 101, 113, 114, 120, 121, 125, 126, 130, 132, 140, 142], "guid": [6, 7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 114, 121], "mechan": [6, 7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 114, 132, 136], "work": [6, 7, 8, 18, 19, 20, 21, 22, 27, 32, 46, 47, 48, 49, 50, 51, 52, 57, 58, 87, 88, 89, 90, 92, 93, 94, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 127, 128, 129, 130, 132, 133, 134, 139, 142], "metadatarequest": [6, 7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 114], "encapsul": [6, 7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 114], "inform": [1, 6, 7, 8, 18, 19, 20, 21, 22, 27, 32, 36, 37, 46, 47, 48, 49, 50, 51, 52, 57, 58, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 121, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "get_param": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 69, 70, 71, 72, 133], "deep": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 69, 70, 71, 72, 128], "true": [6, 7, 8, 18, 19, 25, 27, 30, 32, 36, 37, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 55, 58, 63, 69, 70, 71, 72, 88, 89, 90, 93, 99, 100, 102, 105, 106, 113, 114, 117, 120, 128, 129, 130, 132, 133, 135, 136, 140, 141], "contain": [6, 7, 8, 27, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 51, 52, 58, 74, 88, 89, 90, 93, 105, 106, 117, 129, 132, 133, 137, 140], "subobject": [6, 7, 8, 27, 46, 47, 48, 49, 51, 52, 58], "map": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 89, 114], "set_param": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 69, 70, 71, 72], "simpl": [6, 7, 8, 27, 36, 45, 46, 47, 48, 49, 50, 51, 52, 58, 65, 74, 87, 94, 95, 97, 99, 100, 101, 102, 107, 108, 109, 113, 114, 119, 121, 125, 127, 129, 130, 132, 133, 134, 136, 141], "well": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 120, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 141], "nest": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 127, 130, 133, 136], "latter": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58], "form": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 137, 141], "compon": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 101, 106, 119, 141], "__": [6, 7, 8, 27, 46, 47, 48, 49, 50, 51, 52, 58, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 130, 134, 135, 139, 140, 141], "possibl": [6, 7, 8, 25, 27, 30, 43, 46, 47, 48, 49, 50, 51, 52, 55, 58, 63, 91, 125, 129, 130, 132, 136, 140, 141], "instanc": [6, 7, 8, 16, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58, 128, 133, 141], "fit": [7, 8, 27, 32, 36, 37, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 69, 70, 71, 72, 99, 100, 106, 114, 119, 127, 128, 131, 132, 133, 136, 141, 142], "y": [7, 8, 15, 16, 18, 19, 20, 21, 22, 27, 32, 34, 35, 36, 37, 39, 43, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 69, 70, 71, 72, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141], "fit_param": [7, 8, 46, 47, 48, 49, 50, 51, 52, 58], "datalik": [7, 8, 27, 32, 47, 48, 49, 50, 51, 52, 57, 58, 59, 69, 70, 71, 72], "addit": [7, 8, 27, 36, 37, 46, 47, 48, 49, 50, 51, 52, 58, 124, 125, 127, 133, 134, 136, 139, 140], "pass": [7, 8, 18, 19, 20, 21, 22, 27, 47, 48, 49, 50, 51, 52, 58, 90, 100, 107, 119, 121, 129, 130, 135, 140, 141], "fit_transform": [7, 32, 46, 47, 48, 49, 50, 51, 52, 57, 59], "version": [7, 18, 22, 27, 46, 47, 48, 49, 50, 51, 52, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 124, 125, 129, 132, 133, 134, 142], "arrai": [7, 8, 18, 19, 20, 21, 22, 36, 46, 47, 48, 49, 50, 51, 52, 58, 88, 133, 134], "like": [7, 8, 18, 19, 20, 21, 22, 30, 46, 47, 48, 49, 50, 51, 52, 55, 58, 69, 70, 71, 72, 90, 96, 100, 106, 121, 124, 129, 130, 132, 133, 136, 137, 140, 141], "shape": [7, 8, 18, 19, 20, 21, 22, 46, 47, 48, 49, 50, 51, 52, 58, 88, 99], "n_sampl": [7, 8, 18, 19, 20, 21, 22, 46, 47, 48, 49, 50, 51, 52, 58, 101, 127, 134], "n_featur": [7, 18, 19, 20, 21, 22, 46, 47, 48, 49, 50, 51, 52, 101, 127, 128, 134], "input": [7, 32, 34, 35, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 81, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 130, 133, 134, 135, 138, 139, 140, 141], "sampl": [7, 8, 18, 19, 20, 21, 22, 27, 35, 45, 46, 47, 48, 49, 50, 51, 52, 58, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141], "n_output": [7, 46, 47, 48, 49, 50, 51, 52], "unsupervis": [7, 46, 47, 48, 49, 50, 51, 52], "x_new": [7, 46, 47, 48, 49, 50, 51, 52], "ndarrai": [7, 8, 18, 19, 20, 21, 22, 27, 46, 47, 48, 49, 50, 51, 52, 58], "n_features_new": [7, 46, 47, 48, 49, 50, 51, 52], "set_output": [7, 46, 47, 48, 49, 50, 51, 52], "output": [7, 17, 18, 19, 20, 21, 22, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 65, 74, 90, 113, 121, 133, 136, 137, 138, 141], "see": [1, 7, 18, 19, 20, 27, 28, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 65, 79, 86, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 121, 123, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141], "introduc": [7, 46, 47, 48, 49, 50, 51, 52, 128], "api": [7, 46, 47, 48, 49, 50, 51, 52, 119, 121, 125, 134, 138, 141], "exampl": [7, 37, 46, 47, 48, 49, 50, 51, 52, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 120, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142], "format": [7, 46, 47, 48, 49, 50, 51, 52, 65, 89, 91, 106, 107, 108, 109, 113, 121, 126, 128, 130, 142], "unchang": [7, 18, 27, 46, 47, 48, 49, 50, 51, 52], "wrap": [8, 38, 58, 142], "make": [8, 12, 18, 19, 20, 21, 22, 27, 89, 91, 92, 99, 101, 106, 107, 108, 109, 113, 121, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141, 142], "modellik": [8, 27, 28, 30, 52, 58, 59, 114], "float": [8, 22, 27, 35, 36, 37, 41, 42, 46, 52, 58, 59, 74, 88, 109, 114, 130], "predict_proba": [8, 15, 27, 58], "comput": [8, 27, 36, 41, 42, 46, 58, 93, 106, 117, 120, 130, 132, 136, 141], "probabl": [8, 27, 36, 37, 58, 132], "outcom": [8, 27, 58, 141], "np": [8, 18, 19, 20, 21, 22, 27, 46, 58, 88, 89, 92, 99, 106, 107, 108, 109, 127, 128, 129, 133, 134], "correspond": [8, 27, 36, 37, 58, 133], "sort": [8, 27, 58, 92, 99, 119], "order": [8, 18, 19, 27, 58, 91, 92, 99, 113, 114, 120, 121, 128, 130, 134, 136, 141, 142], "appear": [8, 27, 58, 140], "classes_": [8, 27, 58], "decision_funct": [8, 15, 58, 99, 142], "decis": [8, 58, 91, 92, 99, 107, 108, 109, 128, 132, 133], "n_class": [8, 58], "1": [7, 8, 18, 22, 27, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 58, 69, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141], "2": [8, 18, 19, 20, 21, 22, 27, 58, 70, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 124, 125, 128, 129, 130, 133, 134, 135, 137, 139, 140, 141], "predict_log_proba": [8, 15], "kwarg": [8, 27, 28, 50, 57, 60, 69, 70, 71, 72], "new_typ": 9, "chang": [9, 18, 22, 27, 47, 86, 108, 113, 119, 121, 124, 126, 129, 130, 140], "new": [7, 9, 18, 27, 46, 47, 48, 49, 50, 51, 52, 99, 114, 121, 125, 132, 136, 141], "attr": 10, "ensur": [10, 47, 49, 51, 52, 88, 129, 133], "cv": [15, 16, 18, 19, 20, 21, 22, 27, 34, 35, 36, 37, 65, 87, 88, 89, 93, 94, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 141, 142], "func": 15, "group": [15, 16, 18, 19, 20, 21, 22, 34, 35, 36, 37, 65, 87, 90, 94, 99, 100, 106, 125, 127, 131, 140], "featur": [16, 17, 18, 19, 20, 21, 22, 32, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 57, 59, 69, 70, 72, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 121, 124, 125, 127, 130, 131, 132, 133, 135, 136, 138, 139, 140], "label": [16, 18, 19, 20, 21, 22, 35, 36, 37, 88, 93, 136, 137, 140, 141], "case": [16, 18, 19, 20, 21, 27, 35, 36, 37, 46, 90, 91, 99, 105, 117, 121, 127, 128, 129, 132, 137, 140, 141], "number": [16, 18, 19, 20, 21, 22, 36, 37, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 140, 141], "pipelineinspector": [16, 102], "foldsinspector": [16, 133], "until": [17, 99, 101, 106, 114, 124, 132, 137, 139, 142], "with_column_typ": [17, 99], "fals": [17, 18, 19, 25, 27, 30, 36, 43, 48, 52, 55, 58, 63, 65, 89, 90, 92, 93, 96, 99, 100, 101, 105, 106, 107, 108, 109, 110, 114, 117, 127, 128, 130, 133, 134, 135, 140, 141], "certain": [17, 120, 137, 140, 141], "inclus": [17, 114], "svm": [17, 36, 37, 65, 88, 93, 96, 98, 102, 103, 107, 108, 109, 110, 119, 130, 132, 133, 134, 135, 139, 140, 141], "n_bin": [18, 19, 20, 21, 90, 129], "bin": [18, 19, 20, 21, 90, 129], "n_split": [18, 19, 20, 21, 22, 27, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141], "5": [18, 19, 20, 21, 22, 36, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141], "shuffl": [18, 19, 22, 89, 90, 92, 93, 96, 99, 100, 101, 105, 106, 107, 108, 109, 110, 114, 117, 127, 128, 129, 130, 133, 134, 135, 140, 141], "random_st": [18, 19, 20, 21, 22, 27, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141], "stratifi": [18, 19, 20, 21, 22, 36, 65, 87, 88, 94, 129, 140, 142], "k": [18, 19, 20, 21, 36, 65, 87, 88, 89, 92, 94, 99, 105, 106, 113, 119, 129, 130, 136, 140], "where": [18, 19, 20, 21, 22, 91, 126, 129, 130, 132, 133, 141, 142], "stratif": [18, 19, 22, 90, 92, 131], "done": [18, 19, 22, 107, 121, 124, 126, 132, 133, 134, 139, 140, 141], "discret": [18, 19, 129, 141], "fix": [18, 19, 121, 129, 142], "quantil": [18, 19, 20, 21, 129], "either": [18, 19, 20, 21, 45, 99, 101, 119, 121, 128, 130, 132, 141], "In": [18, 19, 20, 21, 46, 90, 91, 92, 93, 99, 100, 113, 114, 117, 121, 125, 127, 128, 129, 132, 133, 134, 136, 137, 139, 140, 141], "first": [18, 19, 20, 21, 45, 67, 73, 88, 92, 93, 96, 99, 101, 105, 106, 107, 108, 113, 114, 121, 127, 128, 130, 132, 134, 135, 137, 138, 139, 140, 141], "second": [18, 19, 20, 21, 45, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141], "must": [18, 19, 20, 21, 45, 50, 74, 91, 92, 99, 106, 121, 129, 130, 132, 137, 141], "befor": [18, 19, 36, 37, 58, 88, 90, 91, 100, 113, 117, 121, 124, 126, 129, 130, 132, 140, 141, 142], "batch": [18, 19, 132], "note": [18, 19, 20, 21, 22, 27, 36, 37, 101, 113, 121, 128, 130, 132, 134], "within": [18, 19, 121, 127, 128, 132, 134, 136, 137, 140], "implement": [18, 19, 46, 120, 125, 127, 128, 129, 134, 142], "approxim": [18, 19], "distribut": [18, 19, 22, 45, 88, 90, 92, 93, 96, 99, 100, 102, 107, 108, 109, 110, 113, 119, 128, 129, 132, 133, 139, 140, 141, 142], "global": [1, 13, 14, 18, 19, 120], "perform": [18, 19, 32, 36, 37, 45, 88, 89, 90, 92, 93, 95, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 127, 128, 129, 130, 132, 133, 136, 138, 139, 140, 141], "randomst": [18, 19, 20, 21, 22], "when": [18, 19, 27, 90, 100, 113, 119, 120, 121, 123, 127, 128, 129, 130, 132, 135, 137, 140, 141, 142], "affect": [18, 19, 133], "indic": [18, 19, 20, 21, 22, 36, 48, 52, 99, 119, 121, 129, 133, 140, 141], "control": [18, 19, 20, 21, 22, 91, 92, 99, 107, 108, 109, 116, 128, 130, 132, 134, 136], "random": [18, 19, 20, 21, 22, 27, 36, 37, 65, 92, 93, 96, 98, 101, 103, 107, 108, 109, 113, 119, 128, 129, 130, 133, 134, 139, 141], "otherwis": [18, 19, 22, 27, 58, 65], "leav": [18, 19, 106, 129, 132], "reproduc": [18, 19, 20, 21, 22, 27, 36, 37, 140], "across": [18, 19, 20, 21, 22, 89, 100, 105, 106, 117, 129, 133, 140], "call": [18, 19, 20, 21, 22, 25, 39, 43, 120, 123, 128, 129, 130, 132, 133, 134, 137, 141, 142], "splitter": [18, 19, 20, 21, 22, 27, 36, 125, 131, 138, 139], "mai": [18, 19, 20, 21, 22, 86, 127, 128, 133, 134], "result": [18, 19, 20, 21, 22, 32, 36, 37, 57, 91, 99, 113, 114, 120, 128, 129, 132, 133, 136, 137, 139, 140, 142], "ident": [18, 19, 20, 21, 22, 109, 129, 130], "integ": [18, 19, 20, 21, 22, 130, 140], "gener": [18, 19, 20, 21, 22, 36, 37, 50, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 121, 126, 129, 132, 135, 136, 140, 141, 142], "test": [18, 19, 20, 21, 22, 27, 36, 45, 59, 88, 89, 90, 96, 99, 105, 106, 108, 113, 125, 128, 129, 130, 132, 133, 136, 139, 140, 142], "suffici": [18, 19, 22, 90], "henc": [18, 19, 22], "zero": [18, 19, 20, 21, 22, 101], "placehold": [18, 19, 20, 21, 22], "actual": [18, 19, 22, 46, 52, 88, 89, 106, 114, 117, 132, 133], "supervis": [18, 19, 20, 21, 22, 141], "learn": [18, 19, 20, 21, 22, 23, 25, 36, 37, 46, 47, 49, 50, 51, 52, 53, 57, 91, 93, 99, 100, 117, 119, 120, 121, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "while": [18, 19, 20, 21, 22, 36, 37, 100, 107, 113, 120, 125, 128, 129, 130, 132, 134, 135, 136, 141, 142], "dataset": [18, 19, 20, 21, 22, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141], "yield": [18, 19, 20, 21, 22, 36, 120, 133, 140], "get_n_split": [18, 19, 20, 21, 22], "iter": [18, 19, 20, 21, 22, 36, 101, 109, 113, 127, 130, 133, 140, 142], "alwai": [18, 19, 20, 21, 22, 93, 107, 108, 109, 113, 121, 128, 130, 132, 134, 139, 140, 141], "ignor": [18, 19, 20, 21, 22, 27, 114, 117, 130], "exist": [18, 19, 20, 21, 22, 27, 43, 65], "set_split_request": 18, "request": [18, 27, 125, 132], "relev": [18, 27, 133], "enable_metadata_rout": [18, 27], "set_config": [18, 27, 120], "meta": [18, 27, 132], "error": [18, 25, 27, 30, 35, 36, 37, 43, 55, 63, 65, 67, 88, 89, 91, 105, 106, 117, 120, 121, 129, 136, 139, 142], "given": [18, 27, 52, 99, 113, 114, 119, 120, 128, 132, 137, 140, 141], "origin": [18, 27, 46, 67, 121, 126, 132], "util": [18, 27, 75, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 125, 133, 134], "metadata_rout": [18, 27], "retain": [18, 27, 133], "some": [18, 27, 90, 91, 92, 99, 100, 121, 124, 127, 128, 129, 130, 132, 133, 134, 136, 137], "3": [18, 27, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141], "sub": [18, 27, 138], "e": [18, 27, 30, 46, 52, 59, 65, 114, 119, 121, 124, 126, 127, 128, 129, 130, 132, 133, 140, 141], "g": [18, 27, 30, 65, 106, 119, 124, 129, 130, 140], "insid": [18, 27, 30, 141], "effect": [18, 27, 128, 132, 133], "glossari": [19, 20], "n_repeat": [20, 21, 88, 96, 102, 133, 139, 140], "10": [20, 21, 46, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 125, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 141], "continuousstratifiedgroupkfold": [20, 129], "n": [20, 21, 88, 89, 90, 101, 105, 106, 117, 119, 126, 129, 135, 141], "time": [20, 21, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141], "repetit": [20, 21, 88, 89, 106], "state": [20, 21, 26, 27, 31, 44, 56, 64, 128], "contion": 21, "continuousstratifiedkfold": [21, 90, 129, 142], "test_siz": [22, 88, 89, 99, 105, 106, 113], "0": [22, 27, 35, 36, 37, 46, 52, 59, 74, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141], "train_siz": [22, 99, 113], "bootstrap": [22, 113, 129], "resampl": 22, "replac": [22, 46, 100, 113, 126, 133], "respect": [22, 46, 119, 121, 132, 137, 139, 140, 141], "re": [22, 121, 141], "proport": 22, "round": [22, 139], "up": [22, 36, 37, 45, 67, 101, 107, 108, 109, 114, 125, 127, 132, 133, 138, 141], "absolut": [22, 89, 105, 106, 117, 119], "complement": [22, 119], "size": [22, 127, 128, 129, 139], "21": [22, 91, 125, 127, 134, 139], "remain": [22, 129, 136], "unspecifi": 22, "automat": [22, 121, 124, 126, 141], "produc": [22, 130], "n_label": 22, "searcher": [23, 24, 25, 26, 36, 37, 124, 131, 132, 142], "obj": 25, "scikit": [23, 25, 36, 37, 46, 47, 49, 50, 51, 52, 53, 57, 93, 99, 100, 117, 119, 120, 124, 125, 127, 128, 129, 130, 134, 135, 136, 139, 140, 141, 142], "avail": [23, 24, 25, 29, 36, 37, 39, 40, 45, 54, 61, 62, 124, 125, 132, 140, 141, 142], "algorithm": [24, 25, 27, 36, 37, 100, 130, 132, 136, 139, 141, 142], "searcher_nam": 25, "overwrit": [25, 30, 43, 55, 63, 65, 142], "regist": [25, 26, 30, 31, 36, 37, 43, 44, 55, 56, 63, 64, 117, 142], "after": [25, 32, 52, 57, 59, 89, 90, 99, 101, 105, 106, 113, 114, 117, 121, 133], "referenc": [25, 30, 55, 63, 142], "decid": [25, 30, 43, 63], "warn": [25, 30, 34, 35, 43, 55, 60, 63, 65, 73, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 117, 127, 129, 132, 133, 134, 137, 139, 142], "alreadi": [25, 30, 43, 55, 63, 99, 101, 121, 128, 129, 132, 134, 138, 139, 141], "reset": [26, 31, 44, 56, 64, 91], "ensembl": [27, 132, 134], "ds_split": 27, "random_state_algorithm": 27, "deslib": [27, 75, 119, 124, 125], "randomforest": 27, "metad": 27, "singlebest": 27, "staticselect": 27, "stackedclassifi": 27, "knorau": 27, "knora": 27, "desp": 27, "ola": 27, "mcb": 27, "knop": 27, "sample_weight": 27, "weight": [27, 130, 141], "set_score_request": 27, "run_cross_valid": [28, 30, 45, 74, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 121, 127, 128, 130, 132, 133, 134, 135, 138, 139, 142], "extra": [28, 50, 69, 70, 72, 79, 86, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 119, 120, 121, 134, 135, 141], "keyword": [28, 50, 69, 70, 72, 101, 127], "argument": [28, 50, 69, 70, 72, 101, 114, 129], "model_nam": 30, "classification_cl": 30, "regression_cl": 30, "afterward": [30, 55, 134], "behav": [30, 55], "runtimewarn": [30, 34, 35, 55, 63, 73, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 117, 127, 133, 134, 139], "unlik": [32, 57, 136], "both": [32, 46, 57, 90, 92, 99, 113, 114, 128, 129, 130, 132, 134, 135, 140, 141], "requir": [32, 57, 79, 86, 121, 125, 130, 132, 133, 135, 138, 141, 142], "targetconfoundremov": [32, 57, 128], "encod": [32, 57], "present": [32, 57, 114, 120, 121, 127, 129, 142], "leakag": [32, 57, 125, 128, 141], "drop": [32, 46, 48, 57, 90, 93, 96, 101, 114, 119, 133], "tupl": [32, 46, 90, 100, 129, 130], "jutargettransform": [32, 61, 63], "transformerlik": [32, 36, 37, 141], "inverse_transform": 32, "invers": [32, 58, 142], "can_inverse_transform": [32, 58], "factori": 33, "params_to_tun": 33, "juestimatorlik": 33, "estimatorlikefit1": [33, 68, 72], "estimatorlikefit2": [33, 68], "estimatorlikef": [33, 68], "seri": [34, 35, 59, 69, 72], "inconsist": [34, 35], "might": [34, 35, 86, 91, 93, 96, 100, 107, 108, 109, 120, 123, 124, 128, 129, 130, 132, 133, 135, 138, 140, 141, 142], "still": [34, 91, 114, 124, 129, 132, 140, 142], "run": [34, 36, 46, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141], "df": [35, 45, 101, 130, 137, 139, 140, 141], "pos_label": [35, 36, 37, 93], "detail": [35, 36, 37, 121, 132, 136], "interpret": [35, 36, 37, 65, 113, 133], "posit": [35, 36, 37, 46, 89, 93, 127], "element": [35, 36, 37, 65, 88, 91, 101, 120, 141, 142], "convert": [35, 36, 37, 90, 91, 100, 113, 117, 129], "equal": [35, 36, 37, 90, 119, 129], "dictionari": [35, 36, 37, 47, 51, 101, 114, 128, 130, 133, 137, 142], "df_x": 35, "df_y": 35, "df_group": 35, "return_estim": [36, 37, 88, 89, 90, 92, 99, 100, 101, 105, 106, 107, 108, 109, 113, 114, 117, 127, 130, 133, 134, 140], "return_inspector": [36, 37, 102, 133], "return_train_scor": [36, 133, 140], "seed": [36, 37, 93, 96, 101, 107, 108, 109, 113, 133, 134], "n_job": [36, 46, 120, 132, 133, 142], "verbos": [36, 37, 46, 133, 142], "string": [36, 37, 65, 119, 137, 139, 140, 141, 142], "kind": [36, 37, 88, 89, 92, 93, 96, 99, 100, 102, 107, 108, 109, 110, 113, 130, 137, 140], "categor": [36, 37, 106, 114, 119, 130, 135], "multiple_class": [36, 37], "binari": [36, 37, 65, 87, 92, 94, 96, 99, 100, 102, 107, 108, 109, 110, 113, 119, 121, 129, 130, 133, 139], "ordin": [36, 37], "final": [36, 37, 88, 89, 90, 91, 92, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 127, 129, 130, 132, 133, 134, 140, 141, 142], "inspector": [36, 37, 102, 133, 142], "strategi": [36, 37, 140], "kfold": [36, 89, 90, 92, 93, 96, 99, 100, 101, 105, 106, 107, 108, 109, 110, 114, 117, 127, 128, 129, 130, 133, 134, 135, 140, 141], "scorerlik": [36, 38, 39, 43], "metric": [36, 37, 75, 88, 89, 91, 93, 96, 106, 113, 117, 125, 136, 138, 139], "http": [36, 46, 65, 90, 96, 121, 125, 129, 136, 139, 142], "org": [36, 46, 65, 90, 96, 125, 136, 139, 140], "stabl": [36, 90, 124, 125, 136], "model_evalu": 36, "html": [36, 65, 90, 96, 121, 125, 136, 139, 140], "comprehens": [36, 120], "scorer": [36, 39, 40, 43, 44, 117, 139, 140, 142], "defin": [36, 37, 45, 50, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 127, 128, 129, 130, 133, 134, 140, 141, 142], "follow": [36, 37, 45, 46, 50, 65, 67, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 114, 117, 119, 121, 122, 124, 125, 126, 127, 130, 132, 133, 134, 137, 138, 139, 140, 141], "step__paramet": [36, 37], "sever": [36, 37, 91, 92, 99, 120, 121, 129, 130, 132, 136, 140], "svm__probabl": [36, 37, 133], "go": [36, 37, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 125, 132, 133, 138, 141], "oper": [36, 37, 88, 90, 100, 113, 114, 129, 132], "job": [36, 46, 132], "parallel": [36, 46, 120, 121, 125, 131, 142], "over": [36, 88, 89, 93, 96, 101, 106, 127, 128, 133, 134, 139], "mean": [36, 37, 45, 46, 52, 59, 86, 89, 90, 92, 93, 99, 101, 105, 106, 107, 108, 109, 113, 114, 117, 119, 128, 129, 130, 132, 133, 135, 136, 139, 140, 141], "unless": [36, 132], "joblib": [36, 37, 46, 125, 131, 142], "parallel_backend": 36, "context": [36, 91, 92, 99, 107, 108, 109, 132, 133], "processor": [36, 132], "level": [36, 37, 65, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 127, 132, 133, 134], "outer": [36, 37, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 130, 132, 133, 134, 135, 139, 140, 141, 142], "convernt": [36, 37], "print": [36, 37, 65, 88, 89, 90, 92, 93, 96, 99, 101, 102, 105, 106, 107, 108, 109, 110, 114, 117, 120, 127, 128, 130, 133, 135, 139, 140, 141], "larger": [36, 37], "50": [36, 37, 89, 90, 93, 96, 100, 101, 102, 105, 106, 110, 113, 114, 117, 130, 132, 134, 135, 140, 141], "standard": [36, 37, 46, 101, 128, 134, 141, 142], "standrad": [36, 37], "addition": [36, 37, 65, 93, 96, 125, 126, 128, 141], "fit_tim": [36, 37, 88, 89, 102, 105, 106, 114, 117, 128, 135, 140, 141], "And": [36, 37, 92, 99, 113, 129, 130, 132], "final_estim": [36, 37, 132], "multiclass": [36, 65, 87, 94, 119], "forest": [36, 65, 92, 96, 98, 101, 103, 113, 119, 134, 139, 141], "custom": [36, 43, 65, 118, 122, 125, 127, 140, 141], "wrap_scor": 38, "doe": [38, 99, 132, 136, 141], "handl": 38, "non_invers": 38, "scalar": [39, 43, 88], "greater": [39, 43, 45, 133], "better": [39, 43, 107, 108, 109, 130, 133, 139], "Will": [39, 43, 139], "y_true": [41, 42, 88, 89, 93, 106, 117], "y_pred": [41, 42, 88, 89, 93, 106, 117], "squar": [41, 117, 119], "pearson": [41, 42, 117, 127], "product": [41, 42, 117], "moment": [41, 42, 117], "correl": [41, 42, 46, 89, 117, 127], "coeffici": [41, 42, 89, 117, 140, 141], "arraylik": [41, 42], "scorer_nam": [43, 117], "access": [43, 91, 132], "want": [43, 52, 88, 91, 92, 93, 99, 101, 113, 114, 117, 121, 123, 124, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "userwarn": [43, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 129, 133, 134], "bonferroni": 45, "altern": [45, 113, 142], "side": 45, "correct": [45, 96, 134, 139, 142], "t": [45, 91, 96, 99, 129, 130, 132, 139, 140, 141, 142], "degre": 45, "freedom": 45, "adjust": 45, "pvalu": 45, "full": [45, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 132, 133], "letter": 45, "sidak": 45, "holm": 45, "down": 45, "sime": 45, "hochberg": 45, "independ": [45, 52, 59, 99, 113, 114, 119, 129, 132], "hommel": 45, "close": [45, 126], "non": [45, 46, 132], "neg": [45, 46, 127], "fdr_bh": 45, "benjamini": 45, "fdr_by": 45, "yekuti": 45, "fdr_tsbh": 45, "stage": 45, "fdr": [45, 119], "fdr_tsbky": 45, "less": [45, 90, 101, 125, 129, 132, 136], "hypothesi": [45, 113], "underli": [45, 119, 128, 133], "unequ": 45, "significance_threshold": [46, 127], "05": [46, 106, 113, 115, 125, 127, 130, 133], "corr_method": [46, 127], "pearsonr": [46, 117, 140], "agg_method": [46, 127], "sum": [46, 88, 127, 142], "corr_sign": [46, 127], "posneg": [46, 127], "aggreg": [46, 127], "significantli": 46, "signific": [46, 96, 127, 132, 133], "aggregate": 46, "separ": [46, 99, 101, 132, 136, 140, 141], "ones": [46, 130], "choos": [46, 93, 96, 129, 130, 139, 141], "procedur": [46, 129, 136, 142], "describ": [46, 89, 90, 101, 105, 106, 114, 117, 121, 135, 140], "p": [46, 88, 96, 113, 127, 139], "scipi": [46, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 127, 133, 134], "stat": [46, 75, 96, 117, 125, 127, 129, 139], "convent": [46, 121, 130], "axi": [46, 88, 89, 90, 105, 106, 117, 129, 135], "po": [46, 127], "correlation_valu": 46, "found": [46, 107, 108, 109, 140], "used_corr_sign_": 46, "log": [46, 65, 67, 73, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 130, 132, 133, 134, 142], "shen": [46, 127], "finn": [46, 127], "scheinost": 46, "d": [46, 88, 91, 92, 99, 107, 108, 109, 119, 126, 127, 129, 130], "et": [46, 119, 127, 128, 141], "al": [46, 127, 128], "individu": [46, 127, 133, 140], "behavior": [46, 91, 127, 128, 133, 142], "brain": [46, 92, 99, 125, 127, 128], "connect": [46, 127, 128], "nat": [46, 127], "protoc": [46, 127], "12": [46, 89, 91, 92, 99, 101, 102, 106, 124, 127, 128], "506": [46, 100, 127], "518": [46, 101, 127], "2017": [46, 127, 128], "doi": [46, 125, 128], "1038": 46, "nprot": 46, "2016": [46, 91, 92, 99, 107, 108, 109, 127], "178": 46, "y_mean_": 46, "show": [46, 87, 96, 104, 112, 116, 123, 129, 130, 139, 140, 142], "wa": [7, 46, 47, 48, 49, 50, 51, 52, 92, 99, 100, 101, 114, 127, 129, 130, 133, 140], "x_y_correlations_": 46, "significant_mask_": 46, "had": [46, 108, 140, 142], "pos_mask_": 46, "pos_significant_mask_": 46, "neg_significant_mask_": 46, "used_significant_mask_": 46, "threhsold": 46, "mask": [46, 48, 52], "per": [46, 88, 92, 99, 106, 121, 129, 132], "get_feature_names_out": [46, 47, 49, 50, 51, 52], "input_featur": [46, 47, 49, 50, 51, 52], "x_types_renam": 47, "Not": [47, 48, 49, 50, 51, 113], "here": [47, 48, 49, 51, 90, 91, 92, 99, 101, 114, 120, 121, 125, 134, 139, 140, 141], "kept": [47, 49, 50, 51, 52, 114], "jutransform": [47, 48, 49, 50, 51, 52], "get_support": [48, 52], "support": [48, 52, 58, 79, 88, 92, 93, 99, 102, 107, 108, 109, 121, 129, 130, 133, 134, 140, 141, 142], "support_mask": [48, 52], "numpi": [48, 52, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 124, 127, 128, 129, 133, 134], "keep": [49, 91, 93, 96, 100, 102, 106, 110, 113, 114, 121, 124, 125, 130, 132, 134, 141], "wrapper": [50, 58, 142], "around": 50, "directli": [50, 91, 125, 135], "feature_names_in_": 50, "undefin": [50, 120], "x0": 50, "x1": 50, "n_features_in_": 50, "model_confound": [52, 59, 114, 128], "keep_confound": [52, 114], "specif": [52, 93, 99, 101, 114, 128, 130, 131, 133, 136, 137, 138], "subtract": [52, 59, 114, 119], "regular": [52, 107, 108, 114, 119, 130, 137], "express": [52, 114, 137], "syntax": [52, 114], "linearregress": [52, 59, 114, 119, 127, 128], "By": [52, 59, 99, 100, 101, 114, 119, 127, 130, 132, 133, 140], "residu": [52, 59, 114, 128], "fall": [52, 59, 114, 127, 140], "under": [52, 59, 114, 117, 123, 124, 140, 141], "togeth": [52, 89, 90, 105, 106, 114, 117, 119], "deconfound": [52, 114], "transformer_nam": [55, 63], "transformer_cl": [55, 63], "arg": [57, 60, 69, 70, 71, 72], "_model_": 58, "transform_target": 58, "confoundremov": [59, 114, 119, 128, 142], "notifi": [60, 65], "with_traceback": 60, "except": [60, 67, 121, 124], "tb": [60, 132], "__traceback__": 60, "fname": 65, "output_format": 65, "debug": [65, 132, 136], "info": [65, 66, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 127, 128, 130, 132, 133, 134, 135, 139, 140, 141], "messag": [65, 67, 73, 121, 127, 142], "pathlib": 65, "path": [65, 132], "filenam": [65, 121], "stdout": 65, "file": [65, 91, 94, 97, 103, 111, 115, 118, 121, 132], "statement": 65, "append": [65, 100, 113, 126, 129, 133], "entri": [65, 141], "doc": [65, 90, 121, 126, 142], "python": [65, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 124, 126, 129, 130, 132, 134, 142], "dev": [65, 121, 126], "howto": 65, "asctim": 65, "levelnam": 65, "msg": [67, 73], "klass": [67, 130], "subclass": [67, 73], "fashion": [69, 70, 71, 72, 128], "juestim": 72, "categori": 73, "width": [74, 93, 96, 102, 110, 113], "800": 74, "height": 74, "600": [74, 90], "ci": [74, 113, 126], "95": [74, 93, 96, 101, 102, 106, 110, 113, 129], "plot": [74, 88, 89, 90, 96, 99, 100, 101, 106, 113, 125, 129, 139], "panel": [74, 96, 123, 124, 139], "dashboard": 74, "confid": [74, 113, 133], "interv": [74, 113], "dynam": [75, 124, 125], "prepar": [75, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 117, 125, 127, 128, 133, 134], "visual": [75, 99, 124, 125, 129, 136, 138], "julearn": [1, 77, 79, 86, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141], "depend": [79, 86, 91, 92, 99, 107, 108, 109, 121, 125, 129, 132, 133, 139, 142], "instal": [79, 86, 121, 123, 125, 126, 139, 142], "protocol": 85, "experiment": [86, 130], "futur": [86, 88, 90, 100, 113, 129, 130, 133], "complet": [86, 121, 132], "particularli": [86, 129, 132, 140], "reli": 86, "beta": 86, "releas": [86, 124, 125, 142], "packag": [86, 90, 93, 100, 113, 121, 123, 124, 129, 130, 132, 134], "viz": [86, 96, 124, 125, 139], "basic": [87, 121, 130, 137, 138, 140, 141, 142], "galleri": [87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 121], "sphinx": [87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 121, 142], "end": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 124, 132, 142], "download": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117], "code": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 125, 128, 132, 141, 142], "iri": [88, 93, 96, 100, 102, 110, 113, 121, 130, 137, 140, 141], "vector": [88, 92, 93, 99, 102, 107, 108, 109, 121, 130, 133, 134, 140, 141], "machin": [88, 91, 92, 93, 99, 102, 107, 108, 109, 121, 125, 127, 128, 130, 133, 136, 137, 138, 139, 141], "classifi": [88, 92, 93, 99, 100, 102, 107, 108, 109, 110, 113, 121, 133, 140, 141], "heatmap": [88, 89, 106], "accuraci": [88, 93, 108, 113, 128, 129, 139, 140], "confus": [88, 101, 140, 141], "matrix": 88, "author": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 127], "shammi": [88, 89, 90, 92, 99, 101, 106, 113, 117, 125, 128, 142], "fz": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127], "juelich": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127], "de": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 132], "federico": [88, 89, 90, 91, 92, 93, 96, 99, 100, 102, 106, 107, 108, 109, 110, 113, 117, 125], "raimondo": [88, 89, 90, 91, 92, 93, 96, 99, 100, 102, 106, 107, 108, 109, 110, 113, 117, 125, 142], "f": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 106, 107, 108, 109, 110, 113, 117, 127, 128, 130, 134], "licens": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 127], "agpl": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127], "seaborn": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 106, 107, 108, 109, 110, 113, 121, 124, 125, 129, 130, 133, 137, 140, 141], "sn": [88, 89, 90, 99, 100, 101, 106, 113, 129, 133], "matplotlib": [88, 89, 90, 99, 100, 101, 106, 113, 125, 129], "pyplot": [88, 89, 90, 99, 100, 101, 106, 113, 129], "plt": [88, 89, 90, 99, 100, 101, 106, 113, 129], "load_dataset": [88, 91, 92, 93, 96, 99, 100, 102, 107, 108, 109, 110, 113, 121, 130, 133, 137, 140, 141], "model_select": [88, 89, 90, 92, 96, 99, 102, 105, 106, 113, 129, 133, 139, 140, 142], "train_test_split": [88, 89, 105, 106], "repeatedkfold": [88, 133], "confusion_matrix": 88, "configure_log": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 133, 134], "2023": 125, "11": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 117, 127, 128, 130, 133, 134, 135, 139, 140, 141], "30": [93, 96, 99, 101, 114, 128, 139], "452": [], "lib": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 129, 130, 133, 134], "453": [], "26": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 132, 133, 134], "4": [7, 46, 47, 48, 49, 50, 51, 52, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 125, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141], "dev110": [], "load": [88, 89, 90, 105, 106, 107, 108, 109, 113, 114, 117, 121, 130, 135, 137, 140], "df_iri": [88, 93, 96, 100, 102, 110, 113, 121], "sepal_length": [88, 93, 96, 100, 102, 110, 113, 130, 137, 140, 141], "sepal_width": [88, 93, 96, 100, 102, 110, 113, 130, 137, 140, 141], "petal_length": [88, 93, 96, 100, 102, 110, 113, 130, 137, 140, 141], "speci": [88, 93, 96, 100, 102, 110, 113, 121, 130, 133, 137, 140, 141], "train_iri": 88, "test_iri": 88, "200": [88, 101, 102, 113, 127, 129, 130, 133, 134], "we": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141], "model_iri": [88, 100], "456": [], "457": [], "expand": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 120, 127, 128, 130, 133, 134, 135, 139, 140, 141], "treat": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 117, 127, 133, 134], "home": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 127, 130, 133, 134, 139], "runner": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 127, 130, 133, 134, 139], "py": [88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 121, 127, 129, 130, 133, 134, 139], "503": [], "warn_with_log": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 117, 127, 133, 134, 139], "458": 134, "__continu": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 113, 114, 117, 127, 130, 133, 135, 139, 140, 141], "459": [], "120": [88, 134], "versicolor": [88, 93, 96, 100, 102, 110, 113, 121, 130, 140, 141], "40": [88, 89, 90, 133], "virginica": [88, 93, 96, 100, 102, 110, 113, 121, 130, 140, 141], "setosa": [88, 137, 140, 141], "count": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 129, 130, 133, 135, 139, 140, 141], "dtype": [88, 89, 90, 92, 93, 96, 99, 100, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 130, 133, 134, 135, 139, 140, 141], "int64": [88, 92, 93, 96, 99, 100, 102, 107, 108, 109, 110, 113, 130, 133, 139, 140, 141], "460": 140, "scheme": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 130, 133, 134, 135, 136, 139, 140, 141, 142], "multi": [88, 91, 139, 140, 141], "detect": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 120, 130, 133, 134, 136, 139, 140, 141, 142], "head": [88, 89, 90, 91, 92, 99, 105, 106, 107, 108, 109, 113, 114, 117, 135, 137, 139, 141], "score_tim": [88, 89, 102, 105, 106, 114, 117, 128, 135, 140, 141], "test_accuraci": [88, 93, 113, 139], "n_train": [88, 89, 114, 117, 128], "n_test": [88, 89, 114, 117, 128], "cv_mdsum": [88, 89, 102, 105, 106, 114, 117, 128, 135, 140, 141], "004817": [], "002559": [], "916667": 88, "96": [88, 101, 102, 133, 142], "24": [88, 124, 142], "fa5ab7a2b930761687a8e82d9971ebca": 88, "004397": [], "002450": [], "833333": 88, "004402": [], "002457": [], "958333": 88, "004433": 140, "002480": [], "004379": [], "002462": [], "now": [88, 89, 90, 91, 93, 96, 99, 100, 102, 105, 106, 107, 108, 109, 113, 114, 117, 121, 128, 129, 130, 132, 133, 134, 137, 139, 140, 141], "df_accuraci": 88, "set_index": [88, 89, 91, 106, 113], "unstack": [88, 89, 106], "index": [88, 89, 90, 91, 92, 99, 101, 105, 106, 107, 108, 109, 113, 117, 121, 125, 133], "875000": 88, "750000": 88, "000000": [88, 89, 90, 96, 101, 105, 106, 113, 114, 117, 135, 139], "791667": 88, "font_scal": [88, 89], "fig": [88, 89, 90, 99, 100, 101, 106, 129], "ax": [88, 89, 90, 99, 100, 101, 106, 129], "subplot": [88, 89, 90, 99, 100, 101, 106, 129], "figsiz": [88, 89, 90, 99, 100, 101, 106, 129], "7": [88, 89, 90, 91, 92, 99, 101, 102, 106, 121, 125, 129, 132, 133, 134, 136, 137, 140, 142], "cmap": [88, 89, 106], "ylgnbu": [88, 89, 106], "titl": [88, 89, 106, 121], "text": [88, 89, 99, 101, 106, 121, 129, 132], "our": [88, 91, 92, 93, 99, 101, 110, 114, 121, 125, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141], "annot": [88, 89], "cm": 88, "uniqu": [88, 92, 99, 130, 133], "9": [88, 89, 91, 92, 99, 101, 102, 106, 114, 128, 130, 133, 137, 140, 141], "8": [88, 91, 92, 99, 102, 105, 106, 124, 128, 129, 133, 135, 136, 140, 141, 142], "let": [88, 89, 90, 91, 92, 99, 101, 105, 106, 107, 108, 113, 114, 117, 128, 129, 130, 132, 133, 134, 135, 137, 141], "anoth": [88, 91, 101, 117, 129, 132, 134, 141], "cm_sum": 88, "keepdim": 88, "cm_perc": 88, "astyp": 88, "100": [88, 93, 96, 100, 101, 102, 110, 113, 128, 130, 132, 133], "empty_lik": 88, "nrow": 88, "ncol": 88, "rang": [88, 91, 101, 119, 127, 134], "j": [88, 128], "c": [88, 91, 92, 99, 107, 108, 109, 123, 124, 130, 132, 133, 134, 141], "els": 88, "1f": [88, 89], "tmp": [88, 90, 133], "tmpcwtyqmh_": [], "2e7b1527c028733120aa7f73295f211297481781": [], "00_start": [88, 90], "plot_cm_acc_multiclass": [88, 94], "104": 88, "deprecationwarn": 88, "convers": 88, "ndim": 88, "deprec": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 129, 133, 134, 142], "extract": [88, 91, 92, 99, 133], "singl": [88, 120, 132, 133, 139], "your": [88, 91, 121, 124, 125, 127, 128, 129, 132, 133, 138, 141], "25": [88, 89, 90, 91, 101, 105, 106, 114, 117, 132, 134, 135, 139], "fmt": [88, 89], "total": [88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141], "script": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 121, 126, 127, 128, 129, 130, 133, 134, 135, 137, 139, 140, 141], "minut": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 129, 130, 133, 134, 135, 137, 139, 140, 141], "499": [], "sourc": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117], "jupyt": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 123, 140], "notebook": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 123, 140], "ipynb": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117], "diabet": [89, 90, 105, 106, 117, 135], "ridg": [89, 105, 106, 117, 119], "load_diabet": [89, 90, 105, 106, 114, 117, 135], "mean_absolute_error": [89, 106], "101": 121, "return_x_i": [89, 90, 105, 106, 114, 117, 135], "as_fram": [89, 90, 105, 106, 114, 117, 135], "ten": [89, 90, 105, 106, 117], "ag": [89, 90, 91, 105, 106, 114, 117, 135], "sex": [89, 90, 105, 106, 114, 117, 128, 133, 135], "bodi": [89, 90, 105, 106, 117], "mass": [89, 90, 105, 106, 117], "averag": [89, 90, 105, 106, 114, 117, 127, 129, 139], "blood": [89, 90, 105, 106, 114, 117], "pressur": [89, 90, 105, 106, 114, 117], "six": [89, 90, 105, 106, 117], "serum": [89, 90, 105, 106, 117], "measur": [89, 90, 105, 106, 114, 117, 128, 129, 130, 133], "s1": [89, 90, 91, 92, 99, 105, 106, 114, 117, 135], "s6": [89, 90, 91, 92, 99, 105, 106, 114, 117, 135], "patient": [89, 90, 105, 106, 117], "quantit": [89, 90, 105, 106, 117], "diseas": [89, 90, 105, 106, 117], "progress": [89, 90, 105, 106, 117, 121], "year": [89, 90, 105, 106, 117, 132], "baselin": [89, 90, 105, 106, 117], "interest": [89, 90, 93, 105, 106, 113, 117, 138, 140, 141], "bmi": [89, 90, 105, 106, 114, 117, 135], "s4": [89, 90, 91, 92, 99, 105, 106, 114, 117, 135], "s5": [89, 90, 91, 92, 99, 105, 106, 107, 108, 109, 114, 117, 135], "038076": [89, 90, 105, 106, 114, 117, 135], "050680": [89, 90, 105, 106, 114, 117, 135], "061696": [89, 90, 105, 106, 114, 117, 135], "002592": [89, 90, 105, 106, 114, 117, 135], "019907": [89, 90, 105, 106, 114, 117, 135], "017646": [89, 90, 105, 106, 114, 117, 135], "001882": [89, 90, 105, 106, 114, 117, 135], "044642": [89, 90, 105, 106, 114, 117, 135], "051474": [89, 90, 105, 106, 114, 117, 135], "039493": [89, 90, 105, 106, 114, 117, 135], "068332": [89, 90, 105, 106, 114, 117, 135], "092204": [89, 90, 105, 106, 114, 117, 135], "085299": [89, 90, 105, 106, 114, 117, 135], "044451": [89, 90, 105, 106, 114, 117, 135], "002861": [89, 90, 105, 106, 114, 117, 135], "025930": [89, 90, 105, 106, 114, 117, 135], "089063": [89, 90, 105, 106, 114, 117, 135], "011595": [89, 90, 105, 106, 114, 117, 135], "034309": [89, 90, 105, 106, 114, 117, 135], "022688": [89, 90, 105, 106, 114, 117, 135], "009362": [89, 90, 105, 106, 114, 117, 135], "005383": [89, 90, 105, 106, 114, 117, 135], "036385": [89, 90, 105, 106, 114, 117, 135], "031988": [89, 90, 105, 106, 114, 117, 135], "046641": [89, 90, 105, 106, 114, 117, 135], "442": [89, 90, 105, 106, 114, 117, 135], "152": [89, 90, 105, 106, 114, 117, 135, 141, 142], "133484": [89, 90, 105, 106, 114, 117, 135], "std": [89, 90, 101, 105, 106, 114, 117, 128, 135], "77": [89, 90, 105, 106, 114, 117, 133, 135, 139, 142], "093005": [89, 90, 105, 106, 114, 117, 135], "min": [89, 90, 101, 105, 106, 114, 117, 135], "87": [89, 90, 105, 106, 114, 117, 135], "140": [89, 90, 105, 106, 114, 117, 133, 135], "500000": [89, 90, 105, 106, 114, 117, 135], "75": [89, 90, 93, 96, 101, 105, 106, 114, 117, 133, 135], "211": [89, 90, 105, 106, 114, 117, 133, 135], "max": [89, 90, 101, 105, 106, 114, 117, 119, 135], "346": [89, 90, 105, 106, 113, 114, 117, 135], "float64": [89, 90, 93, 96, 101, 105, 106, 110, 114, 117, 127, 128, 134, 135], "combin": [89, 90, 91, 105, 106, 113, 117, 130, 132, 141], "data_diabet": [89, 105, 106, 117, 135], "concat": [89, 90, 100, 105, 106, 113, 117, 135], "bp": [89, 90, 105, 106, 114, 117, 135], "s2": [89, 90, 91, 92, 99, 105, 106, 114, 117, 135], "s3": [89, 90, 91, 92, 99, 105, 106, 114, 117, 135], "calcul": 89, "heat": 89, "corr": [89, 106], "xticklabel": 89, "yticklabel": 89, "train_diabet": [89, 105, 106], "test_diabet": [89, 105, 106], "neg_mean_absolute_error": [89, 90, 101, 105, 117, 140], "299": [], "300": [], "301": [], "302": [], "309": [89, 105, 106], "test_scor": [89, 90, 92, 93, 96, 99, 105, 106, 107, 108, 109, 110, 114, 117, 128, 130, 140], "004773": [], "002307": [], "48": [89, 91, 140], "783874": 89, "247": [89, 133, 142], "62": [89, 133], "b10eef89b4192178d482d7a1587a248a": [89, 105, 106, 114, 117, 128, 135, 140, 141], "004258": [], "002250": [], "47": [89, 117, 142], "573568": 89, "004443": [], "002321": [], "37": [89, 117, 127, 133, 135], "617474": 89, "004253": [], "002185": [], "686852": 89, "004255": [], "002206": [], "45": 89, "558655": 89, "248": 89, "61": 89, "444084441470615": 89, "mae": [89, 106], "df_mae": [89, 106], "coef_": [89, 114], "sort_valu": 89, "ascend": 89, "inplac": 89, "barh": 89, "color": [89, 90, 99, 113, 129], "blue": 89, "red": 89, "xlabel": [89, 106], "249999999999986": 89, "scatterplot": [89, 99, 101, 106], "v": [89, 106, 126, 129, 131, 141], "2f": [89, 106], "corrcoef": [89, 106], "set_styl": [89, 90, 106], "darkgrid": [89, 90, 106], "scatter": [89, 101, 106], "xmin": [89, 106], "xmax": [89, 106], "get_xlim": [89, 99, 106], "ymin": [89, 106], "ymax": [89, 106], "get_ylim": [89, 99, 106], "ylabel": [89, 106, 129], "01": [89, 94, 101, 103, 106, 107, 108, 111, 125, 127, 130, 132, 133, 134], "verticalalign": [89, 106], "top": [89, 106, 125, 132, 140], "horizontalalign": [89, 106], "right": [89, 106, 107, 108, 109, 129, 130], "fontsiz": [89, 106], "scale": [89, 106, 107, 108, 119, 130, 133, 141], "649999999999999": 89, "347": 89, "35": [89, 91], "660": [], "plot_example_regress": [89, 94], "leonard": [90, 101, 113, 125, 127], "sass": [90, 101, 113, 125, 127], "l": [90, 91, 92, 99, 101, 105, 107, 108, 109, 113, 127], "128": [133, 134], "outlier": 90, "data_df": 90, "new_df": 90, "145": [90, 106], "150": [90, 128, 133, 140, 141], "590": [90, 135], "580": 90, "597": 90, "595": 90, "reset_index": [90, 91, 92, 99, 107, 108, 109, 113], "plot_stratified_kfold_reg": [90, 94], "51": [90, 105, 128, 139], "settingwithcopywarn": 90, "try": [90, 92, 93, 96, 99, 102, 108, 110, 129, 130, 140], "slice": 90, "loc": 90, "row_index": 90, "col_index": 90, "caveat": 90, "pydata": 90, "user_guid": 90, "view": [90, 121], "versu": 90, "idea": [90, 132, 136], "chosen": 90, "coupl": 90, "histrogram": 90, "displot": 90, "60": [90, 132], "20": [90, 93, 96, 102, 113, 127, 128, 129, 130, 134, 139, 141], "opt": [90, 93, 100, 113, 129, 130, 133, 134], "hostedtoolcach": [90, 93, 100, 113, 129, 130, 134], "13": [91, 92, 96, 99, 102, 124, 128, 132], "x64": [90, 93, 100, 113, 129, 130, 134], "python3": [90, 93, 100, 113, 129, 130, 134], "site": [90, 93, 100, 113, 129, 130, 134], "_oldcor": [90, 100, 113, 129], "1498": [], "futurewarn": [90, 100, 113, 129, 133], "is_categorical_dtyp": [], "isinst": [], "categoricaldtyp": [], "1119": [90, 100, 113, 129], "use_inf_as_na": [90, 100, 113, 129], "inf": [90, 100, 113, 129], "nan": [90, 100, 113, 129, 133], "option_context": [90, 100, 113, 129], "mode": [90, 100, 113, 129], "axisgrid": 90, "facetgrid": 90, "0x7fe724e4f2e0": [], "histogram": 90, "abov": [90, 113, 128, 130, 133, 140], "uniformli": [90, 129], "skew": 90, "toward": 90, "lower": [90, 129], "even": [90, 114, 130, 132, 140, 141], "low": [90, 101, 109, 119, 127, 130, 132], "give": [90, 119, 128, 130, 138, 139, 140], "good": [90, 93, 108, 124, 129, 138, 139], "granular": 90, "cv_stratifi": [90, 92], "linear": [90, 96, 107, 108, 109, 114, 127, 128, 130, 133, 134, 141], "scores_strat": 90, "linreg": [90, 114, 119, 127, 128], "716": 96, "717": 96, "718": 96, "719": [96, 130], "449": 90, "_split": [90, 129], "737": [], "popul": [90, 113, 129], "member": [90, 129], "761": [92, 96], "762": 96, "763": 96, "764": [], "compar": [90, 96, 113, 125, 128, 130, 136, 139, 140], "With": [90, 129, 132, 133, 140], "df_score": 90, "boxplot": [90, 113], "higher": [90, 113, 129], "were": [90, 91, 92, 99, 100, 113, 132, 133, 140], "swarmplot": [90, 100], "842": 114, "fmri": [91, 92, 99, 107, 108, 109], "waskom": [91, 92, 99, 107, 108, 109], "m": [91, 92, 99, 107, 108, 109, 121, 126, 132, 141], "frank": [91, 92, 99, 107, 108, 109], "wagner": [91, 92, 99, 107, 108, 109], "adapt": [91, 92, 99, 107, 108, 109], "engag": [91, 92, 99, 107, 108, 109], "cognit": [91, 92, 99, 107, 108, 109], "cerebr": [91, 92, 99, 107, 108, 109], "cortex": [91, 92, 99, 107, 108, 109], "similar": [91, 130, 132, 134, 140, 141], "excel": [91, 129], "spreadsheet": 91, "csv": 91, "ideal": 91, "everyth": [91, 132, 138], "tabul": 91, "organis": [91, 128], "demograph": [91, 128], "diagnost": 91, "manual": [91, 123, 139, 141], "edit": 91, "sure": [91, 99, 121, 126, 128, 129, 130, 132], "readi": [91, 139, 141], "do": [91, 99, 101, 106, 107, 108, 113, 114, 117, 119, 121, 125, 126, 128, 129, 130, 132, 134, 136, 137, 138, 139, 140, 141], "howev": [91, 96, 99, 100, 101, 114, 120, 123, 124, 128, 129, 130, 134, 135, 136, 139, 140, 141, 142], "prone": [91, 136, 139], "fortun": [91, 129, 130], "tool": [91, 120, 124, 133, 139], "deal": [91, 127, 137], "task": [91, 99, 114, 130, 132, 135], "collect": [91, 113, 133], "start": [91, 121, 122, 125, 129, 130, 133, 134, 135, 138, 139, 141], "df_fmri": [91, 92, 99, 107, 108, 109], "subject": [91, 92, 99, 107, 108, 109, 129], "timepoint": [91, 92, 99, 107, 108, 109], "event": [91, 92, 99, 107, 108, 109], "region": [91, 92, 99, 107, 108, 109], "signal": [91, 92, 99, 107, 108, 109], "s13": [91, 92, 99, 107, 108, 109], "18": [91, 92, 99, 101, 102, 107, 108, 109, 127, 128], "stim": [91, 92, 99, 107, 108, 109], "pariet": [91, 92, 99, 107, 108, 109], "017552": [91, 92, 99, 107, 108, 109], "14": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 128, 133, 134, 139], "080883": [91, 92, 99, 107, 108, 109], "s12": [91, 92, 99, 107, 108, 109], "081033": [91, 92, 99, 107, 108, 109], "s11": [91, 92, 99, 107, 108, 109], "046134": [91, 92, 99, 107, 108, 109], "s10": [91, 92, 99, 107, 108, 109], "037970": [91, 92, 99, 107, 108, 109], "long": [91, 113, 132], "wide": 91, "seen": [91, 141], "pivot": [91, 92, 99, 107, 108, 109], "reshap": [91, 99], "tabl": [91, 92, 99, 132], "becom": [91, 132, 136, 141], "identifi": [91, 93, 127, 128, 133, 139], "rule": [91, 119, 129, 132, 141], "duplic": [91, 120], "frontal": [91, 92, 99, 107, 108, 109], "s0": [91, 92, 99, 107, 108, 109], "cue": [91, 92, 99, 107, 108, 109], "007766": [91, 107, 108, 109], "006899": [91, 107, 108, 109], "021452": [91, 107, 108, 109], "039327": [91, 107, 108, 109], "016440": [91, 107, 108, 109], "000300": [91, 107, 108, 109], "021054": [91, 107, 108, 109], "035735": [91, 107, 108, 109], "024296": [91, 107, 108, 109], "033220": [91, 107, 108, 109], "subtl": 91, "For": [91, 93, 96, 101, 106, 114, 119, 120, 121, 123, 124, 127, 129, 130, 132, 133, 134, 135, 137, 140, 141], "place": [91, 142], "scan": 91, "ll": [91, 106, 132], "23": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 125, 127, 128, 130, 133, 134, 135, 139, 140, 141], "31": [91, 113, 134, 139], "29": [88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 127, 128, 130, 133, 134, 135, 139, 140, 141], "43": [91, 117], "28": [91, 108], "34": [91, 130, 139], "scanner": 91, "6": [91, 92, 96, 99, 100, 101, 102, 109, 114, 127, 129, 130, 133, 136, 137, 140], "b": [91, 121, 130, 141], "df_meta": 91, "s7": [91, 92, 99], "s8": [91, 92, 99], "s9": [91, 92, 99], "16": [91, 92, 99, 101, 102, 125, 130, 132, 133], "036739": 91, "131641": 91, "17": [91, 92, 99, 101, 102, 105, 125, 130, 139], "004900": 91, "036362": 91, "030099": 91, "121574": 91, "000643": 91, "051040": 91, "009959": 91, "103513": 91, "532": [88, 91, 92, 94, 99, 107, 108, 109, 139], "frame": 91, "suppos": [91, 93, 128], "dure": [91, 92, 99, 124, 127, 128, 130, 133], "There": [91, 129, 136, 138, 141], "009038": 91, "009642": 91, "047859": 91, "026727": 91, "085040": 91, "086399": 91, "069775": 91, "070558": 91, "115321": 91, "154058": 91, "010535": 91, "061817": 91, "034386": 91, "130267": 91, "15": [90, 91, 92, 93, 99, 100, 101, 102, 113, 124, 128, 129, 130, 133, 134], "002170": 91, "048007": 91, "038257": 91, "134828": 91, "004290": [91, 102], "035395": 91, "266": [91, 92, 99, 107, 108, 109], "sinc": [91, 96, 101, 105, 107, 125, 130, 132, 141], "previou": [91, 96, 100, 101, 121, 132, 134, 139, 140, 141, 142], "multiindex": 91, "trick": 91, "underscor": 91, "_": [91, 100, 113, 121], "frontal_cu": 91, "frontal_stim": 91, "parietal_cu": 91, "parietal_stim": 91, "829": [], "run_combine_panda": [91, 94], "groupkfold": 92, "kimia": 92, "nazarzadeh": 92, "necessari": [92, 123, 128, 134], "librari": [92, 123, 125, 130, 132], "stratifiedgroupkfold": 92, "08": [88, 90, 130], "942": 128, "infer": [92, 99], "studi": [92, 99, 128, 129, 130], "condit": [92, 99], "groupbi": [92, 99], "1064": [92, 99], "exactli": [92, 99, 133, 141], "rf": [92, 96, 100, 101, 110, 113, 119, 130, 132, 134, 139], "961": [], "962": 99, "963": 99, "964": 99, "965": 99, "6841826838300122": 92, "09": [89, 90], "605": [], "606": 93, "607": 93, "608": 93, "6898496240601504": [], "966": 99, "967": [], "968": [], "969": [], "970": [], "6879699248120301": [], "389": [], "run_grouped_cv": [92, 94], "308": [], "three": [93, 96, 100, 102, 110, 113, 121, 125, 130, 139, 140], "isin": [93, 96, 100, 102, 110, 113, 121, 130], "sepal": [93, 96, 102, 110, 113, 132, 137, 141], "length": [90, 93, 96, 100, 102, 110, 113, 129], "petal": [93, 96, 102, 110, 113, 132, 137, 141], "679": [], "680": [], "681": [], "682": [], "683": [], "90": [93, 96, 133, 139], "70": [93, 96], "assess": [93, 96, 128, 133], "unbalanc": [93, 96], "df_unbalanc": [93, 96], "value_count": [93, 96], "account": [93, 128, 132], "imbal": 93, "suitabl": [93, 124], "balanced_accuraci": [93, 96, 140], "balanced_accuracy_scor": 93, "42": [93, 96, 99, 107, 108, 109, 113, 117, 129, 133, 139, 140], "test_balanced_accuraci": [93, 96], "723": 130, "724": 130, "725": 130, "80": [93, 96, 128, 133, 139], "726": 130, "_classif": 93, "2399": [], "8625": 93, "8678571428571429": 93, "u": [93, 100, 113, 114, 124, 128, 132, 133, 139, 140], "correctli": 93, "precis": [93, 140], "ratio": 93, "tp": 93, "precision_scor": 93, "771": 127, "772": [127, 128], "773": 128, "774": 128, "514": 93, "run_simple_binary_classif": [93, 94], "00": [94, 97, 101, 103, 110, 111, 115, 118, 133, 134, 139], "04": [94, 130, 133], "733": [], "execut": [94, 97, 103, 111, 115, 118, 120, 121, 132], "auto_examples_00_start": 94, "mb": [94, 97, 103, 111, 115, 118, 132], "At": [96, 125, 132, 136, 141], "statist": [96, 101, 113, 125, 138, 140], "repeatedstratifiedkfold": [96, 102, 139, 140], "corrected_ttest": [96, 139], "944": [99, 128], "945": [90, 99, 128], "947": [], "948": [], "949": [], "950": [], "951": [], "roc_auc": [96, 113, 139, 140], "scores1": [96, 123, 130, 139], "990": [], "991": [], "992": [], "993": [], "scores2": [96, 123, 130, 139], "273": 133, "274": [130, 133, 142], "275": [130, 142], "276": 130, "third": [96, 140], "kernel": [96, 107, 108, 109, 128, 130, 132, 133, 134, 141], "scores3": [96, 123, 130, 139], "svm__kernel": [96, 108, 130, 133], "svm_linear": 96, "971": [], "stats_df": [96, 139], "model_2": [96, 134, 139], "val": [96, 139], "175075": 96, "062567": 96, "895662": 96, "151390": 96, "782741": 96, "test_roc_auc": [96, 113, 139], "108944": 96, "835331": 96, "236153": 96, "685092": 96, "669010": 96, "324331": 96, "viewer": 96, "plot_scor": [96, 123, 139], "uncom": [96, 139], "line": [96, 121, 129, 139], "read": [96, 100, 121, 125, 126, 129, 132, 136, 138, 139, 141], "holoviz": [96, 139], "getting_start": [96, 139], "build_app": [96, 139], "deploi": [96, 133, 139], "pane": [], "unknown": [], "widget": [], "could": [99, 101, 114, 125, 127, 132, 133, 137, 139, 140, 141], "button_typ": [], "look": [96, 99, 101, 106, 114, 119, 127, 129, 130, 132, 133, 134, 136, 137, 138, 140, 141], "interact": [96, 99, 125, 133, 139], "zoom": [96, 139], "hover": [96, 139], "button": [96, 139], "433": [], "plot_simple_model_comparison": [96, 97], "03": [97, 101, 103, 111, 125], "auto_examples_01_model_comparison": 97, "demonstr": [98, 121, 134, 140], "analys": [99, 100, 128], "groupshufflesplit": 99, "419": [108, 133], "439": [], "440": [], "441": [], "443": [], "7218303650149884": 99, "decod": [99, 128], "claim": [99, 113, 129], "acquir": 99, "randomli": 99, "characterist": 99, "unseen": [99, 129, 136], "whom": 99, "later": [99, 102, 121, 132, 139], "500": 132, "501": [], "502": 101, "504": [], "7210526315789474": 99, "part": [99, 123, 125, 127, 129, 132, 136, 139, 141], "raw": [99, 101, 141], "hue": [99, 113], "set_titl": [99, 100, 101, 129], "pre_x": 99, "pre_df": 99, "join": 99, "parietal__": 99, "frontal__": 99, "noth": [99, 130, 140], "standardscal": [99, 109, 119, 130, 133, 135, 140, 141], "seem": [99, 107, 108, 109, 113, 130, 138, 139, 140], "quit": [99, 124, 127, 132, 133], "linearli": 99, "clf": 99, "figur": [99, 121], "xlim": 99, "ylim": 99, "xx": 99, "linspac": [99, 129], "yy": 99, "meshgrid": 99, "xy": 99, "vstack": 99, "ravel": 99, "xy_df": 99, "contour": 99, "alpha": [99, 127, 129], "linestyl": [99, 129], "boundari": [99, 130], "492": [], "plot_groupcv_inspect_svm": [99, 103], "861": 130, "862": 130, "864": [], "865": 127, "866": [], "867": [], "868": [], "intern": [100, 132, 133, 134, 140, 141, 142], "caution": [100, 129], "proper": [100, 113, 126, 138], "randomforestclassifi": [100, 119, 130, 132], "understand": [100, 114, 125, 128, 132, 133, 138, 139, 141], "to_plot": 100, "feature_importances_": [100, 113], "barplot": 100, "tight_layout": [100, 113], "review": [100, 121], "wander": 100, "about": [100, 121, 125, 128, 129, 132, 133, 134, 136, 138, 139, 140, 141], "entir": [100, 140, 141], "566": [], "567": [], "568": [], "569": 139, "570": 140, "571": 140, "i_fold": [100, 113], "enumer": [100, 113], "this_import": [100, 113], "416": 133, "plot_inspect_random_forest": [100, 103], "make_regress": [101, 127, 128, 134], "normal": [101, 114, 119, 121, 128, 129, 141, 142], "reduct": 101, "19": [102, 125, 127, 130, 139], "065": 109, "n_inform": 101, "nois": [101, 128], "first_two": 101, "determin": [101, 130, 132, 141], "belong": [101, 114], "x_to_zscor": 101, "summari": [101, 121, 132], "111790": 101, "141618": 101, "023682": 101, "167718": 101, "686170": 101, "977322": 101, "972988": 101, "087946": 101, "895011": 101, "79": [101, 121], "741431": 101, "069985": 101, "772593": 101, "552990": 101, "659172": 101, "204": 101, "293317": 101, "751257": 101, "484100": 101, "759419": 101, "688891": 101, "64": [101, 133], "724008": 101, "206729": 101, "194442": 101, "028152": 101, "174160": 101, "789944": 101, "421885": 101, "724302": 101, "772156": 101, "408321": 101, "392804": 101, "943621": 101, "256723": 101, "383145": 101, "259309": 101, "216": 101, "221085": 101, "explicitli": [101, 107, 128, 130, 133], "declar": 101, "constructor": 101, "special": 101, "cannot": [101, 141], "tree": [101, 119, 132], "pipeline_cr": [101, 106, 110, 114, 128, 130, 133, 134], "select_vari": [101, 119], "n_compon": [101, 106, 130, 141], "n_estim": [101, 134], "becaus": [101, 114, 128, 129, 130, 133, 136, 138, 139, 140, 141], "creator": [101, 102, 105, 106, 107, 108, 113, 114, 127, 130, 132, 135, 140, 141], "simpli": [101, 127, 128, 129, 132, 133, 134, 141], "did": [101, 108], "hand": [101, 121, 127, 128, 134, 137], "r2": [101, 106, 128, 140], "x_after_pca": 101, "earlier": 101, "x_after_zscor": 101, "high": [101, 109, 120, 127, 130], "pca__pca0": 114, "pca__pca1": 114, "080": 109, "081": 135, "__x_to_zscor": 101, "082": [], "083": [], "084": [], "085": [], "725696": [], "582295": [], "314458": [], "942935": [], "977336": [], "463217": [], "525139": [], "219493": [], "618559": [], "908592": [], "395105": [], "743192": [], "328111": [], "670912": [], "97": [101, 102, 113], "573900": [], "401304": [], "98": [101, 102, 129, 133], "918034": [], "137435": [], "99": [101, 102, 139], "894566": [], "357729": [], "1__": 101, "4__": 101, "013728": 101, "426259": [], "364686": 101, "944446": [], "118838": 101, "931848": [], "004437": [101, 140], "030684": [], "309092": 101, "523891": [], "206189": 101, "157667": [], "099154": 101, "028182": [], "335538": 101, "252795": [], "049139": 101, "133702": [], "240085": 101, "443863": [], "deviat": [101, 128], "000000e": 101, "02": [101, 111, 133, 134], "689893e": 101, "387779e": 101, "005038e": 101, "013728e": 101, "010202e": 101, "576015e": 101, "463286e": 101, "763131e": 101, "456486e": 101, "488094e": 101, "018781e": 101, "113700e": 101, "184776e": 101, "326": [], "plot_preprocess": [101, 103], "shufflesplit": 102, "510": [100, 140], "513": 93, "515": 93, "516": 93, "004767": [], "002408": [], "42489ff0163b2f12752440a6b7ef74c7": 102, "004391": [], "002318": [], "004211": [], "002286": [], "004200": [], "002320": [], "004222": [], "002315": [], "004184": [], "002294": [], "004201": [], "002290": [], "004248": [], "002326": [], "002363": [], "004217": [], "004238": [], "002298": [], "004229": [], "002311": [], "004156": [], "002314": 89, "004206": [], "004158": [], "002285": [], "004155": [], "002312": [], "002302": 89, "004168": [], "002304": [], "004198": [], "002308": [], "004180": [], "002322": [], "cv_predict": 102, "repeat0_p0": [102, 133], "repeat1_p0": [102, 133], "repeat2_p0": [102, 133], "repeat3_p0": 102, "_pipelin": 102, "0x7fe724e89a20": [], "227": [130, 141], "run_binary_inspect_fold": [102, 103], "auto_examples_02_inspect": 103, "Then": [105, 114, 126, 132, 134, 136, 141], "lya": 105, "paa": 105, "olivero": 105, "sami": [105, 114, 125, 128, 142], "hamdan": [105, 114, 125, 128, 142], "547": [], "548": [], "target_cr": [105, 135], "target_pipeline_cr": [105, 128], "0x7fe724a38250": [], "563": [], "564": [], "565": [], "004338": [], "003049": [], "003920": [], "003011": [], "003896": [], "003113": [], "003907": [], "003016": [], "003901": [], "002966": [], "154": [], "0615805903489": [], "074": [], "run_apply_to_target": [105, 111], "reduc": [106, 114, 141], "dimension": [106, 114, 127, 130, 141], "subset": [106, 130, 136, 142], "georgio": 106, "antonopoulo": 106, "kaustubh": [106, 125, 142], "r": [106, 117, 125], "patil": [106, 125, 142], "709": [], "assign": [106, 121], "pca1": [101, 106], "pca2": 106, "process": [106, 130, 132, 137, 140, 141], "pca_feats1": 106, "pca_feats2": 106, "__pca1": 106, "__pca2": 106, "__categor": [106, 135], "0x7fe724870ac0": [], "727": 130, "728": 130, "729": [], "012711": [], "005439": [], "011889": [], "005351": [], "012077": [], "005575": [], "011985": [], "005436": [], "011883": [], "005540": [], "3107976743678922": 106, "untouch": 106, "data_processed1": 106, "pca_feats1__pca0": 106, "161": [106, 133], "063175": 106, "133274": 106, "131461": 106, "039719": 106, "108111": 106, "075741": 106, "085907": 106, "054779": 106, "030464": 106, "001314": 106, "043401": 106, "033246": 106, "015491": 106, "098172": 106, "033216": 106, "032629": 106, "011824": 106, "015999": 106, "050783": 106, "032289": 106, "012577": 106, "034508": 106, "024993": 106, "067737": 106, "013504": 106, "315": [106, 130], "045025": 106, "031454": 106, "020607": 106, "056003": 106, "010903": 106, "001078": 106, "data_processed2": 106, "pca_feats2__pca0": 106, "234716": 106, "012141": 106, "078784": 106, "006290": 106, "026190": 106, "341472": 106, "348168": 106, "269257": 106, "286067": 106, "309025": 106, "362": 106, "404": [], "run_example_pca_featset": [106, 111], "755": 134, "attempt": [107, 108], "765": [], "766": [], "767": [], "768": 127, "5939164168576971": [107, 108], "gamma": [107, 108, 109, 130, 132], "But": [107, 113, 114, 129, 130, 132, 133, 138, 140, 141], "rbf": [107, 108, 109, 130, 132], "auto": [107, 130], "1e": [107, 108, 109, 130, 133, 134], "speed": [107, 108, 109], "823": [], "824": [], "001": [107, 108, 130, 132, 133], "825": [], "svm__c": [107, 108, 109, 130, 133, 134], "826": [], "inner": [107, 108, 109, 130, 132, 133, 134, 142], "827": [], "svm__gamma": [107, 108, 109, 130, 133], "set_column_typ": [107, 109, 130, 133, 140], "setcolumntyp": [107, 109, 130, 133, 140], "828": [], "svc": [107, 109, 119, 130, 133, 140, 141], "830": [], "7087109857168048": [107, 108], "best_params_": [107, 108, 109, 130], "best_estimator_": [107, 108], "_gamma": [107, 108], "run_hyperparameter_multiple_grid": [107, 111], "analyz": [108, 109, 133], "177": 133, "186": 117, "187": 117, "188": 133, "189": 133, "190": 133, "optim": [108, 124, 130, 132, 133, 141], "find": [108, 109, 120, 130, 132, 138], "best": [108, 109, 130, 132, 141], "252": 88, "253": 133, "254": [], "255": 142, "256": [130, 133], "588308940222183": 108, "much": [108, 129, 130, 133, 136], "explor": [108, 114, 133, 134], "too": [108, 130], "poli": 108, "530": [], "531": [], "533": [], "534": [], "lest": 108, "27": [108, 124, 128], "250": 88, "251": [88, 142], "5188855581026275": 108, "happen": [108, 132, 133, 134], "801": [], "802": [], "803": [], "804": [], "805": [], "406": 114, "run_hyperparameter_tun": [108, 111], "logist": [110, 119, 139, 141], "22": [107, 128], "208": [], "petal_width": [110, 113, 130, 137, 140, 141], "model_sep": [110, 132], "model_pet": [110, 132], "__sepal": [110, 141], "212": 139, "__petal": [110, 141], "213": [], "0x7fe724e28550": [], "0x7fe724e29a20": [], "214": [], "215": [], "217": [], "323": [107, 111], "324": [], "85": 110, "run_stacked_model": [110, 111], "025": [99, 141], "auto_examples_03_complex_model": 111, "relat": [112, 128, 137], "stratifiedbootstrap": 113, "ml": [113, 125], "classic": 113, "frequentist": 113, "contrast": 113, "gap": 113, "approach": [113, 127, 129, 130, 132, 136, 141], "below": [113, 124, 127, 130], "2000": 113, "n_bootstrap": 113, "n_element": 113, "len": [113, 114, 128], "scores_ncr": 113, "028": [], "029": [], "030": [], "031": [], "next": [113, 124, 126, 135, 137, 141], "again": [113, 128, 129, 130, 133, 136, 141], "tell": [113, 128, 140], "confound_remov": [113, 114, 119, 128], "scores_cr": 113, "32": [], "__featur": [113, 128], "__confound": [113, 128], "179": [], "180": 100, "181": 100, "182": [100, 133], "easier": [113, 121, 141, 142], "df_ncr_metric": 113, "df_cr_metric": 113, "df_metric": 113, "933333": 113, "968889": 113, "948889": 113, "catplot": 113, "col": 113, "swarm": 113, "them": [113, 121, 123, 124, 125, 127, 129, 130, 132, 139, 140, 141], "pair": 113, "systemat": 113, "df_diff_metr": 113, "whisker": 113, "box": [113, 125], "whi": 113, "axhlin": 113, "roc": 113, "auc": 113, "term": [113, 129, 132, 137, 141], "mayb": [113, 139], "percentil": [113, 119], "amount": [113, 125, 132, 133], "ncr_fi": 113, "cr_fi": 113, "feature_import": 113, "dodg": [113, 129], "diff_fi": 113, "axvlin": [113, 129], "996": [], "plot_confound_removal_classif": [113, 115], "most": [114, 124, 127, 128, 129, 132, 133, 136, 141], "remove_confound": 114, "sometim": [114, 128, 132, 133, 134, 135], "discuss": 114, "df_featur": 114, "furthermor": [114, 130], "put": [114, 128], "0x7fe724acfa00": [], "feature_nam": [114, 139], "303": [], "304": [], "305": [], "df_deconfound": 114, "029271": 114, "057228": 114, "009658": 114, "046011": 114, "042050": 114, "024189": 114, "019424": 114, "012310": 114, "028194": 114, "005874": 114, "047538": 114, "015568": 114, "006874": 114, "012796": 114, "057488": 114, "024667": 114, "061639": 114, "082913": 114, "076494": 114, "039983": 114, "017885": 114, "047387": 114, "041423": 114, "013144": 114, "004736": 114, "036479": 114, "081307": 114, "007659": 114, "025897": 114, "013765": 114, "031358": 114, "052961": 114, "049135": 114, "029380": 114, "000071": 114, "013139": 114, "032449": 114, "032631": 114, "005510": [114, 141], "021964": 114, "008781": 114, "012234": 114, "025295": 114, "037349": 114, "assum": [114, 129, 132], "closer": [114, 119, 140], "achiev": [114, 128, 135, 140, 141], "496": [], "497": [], "0x7fe724aceef0": [], "498": [], "df_transform": 114, "pca__pca2": 114, "pca__pca3": 114, "pca__pca4": 114, "pca__pca5": 114, "pca__pca6": 114, "pca__pca7": 114, "pca__pca8": 114, "014051": 114, "075715": 114, "017395": 114, "012591": 114, "046676": 114, "013408": 114, "034497": 114, "008604": 114, "002330": 114, "099883": 114, "062829": 114, "014516": 114, "013673": 114, "048058": 114, "010254": 114, "004124": 114, "024022": 114, "002075": 114, "029015": 114, "053253": 114, "032477": 114, "061933": 114, "049167": 114, "029565": 114, "042031": 114, "001197": 114, "002579": 114, "035162": 114, "001324": 114, "106807": 114, "028981": 114, "020850": 114, "023413": 114, "008421": 114, "006566": 114, "003545": 114, "003951": 114, "025445": 114, "000421": 114, "018411": 114, "039692": 114, "025022": 114, "043086": 114, "002095": 114, "000517": 114, "lastli": [114, 128], "703": [], "704": [], "705": [], "706": [], "021827": [], "008035": [], "429556": 114, "353": [114, 117], "89": [114, 117], "021629": [], "008180": [], "522599": 114, "021726": [], "008151": [], "482681": 114, "354": [114, 117], "88": [114, 117], "021698": [], "008026": [], "426498": 114, "021542": [], "008160": [], "550248": 114, "603": [], "run_return_confound": [114, 115], "06": [92, 93, 109, 115], "599": [], "auto_examples_04_confound": 115, "extend": [116, 140], "variou": 116, "aspect": [116, 129, 141], "make_scor": 117, "register_scor": 117, "36": [], "201": 130, "218": [], "004503": 140, "002230": [], "104359": 117, "004208": [], "002166": [], "44": 117, "861364": 117, "002147": [], "981407": 117, "004207": [], "002215": [], "956254": 117, "004205": [], "002177": [], "419886": 117, "264653948271885": 117, "thing": [117, 136, 141], "r2_corr": [117, 140], "260": [130, 142], "261": [], "262": 142, "test_neg_mean_absolute_error": 117, "test_r2_corr": 117, "264654": 117, "486498": 117, "take": [117, 129, 132, 133, 141], "def": 117, "pearson_scor": 117, "squeez": 117, "306": [], "307": [], "157": 133, "run_custom_scorers_regress": [117, 118], "auto_examples_05_custom": 118, "descript": [119, 120, 121, 141], "short": [119, 121, 128, 132], "link": [119, 121, 138, 141, 142], "unit": [119, 125, 132], "scaler_robust": 119, "median": 119, "iqr": 119, "robustscal": [119, 130], "scaler_minmax": 119, "minmaxscal": 119, "scaler_maxab": 119, "maxabsscal": 119, "scaler_norm": 119, "norm": 119, "scaler_quantil": 119, "uniform": [109, 119, 129, 130, 142], "robust": [119, 123], "quantiletransform": 119, "scaler_pow": 119, "gaussianis": 119, "powertransform": 119, "select_univari": 119, "genericunivariateselect": 119, "select_percentil": 119, "rank": 119, "selectpercentil": 119, "select_k": [119, 130], "selectkbest": [119, 130], "select_fdr": 119, "selectfdr": 119, "select_fpr": 119, "fpr": 119, "selectfpr": 119, "select_fw": 119, "fwe": 119, "selectfw": 119, "variancethreshold": 119, "drop_column": 119, "dropcolumn": 119, "change_column_typ": 119, "changecolumntyp": 119, "filtercolumn": 119, "princip": [119, 141], "svr": [119, 134, 135], "randomforestregressor": 119, "extratreesclassifi": 119, "extratreesregressor": 119, "adaboost": 119, "adaboostclassifi": 119, "adaboostregressor": 119, "bag": 119, "baggingclassifi": 119, "baggingregressor": 119, "gradientboost": 119, "gradient": 119, "boost": 119, "gradientboostingclassifi": 119, "gradientboostingregressor": 119, "stackingclassifi": [119, 132, 134], "stackingregressor": [119, 132, 134], "gauss": 119, "gaussianprocessclassifi": 119, "gaussianprocessregressor": 119, "logit": [119, 130, 139], "aka": 119, "maxent": 119, "logisticregress": [119, 130, 132], "logitcv": 119, "logisticregressioncv": 119, "l2": [119, 130], "ridgeclassifi": 119, "ridgecv": 119, "built": [119, 125, 134, 139, 140, 141], "ridgeclassifiercv": 119, "sgd": 119, "minim": 119, "empir": [119, 129], "loss": [119, 128], "sgdclassifi": 119, "sgdregressor": 119, "nb_bernoulli": 119, "multivari": 119, "bernoulli": 119, "bernoullinb": 119, "nb_categor": 119, "categoricalnb": 119, "nb_complement": 119, "complementnb": 119, "nb_gaussian": 119, "gaussiannb": 119, "nb_multinomi": 119, "multinomi": 119, "multinomialnb": 119, "dynamicselect": [119, 142], "dummyclassifi": 119, "dummyregressor": 119, "meant": 120, "friendli": [120, 141], "come": [120, 121, 129, 133, 137, 141], "cost": 120, "potenti": [120, 128, 133], "These": [120, 123, 124, 127, 140], "therefor": [120, 124, 127, 128, 140, 141], "flag": [1, 120, 121], "enabl": [120, 142], "disabl": 120, "config": [75, 120, 125], "disable_x_check": 120, "unmatch": 120, "think": [120, 128], "disable_xtypes_check": 120, "miss": [120, 142], "disable_x_verbos": 120, "disable_xtypes_verbos": 120, "fork": 121, "com": [121, 129, 136, 142], "juaml": 121, "repositori": 121, "never": [121, 141], "offici": [121, 124], "clone": 121, "virtual": [121, 124], "pip": [121, 123, 124], "branch": [121, 126], "refactor": [121, 142], "feat": 121, "prefix": 121, "git": [121, 126, 142], "checkout": [121, 126], "pre": [121, 124, 126, 142], "commit": [121, 126, 142], "hook": [121, 142], "help": [121, 124, 125, 128, 133, 139, 141], "regularli": 121, "On": [121, 128, 132, 140], "save": [121, 141], "smaller": [121, 132], "semant": 121, "wip": 121, "verifi": [121, 140], "suit": [121, 133], "tox": 121, "push": [121, 126], "open": [121, 132], "displai": [121, 132, 133, 139], "submit": [121, 132], "templat": 121, "web": 121, "interfac": [121, 130, 132, 134], "meet": 121, "directori": [121, 132], "rare": [121, 132], "circumst": 121, "coverag": 121, "decreas": 121, "report": 121, "codecov": 121, "usag": [121, 124, 136, 141, 142], "draft": [121, 126], "id": 121, "liner": [121, 139], "newsfrag": 121, "bug": [121, 142], "bugfix": 121, "enhanc": 121, "enh": 121, "improv": [121, 124, 132], "miscellan": 121, "misc": 121, "record": 121, "content": 121, "typo": [121, 142], "intro": 121, "biggest": 121, "fan": 121, "yourself": 121, "contributor": 121, "inc": 121, "against": 121, "someon": [121, 129], "core": [121, 132, 134, 136, 139], "team": [121, 132], "success": [121, 130, 136], "pytest": [121, 142], "intend": [121, 132], "cd": 121, "_build": 121, "situat": [121, 132], "clean": [121, 124], "rest": [121, 132], "rst": [121, 126], "plot_": 121, "run_": 121, "block": 121, "comment": 121, "render": [121, 140], "emb": 121, "shall": [121, 129], "preced": 121, "bokeh": [123, 124, 142], "develop": [123, 124, 125, 126, 132, 142], "usual": [123, 130, 132, 141], "through": [123, 141], "manag": [123, 132, 142], "conda": [123, 124], "forg": [123, 124], "standalon": 123, "applic": [123, 127, 128, 133], "browser": 123, "jupyter_bokeh": 123, "servabl": 123, "statsmodel": 124, "0b1": [], "nevertheless": [124, 132, 141], "although": 124, "strongli": 124, "recommend": [124, 132, 137], "environ": [124, 125, 140], "promin": 124, "venv": 124, "env": 124, "latest": [124, 126, 132, 142], "often": [124, 128, 136, 141], "newest": 124, "sens": [124, 130, 132], "aim": [124, 125, 141], "pypi": [124, 126], "relas": 124, "yet": [124, 137], "orient": 125, "aml": 125, "institut": 125, "neurosci": [125, 127], "medicin": 125, "behaviour": [120, 125, 130, 140], "inm": [125, 132], "thought": [125, 141], "research": [125, 127, 128, 129], "simpler": 125, "abstract": 125, "power": [125, 133, 134], "minor": [125, 126], "flexibl": [125, 134], "video": 125, "tutori": 125, "offer": [125, 137], "essenti": [125, 133], "benefit": [125, 132], "therebi": 125, "avoid": [125, 128, 129, 130, 142], "nice": [125, 137, 140, 141], "system": [125, 126], "accord": [125, 127, 129, 134, 142], "setup": [125, 138], "suggest": [125, 129], "deeper": [125, 133, 138, 139], "topic": [125, 129, 138, 139], "overview": [125, 133, 139, 141], "contribut": 125, "local": 125, "github": [125, 140, 142], "pull": [125, 126], "guidelin": 125, "write": [125, 141], "maintain": 125, "faq": 125, "issu": [125, 126, 129, 132, 133, 142], "2022": [125, 128], "07": [92, 125], "scientif": 125, "public": 125, "vera": 125, "komey": 125, "free": 125, "arxiv": [125, 128], "octob": 125, "48550": 125, "2310": 125, "12568": 125, "heavili": 125, "reliant": 125, "cite": 125, "major": [126, 130], "micro": 126, "devn": 126, "distanc": 126, "setuptools_scm": 126, "plugin": 126, "tag": 126, "increment": [126, 141], "segment": 126, "publish": 126, "onc": [126, 132, 133, 136, 138, 141], "mileston": 126, "reach": [126, 132], "towncrier": 126, "proceed": [126, 141], "sync": 126, "rebas": 126, "changelog": 126, "properli": 126, "reflect": [126, 142], "whats_new": 126, "pr": 126, "merg": 126, "via": [124, 126, 138], "vx": 126, "setuptools_scm_debug": 126, "outdir": 126, "dist": 126, "bump": [126, 142], "vd": 126, "neuroimag": [127, 128], "typic": 127, "problemat": 127, "due": [127, 129, 130], "curs": 127, "especi": 127, "recent": 127, "propos": 127, "fluid": 127, "intellig": [127, 132], "sustain": 127, "attent": 127, "nutshel": 127, "summar": 127, "subsequ": 127, "commonli": [127, 141], "principl": 127, "leverag": [127, 133], "workflow": [127, 133, 138, 141], "x_name": [127, 134], "feature_": [127, 128, 134], "cbpm_pipeline_cr": 127, "final_model": [127, 133], "836": 130, "837": 130, "feature_1": [127, 128, 134], "feature_2": [127, 128, 134], "feature_3": [127, 128, 134], "feature_4": [127, 128, 134], "feature_5": [127, 128, 134], "feature_6": [127, 128, 134], "feature_7": [127, 128, 134], "feature_8": [127, 128, 134], "feature_9": [127, 128, 134], "feature_10": [127, 128, 134], "feature_11": [127, 128, 134], "feature_12": [127, 128, 134], "feature_13": [127, 128, 134], "feature_14": [127, 128, 134], "feature_15": [127, 128, 134], "feature_16": [127, 128, 134], "feature_17": [127, 128, 134], "feature_18": [127, 128, 134], "feature_19": [127, 128, 134], "feature_20": [127, 134], "838": 130, "839": 130, "840": 130, "857": 130, "No": [127, 129], "rid": 127, "265": 142, "878": [], "898": 106, "918": [], "937": [], "957": [], "customis": 127, "increas": 127, "960": [], "cbpm__significance_threshold": 127, "noteworthi": 127, "sign": 127, "spearmanr": 127, "0x7fe72c12c280": [], "0x7fe74d54a290": [], "0x7fe74d54e230": [], "guess": 127, "spearman": 127, "xilin": 127, "mar": [127, 128], "emili": 127, "fingerprint": 127, "2015": 127, "nov": 127, "1664": 127, "71": [127, 133], "rosenberg": 127, "monica": 127, "neuromark": 127, "whole": [127, 130, 132], "jan": [127, 128], "165": [102, 127, 133], "129": [], "ultim": 128, "real": [109, 128, 130, 133], "world": [128, 133], "scenario": [128, 140, 141], "relationship": 128, "un": 128, "observ": 128, "similarli": [128, 133], "rather": 128, "jointli": 128, "prevent": [128, 130], "laid": 128, "rel": [128, 132, 134], "littl": 128, "involv": 128, "simul": 128, "artifici": [128, 134, 141], "normal_dist_conf_on": 128, "normal_dist_conf_two": 128, "noise_conf_on": 128, "rand": [128, 129], "noise_conf_two": 128, "multipli": 128, "factor": [128, 132], "confound_on": 128, "confound_two": 128, "prefer": 128, "human": 128, "readabl": 128, "confound_1": 128, "confound_2": 128, "my_target": 128, "distinguish": [128, 134, 141], "predictor": 128, "accordingli": [128, 136], "crucial": 128, "parametr": [128, 130, 137, 141], "57": [130, 139], "562": [], "whose": 128, "feature_0": 128, "024047": [], "006615": [], "786706": 128, "022957": [], "006627": [], "592156": 128, "023007": [], "006605": [], "722494": 128, "022952": [], "006688": [], "674188": 128, "022834": [], "006726": [], "570243": 128, "slightli": 128, "target_confound_remov": 128, "0x7fe72498ef80": [], "insert": 128, "importantli": [128, 129, 132, 133, 136, 137, 141], "0x7fe72498fe20": [], "738": [], "space": [25, 130, 132], "748": [], "758": [92, 134, 140], "769": 127, "778": [], "005694": [], "003726": [], "253033": 128, "005696": [], "003706": [], "059126": 128, "005645": [], "003686": [], "256962": 128, "005920": [], "003683": [], "096475": 128, "005604": [], "534386": 128, "reason": [128, 129, 132], "further": [128, 130, 132, 136], "consider": 128, "why": [128, 129, 130, 138], "mitig": 128, "bia": [128, 129], "accur": 128, "argu": 128, "appropri": 128, "valuabl": [128, 133, 136], "difficult": [128, 130, 132], "challeng": 128, "ineffect": 128, "particular": [128, 133, 141], "fact": [128, 133], "collid": 128, "spuriou": 128, "evid": [128, 129, 132], "leak": [128, 136], "bias": [128, 129], "care": [128, 141], "question": [128, 129], "thorough": 128, "strength": 128, "limit": [128, 132], "techniqu": [128, 129, 130, 133], "rao": 128, "anil": 128, "presenc": 128, "volum": [128, 129], "april": 128, "49": [128, 130, 132, 139, 141], "snoek": 128, "luka": 128, "184": [128, 139], "januari": 128, "2019": 128, "741": 128, "760": [92, 96, 128, 134, 140], "he": 128, "tong": 128, "neural": [128, 141], "network": [128, 141], "206": [128, 133], "februari": 128, "2020": 128, "116276": 128, "practic": [128, 129], "knowledg": [128, 133], "discoveri": 128, "databas": 128, "scienc": [128, 136], "demo": 128, "track": 128, "2021": 128, "12461": 128, "chyzhyk": 128, "darya": 128, "biomark": 128, "gigasci": 128, "holmberg": 128, "mathia": 128, "jama": 128, "327": 128, "1282": 128, "1283": 128, "1001": [128, 139], "1820": 128, "2210": 128, "09232": 128, "revis": 128, "oct": 128, "222": [], "mention": 129, "don": [129, 130, 132], "almost": [129, 132], "infinit": 129, "unbias": 129, "overestim": 129, "rememb": [129, 133, 140], "surpris": 129, "would": [129, 130, 137, 139, 141], "answer": 129, "imposs": 129, "bengio": 129, "grandvalet": 129, "colleagu": 129, "few": [129, 133, 136, 142], "word": [129, 130], "thumb": [129, 141], "compromis": 129, "loocv": 129, "holdout": 129, "taken": 129, "intens": 129, "unconclus": 129, "intuit": [129, 133, 139], "direct": [129, 130], "thread": [129, 132], "extrem": 129, "choic": 129, "fun": 129, "begin": [129, 142], "variant": 129, "solv": [129, 136], "shed": 129, "light": 129, "poorli": 129, "stratifiedkfold": [129, 140], "rescu": 129, "matter": [129, 136, 139], "quantiz": 129, "divid": 129, "histplot": 129, "train_set": 129, "test_set": 129, "shrink": 129, "suptitl": 129, "gaussian": 129, "discrete_i": 129, "digit": 129, "kdeplot": 129, "layer": 129, "dash": 129, "repeatedcontinuousstratifiedkfold": [129, 142], "repeatedcontinuousstratifiedgroupkfold": 129, "jmlr": 129, "decemb": 129, "2004": 129, "1089": 129, "1105": 129, "stackexchang": 129, "61783": 129, "kohavi": 129, "ijcai": 129, "1137": 129, "1145": 129, "473": [], "flower": 130, "pprint": [130, 133, 140], "pretti": 130, "tolist": [130, 139], "who": 130, "common": [130, 136], "creator2": [109, 130, 139], "591": 135, "592": 135, "593": [], "594": [], "8099999999999999": 130, "632": 130, "633": 130, "634": 130, "635": 130, "etc": 130, "optimist": 130, "loop": 130, "672": [], "673": [], "scores_tun": 130, "model_tun": 130, "674": [], "675": [], "676": [], "677": [], "9100000000000001": 130, "tri": 130, "conclud": 130, "585": [], "586": [], "587": [], "588": [], "589": 135, "0001": 130, "066": 109, "067": 109, "068": 109, "069": 109, "39": [], "268": 142, "269": [93, 94, 133], "select_k__k": 130, "270": [133, 142], "271": [133, 142], "272": 133, "concept": [130, 136], "receiv": 130, "gridsearchcv": [36, 37, 130], "veri": [130, 132, 133, 134, 136, 137], "construct": 130, "diment": 130, "randomizedsearchcv": [36, 37, 130], "lot": [130, 132, 133], "consum": 130, "55": [], "775": 128, "776": [90, 128, 129], "those": [130, 136], "unnecessari": 130, "model1": 130, "777": 128, "779": 92, "780": [92, 111], "781": 92, "782": 92, "783": 92, "784": [], "93": 130, "forc": 130, "repat": 130, "creator1": [109, 130, 139], "model2": 130, "257": [130, 133], "258": [130, 142], "259": [130, 133], "inde": [130, 132, 140], "equival": 130, "param_grid": [130, 133], "stop": 130, "creator3": [130, 139], "max_depth": [130, 134], "creator4": 130, "penalti": 130, "l1": 130, "dual": 130, "solver": 130, "liblinear": 130, "model3": 130, "754": 134, "756": 134, "757": 140, "model__c": 130, "model__gamma": 130, "759": [92, 134, 140], "model__max_depth": 130, "model__penalti": 130, "9200000000000002": 130, "beat": 130, "976": 108, "gain": 133, "insight": 133, "impact": [132, 133], "abil": 133, "critic": 133, "influenc": 133, "deploy": 133, "focu": [133, 137], "anomali": 133, "logger": [109, 133, 134], "toi": [133, 134], "plai": 133, "penguin": 133, "penguins_df": 133, "island": 133, "queri": 133, "chinstrap": 133, "dropna": 133, "adeli": 133, "gentoo": 133, "105": [133, 142], "fairli": 133, "geomspac": [133, 134], "1e2": [133, 134], "946": [], "notic": [132, 133, 141], "bill_length_mm": 133, "bill_depth_mm": 133, "flipper_length_mm": 133, "body_mass_g": 133, "952": [], "151": [133, 142], "123": [133, 134], "953": [], "quick": 133, "error_scor": 133, "jucolumntransform": [], "with_mean": [130, 141], "with_std": [], "wrapmodel": [], "break_ti": [], "cache_s": [], "class_weight": 130, "coef0": [], "decision_function_shap": [], "ovr": 133, "max_it": [], "tol": [], "estimator__memori": 133, "estimator__set_column_typ": 133, "estimator__set_column_types__x_typ": 133, "estimator__set_column_types__row_select_col_typ": 133, "estimator__set_column_types__row_select_v": 133, "estimator__step": 133, "estimator__svm": 133, "estimator__svm__c": 133, "estimator__svm__apply_to": [], "estimator__svm__break_ti": 133, "estimator__svm__cache_s": 133, "estimator__svm__class_weight": 133, "estimator__svm__coef0": 133, "estimator__svm__decision_function_shap": 133, "estimator__svm__degre": 133, "estimator__svm__gamma": 133, "estimator__svm__kernel": 133, "estimator__svm__max_it": 133, "estimator__svm__model": [], "estimator__svm__needed_typ": [], "estimator__svm__prob": 133, "estimator__svm__random_st": 133, "estimator__svm__shrink": 133, "estimator__svm__tol": 133, "estimator__svm__verbos": 133, "estimator__verbos": 133, "estimator__zscor": 133, "estimator__zscore__apply_to": [], "estimator__zscore__copi": 133, "estimator__zscore__nam": [], "estimator__zscore__needed_typ": [], "estimator__zscore__row_select_col_typ": [], "estimator__zscore__row_select_v": [], "estimator__zscore__transform": [], "estimator__zscore__with_mean": 133, "estimator__zscore__with_std": 133, "pre_dispatch": 133, "refit": 133, "get_fitted_param": 133, "set_column_types__column_mapper_": 133, "bill_depth_mm__": 133, "bill_length_mm__": 133, "body_mass_g__": 133, "flipper_length_mm__": 133, "set_column_types__feature_names_in_": 133, "svm__model_": [], "zscore__column_transformer_": [], "remaind": [], "passthrough": [], "make_type_selector": [], "0x7fe7271821d0": [], "verbose_feature_names_out": [], "zscore__feature_names_in_": 133, "zscore__mean_": 133, "70291971": 133, "83613139": 133, "202": [103, 130, 133], "17883212": 133, "4318": 133, "06569343": 133, "zscore__n_features_in_": 133, "zscore__n_samples_seen_": 133, "zscore__scale_": 133, "18607683": 133, "00973207": 133, "02045287": 133, "834": 133, "40628575": 133, "zscore__var_": 133, "68953929e": 133, "03902299e": 133, "25614004e": 133, "96233850e": 133, "somewhat": [133, 134], "structur": [133, 137], "made": [133, 138, 139], "handi": [133, 137, 141], "fold_predict": 133, "repeat8_p0": 133, "repeat9_p0": 133, "c_valu": 133, "fold_inspector": 133, "fold_model": 133, "realiz": 133, "ever": 133, "address": 133, "aris": 133, "serv": 133, "asset": 133, "transpar": [133, 136], "reliabl": 133, "capabl": [133, 134, 142], "navig": 133, "har": 133, "872": [], "customiz": 134, "cours": 134, "914": [], "mind": 134, "arbitrari": [134, 140], "model_1": [134, 139], "916": [], "00000000e": 134, "78255940e": 134, "74263683e": 134, "15443469e": 134, "99484250e": 134, "66810054e": 134, "64158883e": 134, "29154967e": 134, "59381366e": 134, "917": [], "0x7fe7247d57b0": [], "min_samples_leaf": 134, "min_samples_split": 134, "0x7fe7247d60e0": [], "0x7fe7247d59c0": [], "919": 127, "920": 127, "921": 127, "922": 127, "923": [], "rf__max_depth": 134, "rf__min_samples_leaf": 134, "rf__min_samples_split": 134, "924": [], "58": 139, "061": [109, 141], "062": [109, 141], "desir": [134, 141], "type1": 134, "type2": 134, "type1_": 134, "type2_": 134, "465": [], "__type1": 134, "466": [], "0x7fe7246f8430": [], "__type2": 134, "467": [], "0x7fe7247d4e50": [], "468": [], "type1_1": 134, "type1_2": 134, "type1_3": 134, "type1_4": 134, "type1_5": 134, "type1_6": 134, "type1_7": 134, "type1_8": 134, "type1_9": 134, "type1_10": 134, "type2_1": 134, "type2_2": 134, "type2_3": 134, "type2_4": 134, "type2_5": 134, "type2_6": 134, "type2_7": 134, "type2_8": 134, "type2_9": 134, "type2_10": 134, "469": [], "470": [], "471": [], "472": [], "652": [], "653": [], "flexibli": 134, "Of": 134, "911": [], "cover": [135, 137, 141], "far": [135, 137, 140, 141], "conist": 135, "manner": [135, 136, 137, 139, 141], "clear": [132, 135], "628": 130, "target_jutargetpipelin": 135, "0x7fe7249787f0": [], "629": 130, "630": 130, "631": 130, "009775": [], "003319": [], "008625": [], "003251": [], "009010": [], "003214": [], "008810": [], "003242": 105, "008754": [], "003206": [], "overal": 135, "091": [], "goal": 136, "beyond": 136, "exact": 136, "domingo": 136, "2012": 136, "resourc": [120, 132, 136], "efficeint": [], "disadvantag": 136, "small": [132, 136], "unstabl": 136, "overcom": [132, 136], "accident": 136, "quickli": 136, "obviou": 136, "straightforward": [136, 141], "mistak": 136, "www": 136, "sciencedirect": 136, "articl": 136, "pii": 136, "s105381191630595x": 136, "natur": 136, "s41746": 136, "022": [99, 136], "00592": 136, "s1053811917305311": 136, "cross_valid": 136, "commun": 137, "known": [137, 141], "capac": 137, "colum": 137, "manipul": 137, "anyth": [137, 140], "meaning": 137, "hundr": [132, 137], "thousand": [132, 137], "saw": [137, 139, 140, 141], "advanc": 137, "004": 137, "backbon": 138, "magic": 138, "goe": [132, 138], "utmost": 138, "glanc": [138, 140], "chapter": 138, "familiar": [132, 138], "along": 138, "fundament": 138, "essenc": 138, "click": 138, "fanci": 138, "stuff": 138, "decent": 139, "benchmark": 139, "enough": 139, "tediou": 139, "sound": 139, "switch": 139, "breast": 139, "cancer": 139, "malign": 139, "benign": 139, "load_breast_canc": 139, "radiu": 139, "textur": 139, "perimet": 139, "area": 139, "worst": 139, "concav": 139, "symmetri": 139, "fractal": 139, "dimens": 139, "38": [133, 139], "122": [133, 134, 139, 142], "2654": 139, "4601": 139, "11890": 139, "132": [133, 139], "1326": 139, "1860": 139, "2750": 139, "08902": 139, "69": 139, "130": 139, "1203": 139, "2430": 139, "3613": 139, "08758": 139, "386": 139, "2575": 139, "6638": 139, "17300": 139, "135": [139, 142], "1297": 139, "1625": 139, "2364": 139, "07678": 139, "cv_splitter": [139, 140], "139": 133, "smooth": 139, "compact": 139, "141": [], "142": 133, "143": [], "144": 141, "357": 139, "088": 89, "089": 89, "090": 89, "092": [], "169": [130, 133, 139, 141], "pairwis": 139, "neither": 139, "nor": 139, "946304": 139, "083461": 139, "250382": 139, "140882": 139, "891066": 139, "285373": 139, "048138": 139, "144413": 139, "361847": 139, "206356": 139, "619069": 139, "014156": [], "989015": [], "093249": [], "302681": [], "908044": [], "dive": 139, "curiou": 139, "296": [], "54": [], "110": [132, 141], "111": 141, "112": [107, 141], "113": [107, 141], "004829": [], "002383": 102, "004336": [], "002324": [], "004236": [], "004270": 102, "004303": [], "002331": [], "933": 140, "overfit": 140, "158": [], "159": 133, "160": 102, "004474": 140, "004308": [], "002382": [], "004384": [], "002352": [], "004287": [], "002356": [], "004291": [], "002316": [], "train_scor": 140, "cryptic": 140, "worri": 140, "doesn": 140, "219": [], "004396": [], "002346": [], "004398": [], "002376": [], "004302": 102, "002328": [], "004329": [], "x27": 140, "rerun": 140, "cell": 140, "represent": 140, "trust": 140, "unabl": 140, "nbviewer": 140, "pipelinepipelin": [], "setcolumntypessetcolumntyp": 140, "standardscalerstandardscal": 140, "svcsvc": 140, "didn": 140, "got": 140, "five": 140, "back": [120, 140], "ourselv": 140, "fourth": 140, "283": 117, "284": 117, "285": 117, "286": 117, "004549": [], "002460": [], "7449876d309382acfef94df9d102aa76": 140, "004315": [], "002289": [], "004343": [], "002323": [], "004316": [], "002317": [], "004354": [], "004300": 102, "004393": 89, "002341": [], "004328": [], "002334": [], "assumpt": 140, "list_scor": 140, "adjusted_mutual_info_scor": 140, "adjusted_rand_scor": 140, "average_precis": 140, "completeness_scor": 140, "explained_vari": 140, "f1": 140, "f1_macro": 140, "f1_micro": 140, "f1_sampl": 140, "f1_weight": 140, "fowlkes_mallows_scor": 140, "homogeneity_scor": 140, "jaccard": 140, "jaccard_macro": 140, "jaccard_micro": 140, "jaccard_sampl": 140, "jaccard_weight": 140, "matthews_corrcoef": 140, "max_error": 140, "mutual_info_scor": 140, "neg_brier_scor": 140, "neg_log_loss": 140, "neg_mean_absolute_percentage_error": 140, "neg_mean_gamma_devi": 140, "neg_mean_poisson_devi": 140, "neg_mean_squared_error": 140, "neg_mean_squared_log_error": 140, "neg_median_absolute_error": 140, "neg_negative_likelihood_ratio": 140, "neg_root_mean_squared_error": 140, "normalized_mutual_info_scor": 140, "positive_likelihood_ratio": 140, "precision_macro": 140, "precision_micro": 140, "precision_sampl": 140, "precision_weight": 140, "rand_scor": 140, "recal": 140, "recall_macro": 140, "recall_micro": 140, "recall_sampl": 140, "recall_weight": 140, "roc_auc_ovo": 140, "roc_auc_ovo_weight": 140, "roc_auc_ovr": 140, "roc_auc_ovr_weight": 140, "top_k_accuraci": 140, "v_measure_scor": 140, "r_corr": 140, "394": [], "395": [], "396": [], "005110": [], "003991": [], "004383": [], "003855": [], "004703": [], "004382": [], "003874": [], "004333": [], "003808": [], "003833": [], "004355": [], "003815": [], "004449": [], "003821": [], "004362": [], "003844": [], "003806": [], "430": [], "autom": 141, "pipe": 141, "fed": 141, "modifi": [130, 141], "safe": 141, "664": [], "665": [], "666": [], "667": [], "668": [114, 115], "003031": [], "001701": [], "002752": [], "001656": [], "002821": [], "001617": [], "002672": [], "001606": [], "002671": [], "001612": [], "voil\u00e0": 141, "resembl": 141, "scaler": 141, "700": [], "701": [], "702": [], "004473": 140, "002371": [], "002339": [], "004313": [], "002338": [], "004395": [], "002336": [], "decomposit": 141, "previous": 141, "746": [], "747": [], "749": [], "005647": [], "003119": [], "005471": [], "003121": [], "005386": [], "003105": [], "005390": [], "003154": [], "005360": [], "003070": [], "opaqu": 141, "simplifi": 141, "neat": 141, "806": [], "807": [], "005523": [], "003087": [], "005363": [], "003052": [], "005296": [], "003073": [], "003067": [], "005323": [], "003042": [], "awesom": 141, "prepreprocess": 141, "jump": 141, "aren": 141, "shouldn": 141, "ye": 141, "turn": 141, "learnt": 141, "experi": 141, "heurist": 141, "rate": 141, "sigma": 141, "sai": [132, 141], "860": [109, 111, 130], "basi": 141, "comma": 141, "wonder": 141, "besid": 141, "definit": 141, "pca_1": 141, "869": [], "016169": [], "006721": [], "015728": [], "006825": [], "015750": [], "006704": [], "015719": [], "006840": [], "015959": [], "006748": [], "boser": 141, "guyon": 141, "vapnik": 141, "margin": 141, "colt": 141, "92": [133, 141], "fifth": 141, "annual": 141, "workshop": 141, "theori": 141, "1992": 141, "jul": 141, "338": [], "surround": 142, "146": 142, "instruct": [132, 142], "fede": 142, "94": [133, 142], "108": [133, 142], "multiprocess": 142, "nos": 142, "extendeddataframepipelin": 142, "tranform_until": 142, "63": 142, "minimum": 142, "face": 142, "create_pipelin": 142, "register_model": 142, "dev111": [], "133": [], "134": 133, "136": [], "137": [], "004774": [], "002519": [], "004399": 89, "002484": [], "004342": [], "002470": [], "004352": [], "002487": [], "004312": [], "tmp4efeun6v": [], "eb6ea4db6c3c19d60a4593e8907522ae5f153cf0": [], "517": [93, 101], "980": [], "981": [], "982": [], "983": [], "004750": [], "002277": [], "004232": [], "002136": [], "002157": [], "004153": [], "002168": [], "004163": [], "002131": [], "817": 127, "0x7f1605de0ca0": [], "400": [92, 108], "401": [92, 108], "402": [92, 108], "403": 108, "446": [], "447": 140, "448": [], "835": [90, 94, 130], "620": 114, "638": 96, "639": 96, "640": [96, 139], "641": 139, "642": 139, "280": [], "281": [], "282": [], "644": 140, "645": 140, "646": 140, "647": [], "648": [], "388": [], "818": [], "371": [], "372": [], "373": [92, 94], "374": [], "375": 129, "415": [], "417": [108, 133], "418": [108, 133], "461": 140, "462": 140, "463": 140, "694": [], "731": [], "596": [], "636": [], "637": [96, 132], "912": [], "913": 127, "925": [], "943": 128, "003": [], "005": [], "006": [], "464": [], "332": 139, "521": 101, "535": [], "536": [], "537": [], "538": [], "539": [], "540": [], "119": [], "124": 134, "125": [130, 134], "004663": [], "004239": [], "002414": [], "004185": [], "002301": [], "004344": [], "004215": [], "002268": [], "004150": [], "004188": [], "004262": [], "002349": [], "004194": [], "004162": [], "004210": [], "002325": [], "004218": [], "004246": [], "002372": [], "004214": [], "002303": [], "004235": [], "0x7f1605e02bc0": [], "330": [108, 139], "33": [113, 130, 133], "995": [], "0x7f160585fca0": [], "011": [], "012": [], "013": [], "014": [], "004371": [], "002176": [], "003941": [], "002218": [], "003949": [], "002130": [], "003996": [], "002120": [], "003880": [], "002065": [], "51357151914367": 105, "070": 109, "41": [], "0x7f1605ac25f0": [], "997": [], "998": [], "999": [], "000": [], "012722": [], "005367": [], "011701": [], "005322": [], "011638": [], "005394": [], "011692": [], "005252": [], "011647": [], "005430": [], "341": [108, 113], "196": 113, "197": [113, 130, 133], "198": [113, 130], "199": [113, 130], "298": [], "480": [], "489": 110, "490": [], "491": [], "549": [], "550": [], "551": [], "542": [], "543": [], "544": [], "545": [], "546": [], "378": [], "609": 93, "610": 93, "0x7f16061f13f0": [], "0x7f16061f2890": [], "611": [], "612": [], "613": [], "614": [], "841": 127, "194": [], "352": [], "355": [], "356": [], "785": [], "0x7f1605de2620": [], "493": [], "495": [], "0x7f1605de1ae0": [], "684": [91, 94], "686": 108, "885": [], "886": [], "887": [], "888": [], "021313": [], "007902": [], "021067": [], "007909": [], "020898": [], "007873": [], "021204": [], "007906": [], "021056": [], "007852": [], "147": [], "148": [], "162": 102, "163": 102, "164": 102, "004529": 140, "002174": [], "002255": [], "004221": [], "002198": [], "004199": [], "002179": [], "207": 133, "209": 133, "155": [], "820": [], "881": [], "884": [], "0x7f160c0b8280": [], "0x7f162d432290": [], "0x7f162d435a30": [], "131": [], "397": [], "398": 92, "399": [92, 108], "023874": [], "006735": [], "022810": [], "006667": [], "022894": [], "006629": [], "006662": [], "022813": [], "0x7f16057b5660": [], "556": [], "0x7f16057b6e60": [], "557": [], "558": 93, "559": 93, "560": 93, "005703": [], "003682": [], "005627": [], "003597": [], "005663": [], "003630": [], "005707": [], "003674": [], "005672": [], "003560": [], "221": [], "277": 130, "278": [], "316": 130, "317": 130, "318": [100, 103, 130, 132], "358": [], "359": [], "360": [], "310": [], "311": [], "312": [], "46": 130, "753": 134, "230": [130, 141], "231": [128, 130, 141, 142], "232": [130, 141, 142], "233": [130, 142], "234": [102, 103, 117, 130, 141, 142], "235": [117, 141, 142], "236": [117, 142], "237": 133, "238": [], "239": [], "643": [139, 140], "649": [], "106": [], "107": [], "109": 133, "114": [107, 133], "115": 107, "116": 107, "008": [], "843": 114, "844": 114, "845": 114, "846": [], "0x7f1605e03d60": [], "742": [], "744": [], "0x7f1605f3fb20": [], "745": [], "0x7f16060fca30": [], "0x7f16060ff730": [], "750": [], "751": 134, "0x7f1605b660b0": [], "0x7f16060fe1a0": [], "279": [], "455": [], "0x7f1605b3beb0": [], "009635": [], "003238": [], "008474": [], "003198": 141, "008955": [], "003142": [], "008747": [], "003164": [], "008746": [], "003134": [], "972": [], "973": [], "974": [], "975": 108, "928": [], "929": [], "930": [], "931": [], "932": [], "004994": [], "002482": [], "004544": [], "004400": [], "002373": [], "004407": 140, "002357": [], "004409": [], "002396": [102, 140, 141], "004505": [], "002404": [], "004373": [], "002384": [], "004375": [], "002337": [], "004357": [], "002409": 102, "004348": [], "002397": [], "056": 107, "057": [], "058": [], "004412": 140, "004284": [], "002283": [], "004281": [], "002306": 89, "121": 134, "004477": 140, "004220": [], "002273": [], "004251": [], "002253": [], "002265": [], "004332": [], "002309": [], "002426": [], "002387": [], "004353": [], "003954": [], "003798": [], "003779": [], "004323": [], "003774": [], "004268": 102, "003767": [], "004296": [], "003824": [], "004299": [], "003776": [], "003783": [], "004306": [], "003750": [], "426": [], "003093": [], "001751": [], "002808": [], "001657": [], "002763": [], "001620": [], "002725": [], "001616": [], "002722": [], "001631": [], "004560": [], "002369": [], "004403": [], "002405": 102, "004346": [], "002366": [], "581": [], "582": [], "583": [], "584": [], "005722": [], "003159": [], "005462": [], "003138": [], "005371": [], "003109": [], "005410": [], "003101": [], "006259": [], "003074": [], "005451": [], "003139": [], "005391": [], "003158": [], "005382": [], "005380": [], "003026": [], "697": [], "698": [], "699": [], "016282": [], "015637": [], "006749": [], "015843": [], "006714": [], "015613": [], "006821": [], "2024": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 117, 125, 127, 128, 130, 133, 134, 135, 139, 140, 141], "59": 130, "dev112": [], "004766": [], "002513": [], "004318": [], "002461": 140, "002452": 140, "004381": [117, 141], "002443": 140, "tmpbti83iq_": [], "ffc61acfa75ef10b46f5b265f4f257b1789532fa": [], "342": [108, 113], "004727": [], "004301": [], "002234": [], "004324": [], "004277": [], "002251": 117, "002241": [], "656": [], "0x7f016dd825c0": [], "984": [], "985": [], "027": 141, "366": [], "367": [], "368": [], "369": [], "370": [], "019": [], "020": [], "021": [], "387": [], "407": 114, "096": [], "097": [], "098": [], "099": [], "191": 133, "192": 113, "541": [], "166": 102, "167": [133, 141], "486": [110, 139], "487": 110, "488": 110, "451": [], "657": [89, 94], "678": [], "735": [], "736": [110, 111], "739": [], "086": [], "087": [], "793": 127, "794": [], "795": [], "796": [], "797": [], "798": [], "434": [], "287": [], "288": [], "351": [], "734": [], "740": [], "004742": [], "002417": [140, 141], "002354": [], "004261": [], "002370": [], "002368": [], "004272": [], "004286": [], "002413": [], "004252": [], "004271": [], "004295": [], "002342": [], "004297": [], "004209": [], "002359": [], "004278": [], "002353": [], "004240": [], "004242": [], "004276": 102, "004289": [], "002351": [], "0x7f01747ecbe0": [], "0x7f01707f3550": [], "004350": [], "002181": [], "004019": [], "003937": [], "004080": [], "003917": [], "002167": [], "0x7f016d9d9d20": [], "012650": [], "005520": [], "011843": [], "005446": [], "012108": [], "005570": [], "011927": [], "005421": [], "011857": [], "005587": [], "343": 113, "977": 108, "978": 108, "979": 108, "035": [], "036": [], "037": [], "038": [], "039": [], "040": 133, "041": [], "319": 130, "320": [], "376": [], "377": [], "379": [], "654": [], "655": [], "658": [], "380": [], "381": [], "382": [], "935": [], "936": [], "938": [], "939": [], "408": 114, "393": [], "0x7f0170209ff0": [], "0x7f017020b220": [], "507": [], "808": [], "033": [], "034": [], "321": [], "322": [], "0x7f0170176ad0": [], "325": [], "0x7f0170176ec0": [], "519": 101, "520": 101, "021865": [], "008237": [], "021556": [], "008142": [], "021440": [], "008092": [], "021584": [], "008106": [], "008099": [], "604": [], "445": [], "004489": [], "002225": [], "002173": [], "004241": [], "002186": [], "002199": [], "079": 109, "126": [133, 134], "156": 127, "598": [], "617": 114, "721": [], "722": 130, "0x7f01750717e0": [], "0x7f01965225f0": [], "0x7f019652a2b0": [], "889": 105, "890": [105, 127], "891": 105, "892": 105, "023952": [], "006817": [], "022981": [], "006685": [], "023014": [], "006705": [], "022914": [], "022857": [], "006808": [], "0x7f01700b5ba0": [], "049": [], "0x7f016d494250": [], "050": [], "051": [], "052": [107, 109], "053": 107, "005770": [], "006350": [], "004781": [], "005739": [], "003699": [], "005869": [], "003708": [], "005691": [], "003650": [], "225": [101, 103, 130, 133], "577": [], "926": [], "927": [], "007": [], "009": [], "010": [], "474": [], "475": [], "476": [], "477": [], "478": 115, "732": [], "405": 114, "907": [], "908": [], "909": [], "910": [], "444": [], "450": [], "553": [], "226": [130, 141], "228": [130, 141], "229": 130, "0x7f016dc28b20": [], "526": [90, 110], "0x7f016d6d2680": [], "0x7f016d6d3190": [], "0x7f016d6d1c00": [], "752": 134, "0x7f016daa3f70": [], "0x7f016d4c1e10": [], "940": [], "855": 130, "412": [], "0x7f016de0d210": [], "413": 130, "414": [], "009619": [], "003284": [], "008549": [], "003224": [], "009034": [], "003204": [], "008809": [], "008751": [], "003205": 141, "485": [110, 139], "438": [], "483": 139, "484": [110, 139], "004869": [], "002365": [], "004439": [], "004322": 102, "004330": 102, "004455": 140, "002401": [], "004368": [], "004351": [], "002347": [], "004334": [], "004326": [], "004472": [], "002360": [], "004337": [], "004621": [], "004349": [], "004428": 140, "004445": [], "004376": [], "002361": [], "004369": [], "004460": [], "004419": [], "002362": [], "770": 127, "004426": 89, "004004": 140, "004356": [], "003843": 128, "004411": 88, "003893": [], "004436": [], "003852": [], "003857": [], "003870": [], "004414": [], "003865": [], "004366": [], "032": [], "003096": [], "001655": [], "002753": [], "001594": [], "002683": [], "001580": [], "002802": [], "001663": [], "002811": [], "001660": [], "064": 109, "004519": [], "004339": 102, "002344": [], "002379": [], "005665": [], "003127": [], "005331": [], "005424": [], "003079": [], "005379": [], "003092": [], "168": [141, 142], "170": [130, 141, 142], "171": [117, 118, 130, 141], "005467": [], "003137": [], "005362": [], "003077": [], "005312": [], "003041": [], "005341": [], "003057": [], "005318": [], "223": [], "224": 142, "016257": [], "007108": [], "015859": [], "006730": [], "015880": [], "006824": 128, "015691": [], "006778": [], "015935": [], "006796": [], "337": 141, "dev113": [], "954": [], "955": [], "956": [], "958": [], "004788": [], "002506": [], "002400": [], "004304": [], "002422": 102, "004317": [], "002439": [], "tmp8qc31nnz": [], "4a1172d2cfb09b6dfae4e8c22cf3c06c515de63c": [], "004666": [], "002259": [], "002231": [], "004142": [], "002188": [], "575": [], "576": [], "0x7f7066eb42e0": [], "054": 107, "055": 107, "601": [], "117": 107, "118": [107, 142], "482": 139, "071": [], "072": [], "073": [], "383": [], "384": [], "411": [], "425": [99, 103], "427": [], "428": [], "423": [], "627": 130, "344": 113, "986": [], "987": [], "988": [], "989": [], "615": [], "616": 114, "618": 114, "619": 114, "004640": [], "002378": [], "002288": [], "004152": [], "004193": [], "004187": [], "002300": [], "004164": [], "002261": [], "004147": [], "004175": [], "004174": [], "002275": [], "004172": [], "004173": [], "002319": [], "004166": [], "002280": [], "002305": [], "002310": [], "004148": [], "002297": [], "004267": [], "004160": [], "0x7f7066e9b070": [], "0x7f7066c419f0": [], "004310": [], "002104": [], "003891": [], "002115": [], "002072": [], "003922": [], "002114": [], "003882": [], "0x7f7066bc1c00": [], "012735": [], "005387": [], "011879": [], "005435": [], "011796": [], "005484": [], "011734": [], "005356": [], "011713": [], "005500": [], "625": 130, "626": 130, "685": 108, "687": 108, "688": 108, "689": 108, "690": [], "691": [], "294": [], "994": [], "002": [], "552": [], "554": [], "018": [], "0x7f7066c42bf0": [], "0x7f7066c43790": [], "023": 99, "026": 141, "788": [], "897": 106, "659": [], "661": [], "0x7f70674084f0": [], "0x7f706740b3d0": [], "349": [], "350": 94, "021916": [], "008052": [], "021770": [], "008082": [], "021483": [], "008040": [], "021679": [], "008064": [], "021400": [], "008032": [], "004485": [], "002187": [], "004149": [], "002139": [], "004134": [], "002148": [], "004123": [], "002160": [], "809": [], "851": [], "852": 130, "853": 130, "854": 130, "340": 108, "361": [], "422": 133, "0x7f706c271c60": [], "0x7f708dcc65f0": [], "0x7f708dccdd30": [], "024103": [], "006737": [], "022960": [], "006699": [], "023182": [], "022971": [], "006775": [], "023304": [], "006834": [], "0x7f7066eb6e60": [], "0x7f7066eb5150": [], "707": [], "708": [], "005803": [], "005683": [], "003680": [], "005679": [], "003654": [], "005767": [], "003653": [], "005646": [], "003664": [], "365": [106, 111], "602": [], "578": [], "579": [], "015": [], "016": [], "017": [], "138": 133, "819": 134, "821": [], "822": [], "56": 133, "313": [], "314": [], "153": 134, "0x7f7066bc3be0": [], "436": [], "880": 106, "882": [], "0x7f706754aad0": [], "883": [], "0x7f7066985120": [], "0x7f7066c5dab0": [], "295": [], "0x7f7066c5d540": [], "297": 133, "0x7f7066dca350": [], "149": [], "0x7f7066cadcc0": [], "009641": [], "003247": [], "008512": [], "003185": [105, 141], "008942": [], "003178": [], "008721": [], "003171": [], "008777": [], "003146": [], "289": [], "290": [], "291": [], "292": [], "293": 142, "093": [], "004909": [], "002399": [], "004413": [], "004347": [], "004341": [], "002340": [], "185": 117, "002333": [], "002281": [], "243": [130, 133], "244": [130, 142], "245": [88, 130, 132, 133, 142], "246": 130, "004360": [], "002291": [], "002287": [], "002272": [], "002463": 140, "004515": [], "002329": [], "004279": [], "004292": [], "002299": [], "004325": 102, "002279": 89, "004335": [], "002276": [], "420": [108, 133], "004386": [], "003939": [], "004269": [], "003758": [], "004309": 102, "003752": [], "003751": [], "003823": [], "003789": [], "004363": [], "003781": [], "003757": [], "001661": [], "002773": [], "001596": [], "002696": [], "001687": [], "002609": [], "001581": [], "002627": [], "001599": [], "715": [], "002284": [], "005579": [], "005333": [], "003036": [], "005244": [], "003043": [], "005289": [], "003045": [], "003063": [], "816": [], "005378": [], "003076": [], "005294": [], "003028": [], "005231": [], "005199": [], "003050": [], "005240": 141, "873": [], "874": 105, "875": [], "876": [], "877": [], "879": [], "015980": [], "006822": [], "015488": [], "006616": [], "015593": [], "006713": [], "015495": [], "006651": [], "015677": [], "006716": [], "dev1": [], "572": [90, 140], "004903": [], "002554": [], "004478": [], "002493": [], "004484": [], "002507": [], "004486": [], "002784": [], "004496": 140, "002502": [], "tmp0ppxbe_6": [], "d789025717531c6d3d884e7cfb4848f3bef8ef3": [], "528": 139, "005089": [], "002438": 140, "004557": [], "002267": [], "002244": [], "002227": [], "671": [], "264": [], "0x7f1fc9ab1c00": [], "858": 130, "859": 130, "904": [], "905": [], "906": [], "848": [], "059": [], "060": [109, 141], "810": [], "811": [113, 115], "812": [], "856": 130, "331": 139, "094": [], "095": [], "494": [], "045": 96, "048": [], "432": [108, 111], "692": [], "695": [], "696": [], "004790": [], "002453": [], "002381": 102, "004495": [], "002435": 140, "004264": [], "004243": [], "002364": [], "004245": [], "004250": 102, "004311": [], "002335": [], "004257": [], "0x7f1fc9918910": [], "508": [], "0x7f1fc95b4100": [], "004422": [], "004050": [], "002161": [], "004016": 140, "002194": [], "004111": [], "002172": [], "003959": [], "0x7f1fc95b5000": [], "013158": [], "005594": [], "012160": [], "005527": [], "012252": [], "012121": [], "005585": [], "012167": [], "005633": [], "959": [], "385": [], "730": [], "0x7f1fc94a0b80": [], "0x7f1fc94a0ca0": [], "522": [], "523": 90, "240": 130, "241": 130, "242": 130, "509": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 107, 108, 109, 113, 117, 127, 133, 134, 140], "0x7f1fcb469a50": [], "511": [100, 140], "512": [100, 140], "0x7f1fc946ad10": [], "710": [], "711": [], "022244": [], "008280": [], "021958": [], "008224": [], "021985": [], "008192": [], "022113": [], "008217": [], "021868": [], "008235": [], "004540": [], "002240": [], "004273": [], "002201": [], "002205": [], "720": [96, 130], "dev105": [], "267": [127, 133], "0x7f1fcfb6a170": [], "0x7f1ff152e9e0": [], "0x7f1ff1536870": [], "024610": [], "007007": [], "023787": [], "006902": [], "023661": [], "006833": [], "023379": [], "006835": [], "023397": [], "006945": [], "0x7f1fc9548220": [], "0x7f1fc9548700": [], "005967": 106, "003761": [], "005837": [], "003727": [], "005784": [], "003735": [], "005876": [], "003720": [], "005778": [], "003718": [], "410": 114, "662": [], "663": [], "903": [], "481": [110, 139], "0x7f1fc991a9e0": [], "0x7f1fc906fd00": [], "0x7f1fc906f880": [], "0x7f1fc906c2e0": [], "0x7f1fc91ec9d0": [], "0x7f1fc9dbf790": [], "693": [], "0x7f1fc992f6d0": [], "009726": [], "008579": [], "003313": [], "009081": [], "003264": [], "008874": [], "003257": 141, "008852": [], "003226": [], "333": [], "334": [], "335": [], "005002": [], "002432": [], "002385": [], "004451": [], "004528": [], "004423": [], "002410": [], "002374": [], "002394": [], "004404": [], "002403": [], "004510": [], "002407": 102, "004385": [], "002418": 140, "004675": [], "004450": [], "004431": 88, "002395": [], "004410": 140, "002380": 102, "004465": [], "004427": [], "004446": 89, "004491": 140, "004062": [], "003876": [], "004401": [], "003867": [], "003839": [], "004527": [], "003872": [], "004444": [], "003889": [], "004435": [], "003847": [], "435": [], "863": 130, "001697": [], "002810": [], "001662": [], "002729": [], "001637": 141, "002751": [], "001624": [], "002743": 141, "001615": [], "896": 106, "899": 106, "900": [], "005014": [], "004441": 140, "002358": [], "004374": [], "005748": [], "005488": 141, "003126": [], "005426": [], "003140": [], "005427": [], "003160": [], "005529": [], "003114": [], "003176": [], "005375": [], "003100": [], "005453": [], "003124": [], "005447": [], "003103": [], "016581": [], "006876": 128, "015869": [], "006885": [], "016133": [], "016070": [], "006865": [], "016045": [], "006831": [], "skip": 142, "synchon": 142, "mandal": 142, "header": 142, "languag": 142, "snippet": [132, 142], "adopt": 142, "ruff": 142, "linter": 142, "codebas": 142, "codespel": 142, "dev2": [], "004795": [], "002666": [], "004714": [], "002685": [], "002567": [], "004678": [], "002593": 88, "004823": [], "002669": [], "tmpl0etqc38": [], "8d0fd89ae680d7887d646283adf3698b823e1d36": [], "421": [108, 133], "621": 130, "004887": [], "002295": [], "004392": [], "002495": [], "002269": [], "002264": [], "670": [], "0x7f890d751d20": [], "046": 96, "047": 96, "870": [], "871": [], "336": [], "831": [], "193": [], "195": 113, "893": 89, "894": [], "895": 106, "849": [], "004754": [], "002367": [], "002343": [], "002345": [], "004263": [], "004254": [], "002406": 102, "002348": [], "004244": [], "002350": [], "0x7f890d3fff10": [], "0x7f890fb87400": [], "004868": [], "004041": [], "002197": [], "004109": [], "003963": [], "0x7f890d9bbe50": [], "013399": [], "005693": [], "012183": [], "005460": [], "012069": [], "005602": [], "012034": [], "012631": [], "005975": [], "102": [], "103": [], "573": 90, "574": 90, "0x7f890d703730": [], "0x7f890d703250": [], "0x7f891025f760": [], "0x7f8926057790": [], "022386": [], "008354": [], "022887": [], "008436": [], "021805": [], "008265": [], "023222": [], "008270": [], "021786": [], "008165": [], "004556": [], "002220": [], "004249": [], "002184": [], "004195": [], "004231": [], "561": 93, "220": [], "0x7f8914a1e290": [], "0x7f893642ea70": [], "0x7f89364363b0": [], "53": 134, "024629": [], "006807": [], "023118": [], "023805": [], "006767": [], "023166": [], "006745": [], "025147": [], "007090": [], "0x7f890fe335b0": [], "0x7f890fe32770": [], "006037": [], "003725": [], "005716": [], "003746": [], "005697": [], "003645": [], "005860": [], "003705": [], "005738": [], "847": [], "850": [], "934": [], "424": [], "799": [], "263": 133, "0x7f890d5ec3d0": [], "0x7f890d1e5930": [], "0x7f890d1c94b0": [], "0x7f890d1c9f30": [], "249": [88, 133, 142], "0x7f890d3e7310": [], "0x7f890d41efe0": [], "0x7f890d3c2080": [], "009920": [], "003334": [], "008616": [], "003225": [], "008998": [], "003262": [], "008818": [], "003222": [], "008866": [], "003308": [], "409": 114, "004902": [], "004448": [], "002474": [], "004751": [], "002440": [], "004487": [], "002390": [], "004438": 117, "004468": 140, "002472": [], "004589": [], "004581": [], "002424": 140, "004463": [], "004364": [], "004935": [], "004520": [], "002434": [], "004507": [], "004430": [], "004567": [], "004506": [], "004429": [], "004110": [], "004424": [], "003856": [], "004390": [], "003888": [], "004432": [], "004612": [], "004107": [], "004526": [], "003906": [], "004483": [], "003873": [], "003903": [], "003919": [], "003144": [], "001669": [], "001614": [], "001610": [], "002677": [], "001621": [], "002630": [], "001699": [], "004577": [], "002392": 102, "002531": [], "004735": [], "002610": [], "004988": [], "002485": [], "004555": [], "005769": [], "003125": [], "005442": [], "003149": [], "005499": [], "005485": [], "003253": [], "005908": [], "005545": [], "003118": [], "005395": [], "005404": [], "003110": [], "003071": [], "172": [130, 141], "173": 133, "174": 133, "175": [130, 139], "176": 130, "017283": [], "006841": [], "015957": [], "007164": [], "016626": [], "006900": [], "015987": [], "006870": [], "016107": [], "006940": [], "dev11": [], "524": [90, 110], "525": [90, 110, 139], "004738": [], "002540": [], "004307": [], "004320": [], "tmpg8da_yv0": [], "d1f915eee0902cee00b744c8ba7e9509ada8b578": [], "004756": [], "002260": [], "002229": [], "002214": [], "002178": [], "004228": [], "0x7f7aa0939e10": [], "791": [], "714": 96, "669": [], "792": [], "002332": [], "002355": [], "004203": [], "004233": [], "004256": [], "004223": [], "0x7f7aa08d8f10": [], "0x7f7aa06f3070": [], "004377": [], "003961": [], "002171": [], "003987": [], "002119": [], "004047": [], "002126": [], "003980": [], "002165": [], "0x7f7aa0238370": [], "012866": [], "005492": [], "011937": [], "012027": [], "005550": 141, "011842": [], "005414": [], "005549": 141, "901": [], "902": [], "0x7f7aa0980670": [], "0x7f7aa0980730": [], "076": [], "0x7f7aa05b5030": [], "0x7f7aa05b49d0": [], "021761": [], "008126": [], "021662": [], "008140": [], "021575": [], "008163": [], "021776": [], "008139": [], "021530": [], "008112": [], "002203": [], "002149": [], "002155": [], "004213": [], "0x7f7aa5a06200": [], "0x7f7ac7422a70": [], "0x7f7ac7429e30": [], "024077": [], "006696": [], "023107": [], "006668": [], "023280": [], "022945": [], "006683": [], "006753": [], "0x7f7aa0074400": [], "0x7f7aa0076dd0": [], "005802": [], "003659": [], "005678": [], "005712": [], "003655": [], "005726": [], "003745": [], "005695": [], "003644": [], "183": [100, 133], "814": [], "815": [], "363": [], "832": [], "339": 108, "345": 113, "348": [], "0x7f7aa02e77c0": [], "0x7f7aa00b8880": [], "0x7f7aa00b82e0": [], "0x7f7aa00b8310": [], "0x7f7aa05b4fa0": [], "0x7f7aa00ba0e0": [], "0x7f7aa0307820": [], "009708": [], "003329": [], "008650": [], "003211": [], "009128": [], "008821": [], "008857": [], "003232": [], "52": [130, 132, 134], "004858": [], "002416": [], "004606": [], "004388": [], "002327": [], "004365": [], "004370": [], "004479": [], "004009": [], "004480": [], "004417": 117, "003848": [], "003838": [], "003842": [], "004440": [], "003841": [], "004447": [], "003859": [], "003089": [], "001672": [], "002764": [], "002694": [], "001634": [], "002661": [], "001629": [], "001592": [], "004570": [], "004494": [88, 140], "004294": [], "005669": [], "003143": [], "005385": [], "003085": [], "005511": [], "003098": [], "005370": [], "003117": [], "005489": [], "003081": [], "003051": [], "005286": [], "003059": [], "005329": [], "003083": [], "005308": [], "429": [], "431": [], "016311": [], "006806": [], "015796": [], "015952": [], "015850": [], "016063": [], "dev14": [], "004682": [], "002499": [], "002393": [], "tmp41fuw6eo": [], "8c908ce8343743e208f0cd5e6a8d0fd9bcb6ac1b": [], "024": [99, 141], "004691": [], "002296": [], "004191": [], "002196": [], "0x7f7f19dba080": [], "743": [], "789": [], "790": [], "004569": [], "004183": [], "004151": [], "002278": [], "004189": [], "004176": [], "004196": [], "002547": [], "004139": [], "002270": 89, "004128": [], "0x7f7f3074ba30": [], "0x7f7f1a080580": [], "063": [105, 109, 111, 141], "004275": [], "003936": [], "002089": [], "002097": [], "003979": [], "002121": [], "003900": [], "002085": [], "0x7f7f1a0827d0": [], "012637": [], "011853": [], "005373": [], "011762": [], "005491": [], "011773": [], "005343": [], "011771": [], "005508": [], "0x7f7f1ab41900": [], "0x7f7f1ab419c0": [], "0x7f7f1a307040": [], "555": [], "0x7f7f1ab41090": [], "021678": [], "021481": [], "008005": [], "021421": [], "008043": [], "021585": [], "021387": [], "008049": [], "004611": [], "002216": [], "004161": [], "002154": [], "002153": [], "0x7f7f1f16e680": [], "0x7f7f3cf4ab00": [], "0x7f7f3cf52230": [], "392": [], "023907": [], "022962": [], "006744": [], "022931": [], "006557": [], "022816": [], "006620": [], "022823": [], "006732": [], "0x7f7f19e35930": [], "0x7f7f19e37910": [], "005593": [], "005610": [], "005731": [], "003671": [], "005640": [], "003628": [], "624": 130, "075": [], "077": [], "078": 109, "527": [], "529": 139, "0x7f7f19c564d0": [], "0x7f7f197ae6b0": [], "0x7f7f197ac970": [], "0x7f7f197afdc0": [], "0x7f7f19e023b0": [], "0x7f7f1a985180": [], "0x7f7f19c72e00": [], "009716": [], "008483": [], "003186": [], "008957": [], "003187": [], "008826": [], "003165": [], "008755": [], "003147": [], "004872": [], "004493": [], "004405": 88, "004425": [], "004533": [], "004378": [], "004563": [], "004319": [], "002445": [], "004345": [], "003973": [], "004361": [], "003794": [], "003868": [], "003785": [], "003788": [], "003793": [], "003768": [], "001678": [], "001643": [], "002708": [], "001601": [], "002727": [], "001607": [], "001571": [], "622": 130, "005578": [], "005285": [], "005415": [], "005282": [], "005450": [], "003123": [], "003306": [], "006172": [], "003933": [], "005573": [], "003046": [], "005338": [], "003075": [], "016094": [], "006694": [], "015606": [], "006738": [], "015814": [], "006698": [], "015557": [], "006656": [], "015768": [], "006652": [], "polar": [7, 46, 47, 48, 49, 50, 51, 52], "post1": [], "dev21": [], "813": [], "_valid": [], "73": [], "004952": [], "004497": [], "002660": [], "004456": 140, "002550": [], "004471": [], "002521": [], "002728": [], "tmpu80_b84v": [], "2e30b6e0eaeae095c39a3a68c315c7535b10aea9": [], "004923": [], "004387": [], "004359": [], "0x7fecc237d270": [], "2458": [], "391": 93, "328": 139, "329": [96, 97, 139], "002386": [], "002377": [], "004305": 102, "002613": [], "005709": [], "002843": [], "0x7fecc1d21810": [], "0x7fecc1d8b250": [], "390": [], "003981": [], "002180": [], "004097": [], "002207": [], "003931": [], "0x7fecc1decaf0": [], "013715": [], "005825": [], "012791": [], "005855": [], "012915": [], "005766": [], "012731": [], "012781": [], "0x7fecc1f23a00": [], "0x7fecc1f23970": [], "203": 133, "0x7fecc1e9dd50": [], "0x7fecc21d48b0": [], "022514": [], "010690": [], "022798": [], "008836": [], "022989": [], "008530": [], "023710": [], "008603": [], "022472": [], "008469": [], "004643": [], "002257": [], "004475": [], "002235": [], "002223": [], "712": [], "713": [], "0x7fecc77e9360": [], "0x7fece9222b90": [], "0x7fece922e5f0": [], "024242": [], "023331": [], "006956": [], "023449": [], "006827": [], "023320": [], "006862": [], "023826": [], "006934": [], "0x7fecc1ba1cc0": [], "0x7fecc1d35e10": [], "005772": [], "003753": [], "005756": [], "005698": [], "003736": [], "005830": [], "003710": [], "0x7fecc1e159f0": [], "0x7fecc1d8b130": [], "0x7fecc1d8b3d0": [], "0x7fecc21aaf80": [], "0x7fecc1ba2b00": [], "0x7fecc1bbad70": [], "0x7fecc2637a30": [], "009912": [], "003343": [], "008687": [], "003237": [], "009151": [], "008944": [], "003196": 141, "008983": [], "029499": 139, "977110": 139, "084010": 139, "306544": 139, "919632": 139, "005114": [], "004548": [], "002447": [], "004523": [], "004542": [], "002427": [], "364": [], "004759": [], "004508": 140, "002423": [], "004457": [], "002456": 141, "004849": [], "004593": [], "002520": [], "004845": [], "002486": 140, "004639": [], "002508": [], "nbsp": 140, "pipelineifittedpipelin": 140, "004791": [], "002431": 141, "004499": [], "004462": [], "neg_root_mean_squared_log_error": 140, "004618": [], "003993": [], "003913": [], "003909": [], "003897": [], "003943": [], "003918": [], "003905": [], "003208": [], "001822": [], "002894": [], "001646": [], "002824": [], "002835": [], "002714": [], "001632": [], "004706": [], "002429": 102, "002433": [], "004623": [], "004434": [], "005819": [], "005702": [], "005543": [], "003174": [], "005564": [], "003190": [], "005639": [], "003177": 141, "005635": [], "003175": [], "005612": [], "003209": [], "017310": [], "007522": [], "017276": [], "007345": [], "016864": [], "007283": [], "016881": [], "007315": [], "017165": [], "007360": [], "dev24": [], "004889": [], "002651": [], "004534": [], "002624": [], "004633": [], "002621": [], "002600": [], "tmpc24z3no1": [], "08dde702168d8353d5c4904cf06762ef906d64e": [], "004961": [], "004389": [], "002292": [], "0x7fdaccd796f0": [], "437": [], "623": 130, "127": 134, "004800": [], "002491": [], "002412": [], "002419": 102, "004418": [], "002476": [], "002466": 140, "002464": [], "004380": [102, 141], "002454": [], "0x7fdad3c042e0": [], "0x7fdacd21c940": [], "004112": [], "004034": [], "003992": [], "002236": 117, "505": [], "0x7fdacc7c14b0": [], "013614": [], "012943": [], "005957": [], "013193": [], "005888": [], "013221": [], "006012": [], "013484": [], "006091": [], "0x7fdacf7f8c40": [], "0x7fdacf7f8f70": [], "0x7fdacd3c7820": [], "0x7fdacd3c5ae0": [], "022809": [], "008506": [], "027137": [], "008872": [], "025200": [], "009709": [], "024055": [], "009382": [], "023276": [], "008520": [], "004632": [], "004420": 88, "941": 128, "0x7fdad450d480": [], "0x7fdaf5f3ed40": [], "0x7fdaf5f50670": [], "024634": [], "007000": [], "023741": [], "006941": [], "024270": [], "006926": [], "024003": [], "007084": [], "024462": [], "007086": [], "0x7fdacc43ac50": [], "0x7fdacc45d840": [], "005993": [], "003810": [], "005790": [], "003827": [], "005805": [], "003816": [], "005894": [], "005788": [], "0x7fdaccd9f940": [], "0x7fdacc46c370": [], "0x7fdacc46cd00": [], "0x7fdacc46d330": [], "0x7fdacc7e0940": [], "0x7fdacc6da1a0": [], "0x7fdacc6d9ff0": [], "009713": [], "003417": [], "008941": [], "003342": [], "008959": [], "003259": [], "008783": [], "008764": [], "003330": [], "005142": [], "002516": [], "004654": [], "004550": [], "002475": [], "004547": [], "002490": [], "002477": [], "004537": [], "002478": [], "004551": 141, "004749": [], "004576": [], "002489": [], "004720": [], "002503": [], "004568": [], "004565": [], "002530": [], "004993": [], "002522": [], "004562": [], "002468": [], "004598": [], "004580": [], "004601": [], "002444": [102, 140], "004575": [], "004594": [], "002446": 140, "004591": [], "004595": [], "004780": [], "004090": [], "003999": [], "004002": 140, "004622": [], "004063": [], "004086": [], "004003": [], "004018": [], "004032": [], "004630": [], "004054": [], "004053": [], "003150": [], "001806": [], "002901": [], "001690": [], "002790": [], "002849": [], "001683": [], "002735": [], "001695": [], "004709": [], "002471": [], "004524": [], "004459": [], "004637": [], "006042": [], "003290": [], "005618": [], "005659": [], "003261": [], "005699": [], "003245": [], "005796": [], "003367": [], "005865": [], "003298": [], "005710": [], "003278": [], "005759": [], "003287": [], "005749": [], "003252": [], "018129": [], "007479": [], "017345": [], "007464": [], "016987": [], "007411": [], "017203": [], "007388": [], "017149": [], "007520": [], "bayesian": [2, 36, 65, 104, 111, 130], "params_attr": 25, "bay": [36, 37, 109, 124, 130, 142], "dev57": [], "005056": [], "004513": [], "002574": [], "002538": [], "002512": [], "tmpixoh8x_o": [], "239c2c40d7fceb1b2e1c50e50e8636c118790cc1": [], "004942": [], "004452": [], "002263": [], "0x7fe306626b30": [], "833": [], "004847": [], "002451": [], "005829": [], "004579": [], "004288": [], "002415": [], "004314": [], "004331": [], "002436": [], "004280": [], "002389": [], "0x7fe3066f5ae0": [], "479": [], "0x7fe306b0a740": [], "002245": 117, "004056": [], "002175": [], "003975": [], "002162": [], "003942": [], "0x7fe3064b83a0": [], "013603": [], "005783": [], "012702": [], "005746": 128, "012927": 106, "005757": [], "012586": [], "005704": [], "012766": [], "005765": [], "650": [], "651": [], "hyperparamt": 109, "1e3": 109, "1e1": 109, "n_iter": [109, 130], "1000": [109, 132], "6203007518796992": [], "ordereddict": [109, 130], "62585277239563": [], "909675645518994": [], "run_hyperparameter_tuning_bayessearch": [109, 111], "0x7fe3064b9480": [], "0x7fe3064b9030": [], "0x7fe30629c040": [], "0x7fe30629ecb0": [], "022632": [], "008376": [], "022496": [], "008399": [], "022337": [], "008374": [], "022584": [], "008360": [], "022354": [], "008425": [], "004586": [], "002228": [], "002233": [], "newer": 124, "unmaintain": 124, "skopt": [124, 130], "bayessearchcv": [36, 37, 124, 130, 142], "0x7fe30c0d8dc0": [], "0x7fe32db4ad40": [], "0x7fe32db5c8f0": [], "024275": [], "006866": [], "023473": [], "023477": [], "006816": [], "023190": [], "006679": [], "023148": [], "006867": [], "0x7fe306075000": [], "0x7fe306076740": [], "005847": [], "005736": [], "003755": [], "005719": [], "003731": [], "005799": [], "005723": [], "003763": [], "_grid_": 130, "constraint": 130, "prior": [109, 130], "77140446796582": [], "022636153281629743": [], "accept": 130, "9099999999999999": 130, "8975984906619887": [], "028707916525659204": [], "0x7fe306c92f20": [], "454": [], "0x7fe3069912a0": [], "0x7fe306990ac0": [], "0x7fe306990400": [], "0x7fe3063eceb0": [], "0x7fe3069915a0": [], "0x7fe3064197e0": [], "009789": [], "003202": [], "008546": [], "003155": [], "009091": [], "008926": [], "008935": [], "786": [], "787": [], "005070": [], "004645": [], "002428": 140, "004673": [], "004416": [], "002388": 102, "004461": [], "004509": [], "004670": [], "004025": 140, "003972": [], "004761": [], "003925": [], "004546": [], "003927": [], "001704": [], "002838": [], "002770": [], "001677": [], "002817": [], "001676": [], "002749": [], "001653": [], "004538": [], "004571": [], "005979": [], "003374": [], "005755": [], "005662": [], "005590": [], "003193": [], "005637": [], "005724": [], "005481": [], "005466": [], "005504": 141, "017416": [], "007382": [], "016899": [], "007221": [], "016704": [], "007205": [], "016822": [], "007252": [], "016716": [], "007177": [], "dev61": [], "004970": [], "002620": [], "004659": [], "002578": [], "004467": [], "002560": [], "004458": 140, "002755": [], "tmp1ujwkgb2": [], "dbdbbfc14f3144ed54ef9c5fc5e6a6c677996639": [], "004974": [], "0x7f3c2f93ab60": [], "915": [], "004442": 140, "002411": 140, "002576": [], "002391": 102, "002421": [], "0x7f3c2f5d3520": [], "0x7f3c2f6685b0": [], "004764": [], "002836": [], "004698": [], "004481": [], "004007": [], "002191": [], "0x7f3c2f27f880": [], "013696": [], "005987": [], "012803": [], "005813": [], "014671": [], "005988": [], "013537": [], "005943": [], "013086": [], "005867": [], "0x7f3c2f27fd30": [], "0x7f3c2f27f6d0": [], "0x7f3c2fb002b0": [], "0x7f3c2fb00220": [], "022970": [], "008559": [], "022451": [], "008395": [], "022563": [], "008337": [], "022768": [], "008403": [], "022315": [], "008420": [], "004660": [], "002237": [], "004327": [], "002258": [], "0x7f3c3509cdc0": [], "0x7f3c56b5ad40": [], "0x7f3c56b6cd30": [], "007079": [], "024928": [], "007144": [], "024803": [], "007062": [], "024911": [], "007154": [], "024057": [], "007115": [], "0x7f3c2f1ab760": [], "0x7f3c2f015630": [], "006134": [], "005946": [], "005890": [], "006020": [], "003965": [], "006036": [], "0x7f3c2f30fd90": [], "0x7f3c2efde020": [], "0x7f3c2efdf9a0": [], "0x7f3c2efdee00": [], "0x7f3c2f588bb0": [], "0x7f3c2efef0a0": [], "0x7f3c2f588130": [], "009890": [], "003254": [], "008669": [], "003216": [], "009220": [], "003168": [], "009032": [], "003173": [], "009048": [], "003182": [], "005197": [], "002571": [], "002465": 140, "004893": [], "002517": [], "004697": [], "004679": [], "004719": [], "004950": [], "004844": [], "002504": [], "004883": [], "004694": [], "004688": [], "004699": [], "004693": [], "004638": [], "002546": [], "004739": [], "004716": [], "004684": [], "002498": [], "005200": [], "004674": [], "004690": [], "004017": [], "004685": [], "003982": [], "004644": [], "004776": [], "004044": [], "003977": [], "004000": 140, "004918": [], "004077": [], "004747": [], "003969": [], "003244": [], "001711": [], "002885": [], "001706": [], "002789": [], "001679": [], "002893": [], "001667": [], "002785": [], "004812": [], "004536": [], "004490": [], "002479": [], "002505": [], "006057": [], "003258": [], "005761": [], "003220": [], "005801": [], "006123": [], "003299": [], "005995": [], "003269": [], "005840": [], "003230": [], "018349": [], "007506": [], "017389": [], "007482": [], "017434": [], "007410": [], "017572": [], "017690": [], "007364": [], "optuna": [36, 37, 124, 130, 142], "optunasearchcv": [36, 37, 124, 130, 142], "register_search": [36, 37], "dev78": [], "005464": [], "002961": [], "004959": [], "002907": [], "004976": [], "002921": [], "004966": [], "002904": [], "004957": [], "002876": [], "tmp48xnsgm5": [], "130b4c867e64371aac71a46309d70616822bb92c": [], "005177": [], "002525": [], "004603": [], "0x7f549547d2d0": [], "043": 107, "044": [96, 107], "005103": [], "002545": [], "004454": 140, "002488": [], "002734": [], "004500": [], "0x7f5497bee170": [], "0x7f549541a230": [], "002249": [], "002274": [], "004064": [], "002243": [], "004030": [], "0x7f5499121480": [], "013880": [], "006051": [], "012946": [], "013015": [], "005934": [], "012983": [], "005972": [], "013083": [], "005892": [], "0x7f549534a980": [], "0x7f549534ad40": [], "0x7f54990aae90": [], "0x7f54953dbf70": [], "022715": [], "008492": [], "022858": [], "008513": [], "022564": [], "008464": [], "022694": [], "008502": [], "022662": [], "008460": [], "004939": [], "004516": [], "0x7f549e0dd000": [], "0x7f54bfbced40": [], "0x7f54bfbdd0f0": [], "024855": [], "006943": [], "023625": [], "006923": [], "006915": [], "023538": [], "007097": [], "023771": [], "007049": [], "0x7f549523b220": [], "0x7f5495238070": [], "005927": [], "003853": [], "005864": [], "003817": [], "005810": [], "003836": [], "005906": [], "006177": [], "framework": 130, "shown": 130, "exemplarili": 130, "balanc": 130, "svm__class_weight": [130, 133], "trial": 130, "create_studi": 130, "maxim": 130, "study_nam": 130, "load_if_exist": 130, "0x7f54859ffb20": [], "1041": [], "experimentalwarn": 130, "v0": 130, "new_object": 130, "new_object_param": 130, "9400000000000001": 130, "7051874114555626": [], "013927802622730131": [], "toolbox": 130, "zscore__with_mean": [130, 133], "categoricaldistribut": 130, "floatdistribut": 130, "intdistribut": 130, "0x7f549514d6f0": [], "0x7f54954458a0": [], "0x7f5495445a20": [], "0x7f5495348c10": [], "0x7f5495095900": [], "0x7f5495349270": [], "0x7f54954d2a10": [], "010188": [], "003302": [], "009212": [], "003217": [], "009043": [], "003197": [], "009171": [], "005167": [], "002587": [], "004695": [], "002570": [], "002496": [], "002511": [], "004712": [], "002455": [], "004541": [], "004517": [], "004884": [], "002467": [], "004615": [], "004553": [], "002473": [], "004741": [], "004106": [], "004545": [], "004079": [], "004631": [], "004038": [], "004590": [], "004051": [], "004616": [], "004035": [], "004641": [], "004626": [], "004582": [], "004070": [], "004084": [], "003372": [], "001845": [], "002925": [], "001735": [], "002822": [], "002881": [], "001700": [], "002794": [], "001673": [], "004758": [], "004683": 140, "002542": [], "004686": [], "002523": [], "005940": [], "003285": [], "003289": [], "005650": [], "005708": [], "003310": [], "003277": [], "005780": 141, "003283": [], "005807": [], "003219": [], "005689": [], "003317": [], "004137": [], "017628": [], "017115": [], "007456": [], "017270": [], "007625": [], "017662": [], "017467": [], "007474": [], "dev4": [], "005051": [], "002689": [], "002635": [], "004588": [], "002615": [], "004488": [], "002599": [], "tmp0ov61jai": [], "215a773cf07102509cf52165021b8c4297f9e888": [], "005083": [], "004574": [], "0x7f764c266680": [], "004891": [], "002448": [], "002442": [], "002577": [], "002492": [], "002449": [], "0x7f764c83f790": [], "0x7f764c12a770": [], "004144": [], "003985": [], "0x7f764bd62dd0": [], "013960": [], "005951": 106, "013029": [], "006070": [], "013400": [], "005873": [], "012785": [], "005841": 128, "013022": [], "0x7f764c5c0a90": [], "0x7f764c5c2170": [], "0x7f764c9bad40": [], "0x7f764c9bb130": [], "022820": [], "008505": [], "022832": [], "008423": [], "022434": [], "008366": [], "022408": [], "008368": [], "022206": [], "008355": [], "004752": [], "002293": [], "002282": 117, "optuna_integr": 124, "0x7f7651f1dbd0": [], "0x7f766fd7b910": [], "0x7f766fd9c130": [], "024913": [], "006991": [], "023580": [], "006936": [], "023705": [], "006846": [], "023516": [], "006832": [], "023452": [], "006942": [], "0x7f764bca3730": [], "0x7f764c20f190": [], "005762": [], "003770": [], "005896": [], "005777": [], "0x7f7649676d10": [], "9299999999999999": 130, "7132948101954109": [], "005760963091525674": [], "0x7f764c0e8070": [], "0x7f764bcf5b10": [], "0x7f764bc99990": [], "0x7f764bff4280": [], "0x7f764bff67a0": [], "0x7f764bec6bc0": [], "0x7f764c2bc2e0": [], "009979": [], "003255": [], "008667": [], "009199": [], "003241": [], "009228": [], "005262": [], "002573": 135, "004653": [], "004726": [], "004530": [], "002441": [102, 140], "004525": [], "004771": [], "004514": [], "004502": [], "004085": [], "004125": [], "004656": [], "004661": [], "004040": [], "003978": [], "004584": [], "003940": [], "004023": [], "003207": 105, "001726": [], "002892": [], "001721": [], "001696": [], "002896": [], "002771": [], "004578": [], "003335": [], "005812": [], "003303": [], "003256": [], "005613": [], "003228": 141, "005863": [], "005643": [], "003239": [], "005664": [], "003194": [], "017661": [], "007366": [], "017387": [], "007361": [], "016880": [], "007332": [], "016972": [], "007294": [], "016954": [], "007296": [], "hyperparemt": 142, "hyperparmet": 142, "action": 142, "mark": 142, "stale": 142, "lazi": 142, "fixtur": 142, "005641": [], "002926": [], "002711": [], "005180": [], "002745": [], "002787": [], "004969": [], "002726": [], "tmpb294bj9m": [], "242982e60c7334d9cd612ff37cd36349f60a5b25": [], "005015": [], "0x7ff2c80e6da0": [], "005237": [], "002594": [], "004676": [], "002650": [], "004854": [], "004821": [], "002509": [], "002501": [], "004573": [], "005011": [], "002603": [], "004715": [], "002483": [], "004592": [], "0x7ff2c82435e0": [], "0x7ff2c7d51300": [], "210": [], "0x7ff2c817da50": [], "014696": [], "006073": [], "013764": [], "006082": [], "013638": [], "006184": [], "013828": [], "006068": [], "013677": [], "006064": [], "042": [], "0x7ff2c7e7a200": [], "0x7ff2c7e784f0": [], "0x7ff2c8847ac0": [], "0x7ff2c8231ab0": [], "024534": [], "008960": [], "024921": [], "009236": [], "024530": [], "009299": [], "025229": [], "009402": [], "025688": [], "009150": [], "005068": [], "004723": [], "004713": [], "0x7ff2cdd85bd0": [], "0x7ff2edd67910": [], "0x7ff2edd73e30": [], "025367": [], "024343": [], "007077": [], "024738": [], "007192": [], "024525": [], "007191": [], "024790": [], "007472": [], "0x7ff2c7ba7eb0": [], "0x7ff2c7b6a1a0": [], "006357": [], "003899": [], "006014": [], "005871": [], "005986": [], "005809": [], "003747": [], "0x7ff2c7dca290": [], "0593748500392722": [], "07262925360645738": [], "0x7ff2c83a7d30": [], "0x7ff2c829de70": [], "0x7ff2c82432b0": [], "0x7ff2c829d690": [], "0x7ff2c7b95e70": [], "0x7ff2c829f430": [], "0x7ff2c8760a00": [], "010403": [], "003734": [], "009149": [], "003348": [], "009472": [], "003474": [], "009282": [], "003318": [], "009403": [], "effici": 136, "002641": [], "004731": [], "004543": [], "005328": [], "002860": [], "004856": [], "002469": [], "004667": [], "004624": [], "004853": [], "004583": [], "004710": [], "004535": [], "005093": [], "002561": [], "004602": [], "002437": [102, 140], "002430": 140, "004599": [], "004882": [], "004031": [], "003911": [], "004802": [], "003984": [], "003934": [], "004646": [], "003947": [], "003986": [], "001737": [], "002884": [], "001744": [], "002804": [], "001651": [], "002923": [], "002801": [], "001627": [], "005028": [], "004642": [], "004464": [], "005849": [], "003183": [], "005611": [], "003153": [], "005530": [], "003181": [], "005688": [], "005958": 106, "005715": [], "003180": [], "005553": 141, "003200": [], "005538": [], "005544": [], "017827": [], "007339": [], "017509": [], "007399": [], "016958": [], "007355": [], "017510": [], "007568": [], "017495": [], "007484": [], "dev18": [], "004965": [], "002691": [], "004604": [], "002649": [], "004469": [89, 140], "tmprmlbtji7": [], "186c063d8513b83e8d4130c354d05a8630b5ba5d": [], "004830": [], "0x7fc2268744f0": [], "004861": [], "004561": [], "002425": [], "002642": [], "0x7fc2262e6a40": [], "0x7fc227286110": [], "004012": [], "002242": [], "004026": [], "0x7fc226b46920": [], "013769": [], "005959": [], "012892": [], "013000": [], "005980": [], "012908": [], "005879": [], "012923": [], "005909": [], "0x7fc2269d1f60": [], "0x7fc2269d1f30": [], "0x7fc226328730": [], "0x7fc22634b220": [], "022627": [], "008527": [], "022419": [], "008499": [], "022343": [], "008431": [], "022586": [], "022345": [], "008459": [], "004806": [], "0x7fc22c2eb640": [], "0x7fc24a17f910": [], "0x7fc24a19c2f0": [], "024220": [], "006968": [], "023496": [], "006909": [], "023669": [], "006879": [], "023369": [], "006914": [], "023614": [], "0x7fc2262e5330": [], "0x7fc2262e4460": [], "003800": [], "003791": [], "005903": [], "003813": [], "0x7fc225b21b10": [], "74": 133, "2417627018563466": [], "05926827334724916": [], "0x7fc226750a60": [], "0x7fc22654da20": [], "0x7fc22654ea10": [], "0x7fc22654d9f0": [], "0x7fc22654c160": [], "0x7fc226055c60": [], "0x7fc226a1f970": [], "009885": [], "003250": [], "008652": [], "003184": [], "009079": [], "003163": [], "009071": [], "005072": [], "002458": 140, "004954": [], "004672": [], "002459": 140, "004794": [], "004539": [], "004052": [], "004531": 140, "004554": [], "004001": [], "003974": [], "003966": [], "001796": [], "002913": [], "001708": [], "002807": [], "001691": [], "002833": [], "002908": [], "001807": [], "004852": [], "004566": [], "005557": [], "005625": [], "003352": [], "005559": [], "003203": [], "005690": [], "003227": [], "005808": [], "003243": 141, "005632": [], "005653": [], "005572": [], "003218": [], "017483": [], "007461": [], "017083": [], "007369": [], "016843": [], "007379": [], "017082": [], "016984": [], "004837": [], "002655": [], "002572": [], "004521": [], "002528": [], "tmpu1b8jdt9": [], "be6a63ba20db29cf05fd718db2c1799c1936a150": [], "004705": [], "004285": [], "0x7fa6c132f580": [], "002402": [], "004247": [], "002398": [], "0x7fa6c1132470": [], "0x7fa6c3837f40": [], "002217": [], "003994": [], "0x7fa6c0b3f9d0": [], "013385": [], "005775": [], "012593": [], "012668": [], "012655": [], "006592": [], "012707": [], "005735": [], "0x7fa6c0d58820": [], "0x7fa6c0d58970": [], "0x7fa6c0b19210": [], "0x7fa6c0b19d80": [], "022262": [], "008357": [], "024267": 128, "021919": [], "008375": [], "022286": [], "008321": [], "022045": [], "008294": [], "002248": [], "004283": 102, "002219": [], "004226": [], "0x7fa6c8ce12d0": [], "0x7fa6ead5d5a0": [], "0x7fa6ead600b0": [], "024071": [], "006764": [], "023101": [], "006845": [], "023188": [], "006813": [], "023022": [], "006800": [], "023103": [], "006954": [], "0x7fa6c0e26b90": [], "0x7fa6c352a9e0": [], "003732": [], "005675": [], "005648": [], "003698": [], "0x7fa6a6b7ece0": [], "1045": [], "67": [], "2281920324547159": [], "00955134189284558": [], "pca__n_compon": 130, "0x7fa6c0d59c90": [], "0x7fa6c0cfefb0": [], "0x7fa6c0cff520": [], "0x7fa6c0cfd150": [], "0x7fa6c0abb040": [], "0x7fa6c0e271c0": [], "0x7fa6c0e09ae0": [], "009739": [], "003132": [], "008919": [], "008994": [], "003131": [], "004453": [], "002420": [], "002584": 88, "004769": [], "002569": [], "003970": [], "003929": [], "003956": [], "004532": [], "003990": [], "003935": [], "004498": [], "003094": [], "001758": 141, "002744": [], "001670": [], "002712": [], "001611": [], "002783": [], "001639": 141, "001618": [], "005846": [], "003229": [], "005480": [], "005546": [], "003167": [], "005528": [], "003191": [], "005560": [], "003192": [], "005506": [], "005554": [], "003166": [], "017263": [], "007243": [], "016886": [], "007321": [], "016612": [], "007225": [], "016741": [], "007194": [], "016648": [], "007251": [], "integr": 142, "dant": 142, "culaciati": 142, "004832": [], "002529": [], "002536": [], "002548": [], "tmpwmbiq5zr": [], "b79dc2531186adebfb0304ff5b92c86f73afd8cd": [], "005055": [], "002375": [], "004367": [], "0x7f2f375d77f0": [], "004725": [], "005018": [], "003102": [], "005104": [], "004372": 117, "0x7f2f3702b580": [], "0x7f2f397c3880": [], "004081": [], "002222": [], "002232": [], "004005": [], "0x7f2f36ff1810": [], "013654": [], "005831": 141, "012772": [], "005838": [], "012843": [], "005853": [], "012723": [], "005859": [], "012810": [], "005827": [], "0x7f2f3733d930": [], "0x7f2f3733c250": [], "0x7f2f370d3ca0": [], "205": [], "0x7f2f397c0040": [], "022648": [], "008497": [], "022422": [], "008373": [], "022231": [], "008406": [], "022314": [], "008382": [], "022448": [], "008486": [], "004838": [], "0x7f2f3ef5feb0": [], "0x7f2f60f595a0": [], "0x7f2f60f5c170": [], "024297": [], "006858": [], "023329": [], "023475": [], "023372": [], "023478": [], "006927": [], "0x7f2f370e8d30": [], "0x7f2f370eab60": [], "003802": [], "005789": [], "005741": [], "003780": 128, "003790": [], "005732": [], "0x7f2f36525a80": [], "9565561024151643": [], "02657141385459879": [], "0x7f2f37313190": [], "0x7f2f36f47b50": [], "0x7f2f36f46e90": [], "0x7f2f36f47e50": [], "0x7f2f37272dd0": [], "0x7f2f36d114b0": [], "0x7f2f36e8ee90": [], "009970": [], "003314": [], "008701": [], "009154": [], "008909": [], "003162": [], "009007": [], "005027": [], "002500": [], "004564": [], "004476": [], "002544": [], "004597": [], "004822": [], "002533": [], "004605": [], "004717": [], "004071": 140, "004015": [], "002826": [], "001684": [], "002853": [], "001649": [], "002766": [], "001625": [], "004669": [], "004704": [], "005907": [], "005661": [], "003296": [], "005507": [], "005541": [], "005519": [], "005674": [], "005494": [], "005512": 141, "017225": [], "007236": [], "016848": [], "007312": [], "016955": [], "007402": [], "017075": [], "007308": [], "016893": [], "007384": [], "dev19": [], "004947": [], "002673": [], "002608": [], "tmpouox8o10": [], "eb7207f8885ad7f95c706af5bd833fef3c099909": [], "005147": [], "004629": [], "004340": [], "0x7f23b0c47580": [], "004894": [], "004421": [], "002514": [], "002497": [], "0x7f23b0ba6fe0": [], "0x7f23b09dead0": [], "004059": [], "002224": [], "002189": [], "0x7f23b11f6b90": [], "015183": [], "006078": [], "013080": [], "014600": [], "008251": [], "013783": [], "012970": [], "006022": [], "0x7f23b0b4d420": [], "0x7f23b0b4d480": [], "0x7f23b09139a0": [], "0x7f23b09cb460": [], "022769": [], "008488": [], "022414": [], "008441": [], "022349": [], "008615": [], "022540": [], "022428": [], "004658": [], "002252": [], "002246": [], "0x7f23b6930d30": [], "0x7f23d8e59990": [], "0x7f23d8e5c2f0": [], "024688": [], "006961": [], "023602": [], "006891": [], "023808": [], "006847": [], "023555": [], "006838": [], "023505": [], "006966": [], "0x7f23b0bdaa40": [], "0x7f23b0b4d1e0": [], "005922": [], "003822": [], "003782": [], "005806": [], "003792": [], "0x7f23b1311090": [], "2611679869694559": [], "03786423126692273": [], "0x7f23b0729e70": [], "0x7f23b08d1f60": [], "0x7f23b08d1a50": [], "0x7f23b08d2320": [], "0x7f23b0a176d0": [], "0x7f23b08d1660": [], "0x7f23b0ce9480": [], "009972": [], "003272": [], "008621": [], "003223": [], "009200": [], "008997": [], "003210": [], "009001": [], "005075": [], "004492": [], "002510": [], "004617": [], "002481": [], "004647": [], "004702": [], "004572": [], "004634": [], "002541": [], "004628": [], "004807": [], "004076": [], "004068": [], "003997": [], "004559": [], "003998": [], "004114": [], "001742": [], "002889": [], "002819": [], "002800": [], "001647": [], "002777": [], "004746": [], "005978": [], "005651": [], "003221": [], "003199": 141, "005623": [], "005680": [], "005926": [], "005742": [], "003231": [], "005563": [], "017714": [], "007371": [], "019408": [], "007406": [], "016963": [], "007324": [], "017118": [], "007394": [], "016989": [], "dev25": [], "incl": [88, 89, 90, 92, 99, 100, 101, 102, 105, 106, 107, 108, 109, 114, 117, 127, 130, 133, 134, 140], "005064": [], "004696": [], "002634": [], "004610": [], "002657": [], "002606": [], "tmpgck637vb": [], "eac0462bbaf682cdb20fa67585b3c8454d928275": [], "005196": [], "0x7f715581b910": [], "004943": [], "002494": [], "004466": [], "0x7f71556c0130": [], "0x7f71558abe80": [], "004127": [], "002266": [], "004165": [], "0x7f71558a98d0": [], "014030": [], "006023": [], "013175": [], "013191": [], "013062": [], "006004": [], "013322": [], "0x7f71558a9540": [], "0x7f71558abb20": [], "0x7f71555fb610": [], "0x7f715552cc70": [], "023037": [], "023048": [], "008577": [], "022886": [], "008472": [], "022853": [], "008526": [], "023183": [], "008587": [], "004881": [], "0x7f715b494d30": [], "0x7f717da55990": [], "0x7f717da58670": [], "024850": [], "007055": [], "023931": [], "007024": [], "024135": [], "006996": [], "024048": [], "006982": [], "023976": [], "007120": [], "0x7f71551df430": [], "0x7f71558c4970": [], "006011": [], "003849": [], "003858": [], "0x7f71549d3ca0": [], "90500927776679": [], "0020374489185026813": [], "0x7f71564f3850": [], "0x7f715520e1d0": [], "0x7f715520ff10": [], "0x7f715520c370": [], "0x7f71551dfe50": [], "0x7f71552286d0": [], "0x7f71556c2770": [], "010191": [], "003376": [], "008834": [], "009310": [], "009166": [], "009141": [], "005152": [], "004700": [], "004711": [], "004815": [], "004558": [], "004121": [], "004078": [], "004088": [], "002813": [], "001694": [], "002809": [], "004501": 140, "006162": [], "003300": [], "005687": [], "003236": [], "003249": [], "005897": [], "003281": [], "005781": [], "005671": [], "017805": [], "007444": [], "017323": [], "007458": [], "017080": [], "007533": [], "017272": [], "017266": [], "007329": [], "66": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 133, 134], "__version__": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 133, 134], "markupsaf": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 133, 134], "importlib": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 133, 134], "vstring": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 133, 134], "getattr": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 133, 134], "dev34": [], "002558": [], "002526": [], "tmph4j81mjt": [], "36fb37a4a307e9d806aecaf4899be06a53b1c385": [], "004986": [], "002256": [], "0x7f13d5e65e40": [], "pca0": 101, "078319": 101, "336101": 101, "756861": 101, "596518": 101, "191895": 101, "451629": 101, "750820": 101, "958497": 101, "121426": 101, "599419": 101, "175061": 101, "081051": 101, "586593": 101, "325382": 101, "011121": 101, "024891": 101, "478725": 101, "788625": 101, "893666": 101, "435353": 101, "666996": 101, "872214": 101, "234740": 101, "091986": 101, "776631": 101, "011287": 101, "156690": 101, "218469": 101, "038198": 101, "686765": 101, "440892e": 101, "330669e": 101, "380315e": 101, "797736e": 101, "234239e": 101, "852417e": 101, "788377e": 101, "233997e": 101, "914360e": 101, "468533e": 101, "179658e": 101, "725389e": 101, "004293": [], "0x7f13d5e7aaa0": [], "0x7f13d598f6a0": [], "003404": [], "001590": [], "003170": [], "001555": [], "001585": [], "003607": [], "0x7f13d5be1420": [], "013796": [], "015270": [], "008467": [], "012945": [], "005842": [], "012786": [], "006130": [], "005792": [], "0x7f13d5b86f80": [], "0x7f13d5b85750": [], "0x7f13d5d41240": [], "0x7f13d60aa1a0": [], "026450": [], "007810": [], "021608": [], "010840": [], "023245": [], "007733": [], "023067": [], "007752": [], "021550": [], "007721": [], "002247": [], "enable_parallel_column_transform": 120, "revert": 120, "expect": 120, "0x7f13dbaff640": [], "0x7f13fe79dfc0": [], "0x7f13fe78f470": [], "024294": [], "006799": 141, "006839": [], "023520": [], "023125": [], "006790": [], "023134": [], "006875": [], "0x7f13d5692440": [], "0x7f13d5692740": [], "007214": [], "005744": [], "003866": [], "005760": [], "003764": [], "005811": [], "0x7f13d52bfa30": [], "1079": 130, "3784412169186804": [], "020431354865954782": [], "set_column_types__x_typ": 133, "set_column_types__row_select_col_typ": 133, "set_column_types__row_select_v": 133, "svm__break_ti": 133, "svm__cache_s": 133, "svm__class_weight_": 133, "svm__classes_": 133, "svm__coef0": 133, "svm__decision_function_shap": 133, "svm__degre": 133, "svm__dual_coef_": 133, "00262819": 133, "00212021": 133, "00050798": 133, "svm__feature_names_in_": 133, "svm__fit_status_": 133, "svm__intercept_": 133, "14861904": 133, "svm__max_it": 133, "svm__n_features_in_": 133, "svm__n_iter_": 133, "int32": 133, "svm__random_st": 133, "svm__shape_fit_": 133, "svm__shrink": 133, "svm__support_": 133, "65": 133, "68": 133, "72": 133, "svm__support_vectors_": 133, "17599741e": 133, "80569048e": 133, "07712013e": 133, "20879423e": 133, "21535409e": 133, "15375421e": 133, "77937129e": 133, "19014647e": 133, "66928561e": 133, "78147812e": 133, "01033730e": 133, "69390589e": 133, "42500021e": 133, "11361240e": 133, "81947379e": 133, "09081365e": 133, "78632059e": 133, "77664795e": 133, "21265189e": 133, "12669373e": 133, "79116307e": 133, "41110883e": 133, "38889568e": 133, "16525470e": 133, "16018504e": 133, "74104576e": 133, "27572658e": 133, "78209462e": 133, "58117585e": 133, "98317342e": 133, "81053295e": 133, "20493657e": 133, "97191363e": 133, "02693719e": 133, "44785351e": 133, "01419496e": 133, "87194087e": 133, "27905689e": 133, "15738023e": 133, "47646162e": 133, "79782108e": 133, "44240684e": 133, "40725117e": 133, "25391889e": 133, "66283346e": 133, "01054424e": 133, "80018072e": 133, "80084801e": 133, "57731819e": 133, "28874183e": 133, "87821759e": 133, "16509556e": 133, "87549426e": 133, "63340553e": 133, "82718912e": 133, "58490026e": 133, "61342343e": 133, "28363764e": 133, "57427384e": 133, "46699817e": 133, "87693242e": 133, "91141327e": 133, "11633573e": 133, "80802270e": 133, "07669507e": 133, "47616089e": 133, "87553319e": 133, "67251840e": 133, "90918000e": 133, "62989736e": 133, "28389936e": 133, "91303766e": 133, "51234170e": 133, "19059071e": 133, "30995153e": 133, "31951771e": 133, "20701203e": 133, "81188036e": 133, "00324771e": 133, "88079008e": 133, "30326924e": 133, "10816573e": 133, "79034944e": 133, "29358430e": 133, "11088906e": 133, "82622951e": 133, "31295419e": 133, "10026220e": 133, "05493358e": 133, "01037793e": 133, "86210959e": 133, "10763693e": 133, "84817959e": 133, "20061769e": 133, "11265149e": 133, "87277092e": 133, "77577512e": 133, "15131401e": 133, "70974601e": 133, "54125314e": 133, "56047238e": 133, "87004758e": 133, "97808972e": 133, "41496649e": 133, "35539779e": 133, "65998813e": 133, "74320957e": 133, "16240937e": 133, "32168152e": 133, "20428870e": 133, "93603355e": 133, "15556975e": 133, "53580647e": 133, "77191746e": 133, "46520183e": 133, "26192512e": 133, "20156536e": 133, "31168300e": 133, "62214573e": 133, "20973537e": 133, "27237784e": 133, "30811171e": 133, "11988420e": 133, "11688313e": 133, "50108190e": 133, "61023026e": 133, "15638092e": 133, "65314852e": 133, "23672883e": 133, "39344167e": 133, "46095663e": 133, "81496972e": 133, "17680598e": 133, "21216725e": 133, "42932175e": 133, "14588481e": 133, "18646009e": 133, "11543393e": 133, "00779370e": 133, "51071450e": 133, "12885753e": 133, "13619987e": 133, "34413800e": 133, "05330831e": 133, "37886125e": 133, "53852981e": 133, "17654665e": 133, "06289362e": 133, "37500359e": 133, "29135771e": 133, "27384629e": 133, "09853372e": 133, "67847548e": 133, "67144941e": 133, "64830605e": 133, "87307476e": 133, "90015347e": 133, "41649737e": 133, "93386974e": 133, "41119875e": 133, "07924702e": 133, "53696198e": 133, "14104234e": 133, "86732425e": 133, "67461782e": 133, "38776970e": 133, "29665167e": 133, "svm__tol": 133, "svm__verbos": 133, "zscore__copi": 133, "zscore__with_std": 133, "0x7f13d5dfae30": [], "0x7f13d5827400": [], "0x7f13d5827250": [], "0x7f13d5df9960": [], "0x7f13d5f49ba0": [], "0x7f13d5cbbfa0": [], "008940": [], "007803": [], "002563": [], "008225": [], "008100": [], "008061": [], "005019": [], "004608": [], "004613": 140, "003921": [], "003908": [], "003932": [], "001689": [], "002797": [], "002716": [], "001605": [], "005768": [], "005536": [], "003152": [], "005548": [], "005552": [], "005667": [], "003148": [], "005656": [], "014722": [], "014376": [], "014444": [], "006669": [], "014283": [], "006715": [], "014433": [], "006706": [], "dev35": [], "004985": [], "002643": [], "002616": [], "002653": [], "002595": [], "tmpz398dnzi": [], "d0fcf3109b387f314e22bc383d589e136281406a": [], "005170": [], "0x7fc5cb24a890": [], "1075": [90, 100, 129], "get_group": [90, 100, 129], "silenc": [90, 100, 129], "data_subset": [90, 100, 129], "grouped_data": [90, 100, 129], "pd_kei": [90, 100, 129], "2480": 93, "004863": [], "002534": [], "004406": [], "004321": [], "0x7fc5cb1dea70": [], "0x7fc5cd73efe0": [], "003570": [], "001652": [], "001626": [], "001593": [], "003333": [], "001636": [], "0x7fc5cd8acb50": [], "014024": [], "006125": [], "013259": [], "006081": [], "013238": [], "006104": [], "013183": [], "006053": [], "013304": [], "006016": [], "0x7fc5cb311450": [], "0x7fc5cb313370": [], "0x7fc5cd9a6860": [], "0x7fc5cd9a7160": [], "022309": [], "007864": [], "022169": [], "007812": [], "022283": [], "007832": [], "022097": [], "007829": [], "022311": [], "004757": [], "002313": [], "0x7fc5d32b4430": [], "0x7fc5f5fa5fc0": [], "0x7fc5f5f9aef0": [], "025420": [], "007013": [], "024549": [], "007018": [], "024515": [], "006830": [], "024277": [], "024484": [], "006965": [], "0x7fc5caf6ff70": [], "0x7fc5caf6fa60": [], "005945": [], "005824": [], "005861": [], "003819": [], "ma": 134, "2820": 134, "invalid": 134, "encount": 134, "cast": 134, "_data": 134, "0x7fc5ca6d3070": [], "8474952842714565": [], "0012441195874252791": [], "99_doc": 133, "run_model_inspection_doc": 133, "downcast": 133, "old": 133, "infer_object": 133, "set_opt": 133, "no_silent_downcast": 133, "0x7fc5cad399c0": [], "0x7fc5cad381f0": [], "0x7fc5cad3af20": [], "0x7fc5cacc1960": [], "0x7fc5cd73c0d0": [], "0x7fc5cb2e20e0": [], "008646": [], "002681": [], "007521": [], "002611": [], "007961": [], "007767": [], "002602": [], "007796": [], "002575": [], "004963": [], "004511": [], "004708": [], "004522": [], "d2_absolute_error_scor": 140, "004169": [], "004091": [], "004093": [], "004065": [], "004098": [], "004122": [], "004102": [], "004101": [], "003157": [], "001800": [], "002909": [], "001848": [], "002733": [], "002788": [], "004793": [], "004607": [], "005963": [], "005997": [], "003466": [], "005891": [], "003365": [], "005835": [], "003385": [], "005782": 128, "005598": [], "005518": [], "005569": [], "003263": [], "014910": [], "006757": [], "014502": [], "014673": [], "006780": [], "014736": [], "014739": [], "dev16": [88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 117, 133, 134], "002597": 88, "002589": 88, "tmpzr1kgyil": [88, 90, 133], "8793197ec026b4383bac97a652498220f455059c": [88, 90, 133], "0x7f90adc9fd30": 90, "6710526315789473": 92, "6672932330827068": 92, "004298": 102, "002639": 102, "004912": 102, "002551": 102, "004259": 102, "0x7f90ad8f5060": 102, "0x7f90add2fa30": 105, "001560": 105, "003195": 105, "001550": 105, "001569": 105, "003291": 105, "001563": 105, "001554": 105, "0x7f90ae3e8c70": 106, "015194": 106, "005931": 106, "012964": 106, "005935": 106, "013035": 106, "012898": 106, "656015037593985": 109, "0018082604408073564": 109, "6437581151471767": 109, "0x7f90adf28be0": 110, "0x7f90adf2a6e0": 110, "0x7f90ae92c460": 114, "0x7f90adde7220": 114, "022023": 114, "007822": 114, "021967": 114, "007798": 114, "026673": 114, "009122": 114, "028322": 114, "009376": 114, "025966": 114, "011434": 114, "004358": 117, "002254": 117, "0x7f90b3cec1f0": 127, "0x7f90d853dd80": 127, "0x7f90d852f530": 127, "025076": 128, "006863": 128, "024372": 128, "024238": 128, "006837": 128, "024254": 128, "006925": 128, "0x7f90ad74e9e0": [128, 134], "0x7f90ad74c490": 128, "005858": 128, "003807": 128, "003765": 128, "005877": 128, "003804": 128, "459261223720629": 130, "002423264987567721": 130, "182640993861633": 130, "049965805178076736": 130, "0x7f90ad9a96f0": 130, "030895066498132": 130, "03884091431597502": 130, "massiv": 131, "htcondor": 131, "activ": 132, "fine": 132, "older": [132, 142], "huge": 132, "larg": 132, "computation": 132, "expens": 132, "advantag": 132, "modern": 132, "explicit": 132, "parallel_config": 132, "loki": 132, "backend": 132, "df_data": 132, "dispatch": 132, "inner_max_num_thread": 132, "hour": 132, "1250": 132, "1275": 132, "technic": 132, "dai": 132, "12750": 132, "month": 132, "span": 132, "approx": 132, "mainli": 132, "cluster": 132, "queue": 132, "register_htcondor": 132, "joblib_htcondor": 132, "request_cpu": 132, "request_mem": 132, "4gb": 132, "cpu": 132, "memori": 132, "believ": 132, "share": 132, "project": 132, "worker": 132, "filesystem": 132, "store": 132, "locat": 132, "shared_data_dir": 132, "supercool_research": 132, "admin": 132, "ask": 132, "head2": 132, "htc": 132, "inm7": 132, "max_recursion_level": 132, "someth": 132, "THE": 132, "bewar": 132, "6125": 132, "though": 132, "disk": 132, "slot": 132, "queu": 132, "wait": 132, "finish": 132, "2525": 132, "maximum": 132, "gb": 132, "neglig": 132, "submiss": 132, "great": 132, "current": 132, "NOT": 132, "left": 132, "exhaust": 132, "votingclassifi": 132, "votingregressor": 132, "monitor": 132, "export_metadata": 132, "medatada": 132, "ui": 132, "condor_q": 132, "command": 132, "window": 132, "press": 132, "o": 132, "root": 132, "trigger": 132, "enter": 132, "bottom": 132, "0x7f90ad7acf70": 134, "0x7f90ad7aceb0": 134, "0x7f90ad7ad930": 134, "0x7f90ad7ad150": 134, "0x7f90ae00e200": 135, "008642": 135, "002675": 135, "007428": 135, "002647": 135, "007945": 135, "002622": 135, "007731": 135, "002601": 135, "007759": 135, "004978": 140, "004609": 140, "003989": 140, "004039": 140, "004072": 140, "004043": 140, "003080": 141, "002856": 141, "001698": 141, "002756": 141, "001648": 141, "002732": 141, "005106": 141, "003201": 141, "005525": 141, "014935": 141, "006818": 141, "014523": 141, "006763": 141, "014596": 141, "006781": 141, "014544": 141, "014665": 141, "006809": 141, "run_fit": 142, "optimis": 142, "logic": 142}, "objects": {"julearn": [[2, 0, 1, "", "PipelineCreator"], [3, 0, 1, "", "TargetPipelineCreator"], [77, 3, 0, "-", "api"], [0, 3, 0, "-", "base"], [1, 3, 0, "-", "config"], [76, 3, 0, "-", "inspect"], [78, 3, 0, "-", "model_selection"], [79, 3, 0, "-", "models"], [80, 3, 0, "-", "pipeline"], [81, 3, 0, "-", "prepare"], [36, 5, 1, "", "run_cross_validation"], [37, 5, 1, "", "run_fit"], [82, 3, 0, "-", "scoring"], [83, 3, 0, "-", "stats"], [84, 3, 0, "-", "transformers"], [85, 3, 0, "-", "utils"], [86, 3, 0, "-", "viz"]], "julearn.PipelineCreator": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "add"], [2, 1, 1, "", "copy"], [2, 1, 1, "", "from_list"], [2, 1, 1, "", "has_model"], [2, 1, 1, "", "split"], [2, 2, 1, "", "steps"], [2, 1, 1, "", "to_pipeline"]], "julearn.TargetPipelineCreator": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "add"], [3, 1, 1, "", "to_pipeline"]], "julearn.base": [[4, 0, 1, "", "ColumnTypes"], [5, 4, 1, "", "ColumnTypesLike"], [6, 0, 1, "", "JuBaseEstimator"], [7, 0, 1, "", "JuTransformer"], [8, 0, 1, "", "WrapModel"], [9, 5, 1, "", "change_column_type"], [10, 5, 1, "", "ensure_column_types"], [11, 5, 1, "", "get_column_type"], [12, 5, 1, "", "make_type_selector"]], "julearn.base.ColumnTypes": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "add"], [4, 1, 1, "", "copy"], [4, 2, 1, "", "pattern"], [4, 1, 1, "", "to_type_selector"]], "julearn.base.JuBaseEstimator": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "filter_columns"], [6, 1, 1, "", "get_apply_to"], [6, 1, 1, "", "get_metadata_routing"], [6, 1, 1, "", "get_needed_types"], [6, 1, 1, "", "get_params"], [6, 1, 1, "", "set_params"]], "julearn.base.JuTransformer": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "filter_columns"], [7, 1, 1, "", "fit"], [7, 1, 1, "", "fit_transform"], [7, 1, 1, "", "get_apply_to"], [7, 1, 1, "", "get_metadata_routing"], [7, 1, 1, "", "get_needed_types"], [7, 1, 1, "", "get_params"], [7, 1, 1, "", "set_output"], [7, 1, 1, "", "set_params"]], "julearn.base.WrapModel": [[8, 1, 1, "", "__init__"], [8, 2, 1, "", "classes_"], [8, 1, 1, "", "decision_function"], [8, 1, 1, "", "filter_columns"], [8, 1, 1, "", "fit"], [8, 1, 1, "", "get_apply_to"], [8, 1, 1, "", "get_metadata_routing"], [8, 1, 1, "", "get_needed_types"], [8, 1, 1, "", "get_params"], [8, 1, 1, "", "predict"], [8, 1, 1, "", "predict_log_proba"], [8, 1, 1, "", "predict_proba"], [8, 1, 1, "", "score"], [8, 1, 1, "", "set_params"]], "julearn.config": [[13, 5, 1, "", "get_config"], [14, 5, 1, "", "set_config"]], "julearn.inspect": [[15, 0, 1, "", "FoldsInspector"], [16, 0, 1, "", "Inspector"], [17, 5, 1, "", "preprocess"]], "julearn.inspect.FoldsInspector": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "decision_function"], [15, 1, 1, "", "predict"], [15, 1, 1, "", "predict_log_proba"], [15, 1, 1, "", "predict_proba"]], "julearn.inspect.Inspector": [[16, 1, 1, "", "__init__"], [16, 2, 1, "", "folds"], [16, 2, 1, "", "model"]], "julearn.model_selection": [[18, 0, 1, "", "ContinuousStratifiedGroupKFold"], [19, 0, 1, "", "ContinuousStratifiedKFold"], [20, 0, 1, "", "RepeatedContinuousStratifiedGroupKFold"], [21, 0, 1, "", "RepeatedContinuousStratifiedKFold"], [22, 0, 1, "", "StratifiedBootstrap"], [23, 5, 1, "", "get_searcher"], [24, 5, 1, "", "list_searchers"], [25, 5, 1, "", "register_searcher"], [26, 5, 1, "", "reset_searcher_register"]], "julearn.model_selection.ContinuousStratifiedGroupKFold": [[18, 1, 1, "", "__init__"], [18, 1, 1, "", "get_metadata_routing"], [18, 1, 1, "", "get_n_splits"], [18, 1, 1, "", "set_split_request"], [18, 1, 1, "", "split"]], "julearn.model_selection.ContinuousStratifiedKFold": [[19, 1, 1, "", "__init__"], [19, 1, 1, "", "get_metadata_routing"], [19, 1, 1, "", "get_n_splits"], [19, 1, 1, "", "split"]], "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold": [[20, 1, 1, "", "__init__"], [20, 1, 1, "", "get_metadata_routing"], [20, 1, 1, "", "get_n_splits"], [20, 1, 1, "", "split"]], "julearn.model_selection.RepeatedContinuousStratifiedKFold": [[21, 1, 1, "", "__init__"], [21, 1, 1, "", "get_metadata_routing"], [21, 1, 1, "", "get_n_splits"], [21, 1, 1, "", "split"]], "julearn.model_selection.StratifiedBootstrap": [[22, 1, 1, "", "__init__"], [22, 1, 1, "", "get_metadata_routing"], [22, 1, 1, "", "get_n_splits"], [22, 1, 1, "", "split"]], "julearn.models": [[79, 3, 0, "-", "dynamic"], [28, 5, 1, "", "get_model"], [29, 5, 1, "", "list_models"], [30, 5, 1, "", "register_model"], [31, 5, 1, "", "reset_model_register"]], "julearn.models.dynamic": [[27, 0, 1, "", "DynamicSelection"]], "julearn.models.dynamic.DynamicSelection": [[27, 1, 1, "", "__init__"], [27, 1, 1, "", "fit"], [27, 1, 1, "", "get_metadata_routing"], [27, 1, 1, "", "get_params"], [27, 1, 1, "", "predict"], [27, 1, 1, "", "predict_proba"], [27, 1, 1, "", "score"], [27, 1, 1, "", "set_params"], [27, 1, 1, "", "set_score_request"]], "julearn.pipeline": [[32, 0, 1, "", "JuTargetPipeline"]], "julearn.pipeline.JuTargetPipeline": [[32, 1, 1, "", "__init__"], [32, 1, 1, "", "can_inverse_transform"], [32, 1, 1, "", "fit"], [32, 1, 1, "", "fit_transform"], [32, 1, 1, "", "inverse_transform"], [32, 2, 1, "", "needed_types"], [32, 1, 1, "", "transform"]], "julearn.pipeline.pipeline_creator": [[33, 0, 1, "", "Step"]], "julearn.pipeline.pipeline_creator.Step": [[33, 1, 1, "", "__init__"], [33, 4, 1, "", "apply_to"], [33, 4, 1, "", "estimator"], [33, 4, 1, "", "name"], [33, 4, 1, "", "needed_types"], [33, 4, 1, "", "params_to_tune"], [33, 4, 1, "", "row_select_col_type"], [33, 4, 1, "", "row_select_vals"]], "julearn.prepare": [[34, 5, 1, "", "check_consistency"], [35, 5, 1, "", "prepare_input_data"]], "julearn.scoring": [[38, 5, 1, "", "check_scoring"], [39, 5, 1, "", "get_scorer"], [40, 5, 1, "", "list_scorers"], [82, 3, 0, "-", "metrics"], [43, 5, 1, "", "register_scorer"], [44, 5, 1, "", "reset_scorer_register"]], "julearn.scoring.metrics": [[41, 5, 1, "", "r2_corr"], [42, 5, 1, "", "r_corr"]], "julearn.stats": [[45, 5, 1, "", "corrected_ttest"]], "julearn.transformers": [[46, 0, 1, "", "CBPM"], [47, 0, 1, "", "ChangeColumnTypes"], [48, 0, 1, "", "DropColumns"], [49, 0, 1, "", "FilterColumns"], [50, 0, 1, "", "JuColumnTransformer"], [51, 0, 1, "", "SetColumnTypes"], [53, 5, 1, "", "get_transformer"], [54, 5, 1, "", "list_transformers"], [55, 5, 1, "", "register_transformer"], [56, 5, 1, "", "reset_transformer_register"], [84, 3, 0, "-", "target"]], "julearn.transformers.CBPM": [[46, 1, 1, "", "__init__"], [46, 1, 1, "", "aggregate"], [46, 1, 1, "", "fit"], [46, 1, 1, "", "fit_transform"], [46, 1, 1, "", "get_feature_names_out"], [46, 1, 1, "", "get_metadata_routing"], [46, 1, 1, "", "get_params"], [46, 1, 1, "", "set_output"], [46, 1, 1, "", "set_params"], [46, 1, 1, "", "transform"]], "julearn.transformers.ChangeColumnTypes": [[47, 1, 1, "", "__init__"], [47, 1, 1, "", "filter_columns"], [47, 1, 1, "", "fit"], [47, 1, 1, "", "fit_transform"], [47, 1, 1, "", "get_apply_to"], [47, 1, 1, "", "get_feature_names_out"], [47, 1, 1, "", "get_metadata_routing"], [47, 1, 1, "", "get_needed_types"], [47, 1, 1, "", "get_params"], [47, 1, 1, "", "set_output"], [47, 1, 1, "", "set_params"], [47, 1, 1, "", "transform"]], "julearn.transformers.DropColumns": [[48, 1, 1, "", "__init__"], [48, 1, 1, "", "filter_columns"], [48, 1, 1, "", "fit"], [48, 1, 1, "", "fit_transform"], [48, 1, 1, "", "get_apply_to"], [48, 1, 1, "", "get_metadata_routing"], [48, 1, 1, "", "get_needed_types"], [48, 1, 1, "", "get_params"], [48, 1, 1, "", "get_support"], [48, 1, 1, "", "set_output"], [48, 1, 1, "", "set_params"], [48, 1, 1, "", "transform"]], "julearn.transformers.FilterColumns": [[49, 1, 1, "", "__init__"], [49, 1, 1, "", "filter_columns"], [49, 1, 1, "", "fit"], [49, 1, 1, "", "fit_transform"], [49, 1, 1, "", "get_apply_to"], [49, 1, 1, "", "get_feature_names_out"], [49, 1, 1, "", "get_metadata_routing"], [49, 1, 1, "", "get_needed_types"], [49, 1, 1, "", "get_params"], [49, 1, 1, "", "set_output"], [49, 1, 1, "", "set_params"], [49, 1, 1, "", "transform"]], "julearn.transformers.JuColumnTransformer": [[50, 1, 1, "", "__init__"], [50, 1, 1, "", "filter_columns"], [50, 1, 1, "", "fit"], [50, 1, 1, "", "fit_transform"], [50, 1, 1, "", "get_apply_to"], [50, 1, 1, "", "get_feature_names_out"], [50, 1, 1, "", "get_metadata_routing"], [50, 1, 1, "", "get_needed_types"], [50, 1, 1, "", "get_params"], [50, 1, 1, "", "set_output"], [50, 1, 1, "", "set_params"], [50, 1, 1, "", "transform"]], "julearn.transformers.SetColumnTypes": [[51, 1, 1, "", "__init__"], [51, 1, 1, "", "filter_columns"], [51, 1, 1, "", "fit"], [51, 1, 1, "", "fit_transform"], [51, 1, 1, "", "get_apply_to"], [51, 1, 1, "", "get_feature_names_out"], [51, 1, 1, "", "get_metadata_routing"], [51, 1, 1, "", "get_needed_types"], [51, 1, 1, "", "get_params"], [51, 1, 1, "", "set_output"], [51, 1, 1, "", "set_params"], [51, 1, 1, "", "transform"]], "julearn.transformers.confound_remover": [[52, 0, 1, "", "ConfoundRemover"]], "julearn.transformers.confound_remover.ConfoundRemover": [[52, 1, 1, "", "__init__"], [52, 1, 1, "", "filter_columns"], [52, 1, 1, "", "fit"], [52, 1, 1, "", "fit_transform"], [52, 1, 1, "", "get_apply_to"], [52, 1, 1, "", "get_feature_names_out"], [52, 1, 1, "", "get_metadata_routing"], [52, 1, 1, "", "get_needed_types"], [52, 1, 1, "", "get_params"], [52, 1, 1, "", "get_support"], [52, 1, 1, "", "set_output"], [52, 1, 1, "", "set_params"], [52, 1, 1, "", "transform"]], "julearn.transformers.target": [[57, 0, 1, "", "JuTargetTransformer"], [58, 0, 1, "", "JuTransformedTargetModel"], [59, 0, 1, "", "TargetConfoundRemover"], [60, 0, 1, "", "TransformedTargetWarning"], [61, 5, 1, "", "get_target_transformer"], [62, 5, 1, "", "list_target_transformers"], [63, 5, 1, "", "register_target_transformer"], [64, 5, 1, "", "reset_target_transformer_register"]], "julearn.transformers.target.JuTargetTransformer": [[57, 1, 1, "", "__init__"], [57, 1, 1, "", "fit"], [57, 1, 1, "", "fit_transform"], [57, 1, 1, "", "transform"]], "julearn.transformers.target.JuTransformedTargetModel": [[58, 1, 1, "", "__init__"], [58, 1, 1, "", "can_inverse_transform"], [58, 2, 1, "", "classes_"], [58, 1, 1, "", "decision_function"], [58, 1, 1, "", "filter_columns"], [58, 1, 1, "", "fit"], [58, 1, 1, "", "get_apply_to"], [58, 1, 1, "", "get_metadata_routing"], [58, 1, 1, "", "get_needed_types"], [58, 1, 1, "", "get_params"], [58, 1, 1, "", "predict"], [58, 1, 1, "", "predict_proba"], [58, 1, 1, "", "score"], [58, 1, 1, "", "set_params"], [58, 1, 1, "", "transform_target"]], "julearn.transformers.target.TargetConfoundRemover": [[59, 1, 1, "", "__init__"], [59, 1, 1, "", "fit"], [59, 1, 1, "", "fit_transform"], [59, 2, 1, "", "needed_types"], [59, 1, 1, "", "transform"]], "julearn.transformers.target.TransformedTargetWarning": [[60, 1, 1, "", "__init__"], [60, 4, 1, "", "args"], [60, 1, 1, "", "with_traceback"]], "julearn.utils": [[65, 5, 1, "", "configure_logging"], [66, 4, 1, "", "logger"], [67, 5, 1, "", "raise_error"], [85, 3, 0, "-", "typing"], [73, 5, 1, "", "warn_with_log"]], "julearn.utils.typing": [[68, 4, 1, "", "EstimatorLike"], [69, 0, 1, "", "EstimatorLikeFit1"], [70, 0, 1, "", "EstimatorLikeFit2"], [71, 0, 1, "", "EstimatorLikeFity"], [72, 0, 1, "", "JuEstimatorLike"]], "julearn.utils.typing.EstimatorLikeFit1": [[69, 1, 1, "", "__init__"], [69, 1, 1, "", "fit"], [69, 1, 1, "", "get_params"], [69, 1, 1, "", "set_params"]], "julearn.utils.typing.EstimatorLikeFit2": [[70, 1, 1, "", "__init__"], [70, 1, 1, "", "fit"], [70, 1, 1, "", "get_params"], [70, 1, 1, "", "set_params"]], "julearn.utils.typing.EstimatorLikeFity": [[71, 1, 1, "", "__init__"], [71, 1, 1, "", "fit"], [71, 1, 1, "", "get_params"], [71, 1, 1, "", "set_params"]], "julearn.utils.typing.JuEstimatorLike": [[72, 1, 1, "", "__init__"], [72, 1, 1, "", "fit"], [72, 1, 1, "", "get_apply_to"], [72, 1, 1, "", "get_needed_types"], [72, 1, 1, "", "get_params"], [72, 1, 1, "", "set_params"]], "julearn.viz": [[74, 5, 1, "", "plot_scores"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:module", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "module", "Python module"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"base": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 127], "class": [0, 76, 78, 79, 80, 84, 85], "function": [0, 1, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 117], "julearn": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 87, 120, 125, 127, 128, 132, 142], "pipelinecr": [2, 141], "exampl": [2, 3, 16, 17, 19, 22, 36, 40, 43, 45, 65, 74, 121, 122], "us": [2, 3, 16, 17, 19, 22, 36, 40, 43, 45, 65, 74, 109, 114, 123, 128, 141], "targetpipelinecr": 3, "columntyp": 4, "columntypeslik": 5, "jubaseestim": 6, "jutransform": 7, "wrapmodel": 8, "change_column_typ": 9, "ensure_column_typ": 10, "get_column_typ": 11, "make_type_selector": 12, "inspect": [15, 16, 17, 76, 98, 99, 100, 102, 133], "foldsinspector": 15, "inspector": 16, "preprocess": [17, 101, 135, 141], "model_select": [18, 19, 20, 21, 22, 23, 24, 25, 26], "continuousstratifiedgroupkfold": 18, "continuousstratifiedkfold": 19, "repeatedcontinuousstratifiedgroupkfold": 20, "repeatedcontinuousstratifiedkfold": 21, "stratifiedbootstrap": 22, "get_search": 23, "list_search": 24, "register_search": 25, "reset_searcher_regist": 26, "model": [27, 28, 29, 30, 31, 78, 79, 95, 96, 99, 100, 104, 113, 119, 127, 130, 133, 134, 139, 140, 141], "dynam": [27, 79, 119], "dynamicselect": 27, "get_model": 28, "list_model": 29, "register_model": 30, "reset_model_regist": 31, "pipelin": [32, 33, 80, 119, 141], "jutargetpipelin": 32, "pipeline_cr": 33, "step": [33, 119], "prepar": [34, 35, 81], "check_consist": 34, "prepare_input_data": 35, "run_cross_valid": [36, 136, 137, 140, 141], "score": [38, 39, 40, 41, 42, 43, 44, 82, 105, 117, 139, 140], "check_scor": 38, "get_scor": 39, "list_scor": 40, "metric": [41, 42, 82, 140], "r2_corr": 41, "r_corr": 42, "register_scor": 43, "reset_scorer_regist": 44, "stat": [45, 83], "corrected_ttest": 45, "transform": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 84, 105, 119], "cbpm": [46, 127], "changecolumntyp": 47, "dropcolumn": 48, "filtercolumn": 49, "jucolumntransform": 50, "setcolumntyp": 51, "confound_remov": 52, "confoundremov": 52, "get_transform": 53, "list_transform": 54, "register_transform": 55, "reset_transformer_regist": 56, "target": [57, 58, 59, 60, 61, 62, 63, 64, 84, 105, 128, 135], "jutargettransform": 57, "jutransformedtargetmodel": 58, "targetconfoundremov": 59, "transformedtargetwarn": 60, "get_target_transform": 61, "list_target_transform": 62, "register_target_transform": 63, "reset_target_transformer_regist": 64, "util": [65, 66, 67, 68, 69, 70, 71, 72, 73, 85], "configure_log": 65, "logger": 66, "raise_error": 67, "type": [68, 69, 70, 71, 72, 85, 134, 137, 141], "estimatorlik": 68, "estimatorlikefit1": 69, "estimatorlikefit2": 70, "estimatorlikef": 71, "juestimatorlik": 72, "warn_with_log": 73, "viz": [74, 123], "plot_scor": 74, "api": [75, 77, 142], "refer": [75, 91, 92, 99, 107, 108, 109, 127, 128, 129, 136, 141], "main": 77, "select": [78, 79, 119, 131, 141], "deslib": 79, "visual": [86, 132, 139], "start": [87, 124], "multiclass": 88, "classif": [88, 93, 110], "regress": [89, 90, 106, 117, 128], "analysi": [89, 90, 106], "stratifi": 90, "k": 90, "fold": [90, 102], "cv": [90, 92], "work": 91, "panda": 91, "merg": 91, "join": 91, "datafram": [91, 119], "group": [92, 129], "deal": [92, 99], "cross": [92, 99, 128, 129, 136, 140], "valid": [92, 99, 128, 129, 136, 140], "techniqu": [92, 99], "simpl": [93, 96], "binari": 93, "comput": [94, 97, 103, 111, 115, 118], "time": [94, 97, 103, 111, 115, 118], "comparison": [95, 96, 113, 139], "svm": 99, "random": 100, "forest": 100, "variabl": [100, 105], "import": 100, "varianc": 101, "threshold": 101, "zscore": 101, "pca": 101, "wise": 102, "predict": [102, 127], "complex": 104, "z": 105, "tune": [107, 108, 109, 130], "multipl": 107, "hyperparamet": [107, 108, 109, 130, 141], "grid": [107, 130], "stack": [110, 134], "confound": [112, 113, 114, 128], "remov": [113, 114, 128], "return": [114, 140], "typic": 114, "case": 114, "custom": [116, 117, 119], "overview": 119, "avail": 119, "scaler": 119, "featur": [119, 128, 134, 137, 141, 142], "oper": 119, "decomposit": 119, "estim": [119, 134, 140], "support": 119, "vector": 119, "machin": 119, "ensembl": 119, "gaussian": 119, "process": 119, "linear": 119, "naiv": 119, "bay": 119, "dummi": 119, "configur": 120, "contribut": 121, "set": [121, 141], "up": 121, "local": 121, "develop": 121, "environ": 121, "github": 121, "pull": 121, "request": 121, "guidelin": 121, "run": 121, "unit": 121, "test": 121, "ad": 121, "build": [121, 141], "document": [121, 125, 142], "write": 121, "content": [122, 125, 131], "faq": 123, "i": [123, 125, 128], "have": 123, "issu": 123, "depend": [123, 124], "modul": 123, "how": 123, "do": 123, "interact": 123, "plot": 123, "get": 124, "requir": 124, "setup": 124, "suggest": 124, "instal": 124, "option": 124, "welcom": 125, "": [125, 142], "what": [125, 138, 142], "why": [125, 136], "tabl": [125, 131], "indic": 125, "maintain": 126, "version": 126, "releas": 126, "new": [126, 142], "connectom": 127, "consist": 128, "from": 128, "should": 128, "splitter": [129, 140], "stratif": 129, "paramet": 130, "v": 130, "searcher": 130, "more": 130, "than": 130, "one": 130, "deeper": 131, "topic": 131, "fit": 134, "each": 134, "all": 134, "specif": [134, 141], "appli": 135, "The": [136, 140], "fundament": 136, "essenc": 136, "data": [132, 137], "input": 137, "give": 137, "you": 138, "realli": 138, "need": 138, "know": 138, "statist": 139, "evalu": 140, "output": 140, "made": 141, "easi": 141, "0": 142, "2": 142, "5": 142, "2022": 142, "07": 142, "21": 142, "chang": 142, "bugfix": 142, "improv": 142, "enhanc": 142, "3": 142, "1": 142, "dev105": [], "2024": 142, "01": 142, "23": 142, "misc": 142, "2023": 142, "19": 142, "bayesian": 109, "search": 109, "specifi": 130, "distribut": 130, "05": 142, "03": 142, "16": 142, "run_fit": 37, "config": [1, 13, 14], "get_config": 13, "set_config": 14, "parallel": 132, "joblib": 132, "massiv": 132, "htcondor": 132, "transfer": 132, "pool": 132, "recurs": 132, "throttl": 132, "overhead": 132, "scikit": 132, "learn": 132, "progress": 132, "4": 142, "10": 142, "17": 142}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Base": [[0, "module-julearn.base"]], "Classes": [[0, "classes"], [76, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [84, "classes"], [84, "id1"], [85, "classes"], [85, "id1"]], "Functions": [[0, "functions"], [1, "functions"], [76, "functions"], [77, "functions"], [78, "functions"], [79, "functions"], [81, "functions"], [82, "functions"], [82, "id1"], [83, "functions"], [84, "functions"], [84, "id2"], [85, "functions"], [86, "functions"]], "Config": [[1, "module-julearn.config"]], "julearn.PipelineCreator": [[2, "julearn-pipelinecreator"]], "Examples using julearn.PipelineCreator": [[2, "examples-using-julearn-pipelinecreator"]], "julearn.TargetPipelineCreator": [[3, "julearn-targetpipelinecreator"]], "Examples using julearn.TargetPipelineCreator": [[3, "examples-using-julearn-targetpipelinecreator"]], "julearn.base.ColumnTypes": [[4, "julearn-base-columntypes"]], "julearn.base.ColumnTypesLike": [[5, "julearn-base-columntypeslike"]], "julearn.base.JuBaseEstimator": [[6, "julearn-base-jubaseestimator"]], "julearn.base.JuTransformer": [[7, "julearn-base-jutransformer"]], "julearn.base.WrapModel": [[8, "julearn-base-wrapmodel"]], "julearn.base.change_column_type": [[9, "julearn-base-change-column-type"]], "julearn.base.ensure_column_types": [[10, "julearn-base-ensure-column-types"]], "julearn.base.get_column_type": [[11, "julearn-base-get-column-type"]], "julearn.base.make_type_selector": [[12, "julearn-base-make-type-selector"]], "julearn.config.get_config": [[13, "julearn-config-get-config"]], "julearn.config.set_config": [[14, "julearn-config-set-config"]], "julearn.inspect.FoldsInspector": [[15, "julearn-inspect-foldsinspector"]], "julearn.inspect.Inspector": [[16, "julearn-inspect-inspector"]], "Examples using julearn.inspect.Inspector": [[16, "examples-using-julearn-inspect-inspector"]], "julearn.inspect.preprocess": [[17, "julearn-inspect-preprocess"]], "Examples using julearn.inspect.preprocess": [[17, "examples-using-julearn-inspect-preprocess"]], "julearn.model_selection.ContinuousStratifiedGroupKFold": [[18, "julearn-model-selection-continuousstratifiedgroupkfold"]], "julearn.model_selection.ContinuousStratifiedKFold": [[19, "julearn-model-selection-continuousstratifiedkfold"]], "Examples using julearn.model_selection.ContinuousStratifiedKFold": [[19, "examples-using-julearn-model-selection-continuousstratifiedkfold"]], "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold": [[20, "julearn-model-selection-repeatedcontinuousstratifiedgroupkfold"]], "julearn.model_selection.RepeatedContinuousStratifiedKFold": [[21, "julearn-model-selection-repeatedcontinuousstratifiedkfold"]], "julearn.model_selection.StratifiedBootstrap": [[22, "julearn-model-selection-stratifiedbootstrap"]], "Examples using julearn.model_selection.StratifiedBootstrap": [[22, "examples-using-julearn-model-selection-stratifiedbootstrap"]], "julearn.model_selection.get_searcher": [[23, "julearn-model-selection-get-searcher"]], "julearn.model_selection.list_searchers": [[24, "julearn-model-selection-list-searchers"]], "julearn.model_selection.register_searcher": [[25, "julearn-model-selection-register-searcher"]], "julearn.model_selection.reset_searcher_register": [[26, "julearn-model-selection-reset-searcher-register"]], "julearn.models.dynamic.DynamicSelection": [[27, "julearn-models-dynamic-dynamicselection"]], "julearn.models.get_model": [[28, "julearn-models-get-model"]], "julearn.models.list_models": [[29, "julearn-models-list-models"]], "julearn.models.register_model": [[30, "julearn-models-register-model"]], "julearn.models.reset_model_register": [[31, "julearn-models-reset-model-register"]], "julearn.pipeline.JuTargetPipeline": [[32, "julearn-pipeline-jutargetpipeline"]], "julearn.pipeline.pipeline_creator.Step": [[33, "julearn-pipeline-pipeline-creator-step"]], "julearn.prepare.check_consistency": [[34, "julearn-prepare-check-consistency"]], "julearn.prepare.prepare_input_data": [[35, "julearn-prepare-prepare-input-data"]], "julearn.run_cross_validation": [[36, "julearn-run-cross-validation"]], "Examples using julearn.run_cross_validation": [[36, "examples-using-julearn-run-cross-validation"]], "julearn.run_fit": [[37, "julearn-run-fit"]], "julearn.scoring.check_scoring": [[38, "julearn-scoring-check-scoring"]], "julearn.scoring.get_scorer": [[39, "julearn-scoring-get-scorer"]], "julearn.scoring.list_scorers": [[40, "julearn-scoring-list-scorers"]], "Examples using julearn.scoring.list_scorers": [[40, "examples-using-julearn-scoring-list-scorers"]], "julearn.scoring.metrics.r2_corr": [[41, "julearn-scoring-metrics-r2-corr"]], "julearn.scoring.metrics.r_corr": [[42, "julearn-scoring-metrics-r-corr"]], "julearn.scoring.register_scorer": [[43, "julearn-scoring-register-scorer"]], "Examples using julearn.scoring.register_scorer": [[43, "examples-using-julearn-scoring-register-scorer"]], "julearn.scoring.reset_scorer_register": [[44, "julearn-scoring-reset-scorer-register"]], "julearn.stats.corrected_ttest": [[45, "julearn-stats-corrected-ttest"]], "Examples using julearn.stats.corrected_ttest": [[45, "examples-using-julearn-stats-corrected-ttest"]], "julearn.transformers.CBPM": [[46, "julearn-transformers-cbpm"]], "julearn.transformers.ChangeColumnTypes": [[47, "julearn-transformers-changecolumntypes"]], "julearn.transformers.DropColumns": [[48, "julearn-transformers-dropcolumns"]], "julearn.transformers.FilterColumns": [[49, "julearn-transformers-filtercolumns"]], "julearn.transformers.JuColumnTransformer": [[50, "julearn-transformers-jucolumntransformer"]], "julearn.transformers.SetColumnTypes": [[51, "julearn-transformers-setcolumntypes"]], "julearn.transformers.confound_remover.ConfoundRemover": [[52, "julearn-transformers-confound-remover-confoundremover"]], "julearn.transformers.get_transformer": [[53, "julearn-transformers-get-transformer"]], "julearn.transformers.list_transformers": [[54, "julearn-transformers-list-transformers"]], "julearn.transformers.register_transformer": [[55, "julearn-transformers-register-transformer"]], "julearn.transformers.reset_transformer_register": [[56, "julearn-transformers-reset-transformer-register"]], "julearn.transformers.target.JuTargetTransformer": [[57, "julearn-transformers-target-jutargettransformer"]], "julearn.transformers.target.JuTransformedTargetModel": [[58, "julearn-transformers-target-jutransformedtargetmodel"]], "julearn.transformers.target.TargetConfoundRemover": [[59, "julearn-transformers-target-targetconfoundremover"]], "julearn.transformers.target.TransformedTargetWarning": [[60, "julearn-transformers-target-transformedtargetwarning"]], "julearn.transformers.target.get_target_transformer": [[61, "julearn-transformers-target-get-target-transformer"]], "julearn.transformers.target.list_target_transformers": [[62, "julearn-transformers-target-list-target-transformers"]], "julearn.transformers.target.register_target_transformer": [[63, "julearn-transformers-target-register-target-transformer"]], "julearn.transformers.target.reset_target_transformer_register": [[64, "julearn-transformers-target-reset-target-transformer-register"]], "julearn.utils.configure_logging": [[65, "julearn-utils-configure-logging"]], "Examples using julearn.utils.configure_logging": [[65, "examples-using-julearn-utils-configure-logging"]], "julearn.utils.logger": [[66, "julearn-utils-logger"]], "julearn.utils.raise_error": [[67, "julearn-utils-raise-error"]], "julearn.utils.typing.EstimatorLike": [[68, "julearn-utils-typing-estimatorlike"]], "julearn.utils.typing.EstimatorLikeFit1": [[69, "julearn-utils-typing-estimatorlikefit1"]], "julearn.utils.typing.EstimatorLikeFit2": [[70, "julearn-utils-typing-estimatorlikefit2"]], "julearn.utils.typing.EstimatorLikeFity": [[71, "julearn-utils-typing-estimatorlikefity"]], "julearn.utils.typing.JuEstimatorLike": [[72, "julearn-utils-typing-juestimatorlike"]], "julearn.utils.warn_with_log": [[73, "julearn-utils-warn-with-log"]], "julearn.viz.plot_scores": [[74, "julearn-viz-plot-scores"]], "Examples using julearn.viz.plot_scores": [[74, "examples-using-julearn-viz-plot-scores"]], "API Reference": [[75, "api-reference"]], "Inspect": [[76, "module-julearn.inspect"]], "Main API": [[77, "module-julearn.api"]], "Model Selection": [[78, "module-julearn.model_selection"]], "Models": [[79, "module-julearn.models"]], "Dynamic Selection (DESLib)": [[79, "dynamic-selection-deslib"]], "Pipeline": [[80, "module-julearn.pipeline"]], "Prepare": [[81, "module-julearn.prepare"]], "Scoring": [[82, "module-julearn.scoring"]], "Scoring Metrics": [[82, "module-julearn.scoring.metrics"]], "Stats": [[83, "module-julearn.stats"]], "Transformers": [[84, "module-julearn.transformers"], [119, "transformers"]], "Target Transformers": [[84, "module-julearn.transformers.target"]], "Utils": [[85, "module-julearn.utils"]], "Typing": [[85, "module-julearn.utils.typing"]], "Visualization": [[86, "visualization"]], "Starting with julearn": [[87, "starting-with-julearn"]], "Multiclass Classification": [[88, "multiclass-classification"]], "Regression Analysis": [[89, "regression-analysis"], [106, "regression-analysis"]], "Stratified K-fold CV for regression analysis": [[90, "stratified-k-fold-cv-for-regression-analysis"]], "Working with pandas": [[91, "working-with-pandas"]], "References": [[91, "references"], [92, "references"], [99, "references"], [107, "references"], [108, "references"], [109, "references"]], "Merging or joining DataFrame": [[91, "merging-or-joining-dataframe"]], "Grouped CV": [[92, "grouped-cv"]], "Dealing with Cross-Validation techniques": [[92, "dealing-with-cross-validation-techniques"], [99, "dealing-with-cross-validation-techniques"]], "Simple Binary Classification": [[93, "simple-binary-classification"]], "Computation times": [[94, "computation-times"], [97, "computation-times"], [103, "computation-times"], [111, "computation-times"], [115, "computation-times"], [118, "computation-times"]], "Model Comparison": [[95, "model-comparison"], [139, "model-comparison"]], "Simple Model Comparison": [[96, "simple-model-comparison"]], "Inspection": [[98, "inspection"]], "Inspecting SVM models": [[99, "inspecting-svm-models"]], "Inspecting Random Forest models": [[100, "inspecting-random-forest-models"]], "Random Forest variable importance": [[100, "random-forest-variable-importance"]], "Preprocessing with variance threshold, zscore and PCA": [[101, "preprocessing-with-variance-threshold-zscore-and-pca"]], "Inspecting the fold-wise predictions": [[102, "inspecting-the-fold-wise-predictions"]], "Complex Models": [[104, "complex-models"]], "Transforming target variable with z-score": [[105, "transforming-target-variable-with-z-score"]], "Tuning Multiple Hyperparameters Grids": [[107, "tuning-multiple-hyperparameters-grids"]], "Tuning Hyperparameters": [[108, "tuning-hyperparameters"]], "Tuning Hyperparameters using Bayesian Search": [[109, "tuning-hyperparameters-using-bayesian-search"]], "Stacking Classification": [[110, "stacking-classification"]], "Confounds": [[112, "confounds"]], "Confound Removal (model comparison)": [[113, "confound-removal-model-comparison"]], "Return Confounds in Confound Removal": [[114, "return-confounds-in-confound-removal"]], "Confound Removal Typical Use Case": [[114, "confound-removal-typical-use-case"]], "Customization": [[116, "customization"]], "Custom Scoring Function for Regression": [[117, "custom-scoring-function-for-regression"]], "Overview of available Pipeline Steps": [[119, "overview-of-available-pipeline-steps"]], "Scalers": [[119, "scalers"]], "Feature Selection": [[119, "feature-selection"]], "DataFrame operations": [[119, "dataframe-operations"]], "Decomposition": [[119, "decomposition"]], "Custom": [[119, "custom"]], "Models (Estimators)": [[119, "models-estimators"]], "Support Vector Machines": [[119, "support-vector-machines"]], "Ensemble": [[119, "ensemble"]], "Gaussian Processes": [[119, "gaussian-processes"]], "Linear Models": [[119, "linear-models"]], "Naive Bayes": [[119, "naive-bayes"]], "Dynamic Selection": [[119, "dynamic-selection"]], "Dummy": [[119, "dummy"]], "Configuring julearn": [[120, "configuring-julearn"]], "Contributing": [[121, "contributing"]], "Setting up the local development environment": [[121, "setting-up-the-local-development-environment"]], "GitHub Pull Request guidelines": [[121, "github-pull-request-guidelines"]], "Running unit tests": [[121, "running-unit-tests"]], "Adding and building documentation": [[121, "adding-and-building-documentation"]], "Writing Examples": [[121, "writing-examples"]], "Examples": [[122, "examples"]], "Contents:": [[122, null]], "FAQs": [[123, "faqs"]], "I have issues with the dependencies for the viz module.": [[123, "i-have-issues-with-the-dependencies-for-the-viz-module"]], "How do I use the viz interactive plots?": [[123, "how-do-i-use-the-viz-interactive-plots"]], "Getting started": [[124, "getting-started"]], "Requirements": [[124, "requirements"]], "Setup suggestion": [[124, "setup-suggestion"]], "Installing": [[124, "installing"]], "Optional Dependencies": [[124, "optional-dependencies"]], "Welcome to julearn\u2019s documentation!": [[125, "welcome-to-julearn-s-documentation"]], "What is julearn?": [[125, "what-is-julearn"]], "Why julearn?": [[125, "why-julearn"]], "Table of Contents": [[125, "table-of-contents"], [131, null]], "Indices and tables": [[125, "indices-and-tables"], [125, "id1"]], "Maintaining": [[126, "maintaining"]], "Versioning": [[126, "versioning"]], "Releasing a new version": [[126, "releasing-a-new-version"]], "Connectome-based Predictive Modeling (CBPM)": [[127, "connectome-based-predictive-modeling-cbpm"]], "CBPM in julearn": [[127, "cbpm-in-julearn"]], "References:": [[127, null], [128, null], [129, null], [136, null], [141, null]], "Cross-validation consistent Confound Removal": [[128, "cross-validation-consistent-confound-removal"]], "Confound Removal in julearn": [[128, "confound-removal-in-julearn"]], "Removing Confounds from the Features": [[128, "removing-confounds-from-the-features"]], "Removing Confounds from the Target": [[128, "removing-confounds-from-the-target"]], "Should I use Confound Regression?": [[128, "should-i-use-confound-regression"]], "Cross-validation splitters": [[129, "cross-validation-splitters"], [140, "cross-validation-splitters"]], "Stratification": [[129, "stratification"]], "Grouping": [[129, "grouping"]], "Hyperparameter Tuning": [[130, "hyperparameter-tuning"], [130, "id1"]], "Parameters vs Hyperparameters": [[130, "parameters-vs-hyperparameters"]], "Searchers": [[130, "searchers"]], "Specifying distributions": [[130, "specifying-distributions"]], "Tuning more than one grid": [[130, "tuning-more-than-one-grid"]], "Models as hyperparameters": [[130, "models-as-hyperparameters"]], "Selected deeper topics": [[131, "selected-deeper-topics"]], "Parallelizing julearn with Joblib": [[132, "parallelizing-julearn-with-joblib"]], "Massively parallelizing julearn with Joblib and HTcondor": [[132, "massively-parallelizing-julearn-with-joblib-and-htcondor"]], "Data Transfer": [[132, "data-transfer"]], "Pool": [[132, "pool"]], "Recursive parallelization": [[132, "recursive-parallelization"]], "Throttling": [[132, "throttling"]], "Overhead": [[132, "overhead"]], "Scikit-learn parallelization": [[132, "scikit-learn-parallelization"]], "Visualizing Progress": [[132, "visualizing-progress"]], "Inspecting Models": [[133, "inspecting-models"]], "Stacking Models": [[134, "stacking-models"]], "Fitting each estimator on all of the features": [[134, "fitting-each-estimator-on-all-of-the-features"]], "Fitting each estimator on a specific feature type": [[134, "fitting-each-estimator-on-a-specific-feature-type"]], "Applying preprocessing to the target": [[135, "applying-preprocessing-to-the-target"]], "Why cross validation?": [[136, "why-cross-validation"]], "Cross-validation - The fundamentals": [[136, "cross-validation-the-fundamentals"]], "The essence of run_cross_validation()": [[136, "the-essence-of-run-cross-validation"]], "Data": [[137, "data"]], "Data input to run_cross_validation()": [[137, "data-input-to-run-cross-validation"]], "Giving types to features": [[137, "giving-types-to-features"]], "What you really need to know": [[138, "what-you-really-need-to-know"]], "Statistical comparisons": [[139, "statistical-comparisons"]], "Score visualizations": [[139, "score-visualizations"]], "Model Evaluation": [[140, "model-evaluation"]], "The output of run_cross_validation()": [[140, "the-output-of-run-cross-validation"]], "Cross-validation scores": [[140, "cross-validation-scores"]], "Returning a model (estimator)": [[140, "returning-a-model-estimator"]], "Scoring metrics": [[140, "scoring-metrics"]], "Model Building": [[141, "model-building"]], "Pipeline specification in run_cross_validation()": [[141, "pipeline-specification-in-run-cross-validation"]], "Feature preprocessing": [[141, "feature-preprocessing"]], "Pipeline specification made easy with the PipelineCreator": [[141, "pipeline-specification-made-easy-with-the-pipelinecreator"]], "Setting hyperparameters": [[141, "setting-hyperparameters"]], "Selective preprocessing using feature types": [[141, "selective-preprocessing-using-feature-types"]], "What\u2019s new": [[142, "what-s-new"]], "Julearn 0.3.4 (2024-10-17)": [[142, "julearn-0-3-4-2024-10-17"]], "Bugfixes": [[142, "bugfixes"], [142, "id1"], [142, "id2"], [142, "id5"], [142, "id10"]], "Enhancements": [[142, "enhancements"], [142, "id4"], [142, "id7"], [142, "id12"]], "Julearn 0.3.3 (2024-05-16)": [[142, "julearn-0-3-3-2024-05-16"]], "Improved Documentation": [[142, "improved-documentation"], [142, "id3"], [142, "id6"], [142, "id11"]], "Julearn 0.3.2 (2024-05-03)": [[142, "julearn-0-3-2-2024-05-03"]], "Features": [[142, "features"], [142, "id8"], [142, "id13"]], "Misc": [[142, "misc"], [142, "id9"]], "Julearn 0.3.1 (2024-01-23)": [[142, "julearn-0-3-1-2024-01-23"]], "Julearn 0.3.0 (2023-07-19)": [[142, "julearn-0-3-0-2023-07-19"]], "Julearn 0.2.5 (2022-07-21)": [[142, "julearn-0-2-5-2022-07-21"]], "API Changes": [[142, "api-changes"]]}, "indexentries": {"julearn.base": [[0, "module-julearn.base"]], "module": [[0, "module-julearn.base"], [1, "module-julearn.config"], [76, "module-julearn.inspect"], [77, "module-julearn.api"], [78, "module-julearn.model_selection"], [79, "module-julearn.models"], [79, "module-julearn.models.dynamic"], [80, "module-julearn.pipeline"], [81, "module-julearn.prepare"], [82, "module-julearn.scoring"], [82, "module-julearn.scoring.metrics"], [83, "module-julearn.stats"], [84, "module-julearn.transformers"], [84, "module-julearn.transformers.target"], [85, "module-julearn.utils"], [85, "module-julearn.utils.typing"], [86, "module-julearn.viz"]], "julearn.config": [[1, "module-julearn.config"]], "pipelinecreator (class in julearn)": [[2, "julearn.PipelineCreator"]], "__init__() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.__init__"]], "add() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.add"]], "copy() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.copy"]], "from_list() (julearn.pipelinecreator class method)": [[2, "julearn.PipelineCreator.from_list"]], "has_model() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.has_model"]], "split() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.split"]], "steps (julearn.pipelinecreator property)": [[2, "julearn.PipelineCreator.steps"]], "to_pipeline() (julearn.pipelinecreator method)": [[2, "julearn.PipelineCreator.to_pipeline"]], "targetpipelinecreator (class in julearn)": [[3, "julearn.TargetPipelineCreator"]], "__init__() (julearn.targetpipelinecreator method)": [[3, "julearn.TargetPipelineCreator.__init__"]], "add() (julearn.targetpipelinecreator method)": [[3, "julearn.TargetPipelineCreator.add"]], "to_pipeline() (julearn.targetpipelinecreator method)": [[3, "julearn.TargetPipelineCreator.to_pipeline"]], "columntypes (class in julearn.base)": [[4, "julearn.base.ColumnTypes"]], "__init__() (julearn.base.columntypes method)": [[4, "julearn.base.ColumnTypes.__init__"]], "add() (julearn.base.columntypes method)": [[4, "julearn.base.ColumnTypes.add"]], "copy() (julearn.base.columntypes method)": [[4, "julearn.base.ColumnTypes.copy"]], "pattern (julearn.base.columntypes property)": [[4, "julearn.base.ColumnTypes.pattern"]], "to_type_selector() (julearn.base.columntypes method)": [[4, "julearn.base.ColumnTypes.to_type_selector"]], "columntypeslike (in module julearn.base)": [[5, "julearn.base.ColumnTypesLike"]], "jubaseestimator (class in julearn.base)": [[6, "julearn.base.JuBaseEstimator"]], "__init__() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.__init__"]], "filter_columns() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.filter_columns"]], "get_apply_to() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.get_apply_to"]], "get_metadata_routing() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.get_metadata_routing"]], "get_needed_types() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.get_needed_types"]], "get_params() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.get_params"]], "set_params() (julearn.base.jubaseestimator method)": [[6, "julearn.base.JuBaseEstimator.set_params"]], "jutransformer (class in julearn.base)": [[7, "julearn.base.JuTransformer"]], "__init__() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.__init__"]], "filter_columns() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.filter_columns"]], "fit() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.fit"]], "fit_transform() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.fit_transform"]], "get_apply_to() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.get_apply_to"]], "get_metadata_routing() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.get_metadata_routing"]], "get_needed_types() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.get_needed_types"]], "get_params() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.get_params"]], "set_output() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.set_output"]], "set_params() (julearn.base.jutransformer method)": [[7, "julearn.base.JuTransformer.set_params"]], "wrapmodel (class in julearn.base)": [[8, "julearn.base.WrapModel"]], "__init__() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.__init__"]], "classes_ (julearn.base.wrapmodel property)": [[8, "julearn.base.WrapModel.classes_"]], "decision_function() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.decision_function"]], "filter_columns() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.filter_columns"]], "fit() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.fit"]], "get_apply_to() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.get_apply_to"]], "get_metadata_routing() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.get_metadata_routing"]], "get_needed_types() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.get_needed_types"]], "get_params() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.get_params"]], "predict() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.predict"]], "predict_log_proba() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.predict_log_proba"]], "predict_proba() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.predict_proba"]], "score() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.score"]], "set_params() (julearn.base.wrapmodel method)": [[8, "julearn.base.WrapModel.set_params"]], "change_column_type() (in module julearn.base)": [[9, "julearn.base.change_column_type"]], "ensure_column_types() (in module julearn.base)": [[10, "julearn.base.ensure_column_types"]], "get_column_type() (in module julearn.base)": [[11, "julearn.base.get_column_type"]], "make_type_selector() (in module julearn.base)": [[12, "julearn.base.make_type_selector"]], "get_config() (in module julearn.config)": [[13, "julearn.config.get_config"]], "set_config() (in module julearn.config)": [[14, "julearn.config.set_config"]], "foldsinspector (class in julearn.inspect)": [[15, "julearn.inspect.FoldsInspector"]], "__init__() (julearn.inspect.foldsinspector method)": [[15, "julearn.inspect.FoldsInspector.__init__"]], "decision_function() (julearn.inspect.foldsinspector method)": [[15, "julearn.inspect.FoldsInspector.decision_function"]], "predict() (julearn.inspect.foldsinspector method)": [[15, "julearn.inspect.FoldsInspector.predict"]], "predict_log_proba() (julearn.inspect.foldsinspector method)": [[15, "julearn.inspect.FoldsInspector.predict_log_proba"]], "predict_proba() (julearn.inspect.foldsinspector method)": [[15, "julearn.inspect.FoldsInspector.predict_proba"]], "inspector (class in julearn.inspect)": [[16, "julearn.inspect.Inspector"]], "__init__() (julearn.inspect.inspector method)": [[16, "julearn.inspect.Inspector.__init__"]], "folds (julearn.inspect.inspector property)": [[16, "julearn.inspect.Inspector.folds"]], "model (julearn.inspect.inspector property)": [[16, "julearn.inspect.Inspector.model"]], "preprocess() (in module julearn.inspect)": [[17, "julearn.inspect.preprocess"]], "continuousstratifiedgroupkfold (class in julearn.model_selection)": [[18, "julearn.model_selection.ContinuousStratifiedGroupKFold"]], "__init__() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[18, "julearn.model_selection.ContinuousStratifiedGroupKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[18, "julearn.model_selection.ContinuousStratifiedGroupKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[18, "julearn.model_selection.ContinuousStratifiedGroupKFold.get_n_splits"]], "set_split_request() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[18, "julearn.model_selection.ContinuousStratifiedGroupKFold.set_split_request"]], "split() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[18, "julearn.model_selection.ContinuousStratifiedGroupKFold.split"]], "continuousstratifiedkfold (class in julearn.model_selection)": [[19, "julearn.model_selection.ContinuousStratifiedKFold"]], "__init__() (julearn.model_selection.continuousstratifiedkfold method)": [[19, "julearn.model_selection.ContinuousStratifiedKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.continuousstratifiedkfold method)": [[19, "julearn.model_selection.ContinuousStratifiedKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.continuousstratifiedkfold method)": [[19, "julearn.model_selection.ContinuousStratifiedKFold.get_n_splits"]], "split() (julearn.model_selection.continuousstratifiedkfold method)": [[19, "julearn.model_selection.ContinuousStratifiedKFold.split"]], "repeatedcontinuousstratifiedgroupkfold (class in julearn.model_selection)": [[20, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold"]], "__init__() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[20, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[20, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[20, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.get_n_splits"]], "split() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[20, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.split"]], "repeatedcontinuousstratifiedkfold (class in julearn.model_selection)": [[21, "julearn.model_selection.RepeatedContinuousStratifiedKFold"]], "__init__() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[21, "julearn.model_selection.RepeatedContinuousStratifiedKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[21, "julearn.model_selection.RepeatedContinuousStratifiedKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[21, "julearn.model_selection.RepeatedContinuousStratifiedKFold.get_n_splits"]], "split() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[21, "julearn.model_selection.RepeatedContinuousStratifiedKFold.split"]], "stratifiedbootstrap (class in julearn.model_selection)": [[22, "julearn.model_selection.StratifiedBootstrap"]], "__init__() (julearn.model_selection.stratifiedbootstrap method)": [[22, "julearn.model_selection.StratifiedBootstrap.__init__"]], "get_metadata_routing() (julearn.model_selection.stratifiedbootstrap method)": [[22, "julearn.model_selection.StratifiedBootstrap.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.stratifiedbootstrap method)": [[22, "julearn.model_selection.StratifiedBootstrap.get_n_splits"]], "split() (julearn.model_selection.stratifiedbootstrap method)": [[22, "julearn.model_selection.StratifiedBootstrap.split"]], "get_searcher() (in module julearn.model_selection)": [[23, "julearn.model_selection.get_searcher"]], "list_searchers() (in module julearn.model_selection)": [[24, "julearn.model_selection.list_searchers"]], "register_searcher() (in module julearn.model_selection)": [[25, "julearn.model_selection.register_searcher"]], "reset_searcher_register() (in module julearn.model_selection)": [[26, "julearn.model_selection.reset_searcher_register"]], "dynamicselection (class in julearn.models.dynamic)": [[27, "julearn.models.dynamic.DynamicSelection"]], "__init__() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.__init__"]], "fit() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.fit"]], "get_metadata_routing() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.get_metadata_routing"]], "get_params() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.get_params"]], "predict() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.predict"]], "predict_proba() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.predict_proba"]], "score() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.score"]], "set_params() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.set_params"]], "set_score_request() (julearn.models.dynamic.dynamicselection method)": [[27, "julearn.models.dynamic.DynamicSelection.set_score_request"]], "get_model() (in module julearn.models)": [[28, "julearn.models.get_model"]], "list_models() (in module julearn.models)": [[29, "julearn.models.list_models"]], "register_model() (in module julearn.models)": [[30, "julearn.models.register_model"]], "reset_model_register() (in module julearn.models)": [[31, "julearn.models.reset_model_register"]], "jutargetpipeline (class in julearn.pipeline)": [[32, "julearn.pipeline.JuTargetPipeline"]], "__init__() (julearn.pipeline.jutargetpipeline method)": [[32, "julearn.pipeline.JuTargetPipeline.__init__"]], "can_inverse_transform() (julearn.pipeline.jutargetpipeline method)": [[32, "julearn.pipeline.JuTargetPipeline.can_inverse_transform"]], "fit() (julearn.pipeline.jutargetpipeline method)": [[32, "julearn.pipeline.JuTargetPipeline.fit"]], "fit_transform() (julearn.pipeline.jutargetpipeline method)": [[32, "julearn.pipeline.JuTargetPipeline.fit_transform"]], "inverse_transform() (julearn.pipeline.jutargetpipeline method)": [[32, "julearn.pipeline.JuTargetPipeline.inverse_transform"]], "needed_types (julearn.pipeline.jutargetpipeline property)": [[32, "julearn.pipeline.JuTargetPipeline.needed_types"]], "transform() (julearn.pipeline.jutargetpipeline method)": [[32, "julearn.pipeline.JuTargetPipeline.transform"]], "step (class in julearn.pipeline.pipeline_creator)": [[33, "julearn.pipeline.pipeline_creator.Step"]], "__init__() (julearn.pipeline.pipeline_creator.step method)": [[33, "julearn.pipeline.pipeline_creator.Step.__init__"]], "apply_to (julearn.pipeline.pipeline_creator.step attribute)": [[33, "julearn.pipeline.pipeline_creator.Step.apply_to"]], "estimator (julearn.pipeline.pipeline_creator.step attribute)": [[33, "julearn.pipeline.pipeline_creator.Step.estimator"]], "name (julearn.pipeline.pipeline_creator.step attribute)": [[33, "julearn.pipeline.pipeline_creator.Step.name"]], "needed_types (julearn.pipeline.pipeline_creator.step attribute)": [[33, "julearn.pipeline.pipeline_creator.Step.needed_types"]], "params_to_tune (julearn.pipeline.pipeline_creator.step attribute)": [[33, "julearn.pipeline.pipeline_creator.Step.params_to_tune"]], "row_select_col_type (julearn.pipeline.pipeline_creator.step attribute)": [[33, "julearn.pipeline.pipeline_creator.Step.row_select_col_type"]], "row_select_vals (julearn.pipeline.pipeline_creator.step attribute)": [[33, "julearn.pipeline.pipeline_creator.Step.row_select_vals"]], "check_consistency() (in module julearn.prepare)": [[34, "julearn.prepare.check_consistency"]], "prepare_input_data() (in module julearn.prepare)": [[35, "julearn.prepare.prepare_input_data"]], "run_cross_validation() (in module julearn)": [[36, "julearn.run_cross_validation"]], "run_fit() (in module julearn)": [[37, "julearn.run_fit"]], "check_scoring() (in module julearn.scoring)": [[38, "julearn.scoring.check_scoring"]], "get_scorer() (in module julearn.scoring)": [[39, "julearn.scoring.get_scorer"]], "list_scorers() (in module julearn.scoring)": [[40, "julearn.scoring.list_scorers"]], "r2_corr() (in module julearn.scoring.metrics)": [[41, "julearn.scoring.metrics.r2_corr"]], "r_corr() (in module julearn.scoring.metrics)": [[42, "julearn.scoring.metrics.r_corr"]], "register_scorer() (in module julearn.scoring)": [[43, "julearn.scoring.register_scorer"]], "reset_scorer_register() (in module julearn.scoring)": [[44, "julearn.scoring.reset_scorer_register"]], "corrected_ttest() (in module julearn.stats)": [[45, "julearn.stats.corrected_ttest"]], "cbpm (class in julearn.transformers)": [[46, "julearn.transformers.CBPM"]], "__init__() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.__init__"]], "aggregate() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.aggregate"]], "fit() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.fit"]], "fit_transform() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.fit_transform"]], "get_feature_names_out() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.get_metadata_routing"]], "get_params() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.get_params"]], "set_output() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.set_output"]], "set_params() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.set_params"]], "transform() (julearn.transformers.cbpm method)": [[46, "julearn.transformers.CBPM.transform"]], "changecolumntypes (class in julearn.transformers)": [[47, "julearn.transformers.ChangeColumnTypes"]], "__init__() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.__init__"]], "filter_columns() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.filter_columns"]], "fit() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.fit"]], "fit_transform() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.fit_transform"]], "get_apply_to() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.get_apply_to"]], "get_feature_names_out() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.get_metadata_routing"]], "get_needed_types() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.get_needed_types"]], "get_params() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.get_params"]], "set_output() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.set_output"]], "set_params() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.set_params"]], "transform() (julearn.transformers.changecolumntypes method)": [[47, "julearn.transformers.ChangeColumnTypes.transform"]], "dropcolumns (class in julearn.transformers)": [[48, "julearn.transformers.DropColumns"]], "__init__() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.__init__"]], "filter_columns() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.filter_columns"]], "fit() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.fit"]], "fit_transform() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.fit_transform"]], "get_apply_to() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.get_apply_to"]], "get_metadata_routing() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.get_metadata_routing"]], "get_needed_types() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.get_needed_types"]], "get_params() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.get_params"]], "get_support() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.get_support"]], "set_output() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.set_output"]], "set_params() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.set_params"]], "transform() (julearn.transformers.dropcolumns method)": [[48, "julearn.transformers.DropColumns.transform"]], "filtercolumns (class in julearn.transformers)": [[49, "julearn.transformers.FilterColumns"]], "__init__() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.__init__"]], "filter_columns() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.filter_columns"]], "fit() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.fit"]], "fit_transform() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.fit_transform"]], "get_apply_to() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.get_apply_to"]], "get_feature_names_out() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.get_metadata_routing"]], "get_needed_types() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.get_needed_types"]], "get_params() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.get_params"]], "set_output() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.set_output"]], "set_params() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.set_params"]], "transform() (julearn.transformers.filtercolumns method)": [[49, "julearn.transformers.FilterColumns.transform"]], "jucolumntransformer (class in julearn.transformers)": [[50, "julearn.transformers.JuColumnTransformer"]], "__init__() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.__init__"]], "filter_columns() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.filter_columns"]], "fit() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.fit"]], "fit_transform() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.fit_transform"]], "get_apply_to() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.get_apply_to"]], "get_feature_names_out() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.get_metadata_routing"]], "get_needed_types() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.get_needed_types"]], "get_params() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.get_params"]], "set_output() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.set_output"]], "set_params() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.set_params"]], "transform() (julearn.transformers.jucolumntransformer method)": [[50, "julearn.transformers.JuColumnTransformer.transform"]], "setcolumntypes (class in julearn.transformers)": [[51, "julearn.transformers.SetColumnTypes"]], "__init__() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.__init__"]], "filter_columns() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.filter_columns"]], "fit() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.fit"]], "fit_transform() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.fit_transform"]], "get_apply_to() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.get_apply_to"]], "get_feature_names_out() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.get_metadata_routing"]], "get_needed_types() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.get_needed_types"]], "get_params() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.get_params"]], "set_output() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.set_output"]], "set_params() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.set_params"]], "transform() (julearn.transformers.setcolumntypes method)": [[51, "julearn.transformers.SetColumnTypes.transform"]], "confoundremover (class in julearn.transformers.confound_remover)": [[52, "julearn.transformers.confound_remover.ConfoundRemover"]], "__init__() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.__init__"]], "filter_columns() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.filter_columns"]], "fit() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.fit"]], "fit_transform() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.fit_transform"]], "get_apply_to() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.get_apply_to"]], "get_feature_names_out() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.get_metadata_routing"]], "get_needed_types() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.get_needed_types"]], "get_params() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.get_params"]], "get_support() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.get_support"]], "set_output() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.set_output"]], "set_params() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.set_params"]], "transform() (julearn.transformers.confound_remover.confoundremover method)": [[52, "julearn.transformers.confound_remover.ConfoundRemover.transform"]], "get_transformer() (in module julearn.transformers)": [[53, "julearn.transformers.get_transformer"]], "list_transformers() (in module julearn.transformers)": [[54, "julearn.transformers.list_transformers"]], "register_transformer() (in module julearn.transformers)": [[55, "julearn.transformers.register_transformer"]], "reset_transformer_register() (in module julearn.transformers)": [[56, "julearn.transformers.reset_transformer_register"]], "jutargettransformer (class in julearn.transformers.target)": [[57, "julearn.transformers.target.JuTargetTransformer"]], "__init__() (julearn.transformers.target.jutargettransformer method)": [[57, "julearn.transformers.target.JuTargetTransformer.__init__"]], "fit() (julearn.transformers.target.jutargettransformer method)": [[57, "julearn.transformers.target.JuTargetTransformer.fit"]], "fit_transform() (julearn.transformers.target.jutargettransformer method)": [[57, "julearn.transformers.target.JuTargetTransformer.fit_transform"]], "transform() (julearn.transformers.target.jutargettransformer method)": [[57, "julearn.transformers.target.JuTargetTransformer.transform"]], "jutransformedtargetmodel (class in julearn.transformers.target)": [[58, "julearn.transformers.target.JuTransformedTargetModel"]], "__init__() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.__init__"]], "can_inverse_transform() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.can_inverse_transform"]], "classes_ (julearn.transformers.target.jutransformedtargetmodel property)": [[58, "julearn.transformers.target.JuTransformedTargetModel.classes_"]], "decision_function() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.decision_function"]], "filter_columns() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.filter_columns"]], "fit() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.fit"]], "get_apply_to() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.get_apply_to"]], "get_metadata_routing() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.get_metadata_routing"]], "get_needed_types() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.get_needed_types"]], "get_params() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.get_params"]], "predict() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.predict"]], "predict_proba() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.predict_proba"]], "score() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.score"]], "set_params() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.set_params"]], "transform_target() (julearn.transformers.target.jutransformedtargetmodel method)": [[58, "julearn.transformers.target.JuTransformedTargetModel.transform_target"]], "targetconfoundremover (class in julearn.transformers.target)": [[59, "julearn.transformers.target.TargetConfoundRemover"]], "__init__() (julearn.transformers.target.targetconfoundremover method)": [[59, "julearn.transformers.target.TargetConfoundRemover.__init__"]], "fit() (julearn.transformers.target.targetconfoundremover method)": [[59, "julearn.transformers.target.TargetConfoundRemover.fit"]], "fit_transform() (julearn.transformers.target.targetconfoundremover method)": [[59, "julearn.transformers.target.TargetConfoundRemover.fit_transform"]], "needed_types (julearn.transformers.target.targetconfoundremover property)": [[59, "julearn.transformers.target.TargetConfoundRemover.needed_types"]], "transform() (julearn.transformers.target.targetconfoundremover method)": [[59, "julearn.transformers.target.TargetConfoundRemover.transform"]], "transformedtargetwarning (class in julearn.transformers.target)": [[60, "julearn.transformers.target.TransformedTargetWarning"]], "__init__() (julearn.transformers.target.transformedtargetwarning method)": [[60, "julearn.transformers.target.TransformedTargetWarning.__init__"]], "args (julearn.transformers.target.transformedtargetwarning attribute)": [[60, "julearn.transformers.target.TransformedTargetWarning.args"]], "with_traceback() (julearn.transformers.target.transformedtargetwarning method)": [[60, "julearn.transformers.target.TransformedTargetWarning.with_traceback"]], "get_target_transformer() (in module julearn.transformers.target)": [[61, "julearn.transformers.target.get_target_transformer"]], "list_target_transformers() (in module julearn.transformers.target)": [[62, "julearn.transformers.target.list_target_transformers"]], "register_target_transformer() (in module julearn.transformers.target)": [[63, "julearn.transformers.target.register_target_transformer"]], "reset_target_transformer_register() (in module julearn.transformers.target)": [[64, "julearn.transformers.target.reset_target_transformer_register"]], "configure_logging() (in module julearn.utils)": [[65, "julearn.utils.configure_logging"]], "logger (in module julearn.utils)": [[66, "julearn.utils.logger"]], "raise_error() (in module julearn.utils)": [[67, "julearn.utils.raise_error"]], "estimatorlike (in module julearn.utils.typing)": [[68, "julearn.utils.typing.EstimatorLike"]], "estimatorlikefit1 (class in julearn.utils.typing)": [[69, "julearn.utils.typing.EstimatorLikeFit1"]], "__init__() (julearn.utils.typing.estimatorlikefit1 method)": [[69, "julearn.utils.typing.EstimatorLikeFit1.__init__"]], "fit() (julearn.utils.typing.estimatorlikefit1 method)": [[69, "julearn.utils.typing.EstimatorLikeFit1.fit"]], "get_params() (julearn.utils.typing.estimatorlikefit1 method)": [[69, "julearn.utils.typing.EstimatorLikeFit1.get_params"]], "set_params() (julearn.utils.typing.estimatorlikefit1 method)": [[69, "julearn.utils.typing.EstimatorLikeFit1.set_params"]], "estimatorlikefit2 (class in julearn.utils.typing)": [[70, "julearn.utils.typing.EstimatorLikeFit2"]], "__init__() (julearn.utils.typing.estimatorlikefit2 method)": [[70, "julearn.utils.typing.EstimatorLikeFit2.__init__"]], "fit() (julearn.utils.typing.estimatorlikefit2 method)": [[70, "julearn.utils.typing.EstimatorLikeFit2.fit"]], "get_params() (julearn.utils.typing.estimatorlikefit2 method)": [[70, "julearn.utils.typing.EstimatorLikeFit2.get_params"]], "set_params() (julearn.utils.typing.estimatorlikefit2 method)": [[70, "julearn.utils.typing.EstimatorLikeFit2.set_params"]], "estimatorlikefity (class in julearn.utils.typing)": [[71, "julearn.utils.typing.EstimatorLikeFity"]], "__init__() (julearn.utils.typing.estimatorlikefity method)": [[71, "julearn.utils.typing.EstimatorLikeFity.__init__"]], "fit() (julearn.utils.typing.estimatorlikefity method)": [[71, "julearn.utils.typing.EstimatorLikeFity.fit"]], "get_params() (julearn.utils.typing.estimatorlikefity method)": [[71, "julearn.utils.typing.EstimatorLikeFity.get_params"]], "set_params() (julearn.utils.typing.estimatorlikefity method)": [[71, "julearn.utils.typing.EstimatorLikeFity.set_params"]], "juestimatorlike (class in julearn.utils.typing)": [[72, "julearn.utils.typing.JuEstimatorLike"]], "__init__() (julearn.utils.typing.juestimatorlike method)": [[72, "julearn.utils.typing.JuEstimatorLike.__init__"]], "fit() (julearn.utils.typing.juestimatorlike method)": [[72, "julearn.utils.typing.JuEstimatorLike.fit"]], "get_apply_to() (julearn.utils.typing.juestimatorlike method)": [[72, "julearn.utils.typing.JuEstimatorLike.get_apply_to"]], "get_needed_types() (julearn.utils.typing.juestimatorlike method)": [[72, "julearn.utils.typing.JuEstimatorLike.get_needed_types"]], "get_params() (julearn.utils.typing.juestimatorlike method)": [[72, "julearn.utils.typing.JuEstimatorLike.get_params"]], "set_params() (julearn.utils.typing.juestimatorlike method)": [[72, "julearn.utils.typing.JuEstimatorLike.set_params"]], "warn_with_log() (in module julearn.utils)": [[73, "julearn.utils.warn_with_log"]], "plot_scores() (in module julearn.viz)": [[74, "julearn.viz.plot_scores"]], "julearn.inspect": [[76, "module-julearn.inspect"]], "julearn.api": [[77, "module-julearn.api"]], "julearn.model_selection": [[78, "module-julearn.model_selection"]], "julearn.models": [[79, "module-julearn.models"]], "julearn.models.dynamic": [[79, "module-julearn.models.dynamic"]], "julearn.pipeline": [[80, "module-julearn.pipeline"]], "julearn.prepare": [[81, "module-julearn.prepare"]], "julearn.scoring": [[82, "module-julearn.scoring"]], "julearn.scoring.metrics": [[82, "module-julearn.scoring.metrics"]], "julearn.stats": [[83, "module-julearn.stats"]], "julearn.transformers": [[84, "module-julearn.transformers"]], "julearn.transformers.target": [[84, "module-julearn.transformers.target"]], "julearn.utils": [[85, "module-julearn.utils"]], "julearn.utils.typing": [[85, "module-julearn.utils.typing"]], "julearn.viz": [[86, "module-julearn.viz"]]}})