Search.setIndex({"docnames": ["api/base", "api/generated/julearn.PipelineCreator", "api/generated/julearn.TargetPipelineCreator", "api/generated/julearn.base.ColumnTypes", "api/generated/julearn.base.ColumnTypesLike", "api/generated/julearn.base.JuBaseEstimator", "api/generated/julearn.base.JuTransformer", "api/generated/julearn.base.WrapModel", "api/generated/julearn.base.change_column_type", "api/generated/julearn.base.ensure_column_types", "api/generated/julearn.base.get_column_type", "api/generated/julearn.base.make_type_selector", "api/generated/julearn.inspect.FoldsInspector", "api/generated/julearn.inspect.Inspector", "api/generated/julearn.inspect.preprocess", "api/generated/julearn.model_selection.ContinuousStratifiedGroupKFold", "api/generated/julearn.model_selection.ContinuousStratifiedKFold", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedGroupKFold", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedKFold", "api/generated/julearn.model_selection.StratifiedBootstrap", "api/generated/julearn.model_selection.get_searcher", "api/generated/julearn.model_selection.list_searchers", "api/generated/julearn.model_selection.register_searcher", "api/generated/julearn.model_selection.reset_searcher_register", "api/generated/julearn.models.dynamic.DynamicSelection", "api/generated/julearn.models.get_model", "api/generated/julearn.models.list_models", "api/generated/julearn.models.register_model", "api/generated/julearn.models.reset_model_register", "api/generated/julearn.pipeline.JuTargetPipeline", "api/generated/julearn.pipeline.pipeline_creator.Step", "api/generated/julearn.prepare.check_consistency", "api/generated/julearn.prepare.prepare_input_data", "api/generated/julearn.run_cross_validation", "api/generated/julearn.run_fit", "api/generated/julearn.scoring.check_scoring", "api/generated/julearn.scoring.get_scorer", "api/generated/julearn.scoring.list_scorers", "api/generated/julearn.scoring.metrics.r2_corr", "api/generated/julearn.scoring.metrics.r_corr", "api/generated/julearn.scoring.register_scorer", "api/generated/julearn.scoring.reset_scorer_register", "api/generated/julearn.stats.corrected_ttest", "api/generated/julearn.transformers.CBPM", "api/generated/julearn.transformers.ChangeColumnTypes", "api/generated/julearn.transformers.DropColumns", "api/generated/julearn.transformers.FilterColumns", "api/generated/julearn.transformers.JuColumnTransformer", "api/generated/julearn.transformers.SetColumnTypes", "api/generated/julearn.transformers.confound_remover.ConfoundRemover", "api/generated/julearn.transformers.get_transformer", "api/generated/julearn.transformers.list_transformers", "api/generated/julearn.transformers.register_transformer", "api/generated/julearn.transformers.reset_transformer_register", "api/generated/julearn.transformers.target.JuTargetTransformer", "api/generated/julearn.transformers.target.JuTransformedTargetModel", "api/generated/julearn.transformers.target.TargetConfoundRemover", "api/generated/julearn.transformers.target.TransformedTargetWarning", "api/generated/julearn.transformers.target.get_target_transformer", "api/generated/julearn.transformers.target.list_target_transformers", "api/generated/julearn.transformers.target.register_target_transformer", "api/generated/julearn.transformers.target.reset_target_transformer_register", "api/generated/julearn.utils.configure_logging", "api/generated/julearn.utils.logger", "api/generated/julearn.utils.raise_error", "api/generated/julearn.utils.typing.EstimatorLike", "api/generated/julearn.utils.typing.EstimatorLikeFit1", "api/generated/julearn.utils.typing.EstimatorLikeFit2", "api/generated/julearn.utils.typing.EstimatorLikeFity", "api/generated/julearn.utils.typing.JuEstimatorLike", "api/generated/julearn.utils.warn_with_log", "api/generated/julearn.viz.plot_scores", "api/index", "api/inspect", "api/main", "api/model_selection", "api/models", "api/pipeline", "api/prepare", "api/scoring", "api/stats", "api/transformers", "api/utils", "api/viz", "auto_examples/00_starting/index", "auto_examples/00_starting/plot_cm_acc_multiclass", "auto_examples/00_starting/plot_example_regression", "auto_examples/00_starting/plot_stratified_kfold_reg", "auto_examples/00_starting/run_combine_pandas", "auto_examples/00_starting/run_grouped_cv", "auto_examples/00_starting/run_simple_binary_classification", "auto_examples/00_starting/sg_execution_times", "auto_examples/01_model_comparison/index", "auto_examples/01_model_comparison/plot_simple_model_comparison", "auto_examples/01_model_comparison/sg_execution_times", "auto_examples/02_inspection/index", "auto_examples/02_inspection/plot_groupcv_inspect_svm", "auto_examples/02_inspection/plot_inspect_random_forest", "auto_examples/02_inspection/plot_preprocess", "auto_examples/02_inspection/run_binary_inspect_folds", "auto_examples/02_inspection/sg_execution_times", "auto_examples/03_complex_models/index", "auto_examples/03_complex_models/run_apply_to_target", "auto_examples/03_complex_models/run_example_pca_featsets", "auto_examples/03_complex_models/run_hyperparameter_multiple_grids", "auto_examples/03_complex_models/run_hyperparameter_tuning", "auto_examples/03_complex_models/run_hyperparameter_tuning_bayessearch", "auto_examples/03_complex_models/run_stacked_models", "auto_examples/03_complex_models/sg_execution_times", "auto_examples/04_confounds/index", "auto_examples/04_confounds/plot_confound_removal_classification", "auto_examples/04_confounds/run_return_confounds", "auto_examples/04_confounds/sg_execution_times", "auto_examples/05_customization/index", "auto_examples/05_customization/run_custom_scorers_regression", "auto_examples/05_customization/sg_execution_times", "available_pipeline_steps", "configuration", "contributing", "examples", "faq", "getting_started", "index", "maintaining", "selected_deeper_topics/CBPM", "selected_deeper_topics/confound_removal", "selected_deeper_topics/cross_validation_splitter", "selected_deeper_topics/hyperparameter_tuning", "selected_deeper_topics/index", "selected_deeper_topics/model_inspect", "selected_deeper_topics/stacked_models", "selected_deeper_topics/target_transformers", "what_really_need_know/cross_validation", "what_really_need_know/data", "what_really_need_know/index", "what_really_need_know/model_comparison", "what_really_need_know/model_evaluation", "what_really_need_know/pipeline", "whats_new"], "filenames": ["api/base.rst", "api/generated/julearn.PipelineCreator.rst", "api/generated/julearn.TargetPipelineCreator.rst", "api/generated/julearn.base.ColumnTypes.rst", "api/generated/julearn.base.ColumnTypesLike.rst", "api/generated/julearn.base.JuBaseEstimator.rst", "api/generated/julearn.base.JuTransformer.rst", "api/generated/julearn.base.WrapModel.rst", "api/generated/julearn.base.change_column_type.rst", "api/generated/julearn.base.ensure_column_types.rst", "api/generated/julearn.base.get_column_type.rst", "api/generated/julearn.base.make_type_selector.rst", "api/generated/julearn.inspect.FoldsInspector.rst", "api/generated/julearn.inspect.Inspector.rst", "api/generated/julearn.inspect.preprocess.rst", "api/generated/julearn.model_selection.ContinuousStratifiedGroupKFold.rst", "api/generated/julearn.model_selection.ContinuousStratifiedKFold.rst", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.rst", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedKFold.rst", "api/generated/julearn.model_selection.StratifiedBootstrap.rst", "api/generated/julearn.model_selection.get_searcher.rst", "api/generated/julearn.model_selection.list_searchers.rst", "api/generated/julearn.model_selection.register_searcher.rst", "api/generated/julearn.model_selection.reset_searcher_register.rst", "api/generated/julearn.models.dynamic.DynamicSelection.rst", "api/generated/julearn.models.get_model.rst", "api/generated/julearn.models.list_models.rst", "api/generated/julearn.models.register_model.rst", "api/generated/julearn.models.reset_model_register.rst", "api/generated/julearn.pipeline.JuTargetPipeline.rst", "api/generated/julearn.pipeline.pipeline_creator.Step.rst", "api/generated/julearn.prepare.check_consistency.rst", "api/generated/julearn.prepare.prepare_input_data.rst", "api/generated/julearn.run_cross_validation.rst", "api/generated/julearn.run_fit.rst", "api/generated/julearn.scoring.check_scoring.rst", "api/generated/julearn.scoring.get_scorer.rst", "api/generated/julearn.scoring.list_scorers.rst", "api/generated/julearn.scoring.metrics.r2_corr.rst", "api/generated/julearn.scoring.metrics.r_corr.rst", "api/generated/julearn.scoring.register_scorer.rst", "api/generated/julearn.scoring.reset_scorer_register.rst", "api/generated/julearn.stats.corrected_ttest.rst", "api/generated/julearn.transformers.CBPM.rst", "api/generated/julearn.transformers.ChangeColumnTypes.rst", "api/generated/julearn.transformers.DropColumns.rst", "api/generated/julearn.transformers.FilterColumns.rst", "api/generated/julearn.transformers.JuColumnTransformer.rst", "api/generated/julearn.transformers.SetColumnTypes.rst", "api/generated/julearn.transformers.confound_remover.ConfoundRemover.rst", "api/generated/julearn.transformers.get_transformer.rst", "api/generated/julearn.transformers.list_transformers.rst", "api/generated/julearn.transformers.register_transformer.rst", "api/generated/julearn.transformers.reset_transformer_register.rst", "api/generated/julearn.transformers.target.JuTargetTransformer.rst", "api/generated/julearn.transformers.target.JuTransformedTargetModel.rst", "api/generated/julearn.transformers.target.TargetConfoundRemover.rst", "api/generated/julearn.transformers.target.TransformedTargetWarning.rst", "api/generated/julearn.transformers.target.get_target_transformer.rst", "api/generated/julearn.transformers.target.list_target_transformers.rst", "api/generated/julearn.transformers.target.register_target_transformer.rst", "api/generated/julearn.transformers.target.reset_target_transformer_register.rst", "api/generated/julearn.utils.configure_logging.rst", "api/generated/julearn.utils.logger.rst", "api/generated/julearn.utils.raise_error.rst", "api/generated/julearn.utils.typing.EstimatorLike.rst", "api/generated/julearn.utils.typing.EstimatorLikeFit1.rst", "api/generated/julearn.utils.typing.EstimatorLikeFit2.rst", "api/generated/julearn.utils.typing.EstimatorLikeFity.rst", "api/generated/julearn.utils.typing.JuEstimatorLike.rst", "api/generated/julearn.utils.warn_with_log.rst", "api/generated/julearn.viz.plot_scores.rst", "api/index.rst", "api/inspect.rst", "api/main.rst", "api/model_selection.rst", "api/models.rst", "api/pipeline.rst", "api/prepare.rst", "api/scoring.rst", "api/stats.rst", "api/transformers.rst", "api/utils.rst", "api/viz.rst", "auto_examples/00_starting/index.rst", "auto_examples/00_starting/plot_cm_acc_multiclass.rst", "auto_examples/00_starting/plot_example_regression.rst", "auto_examples/00_starting/plot_stratified_kfold_reg.rst", "auto_examples/00_starting/run_combine_pandas.rst", "auto_examples/00_starting/run_grouped_cv.rst", "auto_examples/00_starting/run_simple_binary_classification.rst", "auto_examples/00_starting/sg_execution_times.rst", "auto_examples/01_model_comparison/index.rst", "auto_examples/01_model_comparison/plot_simple_model_comparison.rst", "auto_examples/01_model_comparison/sg_execution_times.rst", "auto_examples/02_inspection/index.rst", "auto_examples/02_inspection/plot_groupcv_inspect_svm.rst", "auto_examples/02_inspection/plot_inspect_random_forest.rst", "auto_examples/02_inspection/plot_preprocess.rst", "auto_examples/02_inspection/run_binary_inspect_folds.rst", "auto_examples/02_inspection/sg_execution_times.rst", "auto_examples/03_complex_models/index.rst", "auto_examples/03_complex_models/run_apply_to_target.rst", "auto_examples/03_complex_models/run_example_pca_featsets.rst", "auto_examples/03_complex_models/run_hyperparameter_multiple_grids.rst", "auto_examples/03_complex_models/run_hyperparameter_tuning.rst", "auto_examples/03_complex_models/run_hyperparameter_tuning_bayessearch.rst", "auto_examples/03_complex_models/run_stacked_models.rst", "auto_examples/03_complex_models/sg_execution_times.rst", "auto_examples/04_confounds/index.rst", "auto_examples/04_confounds/plot_confound_removal_classification.rst", "auto_examples/04_confounds/run_return_confounds.rst", "auto_examples/04_confounds/sg_execution_times.rst", "auto_examples/05_customization/index.rst", "auto_examples/05_customization/run_custom_scorers_regression.rst", "auto_examples/05_customization/sg_execution_times.rst", "available_pipeline_steps.rst", "configuration.rst", "contributing.rst", "examples.rst", "faq.rst", "getting_started.rst", "index.rst", "maintaining.rst", "selected_deeper_topics/CBPM.rst", "selected_deeper_topics/confound_removal.rst", "selected_deeper_topics/cross_validation_splitter.rst", "selected_deeper_topics/hyperparameter_tuning.rst", "selected_deeper_topics/index.rst", "selected_deeper_topics/model_inspect.rst", "selected_deeper_topics/stacked_models.rst", "selected_deeper_topics/target_transformers.rst", "what_really_need_know/cross_validation.rst", "what_really_need_know/data.rst", "what_really_need_know/index.rst", "what_really_need_know/model_comparison.rst", "what_really_need_know/model_evaluation.rst", "what_really_need_know/pipeline.rst", "whats_new.rst"], "titles": ["<span class=\"section-number\">9.4. </span>Base", "julearn.PipelineCreator", "julearn.TargetPipelineCreator", "julearn.base.ColumnTypes", "julearn.base.ColumnTypesLike", "julearn.base.JuBaseEstimator", "julearn.base.JuTransformer", "julearn.base.WrapModel", "julearn.base.change_column_type", "julearn.base.ensure_column_types", "julearn.base.get_column_type", "julearn.base.make_type_selector", "julearn.inspect.FoldsInspector", "julearn.inspect.Inspector", "julearn.inspect.preprocess", "julearn.model_selection.ContinuousStratifiedGroupKFold", "julearn.model_selection.ContinuousStratifiedKFold", "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold", "julearn.model_selection.RepeatedContinuousStratifiedKFold", "julearn.model_selection.StratifiedBootstrap", "julearn.model_selection.get_searcher", "julearn.model_selection.list_searchers", "julearn.model_selection.register_searcher", "julearn.model_selection.reset_searcher_register", "julearn.models.dynamic.DynamicSelection", "julearn.models.get_model", "julearn.models.list_models", "julearn.models.register_model", "julearn.models.reset_model_register", "julearn.pipeline.JuTargetPipeline", "julearn.pipeline.pipeline_creator.Step", "julearn.prepare.check_consistency", "julearn.prepare.prepare_input_data", "julearn.run_cross_validation", "julearn.run_fit", "julearn.scoring.check_scoring", "julearn.scoring.get_scorer", "julearn.scoring.list_scorers", "julearn.scoring.metrics.r2_corr", "julearn.scoring.metrics.r_corr", "julearn.scoring.register_scorer", "julearn.scoring.reset_scorer_register", "julearn.stats.corrected_ttest", "julearn.transformers.CBPM", "julearn.transformers.ChangeColumnTypes", "julearn.transformers.DropColumns", "julearn.transformers.FilterColumns", "julearn.transformers.JuColumnTransformer", "julearn.transformers.SetColumnTypes", "julearn.transformers.confound_remover.ConfoundRemover", "julearn.transformers.get_transformer", "julearn.transformers.list_transformers", "julearn.transformers.register_transformer", "julearn.transformers.reset_transformer_register", "julearn.transformers.target.JuTargetTransformer", "julearn.transformers.target.JuTransformedTargetModel", "julearn.transformers.target.TargetConfoundRemover", "julearn.transformers.target.TransformedTargetWarning", "julearn.transformers.target.get_target_transformer", "julearn.transformers.target.list_target_transformers", "julearn.transformers.target.register_target_transformer", "julearn.transformers.target.reset_target_transformer_register", "julearn.utils.configure_logging", "julearn.utils.logger", "julearn.utils.raise_error", "julearn.utils.typing.EstimatorLike", "julearn.utils.typing.EstimatorLikeFit1", "julearn.utils.typing.EstimatorLikeFit2", "julearn.utils.typing.EstimatorLikeFity", "julearn.utils.typing.JuEstimatorLike", "julearn.utils.warn_with_log", "julearn.viz.plot_scores", "<span class=\"section-number\">9. </span>API Reference", "<span class=\"section-number\">9.5. </span>Inspect", "<span class=\"section-number\">9.1. </span>Main API", "<span class=\"section-number\">9.3. </span>Model Selection", "<span class=\"section-number\">9.6. </span>Models", "<span class=\"section-number\">9.2. </span>Pipeline", "<span class=\"section-number\">9.14. </span>Prepare", "<span class=\"section-number\">9.8. </span>Scoring", "<span class=\"section-number\">9.15. </span>Stats", "<span class=\"section-number\">9.10. </span>Transformers", "<span class=\"section-number\">9.12. </span>Utils", "<span class=\"section-number\">9.16. </span>Visualization", "<span class=\"section-number\">8.1. </span>Starting with <code class=\"docutils literal notranslate\"><span class=\"pre\">julearn</span></code>", "Multiclass Classification", "Regression Analysis", "Stratified K-fold CV for regression analysis", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">pandas</span></code>", "Grouped CV", "Simple Binary Classification", "Computation times", "<span class=\"section-number\">8.2. </span>Model Comparison", "Simple Model Comparison", "Computation times", "<span class=\"section-number\">8.3. </span>Inspection", "Inspecting SVM models", "Inspecting Random Forest models", "Preprocessing with variance threshold, zscore and PCA", "Inspecting the fold-wise predictions", "Computation times", "<span class=\"section-number\">8.4. </span>Complex Models", "Transforming target variable with z-score", "Regression Analysis", "Tuning Multiple Hyperparameters Grids", "Tuning Hyperparameters", "Tuning Hyperparameters using Bayesian Search", "Stacking Classification", "Computation times", "<span class=\"section-number\">8.5. </span>Confounds", "Confound Removal (model comparison)", "Return Confounds in Confound Removal", "Computation times", "<span class=\"section-number\">8.6. </span>Customization", "Custom Scoring Function for Regression", "Computation times", "<span class=\"section-number\">7. </span>Overview of available Pipeline Steps", "<span class=\"section-number\">10. </span>Configuring <code class=\"docutils literal notranslate\"><span class=\"pre\">julearn</span></code>", "<span class=\"section-number\">11. </span>Contributing", "<span class=\"section-number\">8. </span>Examples", "<span class=\"section-number\">13. </span>FAQs", "<span class=\"section-number\">1. </span>Getting started", "Welcome to julearn\u2019s documentation!", "<span class=\"section-number\">12. </span>Maintaining", "<span class=\"section-number\">6.7. </span>Connectome-based Predictive Modeling (CBPM)", "<span class=\"section-number\">6.2. </span>Cross-validation consistent Confound Removal", "<span class=\"section-number\">6.5. </span>Cross-validation splitters", "<span class=\"section-number\">6.3. </span>Hyperparameter Tuning", "<span class=\"section-number\">6. </span>Selected deeper topics", "<span class=\"section-number\">6.4. </span>Inspecting Models", "<span class=\"section-number\">6.6. </span>Stacking Models", "<span class=\"section-number\">6.1. </span>Applying preprocessing to the target", "<span class=\"section-number\">5.1. </span>Why cross validation?", "<span class=\"section-number\">5.2. </span>Data", "<span class=\"section-number\">5. </span>What you really need to know", "<span class=\"section-number\">5.5. </span>Model Comparison", "<span class=\"section-number\">5.4. </span>Model Evaluation", "<span class=\"section-number\">5.3. </span>Model Building", "<span class=\"section-number\">14. </span>What\u2019s new"], "terms": {"provid": [0, 1, 3, 5, 13, 15, 16, 19, 24, 33, 34, 55, 76, 88, 111, 117, 122, 125, 126, 127, 129, 130, 132, 133, 135, 136, 137, 138], "import": [0, 29, 54, 85, 86, 87, 88, 89, 90, 93, 96, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 118, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "modul": [0, 33, 76, 83, 111, 117, 121, 122, 131, 132], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 83, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "page": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 122, 125, 126, 136], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 83, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 102, 103, 104, 105, 106, 110, 111, 114, 116, 117, 118, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "refer": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 98, 116, 118, 122, 127, 134], "document": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 83, 87, 93, 97, 116, 126, 127, 135, 136, 137], "It": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 96, 104, 105, 106, 121, 122, 124, 126, 127, 129, 136, 137], "onli": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 96, 98, 104, 110, 111, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138], "explain": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 126, 137], "class": [1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24, 27, 29, 30, 33, 34, 43, 44, 45, 46, 47, 48, 49, 52, 54, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 69, 70, 85, 87, 89, 90, 93, 96, 97, 99, 104, 105, 106, 107, 110, 111, 116, 125, 126, 127, 129, 135, 136, 137], "signatur": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "how": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 84, 89, 90, 93, 95, 96, 97, 101, 103, 111, 116, 118, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "pleas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 83, 98, 111, 118, 122, 136, 137], "what": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 88, 89, 96, 103, 105, 111, 116, 125, 126, 127, 129, 130, 131, 133, 136, 137], "you": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 85, 88, 93, 98, 111, 117, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 135, 136, 137], "realli": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 110, 122], "need": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 88, 89, 90, 93, 96, 102, 110, 111, 114, 118, 120, 121, 122, 124, 125, 126, 127, 129, 131, 132, 135, 136, 137, 138], "know": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 103, 105, 122, 126, 129, 132, 135, 137], "section": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 126, 133, 135, 136, 137, 138], "big": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "pictur": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "problem_typ": [1, 25, 31, 33, 34, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 127, 129, 130, 131, 135, 136, 137], "apply_to": [1, 5, 6, 7, 30, 44, 45, 46, 47, 48, 49, 55, 98, 102, 103, 107, 110, 111, 125, 129, 130, 131, 137], "continu": [1, 7, 30, 44, 46, 48, 49, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 110, 111, 114, 124, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138], "creat": [1, 2, 3, 43, 85, 87, 88, 90, 96, 98, 102, 103, 107, 116, 118, 120, 123, 124, 125, 126, 127, 129, 130, 131, 135, 136, 137], "pipelin": [1, 2, 5, 6, 7, 14, 15, 24, 31, 32, 33, 34, 35, 43, 44, 45, 46, 47, 48, 49, 54, 55, 72, 78, 96, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138], "As": [1, 88, 90, 93, 99, 107, 110, 111, 114, 118, 120, 124, 125, 126, 127, 129, 130, 135, 136, 137], "creation": 1, "bit": [1, 104, 121, 127, 130, 136], "more": [1, 3, 33, 34, 42, 85, 86, 87, 88, 89, 90, 93, 96, 98, 103, 110, 114, 118, 121, 122, 125, 126, 128, 129, 130, 132, 134, 135, 136, 137, 138], "complic": [1, 132], "than": [1, 33, 34, 42, 87, 88, 96, 122, 125, 126, 128, 137], "just": [1, 118, 122, 126, 129, 134, 137], "ad": [1, 6, 33, 34, 43, 44, 45, 46, 47, 48, 49, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 122, 124, 125, 127, 129, 130, 131, 133, 135, 136, 137, 138], "step": [1, 2, 14, 29, 33, 34, 42, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 118, 122, 124, 125, 127, 129, 130, 131, 132, 133, 135, 136, 137], "helper": 1, "so": [1, 5, 6, 7, 24, 40, 43, 44, 45, 46, 47, 48, 49, 55, 87, 88, 90, 93, 98, 105, 116, 118, 120, 121, 126, 127, 131, 133, 136, 137], "user": [1, 5, 6, 7, 15, 16, 17, 18, 19, 22, 24, 27, 33, 34, 40, 43, 44, 45, 46, 47, 48, 49, 52, 55, 57, 60, 62, 98, 111, 114, 117, 121, 122, 125, 127, 132, 137, 138], "can": [1, 3, 15, 16, 17, 18, 19, 22, 24, 27, 29, 31, 33, 34, 40, 42, 43, 47, 49, 52, 55, 60, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 110, 111, 114, 116, 117, 118, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "easili": [1, 124, 126], "complex": [1, 88, 96, 107, 119, 122, 125, 126, 127, 129, 137], "sklearn": [1, 3, 5, 7, 11, 15, 24, 29, 47, 49, 56, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 126, 127, 129, 130, 131, 135, 136], "object": [1, 2, 5, 6, 7, 15, 16, 17, 18, 19, 24, 25, 31, 33, 34, 36, 40, 43, 44, 45, 46, 47, 48, 49, 50, 52, 55, 58, 85, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 120, 125, 127, 129, 130, 131, 136, 137, 138], "paramet": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 60, 62, 64, 66, 67, 68, 69, 70, 71, 78, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 117, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "classif": [1, 27, 31, 33, 34, 62, 84, 89, 91, 93, 96, 97, 99, 101, 104, 105, 106, 108, 110, 118, 126, 127, 129, 130, 135, 136, 137], "regress": [1, 14, 15, 16, 27, 31, 33, 34, 40, 62, 84, 91, 98, 101, 102, 107, 108, 111, 113, 115, 116, 124, 127, 128, 130, 131, 135, 136, 137, 138], "The": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 29, 30, 31, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 60, 62, 64, 66, 67, 68, 69, 70, 71, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 133, 134, 135, 137, 138], "problem": [1, 15, 16, 17, 18, 19, 25, 27, 31, 33, 34, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 117, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 138], "type": [1, 3, 5, 6, 7, 8, 10, 11, 14, 25, 27, 29, 30, 31, 32, 33, 34, 44, 45, 46, 47, 48, 49, 55, 56, 72, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 117, 118, 122, 124, 125, 127, 128, 129, 131, 132, 134, 135, 136], "which": [1, 5, 6, 15, 16, 22, 27, 30, 33, 34, 43, 44, 45, 46, 47, 48, 49, 52, 56, 60, 83, 86, 87, 89, 90, 96, 98, 102, 103, 104, 105, 106, 110, 111, 114, 118, 124, 125, 126, 127, 129, 130, 131, 132, 134, 136, 137, 138], "should": [1, 5, 6, 15, 19, 22, 24, 27, 30, 40, 43, 44, 45, 46, 47, 48, 49, 52, 60, 87, 98, 103, 110, 111, 116, 118, 123, 124, 126, 127, 128, 131, 132, 136, 137], "columntypeslik": [1, 30, 44, 45, 46, 47, 49, 111], "option": [1, 2, 6, 7, 13, 14, 15, 22, 24, 27, 30, 33, 34, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 56, 60, 62, 64, 66, 67, 68, 69, 70, 71, 76, 83, 87, 88, 97, 110, 111, 120, 122, 123, 126, 127, 133, 136, 138], "To": [1, 47, 49, 96, 98, 104, 111, 118, 120, 122, 124, 126, 127, 130, 132, 133, 135, 136, 137], "transform": [1, 2, 6, 29, 33, 34, 35, 62, 72, 88, 98, 101, 106, 108, 111, 122, 124, 125, 127, 129, 131, 132, 137, 138], "appli": [1, 2, 5, 6, 7, 30, 33, 34, 43, 44, 45, 46, 47, 48, 49, 55, 56, 69, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 122, 124, 125, 127, 128, 129, 130, 135, 136, 137], "specifi": [1, 19, 20, 22, 32, 33, 34, 46, 49, 56, 58, 88, 96, 97, 103, 104, 111, 116, 121, 122, 124, 125, 130, 131, 132, 133, 134, 136, 137, 138], "add": [1, 2, 3, 22, 27, 52, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 118, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138], "method": [1, 5, 6, 7, 15, 16, 17, 18, 24, 42, 43, 44, 45, 46, 47, 48, 49, 55, 87, 88, 98, 104, 111, 117, 121, 124, 126, 127, 129, 137], "default": [1, 2, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 28, 30, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 55, 56, 60, 62, 64, 66, 67, 68, 69, 70, 71, 93, 96, 98, 104, 105, 107, 110, 111, 116, 120, 121, 124, 125, 127, 135, 136, 137, 138], "__init__": [1, 2, 3, 5, 6, 7, 12, 13, 15, 16, 17, 18, 19, 24, 29, 30, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 66, 67, 68, 69], "name": [1, 2, 5, 6, 7, 8, 14, 15, 20, 21, 22, 24, 25, 26, 27, 30, 33, 34, 36, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 58, 59, 60, 62, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 117, 118, 125, 127, 129, 130, 131, 132, 133, 135, 136, 137], "none": [1, 2, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 29, 30, 31, 32, 33, 34, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 56, 60, 62, 64, 86, 87, 88, 89, 90, 93, 96, 97, 98, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 127, 129, 130, 131, 135, 136, 137], "row_select_col_typ": [1, 6, 30, 44, 45, 46, 47, 48, 49, 111], "row_select_v": [1, 6, 30, 44, 45, 46, 47, 48, 49, 111], "param": [1, 2, 5, 6, 7, 24, 43, 44, 45, 46, 47, 48, 49, 50, 55, 58, 66, 67, 68, 69, 121, 124, 125, 127, 129, 131, 137], "estimatorlik": [1, 35, 47], "an": [1, 2, 6, 15, 16, 17, 18, 19, 24, 31, 33, 34, 36, 43, 44, 45, 46, 47, 48, 49, 85, 88, 89, 90, 93, 96, 97, 98, 105, 110, 117, 118, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138], "available_transform": 1, "available_model": 1, "str": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 62, 64, 70, 85, 86, 103, 111, 136, 137], "compat": [1, 15, 16, 17, 18, 19, 20, 22, 24, 33, 34, 44, 45, 46, 47, 48, 49, 50, 56, 111, 121, 124, 136, 137, 138], "model": [1, 6, 7, 13, 14, 19, 33, 34, 37, 42, 43, 44, 45, 46, 47, 48, 49, 55, 56, 62, 71, 72, 79, 85, 86, 87, 89, 90, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 111, 112, 114, 117, 119, 122, 125, 126, 128, 131, 132, 134, 138], "If": [1, 2, 5, 6, 7, 13, 14, 19, 20, 22, 24, 27, 31, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49, 52, 55, 58, 60, 62, 88, 90, 96, 98, 110, 111, 114, 117, 118, 121, 122, 125, 126, 127, 133, 134, 136, 137], "obtain": [1, 2, 7, 55, 97, 125, 132], "from": [1, 2, 3, 5, 24, 29, 32, 33, 34, 43, 44, 49, 52, 54, 56, 60, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 118, 121, 122, 123, 124, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138], "repres": [1, 3, 19, 30, 49, 56, 87, 111, 126, 136], "column": [1, 3, 5, 6, 7, 8, 10, 11, 14, 24, 30, 32, 33, 34, 44, 45, 46, 47, 48, 49, 55, 56, 69, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 110, 111, 114, 116, 117, 124, 125, 127, 129, 130, 131, 133, 135, 136, 137, 138], "list": [1, 3, 4, 5, 6, 7, 13, 14, 21, 26, 29, 30, 32, 33, 34, 37, 44, 45, 46, 47, 48, 49, 51, 56, 59, 104, 106, 111, 116, 117, 127, 129, 133, 136, 137, 138], "attribut": [1, 5, 7, 9, 22, 24, 43, 55, 129], "set": [1, 3, 4, 5, 6, 7, 13, 15, 16, 17, 18, 19, 22, 24, 29, 30, 33, 34, 40, 43, 44, 45, 46, 47, 48, 49, 55, 56, 57, 66, 67, 68, 69, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 117, 119, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 138], "columntyp": [1, 4, 5, 6, 7, 9, 30, 44, 45, 46, 47, 48, 49, 55, 56, 69, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 127, 129, 130, 131, 135, 136, 137], "select": [1, 6, 7, 11, 24, 30, 44, 45, 46, 47, 48, 49, 72, 98, 111, 122, 124, 126, 127, 129, 133, 134, 135], "row": [1, 6, 30, 44, 45, 46, 47, 48, 49, 86, 87, 88, 89, 93, 96, 98, 99, 102, 103, 111, 114, 129, 131, 135, 136, 137], "int": [1, 6, 13, 15, 16, 17, 18, 19, 24, 30, 31, 32, 33, 34, 42, 43, 44, 45, 46, 47, 48, 49, 62, 71, 111, 136], "bool": [1, 5, 6, 7, 14, 15, 16, 22, 24, 27, 29, 30, 33, 35, 40, 43, 44, 45, 46, 47, 48, 49, 52, 55, 60, 62, 66, 67, 68, 69, 111], "valu": [1, 5, 6, 7, 19, 24, 30, 33, 34, 38, 39, 43, 44, 45, 46, 47, 48, 49, 55, 56, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 103, 104, 105, 106, 110, 111, 114, 116, 117, 124, 126, 127, 129, 133, 136, 137], "": [1, 5, 6, 7, 15, 16, 24, 30, 33, 43, 44, 45, 46, 47, 48, 49, 55, 56, 62, 85, 86, 87, 88, 89, 96, 98, 102, 103, 104, 105, 110, 111, 114, 116, 117, 118, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "train": [1, 6, 15, 16, 17, 18, 19, 24, 30, 33, 43, 44, 45, 46, 47, 48, 49, 56, 85, 86, 87, 89, 96, 98, 102, 103, 110, 111, 114, 125, 126, 127, 129, 131, 132, 135, 136, 137], "mostli": [1, 2, 126], "includ": [1, 2, 14, 19, 97, 98, 111, 117, 118, 121, 127, 132], "hyperparamet": [1, 2, 22, 33, 34, 62, 93, 98, 101, 103, 107, 108, 110, 111, 122, 124, 125, 128, 129, 130, 134, 135, 138], "ani": [1, 2, 6, 7, 22, 24, 27, 29, 30, 31, 32, 33, 34, 40, 44, 45, 46, 47, 48, 49, 52, 54, 60, 87, 117, 124, 126, 127, 129, 137], "other": [1, 2, 15, 22, 24, 27, 52, 83, 88, 90, 103, 105, 111, 118, 120, 124, 125, 126, 127, 134, 135, 137], "initi": [1, 2, 22, 23, 42, 52, 53, 60, 61, 110, 125, 130, 137], "multipl": [1, 15, 16, 17, 18, 19, 33, 62, 98, 101, 108, 126, 127, 136, 137, 138], "lead": [1, 121, 125, 126, 132, 137], "search": [1, 21, 22, 33, 34, 62, 98, 101, 104, 105, 108, 122, 127, 129, 130], "return": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 87, 96, 97, 109, 112, 114, 137], "its": [1, 5, 23, 53, 61, 118, 127, 129, 130, 132, 134, 137], "last": [1, 98, 103, 111, 123, 125, 137], "rais": [1, 13, 15, 20, 22, 24, 27, 31, 32, 40, 52, 58, 60, 62, 64, 133, 138], "valueerror": [1, 13, 20, 22, 27, 31, 32, 40, 52, 58, 60, 64], "valid": [1, 2, 13, 15, 16, 17, 18, 19, 31, 32, 33, 34, 78, 85, 86, 97, 103, 110, 111, 116, 122, 124, 127, 128, 129, 133, 134, 135, 137, 138], "targetpipelinecr": [1, 102, 116, 125, 131], "target": [1, 2, 6, 7, 13, 15, 16, 17, 18, 19, 24, 29, 31, 32, 33, 34, 35, 43, 44, 45, 46, 47, 48, 49, 62, 66, 67, 68, 69, 72, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 110, 111, 114, 116, 122, 124, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138], "properti": [1, 3, 7, 13, 29, 55, 56, 126], "get": [1, 3, 5, 6, 7, 10, 15, 16, 17, 18, 19, 20, 24, 25, 29, 36, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 58, 66, 67, 68, 69, 85, 86, 89, 96, 97, 98, 103, 111, 122, 124, 129, 130, 135, 136], "have": [1, 5, 6, 7, 15, 16, 24, 32, 43, 44, 45, 46, 47, 48, 49, 55, 85, 88, 89, 90, 93, 96, 98, 104, 105, 106, 110, 111, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "been": [1, 57, 124, 126, 129, 138], "has_model": 1, "whether": [1, 14, 15, 16, 22, 27, 33, 40, 43, 49, 52, 60, 66, 67, 68, 69, 89, 93, 96, 111, 118, 125, 136], "ha": [1, 15, 24, 33, 34, 43, 57, 85, 86, 87, 88, 89, 90, 93, 96, 97, 99, 103, 107, 110, 114, 117, 118, 124, 125, 126, 127, 129, 132, 136, 137, 138], "copi": [1, 3, 87, 111, 118, 129], "classmethod": 1, "from_list": 1, "model_param": [1, 33, 34, 93, 138], "union": [1, 4, 29, 35, 65], "dict": [1, 5, 6, 7, 24, 25, 30, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49, 50, 55, 66, 67, 68, 69], "kei": [1, 32, 33, 34, 44, 48, 88, 98, 133], "being": [1, 118, 121, 136, 137, 138], "pieplin": 1, "split": [1, 15, 16, 17, 18, 19, 24, 33, 34, 85, 86, 87, 90, 93, 96, 102, 103, 114, 125, 126, 127, 129, 132, 136], "least": [1, 15, 16, 17, 18, 33, 34, 87, 110, 116, 126], "two": [1, 42, 87, 88, 90, 93, 96, 97, 98, 99, 103, 104, 107, 110, 111, 114, 118, 124, 125, 126, 127, 130, 132, 135, 137], "same": [1, 15, 16, 33, 34, 48, 62, 90, 93, 96, 104, 105, 106, 110, 114, 118, 122, 124, 125, 126, 127, 130, 132, 135, 136, 137], "consid": [1, 111, 117, 118, 123, 125, 127, 133, 136], "point": [1, 110, 118, 125, 126, 132, 134, 135, 136, 137], "tune": [1, 30, 33, 34, 62, 101, 108, 122, 124, 125, 128, 129, 130, 131, 137, 138], "function": [1, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 55, 58, 59, 60, 61, 62, 64, 70, 71, 84, 90, 93, 96, 97, 98, 109, 111, 113, 115, 117, 118, 120, 121, 122, 124, 125, 127, 132, 133, 134, 135, 136, 137, 138], "one": [1, 29, 33, 34, 42, 44, 45, 46, 48, 54, 86, 87, 88, 89, 96, 98, 102, 103, 104, 105, 106, 107, 111, 114, 116, 118, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "each": [1, 5, 6, 7, 15, 16, 17, 18, 19, 24, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49, 55, 56, 85, 86, 87, 88, 89, 96, 97, 98, 99, 103, 110, 111, 114, 116, 118, 124, 125, 126, 127, 128, 129, 132, 135, 136, 137], "recurs": 1, "thu": [1, 5, 96, 132], "mani": [1, 43, 89, 96, 125, 126, 127, 136, 137], "all": [1, 3, 14, 21, 22, 26, 33, 34, 37, 43, 44, 48, 49, 51, 56, 59, 85, 86, 89, 90, 96, 97, 98, 103, 110, 111, 114, 116, 118, 121, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138], "configur": [1, 6, 43, 44, 45, 46, 47, 48, 49, 62, 122, 125, 129, 130, 137], "A": [1, 5, 6, 7, 13, 15, 16, 17, 18, 19, 21, 24, 26, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49, 51, 55, 59, 87, 88, 89, 90, 96, 104, 105, 106, 107, 111, 124, 125, 126, 127, 132, 133, 137], "without": [1, 22, 27, 40, 52, 60, 87, 89, 105, 110, 111, 116, 132], "repeat": [1, 17, 18, 85, 86, 103, 111, 114, 125, 126, 127, 129, 132, 136], "to_pipelin": [1, 2], "x_type": [1, 32, 33, 34, 44, 45, 46, 48, 49, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 117, 124, 125, 127, 129, 130, 131, 133, 135, 136, 137], "search_param": [1, 33, 34, 104, 105, 106, 127, 138], "data": [1, 5, 6, 7, 14, 15, 16, 17, 18, 19, 24, 29, 31, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 78, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 122, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137], "inspect": [1, 33, 62, 72, 98, 100, 103, 111, 119, 122, 128, 132, 133, 135, 136], "fold": [1, 13, 15, 16, 17, 18, 33, 62, 84, 85, 86, 91, 95, 96, 97, 100, 102, 103, 110, 111, 114, 125, 126, 127, 129, 131, 132, 136, 137], "wise": [1, 13, 33, 62, 95, 100, 132], "predict": [1, 7, 12, 13, 24, 32, 33, 34, 38, 39, 43, 49, 55, 56, 62, 85, 86, 87, 88, 89, 90, 93, 95, 96, 100, 102, 103, 107, 111, 114, 116, 122, 125, 126, 128, 129, 130, 131, 132, 135, 136, 137], "preprocess": [1, 2, 33, 34, 62, 85, 86, 87, 89, 90, 93, 95, 96, 97, 100, 103, 110, 111, 114, 122, 124, 128, 133, 134, 136], "varianc": [1, 14, 33, 62, 95, 100, 116, 126, 129, 137], "threshold": [1, 14, 33, 43, 49, 56, 62, 95, 100, 111, 116, 124], "zscore": [1, 14, 33, 62, 85, 86, 87, 89, 90, 93, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 110, 114, 116, 127, 129, 131, 135, 136, 137], "pca": [1, 14, 33, 62, 95, 100, 103, 111, 116, 127, 137], "variabl": [1, 2, 15, 16, 17, 18, 19, 31, 32, 33, 62, 86, 87, 89, 96, 101, 103, 108, 111, 114, 125, 126, 127, 129, 131, 136, 137, 138], "z": [1, 2, 33, 62, 96, 101, 108, 123, 129, 131, 136, 137], "score": [1, 2, 7, 12, 13, 24, 33, 34, 42, 55, 62, 71, 72, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 110, 111, 113, 115, 122, 124, 125, 127, 129, 130, 131, 134, 137, 138], "grid": [1, 33, 34, 62, 96, 101, 105, 108, 128, 129, 130, 138], "stack": [1, 33, 62, 101, 108, 110, 116, 122, 128], "analysi": [1, 14, 16, 33, 62, 84, 91, 101, 102, 108, 114, 116, 126, 137], "confound": [1, 2, 14, 19, 33, 44, 49, 56, 62, 88, 112, 116, 119, 122, 128, 135, 138], "remov": [1, 2, 14, 19, 33, 44, 49, 56, 62, 87, 97, 98, 109, 112, 116, 118, 122, 126, 128, 135, 138], "comparison": [1, 19, 33, 42, 62, 71, 94, 109, 112, 119, 122, 134], "connectom": [1, 33, 43, 116, 122, 128], "base": [1, 13, 15, 16, 19, 29, 33, 42, 43, 54, 72, 116, 120, 122, 125, 127, 128, 129, 132, 133, 134, 137], "cbpm": [1, 33, 116, 122, 128, 138], "evalu": [1, 7, 33, 34, 37, 55, 79, 90, 96, 122, 126, 129, 132, 133, 134, 135, 137], "build": [1, 33, 85, 89, 96, 101, 122, 123, 124, 130, 131, 132, 134, 135], "cross": [1, 2, 13, 15, 16, 17, 18, 19, 31, 33, 34, 85, 86, 97, 103, 110, 111, 116, 122, 124, 127, 128, 129, 133, 134, 135, 137, 138], "consist": [1, 2, 24, 31, 33, 117, 122, 124, 126, 128, 132, 133, 135, 137, 138], "analog": 2, "pipelinecr": [2, 33, 34, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 116, 124, 125, 127, 129, 130, 131, 134, 135, 136, 138], "allow": [2, 15, 22, 24, 27, 40, 52, 60, 90, 110, 117, 120, 124, 125, 127, 133, 134, 137, 138], "target_pipelin": [2, 125, 131], "jutargetpipelin": [2, 55, 102, 125, 131], "easi": [2, 88, 122, 125, 127, 129, 130, 134, 135], "wai": [2, 90, 93, 120, 122, 125, 126, 127, 129, 130, 132, 135, 136, 137], "out": [2, 20, 21, 49, 59, 93, 111, 116, 122, 125, 126, 127, 129, 130, 134, 135, 136], "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 76, 83, 84, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108, 110, 114, 116, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138], "column_typ": [3, 129], "hold": [3, 22, 136], "regard": [3, 133, 136], "pd": [3, 5, 6, 7, 13, 14, 24, 29, 33, 34, 42, 44, 45, 46, 47, 48, 49, 54, 55, 56, 66, 69, 71, 85, 86, 87, 88, 96, 97, 98, 102, 103, 110, 114, 124, 125, 126, 130, 131, 135], "datafram": [3, 5, 6, 7, 13, 14, 24, 29, 32, 33, 34, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 71, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 117, 122, 124, 125, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138], "One": [3, 24, 88, 125, 127, 130, 137], "instead": [3, 15, 16, 19, 22, 24, 27, 40, 43, 52, 60, 87, 97, 110, 125, 126, 127, 130, 138], "also": [3, 85, 87, 90, 93, 98, 103, 104, 111, 117, 118, 120, 122, 124, 125, 127, 129, 130, 132, 133, 135, 136, 137], "itself": [3, 130], "self": [3, 5, 6, 15, 24, 29, 43, 44, 45, 46, 47, 48, 49, 55, 57], "updat": [3, 5, 6, 7, 15, 24, 43, 44, 45, 46, 47, 48, 49, 55, 118, 121, 138], "pattern": [3, 11, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 127, 129, 130, 131, 135, 136, 137], "regex": 3, "match": [3, 47, 88], "to_type_selector": 3, "selector": [3, 11], "usabl": [3, 137], "compos": [3, 11], "columntransform": [3, 11, 129], "callabl": [3, 35, 36, 40, 43, 138], "alia": [4, 15, 24, 63, 65], "needed_typ": [5, 6, 7, 29, 30, 47, 56], "estim": [5, 6, 7, 15, 24, 30, 33, 34, 35, 36, 40, 43, 44, 45, 46, 47, 48, 49, 55, 66, 67, 68, 69, 96, 97, 98, 104, 105, 106, 107, 110, 111, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 137], "everi": [5, 27, 32, 33, 34, 52, 123, 129, 133, 137], "awar": [5, 121], "thei": [5, 7, 24, 55, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 104, 105, 106, 110, 114, 120, 124, 127, 129, 130, 136, 137], "abl": [5, 117, 132, 135], "main": [5, 72, 110, 118, 122, 123, 125, 126, 132], "differ": [5, 15, 16, 17, 18, 19, 27, 87, 88, 90, 93, 98, 103, 104, 105, 107, 110, 111, 120, 121, 124, 125, 126, 127, 129, 130, 132, 133, 135, 136, 137], "between": [5, 19, 31, 86, 110, 118, 124, 125, 126, 130, 132, 135, 137], "baseestim": [5, 138], "purpos": [5, 87, 88, 136], "That": [5, 124, 125, 126, 127, 129, 137], "ar": [5, 6, 7, 15, 16, 17, 18, 22, 24, 27, 29, 33, 34, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 55, 56, 60, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 110, 111, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138], "get_needed_typ": [5, 6, 7, 44, 45, 46, 47, 48, 49, 55, 69], "get_apply_to": [5, 6, 7, 44, 45, 46, 47, 48, 49, 55, 69], "filter_column": [5, 6, 7, 44, 45, 46, 47, 48, 49, 55, 107, 116, 130], "x": [5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 24, 29, 32, 33, 34, 36, 40, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 66, 67, 69, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 117, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138], "panda": [5, 6, 7, 31, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49, 55, 84, 85, 86, 87, 89, 90, 91, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 114, 121, 122, 124, 125, 129, 130, 131, 133, 135, 136], "filter": [5, 6, 7, 44, 45, 46, 47, 48, 49, 55, 116, 122, 137, 138], "get_metadata_rout": [5, 6, 7, 15, 16, 17, 18, 19, 24, 43, 44, 45, 46, 47, 48, 49, 55, 111], "metadata": [5, 6, 7, 15, 16, 17, 18, 19, 24, 43, 44, 45, 46, 47, 48, 49, 55, 88, 111], "rout": [5, 6, 7, 15, 16, 17, 18, 19, 24, 43, 44, 45, 46, 47, 48, 49, 55, 111], "check": [5, 6, 7, 9, 15, 16, 17, 18, 19, 24, 29, 31, 35, 43, 44, 45, 46, 47, 48, 49, 55, 82, 88, 89, 96, 98, 110, 111, 117, 118, 122, 123, 127, 136, 138], "guid": [5, 6, 7, 15, 16, 17, 18, 19, 24, 43, 44, 45, 46, 47, 48, 49, 55, 111, 118], "mechan": [5, 6, 7, 15, 16, 17, 18, 19, 24, 43, 44, 45, 46, 47, 48, 49, 55, 111, 132], "work": [5, 6, 7, 15, 16, 17, 18, 19, 24, 29, 43, 44, 45, 46, 47, 48, 49, 54, 55, 84, 85, 86, 87, 89, 90, 91, 93, 96, 97, 98, 99, 102, 104, 105, 106, 110, 111, 114, 118, 124, 125, 126, 127, 129, 130, 135, 138], "metadatarequest": [5, 6, 7, 15, 16, 17, 18, 19, 24, 43, 44, 45, 46, 47, 48, 49, 55, 111], "encapsul": [5, 6, 7, 15, 16, 17, 18, 19, 24, 43, 44, 45, 46, 47, 48, 49, 55, 111], "inform": [5, 6, 7, 15, 16, 17, 18, 19, 24, 29, 33, 34, 43, 44, 45, 46, 47, 48, 49, 54, 55, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 117, 118, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "get_param": [5, 6, 7, 24, 43, 44, 45, 46, 47, 48, 49, 55, 66, 67, 68, 69, 129], "deep": [5, 6, 7, 24, 43, 44, 45, 46, 47, 48, 49, 55, 66, 67, 68, 69, 125], "true": [5, 6, 7, 15, 16, 22, 24, 27, 29, 33, 34, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 52, 55, 60, 66, 67, 68, 69, 85, 86, 87, 90, 96, 97, 99, 102, 103, 110, 111, 114, 117, 125, 126, 127, 129, 131, 132, 136, 137], "contain": [5, 6, 7, 24, 32, 33, 34, 37, 42, 43, 44, 45, 46, 47, 48, 49, 55, 71, 85, 86, 87, 90, 102, 103, 114, 126, 129, 133, 136], "subobject": [5, 6, 7, 24, 43, 44, 45, 46, 48, 49, 55], "map": [5, 6, 7, 24, 43, 44, 45, 46, 47, 48, 49, 55, 86, 111], "set_param": [5, 6, 7, 24, 43, 44, 45, 46, 47, 48, 49, 55, 66, 67, 68, 69], "simpl": [5, 6, 7, 24, 33, 42, 43, 44, 45, 46, 47, 48, 49, 55, 62, 71, 84, 91, 92, 94, 96, 97, 98, 99, 104, 105, 106, 110, 111, 116, 118, 122, 124, 126, 127, 129, 130, 132, 137], "well": [5, 6, 7, 24, 43, 44, 45, 46, 47, 48, 49, 55, 117, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 137], "nest": [5, 6, 7, 24, 43, 44, 45, 46, 47, 48, 49, 55, 124, 127, 129, 132], "latter": [5, 6, 7, 24, 43, 44, 45, 46, 47, 48, 49, 55], "form": [5, 6, 7, 24, 43, 44, 45, 46, 47, 48, 49, 55, 133, 137], "compon": [5, 6, 7, 24, 43, 44, 45, 46, 47, 48, 49, 55, 98, 103, 116, 137], "__": [5, 6, 7, 24, 43, 44, 45, 46, 47, 48, 49, 55, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 127, 130, 131, 135, 136, 137], "possibl": [5, 6, 7, 22, 24, 27, 40, 43, 44, 45, 46, 47, 48, 49, 52, 55, 60, 88, 122, 126, 127, 132, 136, 137], "instanc": [5, 6, 7, 13, 15, 16, 17, 18, 19, 24, 43, 44, 45, 46, 47, 48, 49, 55, 125, 129, 137], "fit": [6, 7, 24, 29, 33, 34, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 66, 67, 68, 69, 85, 86, 87, 89, 96, 97, 98, 99, 102, 103, 104, 105, 106, 111, 114, 116, 124, 125, 127, 128, 129, 132, 136, 137], "y": [6, 7, 12, 13, 15, 16, 17, 18, 19, 24, 29, 31, 32, 33, 34, 36, 40, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 66, 67, 68, 69, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137], "fit_param": [6, 7, 43, 44, 45, 46, 47, 48, 49, 55], "datalik": [6, 7, 24, 29, 44, 45, 46, 47, 48, 49, 54, 55, 56, 66, 67, 68, 69], "addit": [6, 7, 24, 33, 34, 43, 44, 45, 46, 47, 48, 49, 55, 121, 122, 124, 129, 130, 132, 135, 136], "pass": [6, 7, 15, 16, 17, 18, 19, 24, 44, 45, 46, 47, 48, 49, 55, 104, 116, 118, 127, 131, 136, 137], "fit_transform": [6, 29, 43, 44, 45, 46, 47, 48, 49, 54, 56], "version": [6, 15, 19, 24, 43, 44, 45, 46, 47, 48, 49, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 114, 118, 121, 122, 126, 129, 130, 138], "arrai": [6, 7, 15, 16, 17, 18, 19, 33, 43, 44, 45, 46, 47, 48, 49, 55, 85, 129], "like": [6, 7, 15, 16, 17, 18, 19, 27, 43, 44, 45, 46, 47, 48, 49, 52, 55, 66, 67, 68, 69, 93, 103, 118, 121, 126, 127, 129, 132, 133, 136, 137], "shape": [6, 7, 15, 16, 17, 18, 19, 43, 44, 45, 46, 47, 48, 49, 55, 85, 96], "n_sampl": [6, 7, 15, 16, 17, 18, 19, 43, 44, 45, 46, 47, 48, 49, 55, 98, 124, 130], "n_featur": [6, 15, 16, 17, 18, 19, 43, 44, 45, 46, 47, 48, 49, 98, 124, 125, 130], "input": [6, 29, 31, 32, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 78, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 127, 129, 130, 131, 134, 135, 136, 137], "sampl": [6, 7, 15, 16, 17, 18, 19, 24, 32, 42, 43, 44, 45, 46, 47, 48, 49, 55, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 126, 127, 129, 130, 131, 135, 136, 137], "n_output": [6, 43, 44, 45, 46, 47, 48, 49], "unsupervis": [6, 43, 44, 45, 46, 47, 48, 49], "x_new": [6, 43, 44, 45, 46, 47, 48, 49], "ndarrai": [6, 7, 15, 16, 17, 18, 19, 24, 43, 44, 45, 46, 47, 48, 49, 55], "n_features_new": [6, 43, 44, 45, 46, 47, 48, 49], "set_output": [6, 43, 44, 45, 46, 47, 48, 49], "output": [6, 14, 15, 16, 17, 18, 19, 33, 34, 42, 43, 44, 45, 46, 47, 48, 49, 62, 71, 87, 110, 118, 129, 132, 133, 134, 137], "see": [6, 15, 16, 17, 24, 25, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49, 62, 76, 83, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 117, 118, 120, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137], "introduc": [6, 43, 44, 45, 46, 47, 48, 49, 125], "api": [6, 43, 44, 45, 46, 47, 48, 49, 116, 118, 122, 130, 134, 137], "exampl": [6, 34, 43, 44, 45, 46, 47, 48, 49, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 117, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138], "format": [6, 43, 44, 45, 46, 47, 48, 49, 62, 86, 88, 103, 104, 105, 106, 110, 118, 123, 125, 127, 138], "unchang": [6, 15, 24, 43, 44, 45, 46, 47, 48, 49], "wrap": [7, 35, 55, 138], "make": [7, 11, 15, 16, 17, 18, 19, 24, 86, 88, 89, 96, 98, 103, 104, 105, 106, 110, 118, 121, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138], "modellik": [7, 24, 25, 27, 49, 55, 56, 111], "float": [7, 19, 24, 32, 33, 34, 38, 39, 43, 49, 55, 56, 71, 85, 106, 111, 127], "predict_proba": [7, 12, 24, 55], "comput": [7, 24, 33, 38, 39, 43, 55, 90, 103, 114, 117, 127, 132, 137], "probabl": [7, 24, 33, 34, 55, 129], "outcom": [7, 24, 55, 137], "np": [7, 15, 16, 17, 18, 19, 24, 43, 55, 85, 86, 89, 96, 103, 104, 105, 106, 124, 125, 126, 129, 130], "correspond": [7, 24, 33, 34, 55, 129], "sort": [7, 24, 55, 89, 96, 116], "order": [7, 15, 16, 24, 55, 88, 89, 96, 110, 111, 117, 118, 125, 127, 130, 132, 137, 138], "appear": [7, 24, 55, 136], "classes_": [7, 24, 55], "decision_funct": [7, 12, 55, 96, 138], "decis": [7, 55, 88, 89, 96, 104, 105, 106, 125, 129], "n_class": [7, 55], "1": [6, 7, 15, 19, 24, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49, 55, 66, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137], "2": [7, 15, 16, 17, 18, 19, 24, 55, 67, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 121, 122, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137], "predict_log_proba": [7, 12], "kwarg": [7, 24, 25, 47, 54, 57, 66, 67, 68, 69], "new_typ": 8, "chang": [8, 15, 19, 24, 44, 83, 105, 110, 116, 118, 121, 123, 126, 127, 136], "new": [6, 8, 15, 24, 43, 44, 45, 46, 47, 48, 49, 96, 111, 118, 122, 132, 137], "attr": 9, "ensur": [9, 44, 46, 48, 49, 85, 126, 129], "cv": [12, 13, 15, 16, 17, 18, 19, 24, 31, 32, 33, 34, 62, 84, 85, 86, 90, 91, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 124, 125, 126, 127, 129, 130, 131, 135, 136, 137, 138], "func": 12, "group": [12, 13, 15, 16, 17, 18, 19, 31, 32, 33, 34, 62, 84, 87, 91, 96, 103, 122, 124, 128, 136], "featur": [13, 14, 15, 16, 17, 18, 19, 29, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49, 54, 56, 66, 67, 69, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 117, 118, 121, 122, 124, 127, 128, 129, 131, 132, 134, 135, 136], "label": [13, 15, 16, 17, 18, 19, 32, 33, 34, 85, 90, 132, 133, 136, 137], "case": [13, 15, 16, 17, 18, 24, 32, 33, 34, 43, 87, 88, 96, 102, 114, 118, 124, 125, 126, 133, 136, 137], "number": [13, 15, 16, 17, 18, 19, 33, 34, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137], "pipelineinspector": [13, 99], "foldsinspector": [13, 129], "until": [14, 96, 98, 103, 111, 121, 133, 135, 138], "with_column_typ": [14, 96], "fals": [14, 15, 16, 22, 24, 27, 33, 40, 45, 49, 52, 55, 60, 62, 86, 87, 89, 90, 93, 96, 97, 98, 102, 103, 104, 105, 106, 107, 111, 114, 124, 125, 127, 129, 130, 131, 136, 137], "certain": [14, 117, 133, 136, 137], "inclus": [14, 111], "svm": [14, 33, 34, 62, 85, 90, 93, 95, 99, 100, 104, 105, 106, 107, 116, 127, 129, 130, 131, 135, 136, 137], "n_bin": [15, 16, 17, 18, 87, 126], "bin": [15, 16, 17, 18, 87, 126], "n_split": [15, 16, 17, 18, 19, 24, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 126, 127, 129, 130, 131, 135, 136, 137], "5": [15, 16, 17, 18, 19, 33, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 107, 110, 111, 114, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137], "shuffl": [15, 16, 19, 86, 87, 89, 90, 93, 96, 97, 98, 102, 103, 104, 105, 106, 107, 111, 114, 124, 125, 126, 127, 129, 130, 131, 136, 137], "random_st": [15, 16, 17, 18, 19, 24, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 126, 127, 129, 130, 131, 135, 136, 137], "stratifi": [15, 16, 17, 18, 19, 33, 62, 84, 85, 91, 126, 136, 138], "k": [15, 16, 17, 18, 33, 62, 84, 85, 86, 89, 91, 96, 102, 103, 110, 116, 126, 127, 132, 136], "where": [15, 16, 17, 18, 19, 88, 123, 126, 127, 129, 137, 138], "stratif": [15, 16, 19, 87, 89, 128], "done": [15, 16, 19, 104, 118, 121, 123, 129, 130, 135, 136, 137], "discret": [15, 16, 126, 137], "fix": [15, 16, 118, 126, 138], "quantil": [15, 16, 17, 18, 126], "either": [15, 16, 17, 18, 42, 96, 98, 116, 118, 125, 127, 137], "In": [15, 16, 17, 18, 43, 87, 88, 89, 90, 96, 97, 110, 111, 114, 118, 122, 124, 125, 126, 129, 130, 132, 133, 135, 136, 137], "first": [15, 16, 17, 18, 42, 64, 70, 85, 89, 90, 93, 96, 98, 102, 103, 104, 105, 110, 111, 118, 124, 125, 127, 130, 131, 133, 134, 135, 136, 137], "second": [15, 16, 17, 18, 42, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137], "must": [15, 16, 17, 18, 42, 47, 71, 88, 89, 96, 103, 118, 126, 127, 133, 137], "befor": [15, 16, 33, 34, 55, 85, 87, 88, 97, 110, 114, 118, 121, 123, 126, 127, 136, 137, 138], "batch": [15, 16], "note": [15, 16, 17, 18, 19, 24, 33, 34, 98, 110, 118, 125, 127, 130], "within": [15, 16, 118, 124, 125, 130, 132, 133, 136], "implement": [15, 16, 43, 117, 122, 124, 125, 126, 130, 138], "approxim": [15, 16], "distribut": [15, 16, 19, 42, 85, 87, 89, 90, 93, 96, 97, 99, 104, 105, 106, 107, 110, 116, 125, 126, 129, 135, 136, 137, 138], "global": [15, 16, 117], "perform": [15, 16, 29, 33, 34, 42, 85, 86, 87, 89, 90, 92, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 114, 118, 124, 125, 126, 127, 129, 132, 134, 135, 136, 137], "randomst": [15, 16, 17, 18, 19], "when": [15, 16, 24, 87, 110, 116, 117, 118, 120, 124, 125, 126, 127, 131, 133, 136, 137, 138], "affect": [15, 16, 129], "indic": [15, 16, 17, 18, 19, 33, 45, 49, 96, 116, 118, 126, 129, 136, 137], "control": [15, 16, 17, 18, 19, 88, 89, 96, 104, 105, 106, 113, 125, 127, 130, 132], "random": [15, 16, 17, 18, 19, 24, 33, 34, 62, 89, 90, 93, 95, 98, 100, 104, 105, 106, 110, 116, 125, 126, 127, 129, 130, 135, 137], "otherwis": [15, 16, 19, 24, 55, 62], "leav": [15, 16, 103, 126], "reproduc": [15, 16, 17, 18, 19, 24, 33, 34, 136], "across": [15, 16, 17, 18, 19, 86, 97, 102, 103, 114, 126, 129, 136], "call": [15, 16, 17, 18, 19, 22, 36, 40, 117, 120, 125, 126, 127, 129, 130, 133, 137, 138], "splitter": [15, 16, 17, 18, 19, 24, 33, 122, 128, 134, 135], "mai": [15, 16, 17, 18, 19, 83, 124, 125, 129, 130], "result": [15, 16, 17, 18, 19, 29, 33, 34, 54, 88, 96, 110, 111, 117, 125, 126, 129, 132, 133, 135, 136, 138], "ident": [15, 16, 17, 18, 19, 106, 126, 127], "integ": [15, 16, 17, 18, 19, 127, 136], "gener": [15, 16, 17, 18, 19, 33, 34, 47, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 118, 123, 126, 131, 132, 136, 137, 138], "test": [15, 16, 17, 18, 19, 24, 33, 42, 56, 85, 86, 87, 93, 96, 102, 103, 105, 110, 122, 125, 126, 127, 129, 132, 135, 136, 138], "suffici": [15, 16, 19, 87], "henc": [15, 16, 19], "zero": [15, 16, 17, 18, 19, 98], "placehold": [15, 16, 17, 18, 19], "actual": [15, 16, 19, 43, 49, 85, 86, 103, 111, 114, 129], "supervis": [15, 16, 17, 18, 19, 137], "learn": [15, 16, 17, 18, 19, 20, 22, 33, 34, 43, 44, 46, 47, 48, 49, 50, 54, 88, 90, 96, 97, 114, 116, 118, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "while": [15, 16, 17, 18, 19, 33, 34, 97, 104, 110, 117, 122, 125, 126, 127, 130, 131, 132, 137, 138], "dataset": [15, 16, 17, 18, 19, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 118, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137], "yield": [15, 16, 17, 18, 19, 33, 117, 129, 136], "get_n_split": [15, 16, 17, 18, 19], "iter": [15, 16, 17, 18, 19, 33, 98, 106, 110, 124, 127, 129, 136, 138], "alwai": [15, 16, 17, 18, 19, 90, 104, 105, 106, 110, 118, 125, 127, 130, 135, 136, 137], "ignor": [15, 16, 17, 18, 19, 24, 111, 114, 127], "exist": [15, 16, 17, 18, 19, 24, 40, 62], "set_split_request": 15, "request": [15, 24, 122], "relev": [15, 24, 129], "enable_metadata_rout": [15, 24], "set_config": [15, 24, 117], "meta": [15, 24], "error": [15, 22, 24, 27, 32, 33, 34, 40, 52, 60, 62, 64, 85, 86, 88, 102, 103, 114, 117, 118, 126, 132, 135, 138], "given": [15, 24, 49, 96, 110, 111, 116, 117, 125, 133, 136, 137], "origin": [15, 24, 43, 64, 118, 123], "util": [15, 24, 72, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 114, 118, 122, 129, 130], "metadata_rout": [15, 24], "retain": [15, 24], "some": [15, 24, 87, 88, 89, 96, 97, 118, 121, 124, 125, 126, 127, 129, 130, 132, 133], "3": [15, 24, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 118, 121, 122, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137], "sub": [15, 24, 134], "e": [15, 24, 27, 43, 49, 56, 62, 111, 116, 118, 121, 123, 124, 125, 126, 127, 129, 136, 137], "g": [15, 24, 27, 62, 103, 116, 121, 126, 127, 136], "insid": [15, 24, 27, 137], "effect": [15, 24, 125, 129], "glossari": [16, 17], "n_repeat": [17, 18, 85, 93, 99, 129, 135, 136], "10": [17, 18, 43, 85, 86, 87, 88, 89, 90, 96, 97, 99, 102, 103, 106, 110, 111, 114, 122, 125, 126, 127, 129, 130, 131, 135, 136], "continuousstratifiedgroupkfold": [17, 126], "n": [17, 18, 85, 86, 87, 98, 102, 103, 114, 116, 123, 126, 131, 137], "time": [17, 18, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137], "repetit": [17, 18, 85, 86, 103], "state": [17, 18, 23, 24, 28, 41, 53, 61, 125], "contion": 18, "continuousstratifiedkfold": [18, 87, 126, 138], "test_siz": [19, 85, 86, 96, 102, 103, 110], "0": [19, 24, 32, 33, 34, 43, 49, 56, 71, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137], "train_siz": [19, 96, 99, 110], "bootstrap": [19, 110, 126], "resampl": 19, "replac": [19, 43, 97, 110, 123, 129], "respect": [19, 43, 116, 118, 133, 135, 136, 137], "re": [19, 118, 137], "proport": 19, "round": [19, 135], "up": [19, 33, 34, 42, 64, 98, 104, 105, 106, 111, 122, 124, 129, 134, 137], "absolut": [19, 86, 102, 103, 114, 116], "complement": [19, 116], "size": [19, 124, 125, 126, 135], "21": [19, 88, 122, 124, 130, 135], "remain": [19, 126, 132], "unspecifi": 19, "automat": [19, 118, 121, 123, 137], "produc": [19, 127], "n_label": 19, "searcher": [20, 21, 22, 23, 33, 34, 121, 128, 138], "obj": 22, "scikit": [20, 22, 33, 34, 43, 44, 46, 47, 48, 49, 50, 54, 90, 96, 97, 114, 116, 121, 122, 124, 125, 126, 127, 130, 131, 132, 135, 136, 137, 138], "avail": [20, 21, 22, 26, 33, 34, 36, 37, 42, 51, 58, 59, 121, 122, 136, 137, 138], "algorithm": [21, 22, 24, 33, 34, 97, 127, 132, 135, 137, 138], "searcher_nam": 22, "overwrit": [22, 27, 40, 52, 60, 62, 138], "regist": [22, 23, 27, 28, 33, 34, 40, 41, 52, 53, 60, 61, 114, 138], "after": [22, 29, 49, 54, 56, 86, 87, 96, 98, 102, 103, 110, 111, 114, 118, 129], "referenc": [22, 27, 52, 60, 138], "decid": [22, 27, 40, 60], "warn": [22, 27, 31, 32, 40, 52, 57, 60, 62, 70, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 104, 105, 106, 110, 114, 124, 126, 129, 130, 133, 135, 138], "alreadi": [22, 27, 40, 52, 60, 96, 98, 118, 125, 126, 130, 134, 135, 137], "reset": [23, 28, 41, 53, 61, 88], "ensembl": [24, 130], "ds_split": 24, "random_state_algorithm": 24, "deslib": [24, 72, 116, 121, 122], "randomforest": 24, "metad": 24, "singlebest": 24, "staticselect": 24, "stackedclassifi": 24, "knorau": 24, "knora": 24, "desp": 24, "ola": 24, "mcb": 24, "knop": 24, "sample_weight": 24, "weight": [24, 127, 137], "set_score_request": 24, "run_cross_valid": [25, 27, 42, 71, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 117, 118, 124, 125, 127, 129, 130, 131, 134, 135, 138], "extra": [25, 47, 66, 67, 69, 76, 83, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 114, 116, 117, 118, 130, 131, 137], "keyword": [25, 47, 66, 67, 69, 98, 124], "argument": [25, 47, 66, 67, 69, 98, 111, 126], "model_nam": 27, "classification_cl": 27, "regression_cl": 27, "afterward": [27, 52, 130], "behav": [27, 52], "runtimewarn": [27, 31, 32, 52, 60, 70, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 104, 105, 106, 110, 114, 124, 129, 130, 135], "unlik": [29, 54, 132], "both": [29, 43, 54, 87, 89, 96, 110, 111, 125, 126, 127, 130, 131, 136, 137], "requir": [29, 54, 76, 83, 118, 122, 127, 129, 131, 134, 137, 138], "targetconfoundremov": [29, 54, 125], "encod": [29, 54], "present": [29, 54, 111, 117, 118, 124, 126, 138], "leakag": [29, 54, 122, 125, 137], "drop": [29, 43, 45, 54, 87, 90, 93, 98, 111, 116, 129], "tupl": [29, 43, 127], "jutargettransform": [29, 58, 60], "transformerlik": [29, 33, 34, 137], "inverse_transform": 29, "invers": [29, 55, 138], "can_inverse_transform": [29, 55], "factori": 30, "params_to_tun": 30, "juestimatorlik": 30, "estimatorlikefit1": [30, 65, 69], "estimatorlikefit2": [30, 65], "estimatorlikef": [30, 65], "seri": [31, 32, 56, 66, 69], "inconsist": [31, 32], "might": [31, 32, 83, 88, 90, 93, 97, 104, 105, 106, 117, 120, 121, 125, 126, 127, 129, 131, 134, 136, 137, 138], "still": [31, 88, 111, 121, 126, 136, 138], "run": [31, 33, 43, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137], "df": [32, 42, 98, 127, 133, 135, 136, 137], "pos_label": [32, 33, 34, 90], "detail": [32, 33, 34, 118, 132], "interpret": [32, 33, 34, 62, 110, 129], "posit": [32, 33, 34, 43, 86, 90, 124], "element": [32, 33, 34, 62, 85, 88, 98, 117, 137, 138], "convert": [32, 33, 34, 87, 88, 97, 110, 114, 126], "equal": [32, 33, 34, 87, 116, 126], "dictionari": [32, 33, 34, 44, 48, 98, 111, 125, 127, 129, 133, 138], "df_x": 32, "df_y": 32, "df_group": 32, "return_estim": [33, 34, 85, 86, 87, 89, 96, 97, 98, 102, 103, 104, 105, 106, 110, 111, 114, 124, 127, 129, 130, 136], "return_inspector": [33, 34, 99, 129], "return_train_scor": [33, 129, 136], "seed": [33, 34, 90, 93, 98, 104, 105, 106, 110, 129, 130], "n_job": [33, 43, 129, 138], "verbos": [33, 34, 43, 129, 138], "string": [33, 34, 62, 116, 133, 135, 136, 137, 138], "kind": [33, 34, 85, 86, 89, 90, 93, 96, 97, 99, 104, 105, 106, 107, 110, 127, 133, 136], "categor": [33, 34, 103, 111, 116, 127, 131], "multiple_class": [33, 34], "binari": [33, 34, 62, 84, 89, 91, 93, 96, 97, 99, 104, 105, 106, 107, 110, 116, 118, 126, 127, 129, 135], "ordin": [33, 34], "final": [33, 34, 85, 86, 87, 88, 89, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 118, 124, 126, 127, 129, 130, 136, 137], "inspector": [33, 34, 99, 129], "strategi": [33, 34, 136], "kfold": [33, 86, 87, 89, 90, 93, 96, 97, 98, 102, 103, 104, 105, 106, 107, 111, 114, 124, 125, 126, 127, 129, 130, 131, 136, 137], "scorerlik": [33, 35, 36, 40], "metric": [33, 34, 72, 85, 86, 88, 90, 93, 103, 110, 114, 122, 132, 134, 135], "http": [33, 43, 62, 87, 93, 118, 122, 126, 132, 135, 138], "org": [33, 43, 62, 87, 93, 122, 132, 135, 136], "stabl": [33, 87, 121, 122, 132], "model_evalu": 33, "html": [33, 62, 87, 93, 118, 122, 132, 135, 136], "comprehens": [33, 117], "scorer": [33, 36, 37, 40, 41, 114, 135, 136, 138], "defin": [33, 34, 42, 47, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 114, 124, 125, 126, 127, 129, 130, 136, 137, 138], "follow": [33, 34, 42, 43, 47, 62, 64, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 104, 105, 106, 110, 111, 114, 116, 118, 119, 121, 122, 123, 124, 127, 129, 130, 133, 134, 135, 136, 137], "step__paramet": [33, 34], "sever": [33, 34, 88, 89, 96, 117, 118, 126, 127, 132, 136], "svm__probabl": [33, 34], "go": [33, 34, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 122, 129, 134, 137], "oper": [33, 34, 85, 87, 97, 110, 111, 126], "job": [33, 43], "parallel": [33, 43, 118, 138], "over": [33, 85, 86, 90, 93, 98, 103, 124, 125, 129, 130, 135], "mean": [33, 34, 42, 43, 49, 56, 83, 86, 87, 89, 90, 96, 98, 102, 103, 104, 105, 106, 110, 111, 114, 116, 125, 126, 127, 129, 131, 132, 135, 136, 137], "unless": 33, "joblib": [33, 34, 43], "parallel_backend": 33, "context": [33, 88, 89, 96, 104, 105, 106, 129], "processor": 33, "level": [33, 34, 62, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 114, 118, 124, 129, 130], "outer": [33, 34, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 127, 129, 130, 131, 135, 136, 137, 138], "convernt": [33, 34], "print": [33, 34, 62, 85, 86, 87, 89, 90, 93, 96, 98, 99, 102, 103, 104, 105, 106, 107, 111, 114, 117, 124, 125, 127, 129, 131, 135, 136, 137], "larger": [33, 34], "50": [33, 34, 86, 87, 90, 93, 97, 98, 99, 102, 103, 107, 110, 111, 114, 127, 130, 131, 136, 137], "standard": [33, 34, 43, 98, 125, 130, 137, 138], "standrad": [33, 34], "addition": [33, 34, 62, 90, 93, 122, 123, 125, 137], "fit_tim": [33, 34, 85, 86, 99, 102, 103, 111, 114, 125, 131, 136, 137], "And": [33, 34, 89, 96, 110, 126, 127], "final_estim": [33, 34], "multiclass": [33, 62, 84, 91, 116], "forest": [33, 62, 89, 93, 95, 98, 100, 110, 116, 130, 135, 137], "custom": [33, 40, 62, 115, 119, 122, 124, 136, 137], "wrap_scor": 35, "doe": [35, 96, 132, 137], "handl": 35, "non_invers": 35, "scalar": [36, 40, 85], "greater": [36, 40, 42, 129], "better": [36, 40, 104, 105, 106, 127, 129, 135], "Will": [36, 40, 135], "y_true": [38, 39, 85, 86, 90, 103, 114], "y_pred": [38, 39, 85, 86, 90, 103, 114], "squar": [38, 114, 116], "pearson": [38, 39, 114, 124], "product": [38, 39, 114], "moment": [38, 39, 114], "correl": [38, 39, 43, 86, 114, 124], "coeffici": [38, 39, 86, 114, 136, 137], "arraylik": [38, 39], "scorer_nam": [40, 114], "access": [40, 88], "want": [40, 49, 85, 88, 89, 90, 96, 98, 110, 111, 114, 118, 120, 121, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "userwarn": [40, 87, 90, 126], "bonferroni": 42, "altern": [42, 110, 138], "side": 42, "correct": [42, 93, 130, 135, 138], "t": [42, 88, 93, 96, 126, 127, 135, 136, 137, 138], "degre": [42, 129], "freedom": 42, "adjust": 42, "pvalu": 42, "full": [42, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 118, 129], "letter": 42, "sidak": 42, "holm": 42, "down": 42, "sime": 42, "hochberg": 42, "independ": [42, 49, 56, 96, 110, 111, 116, 126], "hommel": 42, "close": [42, 123], "non": [42, 43], "neg": [42, 43, 124], "fdr_bh": 42, "benjamini": 42, "fdr_by": 42, "yekuti": 42, "fdr_tsbh": 42, "stage": 42, "fdr": [42, 116], "fdr_tsbky": 42, "less": [42, 87, 98, 122, 126, 132], "hypothesi": [42, 110], "underli": [42, 116, 125, 129], "unequ": 42, "significance_threshold": [43, 124], "05": [43, 103, 110, 112, 122, 124, 127, 129], "corr_method": [43, 124], "pearsonr": [43, 114, 136], "agg_method": [43, 124], "sum": [43, 85, 124, 138], "corr_sign": [43, 124], "posneg": [43, 124], "aggreg": [43, 124], "significantli": 43, "signific": [43, 93, 124, 129], "aggregate": 43, "separ": [43, 96, 98, 132, 136, 137], "ones": [43, 127], "choos": [43, 90, 93, 126, 127, 135, 137], "procedur": [43, 126, 132], "describ": [43, 86, 87, 98, 102, 103, 111, 114, 118, 131, 136], "p": [43, 85, 93, 110, 124, 135], "scipi": [43, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 114, 124, 129, 130], "stat": [43, 72, 93, 114, 122, 124, 126, 135], "convent": [43, 118, 127], "axi": [43, 85, 86, 87, 102, 103, 114, 126, 131], "po": [43, 124], "correlation_valu": 43, "found": [43, 104, 105, 106, 136], "used_corr_sign_": 43, "log": [43, 62, 64, 70, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 114, 118, 127, 138], "shen": [43, 124], "finn": [43, 124], "scheinost": 43, "d": [43, 85, 88, 89, 96, 104, 105, 106, 116, 123, 124, 126, 127], "et": [43, 116, 124, 125, 137], "al": [43, 124, 125], "individu": [43, 124, 129, 136], "behavior": [43, 88, 124, 125, 129, 138], "brain": [43, 89, 96, 122, 124, 125], "connect": [43, 124, 125], "nat": [43, 124], "protoc": [43, 124], "12": [43, 86, 88, 89, 96, 98, 99, 103, 108, 121, 124, 125, 136], "506": [43, 90, 106, 124], "518": [43, 105, 106, 124], "2017": [43, 124, 125], "doi": [43, 122, 125], "1038": 43, "nprot": 43, "2016": [43, 88, 89, 96, 104, 105, 106, 124], "178": 43, "y_mean_": 43, "show": [43, 84, 93, 101, 109, 113, 120, 126, 127, 135, 136, 138], "wa": [6, 43, 44, 45, 46, 47, 48, 49, 89, 96, 97, 98, 111, 124, 126, 127, 129, 136], "x_y_correlations_": 43, "significant_mask_": 43, "had": [43, 105, 136, 138], "pos_mask_": 43, "pos_significant_mask_": 43, "neg_significant_mask_": 43, "used_significant_mask_": 43, "threhsold": 43, "mask": [43, 45, 49], "per": [43, 85, 89, 96, 103, 118, 126], "get_feature_names_out": [43, 44, 46, 47, 48, 49], "input_featur": [43, 44, 46, 47, 48, 49], "x_types_renam": 44, "Not": [44, 45, 46, 47, 48, 110], "here": [44, 45, 46, 48, 87, 88, 89, 96, 98, 111, 117, 118, 122, 130, 135, 136, 137], "kept": [44, 46, 47, 48, 49, 111], "jutransform": [44, 45, 46, 47, 48, 49], "get_support": [45, 49], "support": [45, 49, 55, 76, 85, 89, 90, 96, 99, 104, 105, 106, 118, 126, 127, 129, 130, 136, 137, 138], "support_mask": [45, 49], "numpi": [45, 49, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 114, 121, 124, 125, 126, 129, 130], "keep": [46, 88, 90, 93, 97, 99, 103, 107, 110, 111, 118, 121, 122, 127, 130, 137], "wrapper": [47, 55, 138], "around": 47, "directli": [47, 88, 122, 131], "feature_names_in_": 47, "undefin": [47, 117], "x0": 47, "x1": 47, "n_features_in_": 47, "model_confound": [49, 56, 111, 125], "keep_confound": [49, 111], "specif": [49, 90, 96, 98, 111, 125, 127, 128, 129, 132, 133, 134], "subtract": [49, 56, 111, 116], "regular": [49, 104, 105, 111, 116, 127, 133], "express": [49, 111, 133], "syntax": [49, 111], "linearregress": [49, 56, 111, 116, 124, 125], "By": [49, 56, 96, 97, 98, 111, 116, 124, 127, 129, 136], "residu": [49, 56, 111, 125], "fall": [49, 56, 111, 124, 136], "under": [49, 56, 111, 114, 120, 121, 136, 137], "togeth": [49, 86, 87, 102, 103, 111, 114, 116], "deconfound": [49, 111], "transformer_nam": [52, 60], "transformer_cl": [52, 60], "arg": [54, 57, 66, 67, 68, 69], "_model_": 55, "transform_target": 55, "confoundremov": [56, 111, 116, 125, 138], "notifi": [57, 62], "with_traceback": 57, "except": [57, 64, 118, 121], "tb": 57, "__traceback__": 57, "fname": 62, "output_format": 62, "debug": [62, 132], "info": [62, 63, 85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 118, 124, 125, 127, 129, 130, 131, 135, 136, 137], "messag": [62, 64, 70, 118, 124, 138], "pathlib": 62, "path": 62, "filenam": [62, 118], "stdout": 62, "file": [62, 88, 91, 94, 100, 108, 112, 115, 118], "statement": 62, "append": [62, 97, 110, 123, 126, 129], "entri": [62, 137], "doc": [62, 87, 118, 123, 138], "python": [62, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 118, 121, 123, 126, 127, 138], "dev": [62, 118, 123], "howto": 62, "asctim": 62, "levelnam": 62, "msg": [64, 70], "klass": [64, 127], "subclass": [64, 70], "fashion": [66, 67, 68, 69, 125], "juestim": 69, "categori": 70, "width": [71, 90, 93, 99, 107, 110], "800": 71, "height": 71, "600": [71, 87, 90], "ci": [71, 110, 123], "95": [71, 90, 93, 98, 99, 103, 107, 110, 126, 127], "plot": [71, 85, 86, 87, 93, 96, 97, 98, 103, 110, 122, 126, 135], "panel": [71, 93, 120, 121, 135], "dashboard": 71, "confid": [71, 110, 129], "interv": [71, 110], "dynam": [72, 121, 122], "prepar": [72, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 104, 105, 106, 110, 114, 122, 124, 125, 129, 130], "visual": [72, 96, 121, 122, 126, 132, 134], "julearn": [74, 76, 83, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 116, 118, 119, 120, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "depend": [76, 83, 88, 89, 96, 104, 105, 106, 118, 122, 126, 129, 135, 138], "instal": [76, 83, 118, 120, 122, 123, 135, 138], "protocol": 82, "experiment": [83, 127], "futur": [83, 85, 87, 97, 110, 126, 127], "complet": [83, 118], "particularli": [83, 126, 136], "reli": 83, "beta": 83, "releas": [83, 121, 122, 138], "packag": [83, 87, 90, 97, 110, 118, 120, 121, 126, 127, 130], "viz": [83, 93, 121, 122, 135], "basic": [84, 118, 127, 133, 134, 136, 137, 138], "galleri": [84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 118], "sphinx": [84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 118, 138], "end": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 121], "download": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114], "code": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 118, 122, 125, 137, 138], "iri": [85, 90, 93, 97, 99, 107, 110, 118, 127, 133, 136, 137], "vector": [85, 89, 90, 96, 99, 104, 105, 106, 118, 127, 129, 130, 136, 137], "machin": [85, 88, 89, 90, 96, 99, 104, 105, 106, 118, 122, 124, 125, 127, 129, 132, 133, 134, 135, 137], "classifi": [85, 89, 90, 96, 97, 99, 104, 105, 106, 107, 110, 118, 129, 136, 137], "heatmap": [85, 86, 103], "accuraci": [85, 90, 105, 110, 125, 126, 135, 136], "confus": [85, 98, 136, 137], "matrix": 85, "author": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 118, 124], "shammi": [85, 86, 87, 89, 96, 98, 103, 110, 114, 122, 125, 138], "fz": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124], "juelich": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124], "de": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125], "federico": [85, 86, 87, 88, 89, 90, 93, 96, 97, 99, 103, 104, 105, 106, 107, 110, 114, 122], "raimondo": [85, 86, 87, 88, 89, 90, 93, 96, 97, 99, 103, 104, 105, 106, 107, 110, 114, 122, 138], "f": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 103, 104, 105, 106, 107, 110, 114, 124, 125, 127, 130], "licens": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 118, 124], "agpl": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124], "seaborn": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 103, 104, 105, 106, 107, 110, 118, 121, 122, 126, 127, 129, 133, 136, 137], "sn": [85, 86, 87, 96, 97, 98, 103, 110, 126, 129], "matplotlib": [85, 86, 87, 96, 97, 98, 103, 110, 122, 126], "pyplot": [85, 86, 87, 96, 97, 98, 103, 110, 126], "plt": [85, 86, 87, 96, 97, 98, 103, 110, 126], "load_dataset": [85, 88, 89, 90, 93, 96, 97, 99, 104, 105, 106, 107, 110, 118, 127, 129, 133, 136, 137], "model_select": [85, 86, 87, 89, 93, 96, 99, 102, 103, 110, 126, 129, 135, 136, 138], "train_test_split": [85, 86, 102, 103], "repeatedkfold": [85, 129], "confusion_matrix": 85, "configure_log": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 114, 118, 129, 130], "2023": 122, "11": [88, 89, 96, 99, 124, 125, 129, 130, 135, 136], "30": [90, 93, 96, 97, 98, 99, 125, 130, 135], "452": 136, "lib": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 114, 126, 127, 129, 130], "453": [], "26": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 114, 127, 129, 130], "4": [6, 43, 44, 45, 46, 47, 48, 49, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138], "dev110": [], "load": [85, 86, 87, 102, 103, 104, 105, 106, 110, 111, 114, 118, 127, 131, 133, 136], "df_iri": [85, 90, 93, 97, 99, 107, 110, 118], "sepal_length": [85, 90, 93, 97, 99, 107, 110, 127, 133, 136, 137], "sepal_width": [85, 90, 93, 97, 99, 107, 110, 127, 133, 136, 137], "petal_length": [85, 90, 93, 97, 99, 107, 110, 127, 133, 136, 137], "speci": [85, 90, 93, 97, 99, 107, 110, 118, 127, 129, 133, 136, 137], "train_iri": 85, "test_iri": 85, "200": [85, 98, 99, 110, 124, 126, 129, 130], "we": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 117, 118, 120, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137], "model_iri": [85, 97], "456": [], "457": 127, "expand": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 117, 124, 125, 127, 129, 130, 131, 135, 136, 137], "treat": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 104, 105, 106, 110, 114, 124, 129, 130], "home": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 104, 105, 106, 110, 114, 124, 127, 129, 130, 135], "runner": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 104, 105, 106, 110, 114, 124, 127, 129, 130, 135], "py": [85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 118, 124, 126, 127, 129, 130, 135], "503": [], "warn_with_log": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 104, 105, 106, 110, 114, 124, 129, 130, 135], "458": [], "__continu": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 110, 111, 114, 124, 127, 129, 131, 135, 136, 137], "459": 127, "120": 85, "versicolor": [85, 90, 93, 97, 99, 107, 110, 118, 127, 136, 137], "40": [85, 86, 87, 104, 107, 127, 130], "virginica": [85, 90, 93, 97, 99, 107, 110, 118, 127, 136, 137], "setosa": [85, 133, 136, 137], "count": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 126, 127, 129, 131, 135, 136, 137], "dtype": [85, 86, 87, 89, 90, 93, 96, 97, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 127, 129, 131, 135, 136, 137], "int64": [85, 89, 90, 93, 96, 97, 99, 104, 105, 106, 107, 110, 127, 129, 135, 136, 137], "460": 127, "scheme": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 127, 129, 130, 131, 132, 135, 136, 137, 138], "multi": [85, 88, 135, 136, 137], "detect": [85, 89, 90, 93, 96, 97, 99, 104, 105, 106, 107, 110, 117, 127, 129, 132, 135, 136, 137, 138], "head": [85, 86, 87, 88, 89, 96, 102, 103, 104, 105, 106, 110, 111, 114, 131, 133, 135, 137], "score_tim": [85, 86, 99, 102, 103, 111, 114, 125, 131, 136, 137], "test_accuraci": [85, 90, 110, 135], "n_train": [85, 86, 111, 114, 125], "n_test": [85, 86, 111, 114, 125], "cv_mdsum": [85, 86, 99, 102, 103, 111, 114, 125, 131, 136, 137], "004817": [], "002559": [], "916667": 85, "96": [85, 98, 99, 127, 138], "24": [85, 87, 89, 121, 127, 138], "fa5ab7a2b930761687a8e82d9971ebca": 85, "004397": 99, "002450": 137, "833333": 85, "004402": [], "002457": 136, "958333": 85, "004433": [], "002480": [], "004379": [], "002462": [], "now": [85, 86, 87, 88, 90, 93, 96, 97, 99, 102, 103, 104, 105, 106, 110, 111, 114, 118, 125, 126, 127, 129, 130, 133, 135, 136, 137], "df_accuraci": 85, "set_index": [85, 86, 88, 103, 110], "unstack": [85, 86, 103], "index": [85, 86, 87, 88, 89, 96, 98, 102, 103, 104, 105, 106, 110, 114, 118, 122, 129], "875000": 85, "750000": 85, "000000": [85, 86, 87, 93, 98, 102, 103, 110, 111, 114, 131, 135], "791667": 85, "font_scal": [85, 86], "fig": [85, 86, 87, 96, 97, 98, 103, 126], "ax": [85, 86, 87, 96, 97, 98, 103, 126], "subplot": [85, 86, 87, 96, 97, 98, 103, 126], "figsiz": [85, 86, 87, 96, 97, 98, 103, 126], "7": [85, 86, 87, 88, 89, 96, 99, 103, 118, 122, 126, 130, 132, 133, 136, 138], "cmap": [85, 86, 103], "ylgnbu": [85, 86, 103], "titl": [85, 86, 103, 118], "text": [85, 86, 96, 98, 103, 118, 126], "our": [85, 88, 89, 90, 96, 98, 107, 111, 118, 122, 125, 126, 127, 129, 130, 132, 133, 135, 136, 137], "annot": [85, 86], "cm": 85, "uniqu": [85, 89, 96, 127, 129], "9": [85, 86, 88, 89, 96, 98, 99, 103, 111, 125, 127, 133, 136, 137], "8": [85, 88, 89, 96, 99, 102, 103, 121, 125, 126, 127, 131, 132, 136, 137, 138], "let": [85, 86, 87, 88, 89, 96, 98, 102, 103, 104, 105, 110, 111, 114, 125, 126, 127, 129, 130, 131, 133, 137], "anoth": [85, 88, 98, 114, 126, 130, 137], "cm_sum": 85, "keepdim": 85, "cm_perc": 85, "astyp": 85, "100": [85, 90, 93, 97, 98, 99, 107, 110, 125, 127], "empty_lik": 85, "nrow": 85, "ncol": 85, "rang": [85, 88, 98, 116, 124, 130], "j": [85, 125], "c": [85, 88, 89, 96, 104, 105, 106, 120, 121, 127, 129, 130, 137], "els": 85, "1f": [85, 86], "tmp": [85, 87], "tmpcwtyqmh_": [], "2e7b1527c028733120aa7f73295f211297481781": [], "00_start": [85, 87], "plot_cm_acc_multiclass": [85, 91], "104": [85, 93], "deprecationwarn": 85, "convers": 85, "ndim": 85, "deprec": [85, 87, 97, 110, 118, 126, 138], "extract": [85, 88, 89, 96, 129], "singl": [85, 117, 129, 135], "your": [85, 88, 118, 121, 122, 124, 125, 126, 129, 134, 137], "25": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 127, 129, 130, 131, 135, 136, 137], "fmt": [85, 86], "total": [85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137], "script": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 118, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137], "minut": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137], "499": [105, 130], "sourc": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114], "jupyt": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 120, 136], "notebook": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 120, 136], "ipynb": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114], "diabet": [86, 87, 102, 103, 114, 131], "ridg": [86, 102, 103, 114, 116], "load_diabet": [86, 87, 102, 103, 111, 114, 131], "mean_absolute_error": [86, 103], "101": 118, "return_x_i": [86, 87, 102, 103, 111, 114, 131], "as_fram": [86, 87, 102, 103, 111, 114, 131], "ten": [86, 87, 102, 103, 114], "ag": [86, 87, 88, 102, 103, 111, 114, 131], "sex": [86, 87, 102, 103, 111, 114, 125, 129, 131], "bodi": [86, 87, 102, 103, 114], "mass": [86, 87, 102, 103, 114], "averag": [86, 87, 102, 103, 111, 114, 124, 126, 135], "blood": [86, 87, 102, 103, 111, 114], "pressur": [86, 87, 102, 103, 111, 114], "six": [86, 87, 102, 103, 114], "serum": [86, 87, 102, 103, 114], "measur": [86, 87, 102, 103, 111, 114, 125, 126, 127, 129], "s1": [86, 87, 88, 89, 96, 102, 103, 111, 114, 131], "s6": [86, 87, 88, 89, 96, 102, 103, 111, 114, 131], "patient": [86, 87, 102, 103, 114], "quantit": [86, 87, 102, 103, 114], "diseas": [86, 87, 102, 103, 114], "progress": [86, 87, 102, 103, 114, 118], "year": [86, 87, 102, 103, 114], "baselin": [86, 87, 102, 103, 114], "interest": [86, 87, 90, 102, 103, 110, 114, 134, 136, 137], "bmi": [86, 87, 102, 103, 111, 114, 131], "s4": [86, 87, 88, 89, 96, 102, 103, 111, 114, 131], "s5": [86, 87, 88, 89, 96, 102, 103, 104, 105, 106, 111, 114, 131], "038076": [86, 87, 102, 103, 111, 114, 131], "050680": [86, 87, 102, 103, 111, 114, 131], "061696": [86, 87, 102, 103, 111, 114, 131], "002592": [86, 87, 102, 103, 111, 114, 131], "019907": [86, 87, 102, 103, 111, 114, 131], "017646": [86, 87, 102, 103, 111, 114, 131], "001882": [86, 87, 102, 103, 111, 114, 131], "044642": [86, 87, 102, 103, 111, 114, 131], "051474": [86, 87, 102, 103, 111, 114, 131], "039493": [86, 87, 102, 103, 111, 114, 131], "068332": [86, 87, 102, 103, 111, 114, 131], "092204": [86, 87, 102, 103, 111, 114, 131], "085299": [86, 87, 102, 103, 111, 114, 131], "044451": [86, 87, 102, 103, 111, 114, 131], "002861": [86, 87, 102, 103, 111, 114, 131], "025930": [86, 87, 102, 103, 111, 114, 131], "089063": [86, 87, 102, 103, 111, 114, 131], "011595": [86, 87, 102, 103, 111, 114, 131], "034309": [86, 87, 102, 103, 111, 114, 131], "022688": [86, 87, 102, 103, 111, 114, 131], "009362": [86, 87, 102, 103, 111, 114, 131], "005383": [86, 87, 102, 103, 111, 114, 131], "036385": [86, 87, 102, 103, 111, 114, 131], "031988": [86, 87, 102, 103, 111, 114, 131], "046641": [86, 87, 102, 103, 111, 114, 131], "442": [86, 87, 102, 103, 105, 111, 114, 131], "152": [86, 87, 102, 103, 111, 114, 124, 127, 131, 137, 138], "133484": [86, 87, 102, 103, 111, 114, 131], "std": [86, 87, 98, 102, 103, 111, 114, 125, 131], "77": [86, 87, 102, 103, 111, 114, 131, 135, 138], "093005": [86, 87, 102, 103, 111, 114, 131], "min": [86, 87, 98, 102, 103, 111, 114, 131], "87": [86, 87, 102, 103, 111, 114, 131], "140": [86, 87, 102, 103, 104, 111, 114, 131], "500000": [86, 87, 102, 103, 111, 114, 131], "75": [86, 87, 90, 93, 98, 102, 103, 111, 114, 131], "211": [86, 87, 96, 102, 103, 111, 114, 131], "max": [86, 87, 98, 102, 103, 111, 114, 116, 131], "346": [86, 87, 102, 103, 111, 114, 131], "float64": [86, 87, 90, 93, 98, 102, 103, 107, 111, 114, 124, 125, 130, 131], "combin": [86, 87, 88, 102, 103, 110, 114, 127, 137], "data_diabet": [86, 102, 103, 114, 131], "concat": [86, 87, 97, 102, 103, 110, 114, 131], "bp": [86, 87, 102, 103, 111, 114, 131], "s2": [86, 87, 88, 89, 96, 102, 103, 111, 114, 131], "s3": [86, 87, 88, 89, 96, 102, 103, 111, 114, 131], "calcul": 86, "heat": 86, "corr": [86, 103], "xticklabel": 86, "yticklabel": 86, "train_diabet": [86, 102, 103], "test_diabet": [86, 102, 103], "neg_mean_absolute_error": [86, 87, 98, 102, 114, 136], "299": 124, "300": [124, 125], "301": [124, 125], "302": [124, 125], "309": [86, 102, 103, 127], "test_scor": [86, 87, 89, 90, 93, 96, 102, 103, 104, 105, 106, 107, 111, 114, 125, 127, 136], "004773": [], "002307": [], "48": [86, 88, 110, 111], "783874": 86, "247": [85, 86, 138], "62": 86, "b10eef89b4192178d482d7a1587a248a": [86, 102, 103, 111, 114, 125, 131, 136, 137], "004258": [], "002250": [], "47": [86, 103, 111, 114, 138], "573568": 86, "004443": [], "002321": [], "37": [86, 106], "617474": 86, "004253": [], "002185": [], "686852": 86, "004255": [], "002206": [], "45": [86, 105, 127], "558655": 86, "248": [86, 124], "61": 86, "444084441470615": 86, "mae": [86, 103], "df_mae": [86, 103], "coef_": [86, 111], "sort_valu": 86, "ascend": 86, "inplac": 86, "barh": 86, "color": [86, 87, 96, 110, 126], "blue": 86, "red": 86, "xlabel": [86, 103], "249999999999986": 86, "scatterplot": [86, 96, 98, 103], "v": [86, 103, 123, 126, 128, 137], "2f": [86, 103], "corrcoef": [86, 103], "set_styl": [86, 87, 103], "darkgrid": [86, 87, 103], "scatter": [86, 98, 103], "xmin": [86, 103], "xmax": [86, 103], "get_xlim": [86, 96, 103], "ymin": [86, 103], "ymax": [86, 103], "get_ylim": [86, 96, 103], "ylabel": [86, 103, 126], "01": [86, 91, 98, 100, 103, 104, 105, 108, 122, 124, 127, 129, 130], "verticalalign": [86, 103], "top": [86, 103, 122, 136], "horizontalalign": [86, 103], "right": [86, 103, 104, 105, 106, 126, 127], "fontsiz": [86, 103], "scale": [86, 103, 104, 105, 116, 127, 129, 137], "649999999999999": 86, "347": 86, "35": [86, 88], "660": 114, "plot_example_regress": [86, 91], "leonard": [87, 98, 110, 122, 124], "sass": [87, 98, 110, 122, 124], "l": [87, 88, 89, 96, 98, 102, 104, 105, 106, 110, 124], "128": 86, "outlier": 87, "data_df": 87, "new_df": 87, "145": [87, 103], "150": [87, 124, 125, 127, 136, 137], "590": 87, "580": 87, "597": 87, "595": 87, "reset_index": [87, 88, 89, 96, 104, 105, 106, 110], "plot_stratified_kfold_reg": [87, 91], "51": [87, 102], "settingwithcopywarn": 87, "try": [87, 89, 90, 93, 96, 99, 105, 107, 126, 127, 136], "slice": 87, "loc": 87, "row_index": 87, "col_index": 87, "caveat": 87, "pydata": 87, "user_guid": 87, "view": [87, 118], "versu": 87, "idea": [87, 132], "chosen": 87, "coupl": 87, "histrogram": 87, "displot": 87, "60": 87, "20": [87, 90, 93, 99, 110, 124, 125, 126, 127, 129, 130, 135, 136, 137], "opt": [87, 90, 97, 110, 126, 127], "hostedtoolcach": [87, 90, 97, 110, 126, 127], "13": [88, 89, 96, 99, 121, 125, 135, 137], "x64": [87, 90, 97, 110, 126, 127], "python3": [87, 90, 97, 110, 126, 127], "site": [87, 90, 97, 110, 126, 127], "_oldcor": [87, 97, 110, 126], "1498": [], "futurewarn": [87, 97, 110, 126], "is_categorical_dtyp": [], "isinst": [], "categoricaldtyp": [], "1119": [87, 97, 110, 126], "use_inf_as_na": [87, 97, 110, 126], "inf": [87, 97, 110, 126], "nan": [87, 97, 110, 126, 129], "option_context": [87, 97, 110, 126], "mode": [87, 97, 110, 126], "axisgrid": 87, "facetgrid": 87, "0x7fe724e4f2e0": [], "histogram": 87, "abov": [87, 110, 125, 127, 129, 136], "uniformli": [87, 126], "skew": 87, "toward": 87, "lower": [87, 126], "even": [87, 111, 127, 136, 137], "low": [87, 98, 106, 116, 124, 127], "give": [87, 116, 125, 127, 134, 135, 136], "good": [87, 90, 105, 121, 126, 134, 135], "granular": 87, "cv_stratifi": [87, 89], "linear": [87, 93, 104, 105, 106, 111, 124, 125, 127, 129, 130, 137], "scores_strat": 87, "linreg": [87, 111, 116, 124, 125], "716": 136, "717": [], "718": [], "719": [], "449": 87, "_split": [87, 126], "737": [87, 126, 127], "popul": [87, 110, 126], "member": [87, 126], "761": [], "762": [], "763": [], "764": [], "compar": [87, 93, 110, 122, 125, 127, 132, 135, 136], "With": [87, 126, 129, 136], "df_score": 87, "boxplot": [87, 110], "higher": [87, 110, 126], "were": [87, 88, 89, 96, 97, 110, 129, 136], "swarmplot": [87, 97], "842": 98, "fmri": [88, 89, 96, 104, 105, 106], "waskom": [88, 89, 96, 104, 105, 106], "m": [88, 89, 96, 104, 105, 106, 118, 123, 137], "frank": [88, 89, 96, 104, 105, 106], "wagner": [88, 89, 96, 104, 105, 106], "adapt": [88, 89, 96, 104, 105, 106], "engag": [88, 89, 96, 104, 105, 106], "cognit": [88, 89, 96, 104, 105, 106], "cerebr": [88, 89, 96, 104, 105, 106], "cortex": [88, 89, 96, 104, 105, 106], "similar": [88, 127, 130, 136, 137], "excel": [88, 126], "spreadsheet": 88, "csv": 88, "ideal": 88, "everyth": [88, 134], "tabul": 88, "organis": [88, 125], "demograph": [88, 125], "diagnost": 88, "manual": [88, 120, 135, 137], "edit": 88, "sure": [88, 96, 118, 123, 125, 126, 127], "readi": [88, 135, 137], "do": [88, 96, 98, 103, 104, 105, 110, 111, 114, 116, 118, 122, 123, 125, 126, 127, 130, 132, 133, 134, 135, 136, 137], "howev": [88, 93, 96, 97, 98, 111, 117, 120, 121, 125, 126, 127, 130, 131, 132, 135, 136, 137, 138], "prone": [88, 132, 135], "fortun": [88, 126, 127], "tool": [88, 117, 121, 129, 135], "deal": [88, 124, 133], "task": [88, 96, 111, 127, 131], "collect": [88, 110, 129], "start": [88, 118, 119, 122, 126, 127, 129, 130, 131, 134, 135, 137], "df_fmri": [88, 89, 96, 104, 105, 106], "subject": [88, 89, 96, 104, 105, 106, 126], "timepoint": [88, 89, 96, 104, 105, 106], "event": [88, 89, 96, 104, 105, 106], "region": [88, 89, 96, 104, 105, 106], "signal": [88, 89, 96, 104, 105, 106], "s13": [88, 89, 96, 104, 105, 106], "18": [88, 89, 96, 99, 104, 105, 106, 124, 125], "stim": [88, 89, 96, 104, 105, 106], "pariet": [88, 89, 96, 104, 105, 106], "017552": [88, 89, 96, 104, 105, 106], "14": [85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 114, 125, 129, 130, 135], "080883": [88, 89, 96, 104, 105, 106], "s12": [88, 89, 96, 104, 105, 106], "081033": [88, 89, 96, 104, 105, 106], "s11": [88, 89, 96, 104, 105, 106], "046134": [88, 89, 96, 104, 105, 106], "s10": [88, 89, 96, 104, 105, 106], "037970": [88, 89, 96, 104, 105, 106], "long": [88, 110], "wide": 88, "seen": [88, 137], "pivot": [88, 89, 96, 104, 105, 106], "reshap": [88, 96], "tabl": [88, 89, 96], "becom": [88, 132, 137], "identifi": [88, 90, 124, 125, 129, 135], "rule": [88, 116, 126, 137], "duplic": [88, 117], "frontal": [88, 89, 96, 104, 105, 106], "s0": [88, 89, 96, 104, 105, 106], "cue": [88, 89, 96, 104, 105, 106], "007766": [88, 104, 105, 106], "006899": [88, 104, 105, 106], "021452": [88, 104, 105, 106], "039327": [88, 104, 105, 106], "016440": [88, 104, 105, 106], "000300": [88, 104, 105, 106], "021054": [88, 104, 105, 106], "035735": [88, 104, 105, 106], "024296": [88, 104, 105, 106], "033220": [88, 104, 105, 106], "subtl": 88, "For": [88, 90, 93, 98, 103, 111, 116, 117, 118, 120, 121, 124, 126, 127, 129, 130, 131, 133, 136, 137], "place": 88, "scan": 88, "ll": [88, 103], "23": [88, 89, 122, 125, 127, 130], "31": [88, 97, 135], "29": [88, 93, 127, 135], "43": [88, 114], "28": [88, 127], "34": [88, 102, 106, 127, 135], "scanner": 88, "6": [88, 89, 93, 96, 97, 98, 99, 106, 111, 124, 126, 129, 132, 133, 136], "b": [88, 118, 127, 137], "df_meta": 88, "s7": [88, 89, 96], "s8": [88, 89, 96], "s9": [88, 89, 96], "16": [88, 89, 96, 98, 99, 122, 125, 127, 129, 130], "036739": 88, "131641": 88, "17": [88, 89, 96, 98, 99, 127, 129, 135], "004900": 88, "036362": 88, "030099": 88, "121574": 88, "000643": 88, "051040": 88, "009959": 88, "103513": 88, "532": [85, 88, 89, 91, 96, 104, 105, 106, 127], "frame": 88, "suppos": [88, 90, 125], "dure": [88, 89, 96, 121, 124, 125, 127, 129], "There": [88, 126, 132, 134, 137], "009038": 88, "009642": 88, "047859": 88, "026727": 88, "085040": 88, "086399": 88, "069775": 88, "070558": 88, "115321": 88, "154058": 88, "010535": 88, "061817": 88, "034386": 88, "130267": 88, "15": [87, 88, 89, 90, 96, 97, 98, 99, 110, 121, 125, 126, 127, 129, 135], "002170": 88, "048007": 88, "038257": 88, "134828": 88, "004290": 88, "035395": 88, "266": [88, 89, 96, 104, 105, 106, 127], "sinc": [88, 93, 98, 102, 104, 122, 127, 137], "previou": [88, 93, 97, 98, 118, 130, 135, 136, 137, 138], "multiindex": 88, "trick": 88, "underscor": 88, "_": [88, 97, 110, 118], "frontal_cu": 88, "frontal_stim": 88, "parietal_cu": 88, "parietal_stim": 88, "829": 129, "run_combine_panda": [88, 91], "groupkfold": 89, "kimia": 89, "nazarzadeh": 89, "necessari": [89, 120, 125, 130], "librari": [89, 120, 122, 127], "stratifiedgroupkfold": 89, "08": [], "942": 131, "infer": [89, 96], "studi": [89, 96, 125, 126, 127], "condit": [89, 96], "groupbi": [89, 96], "1064": [89, 96], "exactli": [89, 96, 129, 137], "rf": [89, 93, 97, 98, 107, 110, 116, 127, 130, 135], "961": [], "962": [], "963": 136, "964": 136, "965": 136, "6841826838300122": 89, "09": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 124, 125, 127, 129, 130, 131, 135, 136, 137], "605": [], "606": [], "607": [], "608": [], "6898496240601504": 89, "966": [], "967": [], "968": [], "969": [], "970": [], "6879699248120301": 89, "389": [], "run_grouped_cv": [89, 91], "308": 127, "three": [90, 93, 97, 99, 107, 110, 118, 122, 127, 135, 136], "isin": [90, 93, 97, 99, 107, 110, 118, 127], "sepal": [90, 93, 99, 107, 110, 133, 137], "length": [90, 93, 99, 107, 110], "petal": [90, 93, 99, 107, 110, 133, 137], "679": [], "680": [], "681": [], "682": [], "683": [], "90": [90, 93, 135], "70": [90, 93], "assess": [90, 93, 125, 129], "unbalanc": [90, 93], "df_unbalanc": [90, 93], "value_count": [90, 93], "account": [90, 125], "imbal": 90, "suitabl": [90, 121], "balanced_accuraci": [90, 93, 136], "balanced_accuracy_scor": 90, "42": [90, 93, 96, 104, 105, 106, 110, 114, 126, 129, 135, 136], "test_balanced_accuraci": [90, 93], "723": [], "724": [], "725": 127, "80": [90, 93, 125, 135], "726": 127, "_classif": 90, "2399": [], "8625": 90, "8678571428571429": 90, "u": [90, 97, 110, 111, 121, 125, 129, 135, 136], "correctli": 90, "precis": [90, 136], "ratio": 90, "tp": 90, "precision_scor": 90, "771": [89, 93, 127, 135], "772": [89, 127, 135], "773": 135, "774": [93, 135], "514": 105, "run_simple_binary_classif": [90, 91], "00": [91, 94, 98, 100, 107, 108, 112, 115, 127, 129, 130, 135], "04": 108, "733": 105, "execut": [91, 94, 100, 108, 112, 115, 118], "auto_examples_00_start": 91, "mb": [91, 94, 100, 108, 112, 115], "At": [93, 122, 132, 137], "statist": [93, 98, 110, 122, 134, 136], "repeatedstratifiedkfold": [93, 99, 135, 136], "corrected_ttest": [93, 135], "944": 131, "945": [], "947": [], "948": [], "949": [], "950": [], "951": 87, "roc_auc": [93, 110, 135, 136], "scores1": [93, 120, 127, 135], "990": 129, "991": [], "992": [], "993": [], "scores2": [93, 120, 127, 135], "273": 129, "274": 129, "275": [], "276": [], "third": [93, 136], "kernel": [93, 104, 105, 106, 125, 127, 129, 130, 137], "scores3": [93, 120, 127, 135], "svm__kernel": [93, 105, 127], "svm_linear": 93, "971": [], "stats_df": [93, 135], "model_2": [93, 130, 135], "val": [93, 135], "175075": 93, "062567": 93, "895662": 93, "151390": 93, "782741": 93, "test_roc_auc": [93, 110, 135], "108944": 93, "835331": 93, "236153": 93, "685092": 93, "669010": 93, "324331": 93, "viewer": 93, "plot_scor": [93, 120, 135], "uncom": [93, 135], "line": [93, 118, 126, 135], "read": [93, 97, 118, 122, 123, 126, 132, 134, 135, 137], "holoviz": [93, 135], "getting_start": [93, 135], "build_app": [93, 135], "deploi": [93, 129, 135], "pane": [], "unknown": [], "widget": [], "could": [96, 98, 111, 122, 124, 129, 133, 135, 136, 137], "button_typ": [], "look": [93, 96, 98, 103, 111, 116, 124, 126, 127, 129, 130, 132, 133, 134, 136, 137], "interact": [93, 96, 122, 129, 135], "zoom": [93, 135], "hover": [93, 135], "button": [93, 135], "433": 129, "plot_simple_model_comparison": [93, 94], "03": [91, 94, 100, 108, 122], "auto_examples_01_model_comparison": 94, "demonstr": [95, 118, 130, 136], "analys": [96, 97, 125], "groupshufflesplit": 96, "419": [], "439": 105, "440": [105, 106, 108], "441": 105, "443": [], "7218303650149884": 96, "decod": [96, 125], "claim": [96, 110, 126], "acquir": 96, "randomli": 96, "characterist": 96, "unseen": [96, 126, 132], "whom": 96, "later": [96, 99, 118, 135], "500": 105, "501": 105, "502": [], "504": 90, "7210526315789474": 96, "part": [96, 120, 122, 124, 126, 132, 135, 137], "raw": [96, 98, 137], "hue": [96, 110], "set_titl": [96, 97, 98, 126], "pre_x": 96, "pre_df": 96, "join": 96, "parietal__": 96, "frontal__": 96, "noth": [96, 127, 136], "standardscal": [96, 106, 116, 127, 129, 131, 136, 137], "seem": [96, 104, 105, 106, 110, 127, 134, 135, 136], "quit": [96, 121, 124, 129], "linearli": 96, "clf": 96, "figur": [96, 118], "xlim": 96, "ylim": 96, "xx": 96, "linspac": [96, 126], "yy": 96, "meshgrid": 96, "xy": 96, "vstack": 96, "ravel": 96, "xy_df": 96, "contour": 96, "alpha": [96, 124, 126], "linestyl": [96, 126], "boundari": [96, 127], "492": 130, "plot_groupcv_inspect_svm": [96, 100], "861": 111, "862": [], "864": [], "865": 135, "866": [], "867": [], "868": [], "intern": [97, 129, 130, 136, 137, 138], "caution": [97, 126], "proper": [97, 110, 123, 134], "randomforestclassifi": [97, 116, 127], "understand": [97, 111, 122, 125, 129, 134, 135, 137], "to_plot": 97, "feature_importances_": [97, 110], "barplot": 97, "tight_layout": [97, 110], "review": [97, 118], "wander": 97, "about": [97, 118, 122, 125, 126, 129, 130, 132, 134, 135, 136, 137], "entir": [97, 136, 137], "566": [], "567": [], "568": 112, "569": [114, 135], "570": 114, "571": 114, "i_fold": [97, 110], "enumer": [97, 110], "this_import": [97, 110], "416": 110, "plot_inspect_random_forest": [97, 100], "make_regress": [98, 124, 125, 130], "normal": [98, 111, 116, 118, 125, 126, 137, 138], "reduct": 98, "19": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 122, 124, 127, 129, 131, 135], "065": [], "n_inform": 98, "nois": [98, 125], "first_two": 98, "determin": [98, 127, 137], "belong": [98, 111], "x_to_zscor": 98, "summari": [98, 118], "111790": 98, "141618": 98, "023682": 98, "167718": 98, "686170": 98, "977322": 98, "972988": 98, "087946": 98, "895011": 98, "79": [98, 118], "741431": 98, "069985": 98, "772593": 98, "552990": 98, "659172": 98, "204": 98, "293317": 98, "751257": 98, "484100": 98, "759419": 98, "688891": 98, "64": 98, "724008": 98, "206729": 98, "194442": 98, "028152": 98, "174160": 98, "789944": 98, "421885": 98, "724302": 98, "772156": 98, "408321": 98, "392804": 98, "943621": 98, "256723": 98, "383145": 98, "259309": 98, "216": 98, "221085": 98, "explicitli": [98, 104, 125, 127], "declar": 98, "constructor": 98, "special": 98, "cannot": [98, 137], "tree": [98, 116], "pipeline_cr": [98, 103, 107, 111, 125, 127, 129, 130], "select_vari": [98, 116], "n_compon": [98, 103, 127, 137], "n_estim": [98, 130], "becaus": [98, 111, 125, 126, 127, 129, 132, 134, 135, 136, 137], "creator": [98, 99, 102, 103, 104, 105, 110, 111, 124, 127, 131, 136, 137], "simpli": [98, 124, 125, 126, 129, 130, 137], "did": [98, 105], "hand": [98, 118, 124, 125, 130, 133], "r2": [98, 103, 125, 136], "x_after_pca": 98, "earlier": 98, "x_after_zscor": 98, "high": [98, 106, 117, 124, 127], "pca__pca0": [98, 111], "pca__pca1": [98, 111], "080": 104, "081": [], "__x_to_zscor": 98, "082": [], "083": [], "084": 111, "085": 111, "725696": 98, "582295": 98, "314458": 98, "942935": 98, "977336": 98, "463217": 98, "525139": 98, "219493": 98, "618559": 98, "908592": 98, "395105": 98, "743192": 98, "328111": 98, "670912": 98, "97": [98, 99, 110], "573900": 98, "401304": 98, "98": [98, 99, 126], "918034": 98, "137435": 98, "99": [98, 99, 135], "894566": 98, "357729": 98, "1__": 98, "4__": 98, "013728": 98, "426259": 98, "364686": 98, "944446": 98, "118838": 98, "931848": 98, "004437": 98, "030684": 98, "309092": 98, "523891": 98, "206189": 98, "157667": 98, "099154": 98, "028182": 98, "335538": 98, "252795": 98, "049139": 98, "133702": 98, "240085": 98, "443863": 98, "deviat": [98, 125], "000000e": 98, "02": [98, 108, 129, 130], "689893e": 98, "387779e": 98, "005038e": 98, "013728e": 98, "010202e": 98, "576015e": 98, "463286e": 98, "763131e": 98, "456486e": 98, "488094e": 98, "018781e": 98, "113700e": 98, "184776e": 98, "326": 102, "plot_preprocess": [98, 100], "shufflesplit": 99, "510": [], "513": 105, "515": [105, 106], "516": [105, 106], "004767": [], "002408": [], "42489ff0163b2f12752440a6b7ef74c7": 99, "004391": [], "002318": [], "004211": [], "002286": [], "004200": [], "002320": [], "004222": [], "002315": [], "004184": [], "002294": [], "004201": [], "002290": 86, "004248": [], "002326": [], "002363": [], "004217": [], "004238": [], "002298": 114, "004229": [], "002311": [], "004156": [], "002314": [], "004206": [], "004158": [], "002285": [], "004155": [], "002312": [], "002302": [], "004168": [], "002304": [], "004198": [], "002308": 86, "004180": [], "002322": [], "cv_predict": 99, "repeat0_p0": [99, 129], "repeat1_p0": [99, 129], "repeat2_p0": [99, 129], "repeat3_p0": 99, "_pipelin": 99, "0x7fe724e89a20": [], "227": [], "run_binary_inspect_fold": [99, 100], "auto_examples_02_inspect": 100, "Then": [102, 111, 123, 130, 132, 137], "lya": 102, "paa": 102, "olivero": 102, "sami": [102, 111, 122, 125, 138], "hamdan": [102, 111, 122, 125, 138], "547": 87, "548": [], "target_cr": [102, 131], "target_pipeline_cr": [102, 125], "0x7fe724a38250": [], "563": [], "564": [], "565": [], "004338": 99, "003049": [], "003920": [], "003011": [], "003896": [], "003113": [], "003907": [], "003016": [], "003901": [], "002966": [], "154": 127, "0615805903489": [], "074": 105, "run_apply_to_target": [102, 108], "reduc": [103, 111, 137], "dimension": [103, 111, 124, 127, 137], "subset": [103, 127, 132], "georgio": 103, "antonopoulo": 103, "kaustubh": [103, 122, 138], "r": [103, 114, 122], "patil": [103, 122, 138], "709": [], "assign": [103, 118], "pca1": 103, "pca2": 103, "process": [103, 127, 133, 136, 137], "pca_feats1": 103, "pca_feats2": 103, "__pca1": 103, "__pca2": 103, "__categor": [103, 131], "0x7fe724870ac0": [], "727": 127, "728": 127, "729": 127, "012711": [], "005439": [], "011889": [], "005351": [], "012077": [], "005575": [], "011985": [], "005436": [], "011883": [], "005540": [], "3107976743678922": 103, "untouch": 103, "data_processed1": 103, "pca_feats1__pca0": 103, "161": 103, "063175": 103, "133274": 103, "131461": 103, "039719": 103, "108111": 103, "075741": 103, "085907": 103, "054779": 103, "030464": 103, "001314": 103, "043401": 103, "033246": 103, "015491": 103, "098172": 103, "033216": 103, "032629": 103, "011824": 103, "015999": 103, "050783": 103, "032289": 103, "012577": 103, "034508": 103, "024993": 103, "067737": 103, "013504": 103, "315": [103, 127], "045025": 103, "031454": 103, "020607": 103, "056003": 103, "010903": 103, "001078": 103, "data_processed2": 103, "pca_feats2__pca0": 103, "234716": 103, "012141": 103, "078784": 103, "006290": 103, "026190": 103, "341472": 103, "348168": 103, "269257": 103, "286067": 103, "309025": 103, "362": [103, 127], "404": 137, "run_example_pca_featset": [103, 108], "755": [], "attempt": [104, 105], "765": [], "766": [], "767": [], "768": 127, "5939164168576971": [104, 105], "gamma": [104, 105, 106, 127, 129], "But": [104, 110, 111, 126, 127, 129, 134, 136, 137], "rbf": [104, 105, 106, 127], "auto": [104, 127], "1e": [104, 105, 106, 127, 129, 130], "speed": [104, 105, 106], "823": 127, "824": [98, 129], "001": [104, 105, 127, 129], "825": [98, 129], "svm__c": [104, 105, 106, 127, 129, 130], "826": 129, "inner": [104, 105, 106, 127, 129, 130, 138], "827": 129, "svm__gamma": [104, 105, 106, 127], "set_column_typ": [104, 106, 127, 129, 136], "setcolumntyp": [104, 106, 127, 129, 136], "828": 129, "svc": [104, 106, 116, 127, 129, 136, 137], "830": [129, 136], "7087109857168048": [104, 105], "best_params_": [104, 105, 106, 127], "best_estimator_": [104, 105], "_gamma": [104, 105], "run_hyperparameter_multiple_grid": [104, 108], "analyz": [105, 106, 129], "177": [], "186": [], "187": [], "188": [], "189": 96, "190": [], "optim": [105, 121, 127, 129, 137], "find": [105, 106, 117, 127, 134], "best": [105, 106, 127, 137], "252": 85, "253": 85, "254": 85, "255": 138, "256": 137, "588308940222183": 105, "much": [105, 126, 127, 129, 132], "explor": [105, 111, 129, 130], "too": [105, 127], "poli": 105, "530": 127, "531": 127, "533": [106, 127], "534": 106, "lest": 105, "27": [93, 121, 125], "250": 111, "251": [85, 138], "5188855581026275": 105, "happen": [105, 129, 130], "801": [], "802": [], "803": [], "804": [], "805": [], "406": [], "run_hyperparameter_tun": [105, 108], "logist": [107, 116, 135, 137], "22": [89, 90, 125, 130], "208": 96, "petal_width": [107, 110, 127, 133, 136, 137], "model_sep": 107, "model_pet": 107, "__sepal": [107, 137], "212": 135, "__petal": [107, 137], "213": [], "0x7fe724e28550": [], "0x7fe724e29a20": [], "214": [], "215": [], "217": [], "323": 96, "324": [], "85": 107, "run_stacked_model": [107, 108], "025": [], "auto_examples_03_complex_model": 108, "relat": [109, 125, 133], "stratifiedbootstrap": 110, "ml": [110, 122], "classic": 110, "frequentist": 110, "contrast": 110, "gap": 110, "approach": [110, 124, 126, 127, 132, 137], "below": [110, 121, 124, 127], "2000": 110, "n_bootstrap": 110, "n_element": 110, "len": [110, 111, 125], "scores_ncr": 110, "028": [], "029": [], "030": [], "031": [], "next": [110, 121, 123, 131, 133, 137], "again": [110, 125, 126, 127, 129, 132, 137], "tell": [110, 125, 136], "confound_remov": [110, 111, 116, 125], "scores_cr": 110, "32": [96, 98], "__featur": [110, 125], "__confound": [110, 125], "179": [], "180": [], "181": [90, 91], "182": [], "easier": [110, 118, 137, 138], "df_ncr_metric": 110, "df_cr_metric": 110, "df_metric": 110, "933333": 110, "968889": 110, "948889": 110, "catplot": 110, "col": 110, "swarm": 110, "them": [110, 118, 120, 121, 122, 124, 126, 127, 135, 136, 137], "pair": 110, "systemat": 110, "df_diff_metr": 110, "whisker": 110, "box": [110, 122], "whi": 110, "axhlin": 110, "roc": 110, "auc": 110, "term": [110, 126, 133, 137], "mayb": [110, 135], "percentil": [110, 116], "amount": [110, 122, 129], "ncr_fi": 110, "cr_fi": 110, "feature_import": 110, "dodg": [110, 126], "diff_fi": 110, "axvlin": [110, 126], "996": [], "plot_confound_removal_classif": [110, 112], "most": [111, 121, 124, 125, 126, 129, 132, 137], "remove_confound": 111, "sometim": [111, 125, 129, 130, 131], "discuss": 111, "df_featur": 111, "furthermor": [111, 127], "put": [111, 125], "0x7fe724acfa00": [], "feature_nam": [111, 135], "303": [125, 130], "304": 125, "305": 127, "df_deconfound": 111, "029271": 111, "057228": 111, "009658": 111, "046011": 111, "042050": 111, "024189": 111, "019424": 111, "012310": 111, "028194": 111, "005874": 111, "047538": 111, "015568": 111, "006874": 111, "012796": 111, "057488": 111, "024667": 111, "061639": 111, "082913": 111, "076494": 111, "039983": 111, "017885": 111, "047387": 111, "041423": 111, "013144": 111, "004736": 111, "036479": 111, "081307": 111, "007659": 111, "025897": 111, "013765": 111, "031358": 111, "052961": 111, "049135": 111, "029380": 111, "000071": 111, "013139": 111, "032449": 111, "032631": 111, "005510": 111, "021964": 111, "008781": 111, "012234": 111, "025295": 111, "037349": 111, "assum": [111, 126], "closer": [111, 116, 136], "achiev": [111, 125, 131, 136, 137], "496": 130, "497": [105, 130], "0x7fe724aceef0": [], "498": [105, 130], "df_transform": 111, "pca__pca2": 111, "pca__pca3": 111, "pca__pca4": 111, "pca__pca5": 111, "pca__pca6": 111, "pca__pca7": 111, "pca__pca8": 111, "014051": 111, "075715": 111, "017395": 111, "012591": 111, "046676": 111, "013408": 111, "034497": 111, "008604": 111, "002330": 111, "099883": 111, "062829": 111, "014516": 111, "013673": 111, "048058": 111, "010254": 111, "004124": 111, "024022": 111, "002075": 111, "029015": 111, "053253": 111, "032477": 111, "061933": 111, "049167": 111, "029565": 111, "042031": 111, "001197": 111, "002579": 111, "035162": 111, "001324": 111, "106807": 111, "028981": 111, "020850": 111, "023413": 111, "008421": 111, "006566": 111, "003545": 111, "003951": 111, "025445": 111, "000421": 111, "018411": 111, "039692": 111, "025022": 111, "043086": 111, "002095": 111, "000517": 111, "lastli": [111, 125], "703": [], "704": [], "705": [], "706": [], "021827": [], "008035": [], "429556": 111, "353": [111, 114], "89": [111, 114, 127], "021629": [], "008180": [], "522599": 111, "021726": [], "008151": [], "482681": 111, "354": [111, 114], "88": [111, 114], "021698": [], "008026": [], "426498": 111, "021542": [], "008160": [], "550248": 111, "603": [], "run_return_confound": [111, 112], "06": [106, 112, 127], "599": 90, "auto_examples_04_confound": 112, "extend": [113, 136], "variou": 113, "aspect": [113, 126, 137], "make_scor": 114, "register_scor": 114, "36": 127, "201": [], "218": [], "004503": [], "002230": 102, "104359": 114, "004208": [], "002166": [], "44": [105, 114, 127], "861364": 114, "002147": [], "981407": 114, "004207": [], "002215": [], "956254": 114, "004205": [], "002177": [], "419886": 114, "264653948271885": 114, "thing": [114, 132, 137], "r2_corr": [114, 136], "260": [130, 137, 138], "261": [], "262": 138, "test_neg_mean_absolute_error": 114, "test_r2_corr": 114, "264654": 114, "486498": 114, "take": [114, 126, 129, 137], "def": 114, "pearson_scor": 114, "squeez": 114, "306": 127, "307": 127, "157": [], "run_custom_scorers_regress": [114, 115], "auto_examples_05_custom": 115, "descript": [116, 117, 118, 137], "short": [116, 118, 125], "link": [116, 118, 134, 137, 138], "unit": [116, 122], "scaler_robust": 116, "median": 116, "iqr": 116, "robustscal": [116, 127], "scaler_minmax": 116, "minmaxscal": 116, "scaler_maxab": 116, "maxabsscal": 116, "scaler_norm": 116, "norm": 116, "scaler_quantil": 116, "uniform": [106, 116, 126, 127, 138], "robust": [116, 120], "quantiletransform": 116, "scaler_pow": 116, "gaussianis": 116, "powertransform": 116, "select_univari": 116, "genericunivariateselect": 116, "select_percentil": 116, "rank": 116, "selectpercentil": 116, "select_k": [116, 127], "selectkbest": [116, 127], "select_fdr": 116, "selectfdr": 116, "select_fpr": 116, "fpr": 116, "selectfpr": 116, "select_fw": 116, "fwe": 116, "selectfw": 116, "variancethreshold": 116, "drop_column": 116, "dropcolumn": 116, "change_column_typ": 116, "changecolumntyp": 116, "filtercolumn": 116, "princip": [116, 137], "svr": [116, 130, 131], "randomforestregressor": 116, "extratreesclassifi": 116, "extratreesregressor": 116, "adaboost": 116, "adaboostclassifi": 116, "adaboostregressor": 116, "bag": 116, "baggingclassifi": 116, "baggingregressor": 116, "gradientboost": 116, "gradient": 116, "boost": 116, "gradientboostingclassifi": 116, "gradientboostingregressor": 116, "stackingclassifi": [116, 130], "stackingregressor": [116, 130], "gauss": 116, "gaussianprocessclassifi": 116, "gaussianprocessregressor": 116, "logit": [116, 127, 135], "aka": 116, "maxent": 116, "logisticregress": [116, 127], "logitcv": 116, "logisticregressioncv": 116, "l2": [116, 127], "ridgeclassifi": 116, "ridgecv": 116, "built": [116, 122, 130, 135, 136, 137], "ridgeclassifiercv": 116, "sgd": 116, "minim": 116, "empir": [116, 126], "loss": [116, 125], "sgdclassifi": 116, "sgdregressor": 116, "nb_bernoulli": 116, "multivari": 116, "bernoulli": 116, "bernoullinb": 116, "nb_categor": 116, "categoricalnb": 116, "nb_complement": 116, "complementnb": 116, "nb_gaussian": 116, "gaussiannb": 116, "nb_multinomi": 116, "multinomi": 116, "multinomialnb": 116, "dynamicselect": [116, 138], "dummyclassifi": 116, "dummyregressor": 116, "meant": 117, "friendli": [117, 137], "come": [117, 118, 126, 129, 133, 137], "cost": 117, "potenti": [117, 125, 129], "These": [117, 120, 121, 124, 136], "therefor": [117, 121, 124, 125, 136, 137], "flag": [117, 118], "enabl": [117, 138], "disabl": 117, "config": 117, "disable_x_check": 117, "unmatch": 117, "think": [117, 125], "disable_xtypes_check": 117, "miss": [117, 138], "disable_x_verbos": 117, "disable_xtypes_verbos": 117, "fork": 118, "com": [118, 126, 132, 138], "juaml": 118, "repositori": 118, "never": [118, 137], "offici": [118, 121], "clone": 118, "virtual": [118, 121], "pip": [118, 120, 121], "branch": [118, 123], "refactor": [118, 138], "feat": 118, "prefix": 118, "git": [118, 123, 138], "checkout": [118, 123], "pre": [118, 121, 123, 138], "commit": [118, 123, 138], "hook": [118, 138], "help": [118, 121, 122, 125, 129, 135, 137], "regularli": 118, "On": [118, 125, 136], "save": [118, 137], "smaller": 118, "semant": 118, "wip": 118, "verifi": [118, 136], "suit": [118, 129], "tox": 118, "push": [118, 123], "open": 118, "displai": [118, 129, 135], "submit": 118, "templat": 118, "web": 118, "interfac": [118, 127, 130], "meet": 118, "directori": 118, "rare": 118, "circumst": 118, "coverag": 118, "decreas": 118, "report": 118, "codecov": 118, "usag": [118, 121, 132, 137], "draft": [118, 123], "id": 118, "liner": [118, 135], "newsfrag": 118, "bug": [118, 138], "bugfix": 118, "enhanc": 118, "enh": 118, "improv": [118, 121], "miscellan": 118, "misc": 118, "record": 118, "content": 118, "typo": [118, 138], "intro": 118, "biggest": 118, "fan": 118, "yourself": 118, "contributor": 118, "inc": 118, "against": 118, "someon": [118, 126], "core": [118, 132, 135], "team": 118, "success": [118, 127, 132], "pytest": [118, 138], "intend": 118, "cd": 118, "_build": 118, "situat": 118, "clean": [118, 121], "rest": 118, "rst": [118, 123], "plot_": 118, "run_": 118, "block": 118, "comment": 118, "render": [118, 136], "emb": 118, "shall": [118, 126], "preced": 118, "bokeh": [120, 121, 138], "develop": [120, 121, 122, 123, 138], "usual": [120, 127, 137], "through": [120, 137], "manag": [120, 138], "conda": [120, 121], "forg": [120, 121], "standalon": 120, "applic": [120, 124, 125, 129], "browser": 120, "jupyter_bokeh": 120, "servabl": 120, "statsmodel": 121, "0b1": [], "nevertheless": [121, 137], "although": 121, "strongli": 121, "recommend": [121, 133], "environ": [121, 122, 136], "promin": 121, "venv": 121, "env": 121, "latest": [121, 123, 138], "often": [121, 125, 132, 137], "newest": 121, "sens": [121, 127], "aim": [121, 122, 137], "pypi": [121, 123], "relas": 121, "yet": [121, 133], "orient": 122, "aml": 122, "institut": 122, "neurosci": [122, 124], "medicin": 122, "behaviour": [122, 127, 136], "inm": 122, "thought": [122, 137], "research": [122, 124, 125, 126], "simpler": 122, "abstract": 122, "power": [122, 129, 130], "minor": [122, 123], "flexibl": [122, 130], "video": 122, "tutori": 122, "offer": [122, 133], "essenti": [122, 129], "benefit": 122, "therebi": 122, "avoid": [122, 125, 126, 127, 138], "nice": [122, 133, 136, 137], "system": [122, 123], "accord": [122, 124, 126, 130, 138], "setup": [122, 134], "suggest": [122, 126], "deeper": [122, 129, 134, 135], "topic": [122, 126, 134, 135], "overview": [122, 129, 135, 137], "contribut": 122, "local": 122, "github": [122, 136, 138], "pull": [122, 123], "guidelin": 122, "write": [122, 137], "maintain": 122, "faq": 122, "issu": [122, 123, 126, 129, 138], "2022": [122, 125], "07": [122, 130], "scientif": 122, "public": 122, "vera": 122, "komey": 122, "free": 122, "arxiv": [122, 125], "octob": 122, "48550": 122, "2310": 122, "12568": 122, "heavili": 122, "reliant": 122, "cite": 122, "major": [123, 127], "micro": 123, "devn": 123, "distanc": 123, "setuptools_scm": 123, "plugin": 123, "tag": 123, "increment": [123, 137], "segment": 123, "publish": 123, "onc": [123, 129, 132, 134, 137], "mileston": 123, "reach": 123, "towncrier": 123, "proceed": [123, 137], "sync": 123, "rebas": 123, "changelog": 123, "properli": 123, "reflect": [123, 138], "whats_new": 123, "pr": 123, "merg": 123, "via": [121, 123, 134], "vx": 123, "setuptools_scm_debug": 123, "outdir": 123, "dist": 123, "bump": [123, 138], "vd": 123, "neuroimag": [124, 125], "typic": 124, "problemat": 124, "due": [124, 126, 127], "curs": 124, "especi": 124, "recent": 124, "propos": 124, "fluid": 124, "intellig": 124, "sustain": 124, "attent": 124, "nutshel": 124, "summar": 124, "subsequ": 124, "commonli": [124, 137], "principl": 124, "leverag": [124, 129], "workflow": [124, 129, 134, 137], "x_name": [124, 130], "feature_": [124, 125, 130], "cbpm_pipeline_cr": 124, "final_model": [124, 129], "836": [], "837": [], "feature_1": [124, 125, 130], "feature_2": [124, 125, 130], "feature_3": [124, 125, 130], "feature_4": [124, 125, 130], "feature_5": [124, 125, 130], "feature_6": [124, 125, 130], "feature_7": [124, 125, 130], "feature_8": [124, 125, 130], "feature_9": [124, 125, 130], "feature_10": [124, 125, 130], "feature_11": [124, 125, 130], "feature_12": [124, 125, 130], "feature_13": [124, 125, 130], "feature_14": [124, 125, 130], "feature_15": [124, 125, 130], "feature_16": [124, 125, 130], "feature_17": [124, 125, 130], "feature_18": [124, 125, 130], "feature_19": [124, 125, 130], "feature_20": [124, 130], "838": [], "839": [98, 130], "840": [98, 130], "857": 111, "No": [124, 126], "rid": 124, "265": [127, 138], "878": [], "898": [], "918": [], "937": [], "957": [], "customis": 124, "increas": 124, "960": [], "cbpm__significance_threshold": 124, "noteworthi": 124, "sign": 124, "spearmanr": 124, "0x7fe72c12c280": [], "0x7fe74d54a290": [], "0x7fe74d54e230": [], "guess": 124, "spearman": 124, "xilin": 124, "mar": [124, 125], "emili": 124, "fingerprint": 124, "2015": 124, "nov": 124, "1664": 124, "71": 124, "rosenberg": 124, "monica": 124, "neuromark": 124, "whole": [124, 127], "jan": [124, 125], "165": [104, 124], "129": 86, "ultim": 125, "real": [106, 125, 127, 129], "world": [125, 129], "scenario": [125, 136, 137], "relationship": 125, "un": 125, "observ": 125, "similarli": [125, 129], "rather": 125, "jointli": 125, "prevent": [125, 127], "laid": 125, "rel": [125, 130], "littl": 125, "involv": 125, "simul": 125, "artifici": [125, 130, 137], "normal_dist_conf_on": 125, "normal_dist_conf_two": 125, "noise_conf_on": 125, "rand": [125, 126], "noise_conf_two": 125, "multipli": 125, "factor": 125, "confound_on": 125, "confound_two": 125, "prefer": 125, "human": 125, "readabl": 125, "confound_1": 125, "confound_2": 125, "my_target": 125, "distinguish": [125, 130, 137], "predictor": 125, "accordingli": [125, 132], "crucial": 125, "parametr": [125, 127, 133, 137], "57": [127, 135], "562": 114, "whose": 125, "feature_0": 125, "024047": [], "006615": [], "786706": 125, "022957": [], "006627": [], "592156": 125, "023007": [], "006605": [], "722494": 125, "022952": [], "006688": [], "674188": 125, "022834": [], "006726": [], "570243": 125, "slightli": 125, "target_confound_remov": 125, "0x7fe72498ef80": [], "insert": 125, "importantli": [125, 126, 129, 132, 133, 137], "0x7fe72498fe20": [], "738": 127, "space": [22, 127], "748": 93, "758": [], "769": [89, 127, 135], "778": 136, "005694": [], "003726": [], "253033": 125, "005696": [], "003706": [], "059126": 125, "005645": [], "003686": [], "256962": 125, "005920": [], "003683": [], "096475": 125, "005604": [], "534386": 125, "reason": [125, 126], "further": [125, 127, 132], "consider": 125, "why": [125, 126, 127, 134], "mitig": 125, "bia": [125, 126], "accur": 125, "argu": 125, "appropri": 125, "valuabl": [125, 129, 132], "difficult": [125, 127], "challeng": 125, "ineffect": 125, "particular": [125, 129, 137], "fact": [125, 129], "collid": 125, "spuriou": 125, "evid": [125, 126], "leak": [125, 132], "bias": [125, 126], "care": [125, 137], "question": [125, 126], "thorough": 125, "strength": 125, "limit": 125, "techniqu": [125, 126, 127, 129], "rao": 125, "anil": 125, "presenc": 125, "volum": [125, 126], "april": 125, "49": 125, "snoek": 125, "luka": 125, "184": [125, 135], "januari": 125, "2019": 125, "741": 125, "760": [89, 125], "he": 125, "tong": 125, "neural": [125, 137], "network": [125, 137], "206": 125, "februari": 125, "2020": 125, "116276": 125, "practic": [125, 126], "knowledg": [125, 129], "discoveri": 125, "databas": 125, "scienc": [125, 132], "demo": 125, "track": 125, "2021": 125, "12461": 125, "chyzhyk": 125, "darya": 125, "biomark": 125, "gigasci": 125, "holmberg": 125, "mathia": 125, "jama": 125, "327": [102, 125], "1282": 125, "1283": 125, "1001": [125, 135], "1820": 125, "2210": 125, "09232": 125, "revis": 125, "oct": 125, "222": [], "mention": 126, "don": [126, 127], "almost": 126, "infinit": 126, "unbias": 126, "overestim": 126, "rememb": [126, 129, 136], "surpris": 126, "would": [126, 127, 133, 135, 137], "answer": 126, "imposs": 126, "bengio": 126, "grandvalet": 126, "colleagu": 126, "few": [126, 129, 132, 138], "word": [126, 127], "thumb": [126, 137], "compromis": 126, "loocv": 126, "holdout": 126, "taken": 126, "intens": 126, "unconclus": 126, "intuit": [126, 129, 135], "direct": [126, 127], "thread": 126, "extrem": 126, "choic": 126, "fun": 126, "begin": 126, "variant": 126, "solv": [126, 132], "shed": 126, "light": 126, "poorli": 126, "stratifiedkfold": [126, 136], "rescu": 126, "matter": [126, 132, 135], "quantiz": 126, "divid": 126, "histplot": 126, "train_set": 126, "test_set": 126, "shrink": [126, 129], "suptitl": 126, "gaussian": 126, "discrete_i": 126, "digit": 126, "kdeplot": 126, "layer": 126, "dash": 126, "repeatedcontinuousstratifiedkfold": [126, 138], "repeatedcontinuousstratifiedgroupkfold": 126, "jmlr": 126, "decemb": 126, "2004": 126, "1089": 126, "1105": 126, "stackexchang": 126, "61783": 126, "kohavi": 126, "ijcai": 126, "1137": 126, "1145": 126, "473": [105, 108], "flower": 127, "pprint": [127, 129, 136], "pretti": 127, "tolist": [127, 135], "who": 127, "common": [127, 132], "creator2": [106, 127, 135], "591": 87, "592": 87, "593": 87, "594": [], "8099999999999999": 127, "632": 107, "633": 107, "634": [], "635": [], "etc": 127, "optimist": 127, "loop": 127, "672": [], "673": [], "scores_tun": 127, "model_tun": 127, "674": [], "675": 127, "676": [], "677": 127, "9100000000000001": 127, "tri": 127, "conclud": 127, "585": [], "586": 87, "587": [], "588": [], "589": [], "0001": 127, "066": 127, "067": [], "068": 104, "069": [], "39": 104, "268": [96, 127], "269": [96, 129], "select_k__k": 127, "270": [96, 129], "271": [96, 129], "272": [124, 129], "concept": [127, 132], "receiv": 127, "gridsearchcv": [33, 34, 127], "veri": [127, 129, 130, 132, 133], "construct": 127, "diment": 127, "randomizedsearchcv": [33, 34, 127], "lot": [127, 129], "consum": 127, "55": [124, 129], "775": [93, 136], "776": [93, 136], "those": [127, 132], "unnecessari": 127, "model1": 127, "777": [93, 136], "779": 89, "780": [89, 98, 105], "781": [89, 105], "782": [89, 105], "783": [89, 105], "784": 105, "93": 127, "forc": 127, "repat": 127, "creator1": [106, 127, 135], "model2": 127, "257": 137, "258": [137, 138], "259": 137, "inde": [127, 136], "equival": 127, "param_grid": [127, 129], "stop": 127, "creator3": [127, 135], "max_depth": [127, 130], "creator4": 127, "penalti": 127, "l1": 127, "dual": 127, "solver": 127, "liblinear": 127, "model3": 127, "754": [], "756": [], "757": [], "model__c": 127, "model__gamma": 127, "759": [], "model__max_depth": 127, "model__penalti": 127, "9200000000000002": 127, "beat": 127, "976": [], "gain": 129, "insight": 129, "impact": 129, "abil": 129, "critic": 129, "influenc": 129, "deploy": 129, "focu": [129, 133], "anomali": 129, "logger": [106, 129, 130], "toi": [129, 130], "plai": 129, "penguin": 129, "penguins_df": 129, "island": 129, "queri": 129, "chinstrap": 129, "dropna": 129, "adeli": 129, "gentoo": 129, "105": [93, 138], "fairli": 129, "geomspac": [129, 130], "1e2": [129, 130], "946": [], "notic": [129, 137], "bill_length_mm": 129, "bill_depth_mm": 129, "flipper_length_mm": 129, "body_mass_g": 129, "952": 87, "151": [124, 127, 129, 138], "123": 129, "953": [], "quick": 129, "error_scor": 129, "jucolumntransform": 129, "with_mean": [127, 129, 137], "with_std": 129, "wrapmodel": 129, "break_ti": 129, "cache_s": 129, "class_weight": [127, 129], "coef0": 129, "decision_function_shap": 129, "ovr": 129, "max_it": 129, "tol": 129, "estimator__memori": 129, "estimator__set_column_typ": 129, "estimator__set_column_types__x_typ": 129, "estimator__set_column_types__row_select_col_typ": 129, "estimator__set_column_types__row_select_v": 129, "estimator__step": 129, "estimator__svm": 129, "estimator__svm__c": 129, "estimator__svm__apply_to": 129, "estimator__svm__break_ti": 129, "estimator__svm__cache_s": 129, "estimator__svm__class_weight": 129, "estimator__svm__coef0": 129, "estimator__svm__decision_function_shap": 129, "estimator__svm__degre": 129, "estimator__svm__gamma": 129, "estimator__svm__kernel": 129, "estimator__svm__max_it": 129, "estimator__svm__model": 129, "estimator__svm__needed_typ": 129, "estimator__svm__prob": 129, "estimator__svm__random_st": 129, "estimator__svm__shrink": 129, "estimator__svm__tol": 129, "estimator__svm__verbos": 129, "estimator__verbos": 129, "estimator__zscor": 129, "estimator__zscore__apply_to": 129, "estimator__zscore__copi": 129, "estimator__zscore__nam": 129, "estimator__zscore__needed_typ": 129, "estimator__zscore__row_select_col_typ": 129, "estimator__zscore__row_select_v": 129, "estimator__zscore__transform": 129, "estimator__zscore__with_mean": 129, "estimator__zscore__with_std": 129, "pre_dispatch": 129, "refit": 129, "get_fitted_param": 129, "set_column_types__column_mapper_": 129, "bill_depth_mm__": 129, "bill_length_mm__": 129, "body_mass_g__": 129, "flipper_length_mm__": 129, "set_column_types__feature_names_in_": 129, "svm__model_": 129, "zscore__column_transformer_": 129, "remaind": 129, "passthrough": 129, "make_type_selector": 129, "0x7fe7271821d0": [], "verbose_feature_names_out": 129, "zscore__feature_names_in_": 129, "zscore__mean_": 129, "70291971": 129, "83613139": 129, "202": 129, "17883212": 129, "4318": 129, "06569343": 129, "zscore__n_features_in_": 129, "zscore__n_samples_seen_": 129, "zscore__scale_": 129, "18607683": 129, "00973207": 129, "02045287": 129, "834": 129, "40628575": 129, "zscore__var_": 129, "68953929e": 129, "03902299e": 129, "25614004e": 129, "96233850e": 129, "somewhat": [129, 130], "structur": [129, 133], "made": [129, 134, 135], "handi": [129, 133, 137], "fold_predict": 129, "repeat8_p0": 129, "repeat9_p0": 129, "c_valu": 129, "fold_inspector": 129, "fold_model": 129, "realiz": 129, "ever": 129, "address": 129, "aris": 129, "serv": 129, "asset": 129, "transpar": [129, 132], "reliabl": 129, "capabl": [129, 130, 138], "navig": 129, "har": 129, "872": 135, "customiz": 130, "cours": 130, "914": [], "mind": 130, "arbitrari": [130, 136], "model_1": [130, 135], "916": [], "00000000e": 130, "78255940e": 130, "74263683e": 130, "15443469e": 130, "99484250e": 130, "66810054e": 130, "64158883e": 130, "29154967e": 130, "59381366e": 130, "917": [], "0x7fe7247d57b0": [], "min_samples_leaf": 130, "min_samples_split": 130, "0x7fe7247d60e0": [], "0x7fe7247d59c0": [], "919": [], "920": [], "921": [110, 112], "922": [], "923": [], "rf__max_depth": 130, "rf__min_samples_leaf": 130, "rf__min_samples_split": 130, "924": [], "58": 135, "061": [], "062": [], "desir": [130, 137], "type1": 130, "type2": 130, "type1_": 130, "type2_": 130, "465": [100, 127, 137], "__type1": 130, "466": 137, "0x7fe7246f8430": [], "__type2": 130, "467": 137, "0x7fe7247d4e50": [], "468": [], "type1_1": 130, "type1_2": 130, "type1_3": 130, "type1_4": 130, "type1_5": 130, "type1_6": 130, "type1_7": 130, "type1_8": 130, "type1_9": 130, "type1_10": 130, "type2_1": 130, "type2_2": 130, "type2_3": 130, "type2_4": 130, "type2_5": 130, "type2_6": 130, "type2_7": 130, "type2_8": 130, "type2_9": 130, "type2_10": 130, "469": 137, "470": 137, "471": 90, "472": [127, 130], "652": 130, "653": 130, "flexibli": 130, "Of": 130, "911": [], "cover": [131, 133, 137], "far": [131, 133, 136, 137], "conist": 131, "manner": [131, 132, 133, 135, 137], "clear": 131, "628": [], "target_jutargetpipelin": 131, "0x7fe7249787f0": [], "629": [], "630": 87, "631": [], "009775": [], "003319": [], "008625": [], "003251": [], "009010": [], "003214": [], "008810": [], "003242": [], "008754": [], "003206": [], "overal": 131, "091": [], "goal": 132, "beyond": 132, "exact": 132, "domingo": 132, "2012": 132, "resourc": 132, "efficeint": [], "disadvantag": 132, "small": 132, "unstabl": 132, "overcom": 132, "accident": 132, "quickli": 132, "obviou": 132, "straightforward": [132, 137], "mistak": 132, "www": 132, "sciencedirect": 132, "articl": 132, "pii": 132, "s105381191630595x": 132, "natur": 132, "s41746": 132, "022": 132, "00592": 132, "s1053811917305311": 132, "cross_valid": 132, "commun": 133, "known": [133, 137], "capac": 133, "colum": 133, "manipul": 133, "anyth": [133, 136], "meaning": 133, "hundr": 133, "thousand": 133, "saw": [133, 135, 136, 137], "advanc": 133, "004": 133, "backbon": 134, "magic": 134, "goe": 134, "utmost": 134, "glanc": [134, 136], "chapter": 134, "familiar": 134, "along": 134, "fundament": 134, "essenc": 134, "click": 134, "fanci": 134, "stuff": 134, "decent": 135, "benchmark": 135, "enough": 135, "tediou": 135, "sound": 135, "switch": 135, "breast": 135, "cancer": 135, "malign": 135, "benign": 135, "load_breast_canc": 135, "radiu": 135, "textur": 135, "perimet": 135, "area": 135, "worst": 135, "concav": 135, "symmetri": 135, "fractal": 135, "dimens": 135, "38": [130, 135], "122": [135, 138], "2654": 135, "4601": 135, "11890": 135, "132": 135, "1326": 135, "1860": 135, "2750": 135, "08902": 135, "69": 135, "130": 135, "1203": 135, "2430": 135, "3613": 135, "08758": 135, "386": 135, "2575": 135, "6638": 135, "17300": 135, "135": [125, 135, 138], "1297": 135, "1625": 135, "2364": 135, "07678": 135, "cv_splitter": [135, 136], "139": [104, 125], "smooth": 135, "compact": 135, "141": 104, "142": 104, "143": [], "144": [97, 137], "357": 135, "088": [], "089": [], "090": [], "092": 131, "169": [], "pairwis": 135, "neither": 135, "nor": 135, "946304": 135, "083461": 135, "250382": 135, "140882": 135, "891066": 135, "285373": 135, "048138": 135, "144413": 135, "361847": 135, "206356": 135, "619069": 135, "014156": [], "989015": [], "093249": [], "302681": [], "908044": [], "dive": 135, "curiou": 135, "296": [99, 137], "54": [114, 131], "110": [], "111": [], "112": [], "113": [], "004829": [], "002383": [], "004336": [], "002324": [], "004236": [], "004270": [], "004303": [], "002331": [], "933": [135, 136], "overfit": 136, "158": [], "159": [], "160": [], "004474": [], "004308": [], "002382": [], "004384": [], "002352": [], "004287": [], "002356": [], "004291": [], "002316": 86, "train_scor": 136, "cryptic": 136, "worri": 136, "doesn": 136, "219": [], "004396": [], "002346": [], "004398": [], "002376": [], "004302": [], "002328": [], "004329": 114, "x27": 136, "rerun": 136, "cell": 136, "represent": 136, "trust": 136, "unabl": 136, "nbviewer": 136, "pipelinepipelin": [], "setcolumntypessetcolumntyp": 136, "standardscalerstandardscal": 136, "svcsvc": 136, "didn": 136, "got": 136, "five": 136, "back": 136, "ourselv": 136, "fourth": 136, "283": [], "284": [], "285": [], "286": [], "004549": [], "002460": 99, "7449876d309382acfef94df9d102aa76": 136, "004315": [], "002289": [], "004343": [], "002323": [], "004316": [], "002317": [], "004354": [], "004300": [], "004393": [], "002341": [], "004328": [], "002334": [], "assumpt": 136, "list_scor": 136, "adjusted_mutual_info_scor": 136, "adjusted_rand_scor": 136, "average_precis": 136, "completeness_scor": 136, "explained_vari": 136, "f1": 136, "f1_macro": 136, "f1_micro": 136, "f1_sampl": 136, "f1_weight": 136, "fowlkes_mallows_scor": 136, "homogeneity_scor": 136, "jaccard": 136, "jaccard_macro": 136, "jaccard_micro": 136, "jaccard_sampl": 136, "jaccard_weight": 136, "matthews_corrcoef": 136, "max_error": 136, "mutual_info_scor": 136, "neg_brier_scor": 136, "neg_log_loss": 136, "neg_mean_absolute_percentage_error": 136, "neg_mean_gamma_devi": 136, "neg_mean_poisson_devi": 136, "neg_mean_squared_error": 136, "neg_mean_squared_log_error": 136, "neg_median_absolute_error": 136, "neg_negative_likelihood_ratio": 136, "neg_root_mean_squared_error": 136, "normalized_mutual_info_scor": 136, "positive_likelihood_ratio": 136, "precision_macro": 136, "precision_micro": 136, "precision_sampl": 136, "precision_weight": 136, "rand_scor": 136, "recal": 136, "recall_macro": 136, "recall_micro": 136, "recall_sampl": 136, "recall_weight": 136, "roc_auc_ovo": 136, "roc_auc_ovo_weight": 136, "roc_auc_ovr": 136, "roc_auc_ovr_weight": 136, "top_k_accuraci": 136, "v_measure_scor": 136, "r_corr": 136, "394": [], "395": [], "396": [], "005110": [], "003991": [], "004383": 99, "003855": [], "004703": [], "004382": [], "003874": [], "004333": [], "003808": [], "003833": [], "004355": 99, "003815": [], "004449": [], "003821": [], "004362": [], "003844": [], "003806": [], "430": 105, "autom": 137, "pipe": 137, "fed": 137, "modifi": [127, 137], "safe": 137, "664": [135, 136], "665": [135, 136], "666": [135, 136], "667": [], "668": [], "003031": [], "001701": [], "002752": [], "001656": 137, "002821": [], "001617": [], "002672": [], "001606": [], "002671": [], "001612": [], "voil\u00e0": 137, "resembl": 137, "scaler": 137, "700": [], "701": [], "702": [], "004473": [], "002371": [], "002339": [], "004313": [], "002338": [], "004395": [], "002336": [], "decomposit": 137, "previous": 137, "746": [], "747": [], "749": 93, "005647": [], "003119": [], "005471": [], "003121": [], "005386": [], "003105": [], "005390": [], "003154": [], "005360": [], "003070": [], "opaqu": 137, "simplifi": 137, "neat": 137, "806": [], "807": [], "005523": [], "003087": [], "005363": [], "003052": [], "005296": [], "003073": [], "003067": [], "005323": [], "003042": [], "awesom": 137, "prepreprocess": 137, "jump": 137, "aren": 137, "shouldn": 137, "ye": 137, "turn": 137, "learnt": 137, "experi": 137, "heurist": 137, "rate": 137, "sigma": 137, "sai": 137, "860": 111, "basi": 137, "comma": 137, "wonder": 137, "besid": 137, "definit": 137, "pca_1": 137, "869": 135, "016169": [], "006721": [], "015728": [], "006825": [], "015750": [], "006704": [], "015719": [], "006840": [], "015959": [], "006748": [], "boser": 137, "guyon": 137, "vapnik": 137, "margin": 137, "colt": 137, "92": 137, "fifth": 137, "annual": 137, "workshop": 137, "theori": 137, "1992": 137, "jul": 137, "338": [], "surround": 138, "146": 138, "instruct": 138, "fede": 138, "94": 138, "108": 138, "multiprocess": 138, "nos": 138, "extendeddataframepipelin": 138, "tranform_until": 138, "63": 138, "minimum": 138, "face": 138, "create_pipelin": 138, "register_model": 138, "dev111": [], "133": 125, "134": 125, "136": [104, 125], "137": [104, 125], "004774": [], "002519": [], "004399": [], "002484": 136, "004342": [], "002470": 99, "004352": 114, "002487": [], "004312": [], "tmp4efeun6v": [], "eb6ea4db6c3c19d60a4593e8907522ae5f153cf0": [], "517": [105, 106], "980": [], "981": [], "982": [], "983": [], "004750": [], "002277": [], "004232": [], "002136": [], "002157": [], "004153": [], "002168": [], "004163": [], "002131": [], "817": [93, 127], "0x7f1605de0ca0": [], "400": [], "401": 137, "402": 137, "403": 137, "446": 85, "447": [], "448": 99, "835": [], "620": [], "638": 130, "639": [], "640": [], "641": [], "642": [], "280": [], "281": [], "282": [], "644": [89, 97, 111], "645": [97, 111], "646": 111, "647": [97, 111, 112], "648": [97, 111], "388": [], "818": [93, 127], "371": [], "372": [], "373": [], "374": [], "375": [], "415": 110, "417": 110, "418": [], "461": [127, 137], "462": 127, "463": [127, 137], "694": [], "731": [], "596": [], "636": [], "637": [], "912": [], "913": [], "925": [], "943": 131, "003": 127, "005": [], "006": [], "464": [127, 137], "332": [], "521": 106, "535": 110, "536": 110, "537": [110, 127], "538": [], "539": 110, "540": 110, "119": [], "124": [], "125": 127, "004663": [], "004239": [], "002414": [], "004185": [], "002301": [], "004344": [], "004215": [], "002268": [], "004150": [], "004188": [], "004262": [], "002349": [], "004194": [], "004162": [], "004210": [], "002325": [], "004218": [], "004246": [], "002372": [], "004214": [], "002303": [], "004235": [], "0x7f1605e02bc0": [], "330": [], "33": [98, 127], "995": [], "0x7f160585fca0": [], "011": 127, "012": 127, "013": 127, "014": [], "004371": [], "002176": [], "003941": [], "002218": [], "003949": [], "002130": [], "003996": [], "002120": [], "003880": [], "002065": [], "51357151914367": 102, "070": [], "41": [], "0x7f1605ac25f0": [], "997": [], "998": [], "999": [], "000": 89, "012722": [], "005367": [], "011701": [], "005322": [], "011638": [], "005394": [], "011692": [], "005252": [], "011647": [], "005430": [], "341": 97, "196": [], "197": [], "198": [], "199": 124, "298": [], "480": [], "489": 130, "490": [96, 100, 127, 130], "491": [], "549": [], "550": 90, "551": 90, "542": [], "543": [], "544": 87, "545": 87, "546": 87, "378": [], "609": 114, "610": [], "0x7f16061f13f0": [], "0x7f16061f2890": [], "611": [], "612": [], "613": [], "614": [], "841": 98, "194": [], "352": [], "355": [], "356": [], "785": [], "0x7f1605de2620": [], "493": 130, "495": 130, "0x7f1605de1ae0": [], "684": [], "686": [], "885": [], "886": [], "887": [], "888": [], "021313": [], "007902": [], "021067": [], "007909": [], "020898": [], "007873": [], "021204": [], "007906": [], "021056": [], "007852": [], "147": [], "148": [], "162": [114, 115], "163": [], "164": [], "004529": [], "002174": [], "002255": [], "004221": [], "002198": [], "004199": [], "002179": [], "207": [], "209": 96, "155": [124, 127], "820": [93, 127], "881": [], "884": [], "0x7f160c0b8280": [], "0x7f162d432290": [], "0x7f162d435a30": [], "131": [], "397": [], "398": [], "399": [], "023874": [], "006735": [], "022810": [], "006667": [], "022894": [], "006629": [], "006662": [], "022813": [], "0x7f16057b5660": [], "556": [], "0x7f16057b6e60": [], "557": [], "558": [], "559": [], "560": [], "005703": [], "003682": [], "005627": [], "003597": [], "005663": [], "003630": [], "005707": [], "003674": [], "005672": [], "003560": [], "221": [], "277": [], "278": 124, "316": 127, "317": 127, "318": 127, "358": [], "359": [127, 137], "360": 127, "310": [102, 127], "311": 127, "312": 127, "46": 105, "753": [], "230": [], "231": 138, "232": 138, "233": 138, "234": 138, "235": 138, "236": [99, 100, 138], "237": [], "238": [], "239": [], "643": 111, "649": 97, "106": 93, "107": 93, "109": [], "114": [], "115": [], "116": [], "008": [], "843": 98, "844": 98, "845": [], "846": 136, "0x7f1605e03d60": [], "742": [], "744": 105, "0x7f1605f3fb20": [], "745": [], "0x7f16060fca30": [], "0x7f16060ff730": [], "750": 93, "751": 93, "0x7f1605b660b0": [], "0x7f16060fe1a0": [], "279": [], "455": [], "0x7f1605b3beb0": [], "009635": [], "003238": [], "008474": [], "003198": [], "008955": [], "003142": [], "008747": [], "003164": [], "008746": [], "003134": [], "972": 105, "973": [], "974": [], "975": [], "928": [], "929": [], "930": [], "931": [], "932": 135, "004994": [], "002482": [], "004544": 136, "004400": [], "002373": [], "004407": 99, "002357": [], "004409": [], "002396": [], "004505": [], "002404": [], "004373": [], "002384": [], "004375": [], "002337": [], "004357": [], "002409": [], "004348": [], "002397": [], "056": [], "057": [], "058": [], "004412": [], "004284": [], "002283": 114, "004281": [], "002306": [], "121": [], "004477": [], "004220": [], "002273": [], "004251": [], "002253": [], "002265": [], "004332": [], "002309": [], "002426": 99, "002387": [], "004353": [], "003954": [], "003798": [], "003779": [], "004323": [], "003774": [], "004268": [], "003767": [], "004296": [], "003824": [], "004299": [], "003776": [], "003783": [], "004306": [], "003750": [], "426": [], "003093": [], "001751": [], "002808": [], "001657": [], "002763": [], "001620": [], "002725": [], "001616": [], "002722": [], "001631": [], "004560": 136, "002369": [], "004403": 99, "002405": [], "004346": [], "002366": [], "581": [], "582": 127, "583": [], "584": [], "005722": [], "003159": [], "005462": [], "003138": [], "005371": [], "003109": [], "005410": [], "003101": [], "006259": [], "003074": [], "005451": [], "003139": [], "005391": [], "003158": [], "005382": [], "005380": [], "003026": [], "697": [], "698": [], "699": [], "016282": [], "015637": [], "006749": [], "015843": [], "006714": [], "015613": [], "006821": [], "2024": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 114, 122, 124, 125, 127, 129, 130, 131, 135, 136, 137], "59": [], "dev112": [], "004766": [], "002513": [], "004318": [], "002461": [], "002452": [], "004381": [], "002443": [], "tmpbti83iq_": [], "ffc61acfa75ef10b46f5b265f4f257b1789532fa": [], "342": [97, 137], "004727": [], "004301": [], "002234": [], "004324": [], "004277": [], "002251": [], "002241": [], "656": [], "0x7f016dd825c0": [], "984": [], "985": [], "027": [], "366": 127, "367": 127, "368": 127, "369": 127, "370": [89, 91, 127], "019": [], "020": [], "021": [], "387": [88, 91, 93, 94], "407": 127, "096": [], "097": [], "098": [], "099": 129, "191": [], "192": [], "541": [], "166": 103, "167": [], "486": [], "487": [], "488": [], "451": [], "657": 130, "678": [], "735": 127, "736": 127, "739": [], "086": 111, "087": 111, "793": [], "794": [], "795": [], "796": [], "797": [], "798": [], "434": 129, "287": [], "288": [], "351": [], "734": 127, "740": [], "004742": [], "002417": [], "002354": [], "004261": [], "002370": [], "002368": [], "004272": [], "004286": [], "002413": [], "004252": [], "004271": [], "004295": [], "002342": [], "004297": [], "004209": [], "002359": [], "004278": [], "002353": [], "004240": [], "004242": [], "004276": [], "004289": [], "002351": [], "0x7f01747ecbe0": [], "0x7f01707f3550": [], "004350": [], "002181": [], "004019": [], "003937": [], "004080": [], "003917": [], "002167": [], "0x7f016d9d9d20": [], "012650": [], "005520": [], "011843": [], "005446": [], "012108": [], "005570": 137, "011927": [], "005421": [], "011857": [], "005587": [], "343": [97, 137], "977": [], "978": [], "979": [], "035": 111, "036": [], "037": [], "038": [], "039": [], "040": [], "041": [], "319": 127, "320": 127, "376": [], "377": [], "379": [], "654": 130, "655": 130, "658": [], "380": [], "381": [], "382": [], "935": 135, "936": 135, "938": [], "939": [], "408": [], "393": [], "0x7f0170209ff0": [], "0x7f017020b220": [], "507": [90, 114], "808": [], "033": 103, "034": [], "321": 127, "322": 127, "0x7f0170176ad0": [], "325": 102, "0x7f0170176ec0": [], "519": [106, 107], "520": [106, 107], "021865": [], "008237": [], "021556": [], "008142": [], "021440": [], "008092": [], "021584": [], "008106": [], "008099": [], "604": [], "445": [], "004489": [], "002225": [], "002173": [], "004241": [], "002186": 102, "002199": [], "079": 104, "126": 86, "156": [], "598": 90, "617": [114, 126], "721": [], "722": [], "0x7f01750717e0": [], "0x7f01965225f0": [], "0x7f019652a2b0": [], "889": [], "890": [], "891": [], "892": [], "023952": [], "006817": [], "022981": [], "006685": [], "023014": [], "006705": [], "022914": [], "022857": [], "006808": [], "0x7f01700b5ba0": [], "049": 103, "0x7f016d494250": [], "050": 103, "051": 103, "052": 103, "053": 103, "005770": [], "006350": [], "004781": [], "005739": [], "003699": [], "005869": [], "003708": [], "005691": [], "003650": [], "225": 135, "577": [], "926": 86, "927": [], "007": [], "009": [], "010": 127, "474": [], "475": [], "476": [], "477": [], "478": [], "732": [], "405": [97, 100, 137], "907": [], "908": [], "909": [], "910": [], "444": [], "450": [], "553": 90, "226": [], "228": [], "229": 125, "0x7f016dc28b20": [], "526": [], "0x7f016d6d2680": [], "0x7f016d6d3190": [], "0x7f016d6d1c00": [], "752": 93, "0x7f016daa3f70": [], "0x7f016d4c1e10": [], "940": [], "855": [], "412": 89, "0x7f016de0d210": [], "413": [89, 110], "414": [89, 110], "009619": [], "003284": [], "008549": [], "003224": [], "009034": [], "003204": 131, "008809": [], "008751": [], "003205": [], "485": [], "438": 105, "483": [], "484": [], "004869": [], "002365": [], "004439": [], "004322": [], "004330": [], "004455": [], "002401": [], "004368": [], "004351": [], "002347": 114, "004334": [], "004326": [], "004472": [], "002360": [], "004337": [], "004621": 136, "004349": [], "004428": [], "004445": [], "004376": [], "002361": [], "004369": [], "004460": [], "004419": [], "002362": [], "770": [89, 127], "004426": [], "004004": [], "004356": [], "003843": [], "004411": 114, "003893": [], "004436": [], "003852": [], "003857": [], "003870": [], "004414": [], "003865": [], "004366": [], "032": [], "003096": [], "001655": [], "002753": [], "001594": [], "002683": [], "001580": [], "002802": [], "001663": [], "002811": [], "001660": [], "064": [], "004519": 137, "004339": [], "002344": [], "002379": [], "005665": [], "003127": [], "005331": [], "005424": [], "003079": [], "005379": [], "003092": [], "168": [86, 138], "170": 138, "171": [], "005467": [], "003137": [], "005362": [], "003077": [], "005312": [], "003041": [], "005341": [], "003057": [], "005318": [], "223": [], "224": [124, 138], "016257": [], "007108": [], "015859": [], "006730": [], "015880": [], "006824": [], "015691": [], "006778": [], "015935": [], "006796": [], "337": [], "dev113": [], "954": [], "955": [], "956": [], "958": [], "004788": [], "002506": [], "002400": [], "004304": [], "002422": [], "004317": [], "002439": [], "tmp8qc31nnz": [], "4a1172d2cfb09b6dfae4e8c22cf3c06c515de63c": [], "004666": [], "002259": [], "002231": [], "004142": [], "002188": [], "575": [], "576": [], "0x7f7066eb42e0": [], "054": [], "055": [], "601": 90, "117": [], "118": 138, "482": [], "071": [102, 108], "072": [], "073": 105, "383": [], "384": [], "411": 89, "425": [], "427": [], "428": [], "423": [], "627": [], "344": [97, 137], "986": [], "987": 91, "988": [], "989": [], "615": 114, "616": 114, "618": [], "619": [], "004640": 136, "002378": [], "002288": [], "004152": [], "004193": [], "004187": [], "002300": [], "004164": [], "002261": [], "004147": [], "004175": [], "004174": [], "002275": [], "004172": [], "004173": [], "002319": [], "004166": [], "002280": [], "002305": [], "002310": [], "004148": [], "002297": [], "004267": [], "004160": [], "0x7f7066e9b070": [], "0x7f7066c419f0": [], "004310": [], "002104": [], "003891": [], "002115": [], "002072": [], "003922": [], "002114": [], "003882": [], "0x7f7066bc1c00": [], "012735": [], "005387": [], "011879": [], "005435": [], "011796": [], "005484": [], "011734": [], "005356": [], "011713": [], "005500": [], "625": [], "626": [], "685": [], "687": [], "688": [], "689": [], "690": [], "691": [], "294": [99, 137], "994": [], "002": [], "552": 90, "554": [], "018": [], "0x7f7066c42bf0": [], "0x7f7066c43790": [], "023": [], "026": [], "788": [], "897": [], "659": 130, "661": [], "0x7f70674084f0": [], "0x7f706740b3d0": [], "349": [], "350": [], "021916": [], "008052": [], "021770": [], "008082": [], "021483": [], "008040": [], "021679": [], "008064": [], "021400": [], "008032": [], "004485": [], "002187": [], "004149": [], "002139": [], "004134": [], "002148": [], "004123": [], "002160": [], "809": [], "851": [], "852": [], "853": [], "854": [], "340": [], "361": 127, "422": [], "0x7f706c271c60": [], "0x7f708dcc65f0": [], "0x7f708dccdd30": [], "024103": [], "006737": [], "022960": [], "006699": [], "023182": [], "022971": [], "006775": [], "023304": [], "006834": [], "0x7f7066eb6e60": [], "0x7f7066eb5150": [], "707": [], "708": [], "005803": [], "005683": [], "003680": [], "005679": 137, "003654": [], "005767": [], "003653": [], "005646": [], "003664": [], "365": [102, 127], "602": 90, "578": [], "579": 127, "015": [], "016": 127, "017": 127, "138": [104, 125], "819": [93, 127], "821": [111, 127], "822": 127, "56": 127, "313": 127, "314": 127, "153": [124, 127], "0x7f7066bc3be0": [], "436": [], "880": [], "882": [], "0x7f706754aad0": [], "883": [], "0x7f7066985120": [], "0x7f7066c5dab0": [], "295": [99, 137], "0x7f7066c5d540": [], "297": [99, 124], "0x7f7066dca350": [], "149": 127, "0x7f7066cadcc0": [], "009641": [], "003247": [], "008512": [], "003185": [], "008942": [], "003178": [], "008721": [], "003171": 131, "008777": [], "003146": [], "289": [], "290": [], "291": 99, "292": [], "293": 137, "093": [], "004909": [], "002399": [], "004413": [], "004347": [], "004341": [], "002340": [], "185": [], "002333": [], "002281": [], "243": [], "244": 138, "245": 138, "246": [], "004360": [], "002291": [], "002287": [], "002272": [], "002463": [99, 136], "004515": 85, "002329": [], "004279": [], "004292": [], "002299": [], "004325": [], "002279": [], "004335": [], "002276": [], "420": [], "004386": [], "003939": [], "004269": [], "003758": [], "004309": [], "003752": [], "003751": [], "003823": [], "003789": 125, "004363": [], "003781": [], "003757": [], "001661": [], "002773": [], "001596": [], "002696": [], "001687": [], "002609": [], "001581": [], "002627": [], "001599": [], "715": 136, "002284": [], "005579": [], "005333": [], "003036": [], "005244": [], "003043": [], "005289": [], "003045": [], "003063": [], "816": 127, "005378": [], "003076": [], "005294": [], "003028": [], "005231": [], "005199": [], "003050": [], "005240": [], "873": [], "874": [], "875": [], "876": [], "877": [], "879": [], "015980": [], "006822": [], "015488": [], "006616": [], "015593": [], "006713": [], "015495": [], "006651": [], "015677": [], "006716": [], "dev1": [], "572": [], "004903": [], "002554": [], "004478": [], "002493": [], "004484": [], "002507": [], "004486": [], "002784": [], "004496": [], "002502": 99, "tmp0ppxbe_6": [], "d789025717531c6d3d884e7cfb4848f3bef8ef3": [], "528": 107, "005089": [], "002438": [99, 136], "004557": 136, "002267": [], "002244": [], "002227": [], "671": [86, 91], "264": 127, "0x7f1fc9ab1c00": [], "858": 111, "859": 111, "904": [], "905": [], "906": [], "848": 136, "059": [], "060": [], "810": 127, "811": 127, "812": 127, "856": [], "331": [], "094": [], "095": [], "494": 130, "045": [], "048": 103, "432": [], "692": [], "695": [], "696": [], "004790": [], "002453": [], "002381": [], "004495": 137, "002435": [], "004264": [], "004243": [], "002364": [], "004245": [], "004250": [], "004311": [], "002335": [], "004257": [], "0x7f1fc9918910": [], "508": [90, 108, 114], "0x7f1fc95b4100": [], "004422": [], "004050": [], "002161": [], "004016": 136, "002194": [], "004111": [], "002172": [], "003959": [], "0x7f1fc95b5000": [], "013158": [], "005594": [], "012160": [], "005527": [], "012252": [], "012121": [], "005585": [], "012167": [], "005633": [], "959": [], "385": 105, "730": [], "0x7f1fc94a0b80": [], "0x7f1fc94a0ca0": [], "522": [106, 114], "523": [106, 107, 114], "240": [], "241": [], "242": [], "509": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 104, 105, 106, 110, 114, 124, 129, 130], "0x7f1fcb469a50": [], "511": [], "512": [], "0x7f1fc946ad10": [], "710": [], "711": [], "022244": [], "008280": [], "021958": [], "008224": [], "021985": [], "008192": [], "022113": [], "008217": [], "021868": [], "008235": [], "004540": [], "002240": [], "004273": [], "002201": [], "002205": [], "720": [], "dev105": [], "267": [124, 127], "0x7f1fcfb6a170": [], "0x7f1ff152e9e0": [], "0x7f1ff1536870": [], "024610": [], "007007": [], "023787": [], "006902": [], "023661": [], "006833": [], "023379": [], "006835": [], "023397": [], "006945": [], "0x7f1fc9548220": [], "0x7f1fc9548700": [], "005967": [], "003761": [], "005837": [], "003727": [], "005784": [], "003735": [], "005876": [], "003720": [], "005778": [], "003718": [], "410": [89, 110], "662": 135, "663": [135, 136], "903": [], "481": [], "0x7f1fc991a9e0": [], "0x7f1fc906fd00": [], "0x7f1fc906f880": [], "0x7f1fc906c2e0": [], "0x7f1fc91ec9d0": [], "0x7f1fc9dbf790": [], "693": [], "0x7f1fc992f6d0": [], "009726": [], "008579": [], "003313": [], "009081": [], "003264": [], "008874": [], "003257": 137, "008852": [], "003226": [], "333": [], "334": [98, 100], "335": [], "005002": [], "002432": [], "002385": [], "004451": [], "004528": [], "004423": [], "002410": [], "002374": [], "002394": [], "004404": [], "002403": [], "004510": [], "002407": [], "004385": 99, "002418": [], "004675": [], "004450": [], "004431": [], "002395": 86, "004410": [], "002380": [], "004465": [], "004427": [], "004446": 99, "004491": [], "004062": [], "003876": [], "004401": [], "003867": [], "003839": [], "004527": [], "003872": [], "004444": [], "003889": [], "004435": [], "003847": [], "435": [], "863": [], "001697": [], "002810": [], "001662": [], "002729": [], "001637": [], "002751": [], "001624": [], "002743": [], "001615": [], "896": [], "899": [], "900": [], "005014": [], "004441": [], "002358": [], "004374": [], "005748": [], "005488": [], "003126": [], "005426": [], "003140": [], "005427": [], "003160": [], "005529": [], "003114": [], "003176": [], "005375": [], "003100": [], "005453": [], "003124": [], "005447": [], "003103": [], "016581": [], "006876": [], "015869": [], "006885": [], "016133": [], "016070": [], "006865": [], "016045": [], "006831": [], "skip": 138, "synchon": 138, "mandal": 138, "header": 138, "languag": 138, "snippet": 138, "adopt": 138, "ruff": 138, "linter": 138, "codebas": 138, "codespel": 138, "dev2": [], "004795": [], "002666": [], "004714": 86, "002685": [], "002567": [], "004678": [], "002593": [], "004823": [], "002669": [], "tmpl0etqc38": [], "8d0fd89ae680d7887d646283adf3698b823e1d36": [], "421": [], "621": [], "004887": [], "002295": [], "004392": [], "002495": [], "002269": [], "002264": [], "670": [], "0x7f890d751d20": [], "046": [], "047": [], "870": [], "871": [], "336": [], "831": 129, "193": 106, "195": [], "893": [], "894": [], "895": [], "849": 136, "004754": [], "002367": [], "002343": [], "002345": [], "004263": [], "004254": [], "002406": [], "002348": [], "004244": [], "002350": [], "0x7f890d3fff10": [], "0x7f890fb87400": [], "004868": [], "004041": [], "002197": [], "004109": [], "003963": [], "0x7f890d9bbe50": [], "013399": [], "005693": [], "012183": [], "005460": [], "012069": [], "005602": [], "012034": [], "012631": [], "005975": [], "102": [], "103": 93, "573": [], "574": [], "0x7f890d703730": [], "0x7f890d703250": [], "0x7f891025f760": [], "0x7f8926057790": [], "022386": [], "008354": [], "022887": [], "008436": [], "021805": [], "008265": [], "023222": [], "008270": [], "021786": [], "008165": [], "004556": [], "002220": [], "004249": [], "002184": [], "004195": [], "004231": [], "561": [], "220": [], "0x7f8914a1e290": [], "0x7f893642ea70": [], "0x7f89364363b0": [], "53": [], "024629": [], "006807": [], "023118": [], "023805": [], "006767": [], "023166": [], "006745": [], "025147": [], "007090": [], "0x7f890fe335b0": [], "0x7f890fe32770": [], "006037": [], "003725": [], "005716": [], "003746": [], "005697": [], "003645": [], "005860": [], "003705": [], "005738": [], "847": [87, 91, 136], "850": [], "934": 135, "424": [], "799": [], "263": [], "0x7f890d5ec3d0": [], "0x7f890d1e5930": [], "0x7f890d1c94b0": [], "0x7f890d1c9f30": [], "249": 138, "0x7f890d3e7310": [], "0x7f890d41efe0": [], "0x7f890d3c2080": [], "009920": [], "003334": [], "008616": [], "003225": [], "008998": [], "003262": [], "008818": [], "003222": [], "008866": [], "003308": [], "409": [103, 108], "004902": [], "004448": [], "002474": 136, "004751": [], "002440": 99, "004487": [], "002390": [], "004438": 99, "004468": [], "002472": [], "004589": 136, "004581": [], "002424": [], "004463": [], "004364": 99, "004935": [], "004520": [], "002434": 136, "004507": [], "004430": [], "004567": [85, 136], "004506": [], "004429": [], "004110": [], "004424": [], "003856": [], "004390": [], "003888": [], "004432": [], "004612": [], "004107": [], "004526": 136, "003906": [], "004483": [], "003873": [], "003903": [], "003919": [], "003144": [], "001669": [], "001614": [], "001610": [], "002677": [], "001621": [], "002630": [], "001699": [], "004577": [], "002392": [], "002531": 136, "004735": [], "002610": [], "004988": [], "002485": [], "004555": [], "005769": [], "003125": [], "005442": [], "003149": [], "005499": [], "005485": [], "003253": 137, "005908": [], "005545": [], "003118": [], "005395": [], "005404": [], "003110": [], "003071": [], "172": [], "173": [], "174": [], "175": [124, 135], "176": [], "017283": [], "006841": [], "015957": [], "007164": [], "016626": [], "006900": [], "015987": [], "006870": [], "016107": [], "006940": [], "dev11": [], "524": [106, 107, 114], "525": [107, 114], "004738": [], "002540": [], "004307": [], "004320": [], "tmpg8da_yv0": [], "d1f915eee0902cee00b744c8ba7e9509ada8b578": [], "004756": [], "002260": [], "002229": [], "002214": [], "002178": [], "004228": [], "0x7f7aa0939e10": [], "791": [], "714": 136, "669": [], "792": [], "002332": [], "002355": [], "004203": [], "004233": [], "004256": [], "004223": [], "0x7f7aa08d8f10": [], "0x7f7aa06f3070": [], "004377": [], "003961": [], "002171": [], "003987": [], "002119": [], "004047": [], "002126": [], "003980": [], "002165": [], "0x7f7aa0238370": [], "012866": [], "005492": [], "011937": [], "012027": [], "005550": [], "011842": [], "005414": [], "005549": [], "901": [], "902": [], "0x7f7aa0980670": [], "0x7f7aa0980730": [], "076": 105, "0x7f7aa05b5030": [], "0x7f7aa05b49d0": [], "021761": [], "008126": [], "021662": [], "008140": [], "021575": [], "008163": [], "021776": [], "008139": [], "021530": [], "008112": [], "002203": [], "002149": [], "002155": [], "004213": [], "0x7f7aa5a06200": [], "0x7f7ac7422a70": [], "0x7f7ac7429e30": [], "024077": [], "006696": [], "023107": [], "006668": [], "023280": [], "022945": [], "006683": [], "006753": [], "0x7f7aa0074400": [], "0x7f7aa0076dd0": [], "005802": [], "003659": [], "005678": [], "005712": [], "003655": [], "005726": [], "003745": [], "005695": [], "003644": [], "183": [], "814": 127, "815": [], "363": 127, "832": [], "339": [], "345": [97, 137], "348": [], "0x7f7aa02e77c0": [], "0x7f7aa00b8880": [], "0x7f7aa00b82e0": [], "0x7f7aa00b8310": [], "0x7f7aa05b4fa0": [], "0x7f7aa00ba0e0": [], "0x7f7aa0307820": [], "009708": [], "003329": [], "008650": [], "003211": [], "009128": [], "008821": [], "008857": [], "003232": [], "52": [], "004858": [], "002416": [], "004606": [], "004388": 99, "002327": [], "004365": [], "004370": 99, "004479": [], "004009": [], "004480": [], "004417": [], "003848": [], "003838": [], "003842": [], "004440": [], "003841": [], "004447": [], "003859": [], "003089": [], "001672": [], "002764": [], "002694": [], "001634": [], "002661": [], "001629": [], "001592": [], "004570": [], "004494": [], "004294": [], "005669": [], "003143": [], "005385": [], "003085": [], "005511": [], "003098": [], "005370": [], "003117": [], "005489": [], "003081": [], "003051": [], "005286": [], "003059": [], "005329": [], "003083": [], "005308": [], "429": 105, "431": [], "016311": [], "006806": [], "015796": [], "015952": [], "015850": [], "016063": [], "dev14": [], "004682": [], "002499": [], "002393": [], "tmp41fuw6eo": [], "8c908ce8343743e208f0cd5e6a8d0fd9bcb6ac1b": [], "024": 106, "004691": [], "002296": [], "004191": [], "002196": [], "0x7f7f19dba080": [], "743": [], "789": [], "790": [], "004569": 136, "004183": [], "004151": 102, "002278": [], "004189": [], "004176": [], "004196": [], "002547": [], "004139": [], "002270": [], "004128": [], "0x7f7f3074ba30": [], "0x7f7f1a080580": [], "063": [], "004275": [], "003936": [], "002089": [], "002097": [], "003979": [], "002121": [], "003900": [], "002085": [], "0x7f7f1a0827d0": [], "012637": [], "011853": [], "005373": [], "011762": [], "005491": [], "011773": [], "005343": [], "011771": [], "005508": [], "0x7f7f1ab41900": [], "0x7f7f1ab419c0": [], "0x7f7f1a307040": [], "555": [], "0x7f7f1ab41090": [], "021678": [], "021481": [], "008005": [], "021421": [], "008043": [], "021585": [], "021387": [], "008049": [], "004611": [], "002216": [], "004161": [], "002154": [], "002153": [], "0x7f7f1f16e680": [], "0x7f7f3cf4ab00": [], "0x7f7f3cf52230": [], "392": [], "023907": [], "022962": [], "006744": [], "022931": [], "006557": [], "022816": [], "006620": [], "022823": [], "006732": [], "0x7f7f19e35930": [], "0x7f7f19e37910": [], "005593": [], "005610": [], "005731": [], "003671": [], "005640": [], "003628": [], "624": [], "075": 105, "077": [104, 105], "078": 104, "527": 107, "529": 127, "0x7f7f19c564d0": [], "0x7f7f197ae6b0": [], "0x7f7f197ac970": [], "0x7f7f197afdc0": [], "0x7f7f19e023b0": [], "0x7f7f1a985180": [], "0x7f7f19c72e00": [], "009716": [], "008483": [], "003186": [], "008957": [], "003187": [], "008826": [], "003165": [], "008755": [], "003147": [], "004872": [], "004493": [], "004405": [], "004425": [], "004533": 85, "004378": [], "004563": [], "004319": [], "002445": [], "004345": [], "003973": [], "004361": 99, "003794": [], "003868": [], "003785": [], "003788": [], "003793": [], "003768": 125, "001678": [], "001643": [], "002708": [], "001601": [], "002727": [], "001607": [], "001571": [], "622": [], "005578": [], "005285": [], "005415": [], "005282": [], "005450": [], "003123": [], "003306": [], "006172": [], "003933": [], "005573": [], "003046": [], "005338": [], "003075": [], "016094": [], "006694": [], "015606": [], "006738": [], "015814": [], "006698": [], "015557": [], "006656": [], "015768": [], "006652": [], "polar": [6, 43, 44, 45, 46, 47, 48, 49], "post1": [], "dev21": [], "813": 127, "_valid": [], "73": [], "004952": [], "004497": 85, "002660": [], "004456": [], "002550": [], "004471": [], "002521": 136, "002728": [], "tmpu80_b84v": [], "2e30b6e0eaeae095c39a3a68c315c7535b10aea9": [], "004923": [], "004387": [], "004359": [], "0x7fecc237d270": [], "2458": 90, "391": [], "328": [102, 104, 108], "329": [], "002386": [], "002377": [], "004305": [], "002613": [], "005709": [], "002843": [], "0x7fecc1d21810": [], "0x7fecc1d8b250": [], "390": [], "003981": 102, "002180": [], "004097": [], "002207": [], "003931": [], "0x7fecc1decaf0": [], "013715": [], "005825": [], "012791": [], "005855": [], "012915": [], "005766": [], "012731": [], "012781": [], "0x7fecc1f23a00": [], "0x7fecc1f23970": [], "203": [], "0x7fecc1e9dd50": [], "0x7fecc21d48b0": [], "022514": [], "010690": [], "022798": [], "008836": [], "022989": [], "008530": [], "023710": [], "008603": [], "022472": [], "008469": [], "004643": [], "002257": [], "004475": 99, "002235": [], "002223": 102, "712": [], "713": 136, "0x7fecc77e9360": [], "0x7fece9222b90": [], "0x7fece922e5f0": [], "024242": [], "023331": [], "006956": [], "023449": [], "006827": [], "023320": [], "006862": [], "023826": [], "006934": [], "0x7fecc1ba1cc0": [], "0x7fecc1d35e10": [], "005772": [], "003753": [], "005756": [], "005698": [], "003736": [], "005830": [], "003710": [], "0x7fecc1e159f0": [], "0x7fecc1d8b130": [], "0x7fecc1d8b3d0": [], "0x7fecc21aaf80": [], "0x7fecc1ba2b00": [], "0x7fecc1bbad70": [], "0x7fecc2637a30": [], "009912": [], "003343": [], "008687": [], "003237": [], "009151": [], "008944": [], "003196": 137, "008983": [], "029499": 135, "977110": 135, "084010": 135, "306544": 135, "919632": 135, "005114": [], "004548": [], "002447": [], "004523": [], "004542": [], "002427": 137, "364": 127, "004759": [], "004508": [], "002423": [], "004457": 99, "002456": 99, "004849": [], "004593": [], "002520": [], "004845": [], "002486": 137, "004639": [], "002508": [], "nbsp": 136, "pipelineifittedpipelin": 136, "004791": [], "002431": [], "004499": [], "004462": [], "neg_root_mean_squared_log_error": 136, "004618": [], "003993": [], "003913": [], "003909": [], "003897": [], "003943": [], "003918": [], "003905": [], "003208": [], "001822": [], "002894": [], "001646": [], "002824": [], "002835": [], "002714": [], "001632": [], "004706": [], "002429": 99, "002433": [], "004623": [], "004434": 99, "005819": [], "005702": [], "005543": [], "003174": [], "005564": [], "003190": [], "005639": [], "003177": [], "005635": [], "003175": [], "005612": [], "003209": [], "017310": [], "007522": [], "017276": [], "007345": [], "016864": [], "007283": [], "016881": [], "007315": [], "017165": [], "007360": [], "dev24": [], "004889": [], "002651": [], "004534": [], "002624": [], "004633": [], "002621": [], "002600": [], "tmpc24z3no1": [], "08dde702168d8353d5c4904cf06762ef906d64e": [], "004961": [], "004389": [], "002292": [], "0x7fdaccd796f0": [], "437": [], "623": [], "127": 86, "004800": [], "002491": 136, "002412": [], "002419": 99, "004418": [], "002476": [], "002466": [], "002464": 136, "004380": [], "002454": [], "0x7fdad3c042e0": [], "0x7fdacd21c940": [], "004112": [], "004034": [], "003992": [], "002236": [], "505": 90, "0x7fdacc7c14b0": [], "013614": [], "012943": [], "005957": [], "013193": [], "005888": [], "013221": [], "006012": [], "013484": [], "006091": [], "0x7fdacf7f8c40": [], "0x7fdacf7f8f70": [], "0x7fdacd3c7820": [], "0x7fdacd3c5ae0": [], "022809": [], "008506": [], "027137": [], "008872": [], "025200": [], "009709": [], "024055": [], "009382": [], "023276": [], "008520": [], "004632": [], "004420": [], "941": 131, "0x7fdad450d480": [], "0x7fdaf5f3ed40": [], "0x7fdaf5f50670": [], "024634": [], "007000": [], "023741": [], "006941": [], "024270": [], "006926": [], "024003": [], "007084": [], "024462": [], "007086": [], "0x7fdacc43ac50": [], "0x7fdacc45d840": [], "005993": [], "003810": [], "005790": [], "003827": [], "005805": [], "003816": [], "005894": [], "005788": [], "0x7fdaccd9f940": [], "0x7fdacc46c370": [], "0x7fdacc46cd00": [], "0x7fdacc46d330": [], "0x7fdacc7e0940": [], "0x7fdacc6da1a0": [], "0x7fdacc6d9ff0": [], "009713": [], "003417": [], "008941": [], "003342": [], "008959": [], "003259": [], "008783": [], "008764": [], "003330": [], "005142": [], "002516": [], "004654": [], "004550": [], "002475": [], "004547": [], "002490": 136, "002477": [], "004537": [], "002478": 99, "004551": [], "004749": [], "004576": [], "002489": [], "004720": [], "002503": [], "004568": [], "004565": [], "002530": [], "004993": [], "002522": [], "004562": [], "002468": [], "004598": [], "004580": 136, "004601": 136, "002444": 136, "004575": [], "004594": [], "002446": 136, "004591": [], "004595": [], "004780": [], "004090": [], "003999": [], "004002": [], "004622": [], "004063": [], "004086": [], "004003": [], "004018": [], "004032": [], "004630": [], "004054": [], "004053": [], "003150": [], "001806": [], "002901": [], "001690": [], "002790": [], "002849": [], "001683": [], "002735": [], "001695": [], "004709": [], "002471": [], "004524": [], "004459": [], "004637": [], "006042": [], "003290": [], "005618": [], "005659": [], "003261": [], "005699": [], "003245": [], "005796": [], "003367": [], "005865": [], "003298": [], "005710": [], "003278": [], "005759": [], "003287": [], "005749": [], "003252": [], "018129": [], "007479": [], "017345": [], "007464": [], "016987": [], "007411": [], "017203": [], "007388": [], "017149": [], "007520": [], "bayesian": [1, 33, 62, 101, 108, 127], "params_attr": 22, "bay": [33, 34, 106, 121, 127, 138], "dev57": [], "005056": [], "004513": [], "002574": [], "002538": [], "002512": [], "tmpixoh8x_o": [], "239c2c40d7fceb1b2e1c50e50e8636c118790cc1": [], "004942": [], "004452": [], "002263": [], "0x7fe306626b30": [], "833": [], "004847": [], "002451": 136, "005829": [], "004579": [], "004288": [], "002415": [], "004314": [], "004331": 114, "002436": 136, "004280": [], "002389": [], "0x7fe3066f5ae0": [], "479": [], "0x7fe306b0a740": [], "002245": [], "004056": [], "002175": [], "003975": [], "002162": [], "003942": [], "0x7fe3064b83a0": [], "013603": [], "005783": [], "012702": [], "005746": [], "012927": [], "005757": [], "012586": [], "005704": [], "012766": [], "005765": [], "650": [97, 127, 130], "651": 130, "hyperparamt": 106, "1e3": 106, "1e1": 106, "n_iter": [106, 127], "1000": 106, "6203007518796992": 106, "ordereddict": [106, 127], "62585277239563": 106, "909675645518994": 106, "run_hyperparameter_tuning_bayessearch": [106, 108], "0x7fe3064b9480": [], "0x7fe3064b9030": [], "0x7fe30629c040": [], "0x7fe30629ecb0": [], "022632": [], "008376": [], "022496": [], "008399": 111, "022337": [], "008374": [], "022584": [], "008360": [], "022354": [], "008425": [], "004586": [], "002228": [], "002233": [], "newer": 121, "unmaintain": 121, "skopt": [121, 127], "bayessearchcv": [33, 34, 121, 127, 138], "0x7fe30c0d8dc0": [], "0x7fe32db4ad40": [], "0x7fe32db5c8f0": [], "024275": [], "006866": [], "023473": [], "023477": [], "006816": [], "023190": [], "006679": [], "023148": [], "006867": [], "0x7fe306075000": [], "0x7fe306076740": [], "005847": [], "005736": [], "003755": [], "005719": [], "003731": [], "005799": [], "005723": 125, "003763": [], "_grid_": 127, "constraint": 127, "prior": [106, 127], "77140446796582": 127, "022636153281629743": 127, "accept": 127, "9099999999999999": 127, "8975984906619887": 127, "028707916525659204": 127, "0x7fe306c92f20": [], "454": [], "0x7fe3069912a0": [], "0x7fe306990ac0": [], "0x7fe306990400": [], "0x7fe3063eceb0": [], "0x7fe3069915a0": [], "0x7fe3064197e0": [], "009789": [], "003202": [], "008546": [], "003155": [], "009091": [], "008926": [], "008935": [], "786": [], "787": [107, 108], "005070": [], "004645": [], "002428": 99, "004673": [], "004416": 86, "002388": [], "004461": [], "004509": [], "004670": [], "004025": [], "003972": [], "004761": [], "003925": [], "004546": 136, "003927": [], "001704": [], "002838": [], "002770": [], "001677": [], "002817": [], "001676": 137, "002749": [], "001653": [], "004538": [], "004571": [], "005979": [], "003374": [], "005755": [], "005662": [], "005590": [], "003193": [], "005637": [], "005724": [], "005481": [], "005466": [], "005504": [], "017416": [], "007382": [], "016899": [], "007221": [], "016704": [], "007205": [], "016822": [], "007252": [], "016716": [], "007177": [], "dev61": [], "004970": [], "002620": [], "004659": [], "002578": [], "004467": [], "002560": [], "004458": [], "002755": [], "tmp1ujwkgb2": [], "dbdbbfc14f3144ed54ef9c5fc5e6a6c677996639": [], "004974": [], "0x7f3c2f93ab60": [], "915": [], "004442": [], "002411": 99, "002576": [], "002391": [], "002421": [], "0x7f3c2f5d3520": [], "0x7f3c2f6685b0": [], "004764": [], "002836": [], "004698": [], "004481": [], "004007": [], "002191": [], "0x7f3c2f27f880": [], "013696": [], "005987": 103, "012803": [], "005813": [], "014671": [], "005988": [], "013537": [], "005943": [], "013086": [], "005867": [], "0x7f3c2f27fd30": [], "0x7f3c2f27f6d0": [], "0x7f3c2fb002b0": [], "0x7f3c2fb00220": [], "022970": [], "008559": [], "022451": [], "008395": [], "022563": [], "008337": [], "022768": [], "008403": [], "022315": [], "008420": [], "004660": [], "002237": [], "004327": [], "002258": [], "0x7f3c3509cdc0": [], "0x7f3c56b5ad40": [], "0x7f3c56b6cd30": [], "007079": [], "024928": [], "007144": [], "024803": [], "007062": [], "024911": [], "007154": [], "024057": [], "007115": [], "0x7f3c2f1ab760": [], "0x7f3c2f015630": [], "006134": [], "005946": [], "005890": 125, "006020": [], "003965": [], "006036": [], "0x7f3c2f30fd90": [], "0x7f3c2efde020": [], "0x7f3c2efdf9a0": [], "0x7f3c2efdee00": [], "0x7f3c2f588bb0": [], "0x7f3c2efef0a0": [], "0x7f3c2f588130": [], "009890": [], "003254": [], "008669": [], "003216": [], "009220": [], "003168": [], "009032": [], "003173": [], "009048": [], "003182": [], "005197": [], "002571": [], "002465": 136, "004893": [], "002517": [], "004697": [], "004679": [], "004719": 136, "004950": [], "004844": [], "002504": [], "004883": [], "004694": [], "004688": [], "004699": [], "004693": [], "004638": [], "002546": [], "004739": [], "004716": [], "004684": [], "002498": [], "005200": [], "004674": [], "004690": [], "004017": [], "004685": [], "003982": [], "004644": [], "004776": [], "004044": 136, "003977": [], "004000": [], "004918": [], "004077": [], "004747": [], "003969": [], "003244": [], "001711": [], "002885": [], "001706": [], "002789": [], "001679": [], "002893": [], "001667": [], "002785": [], "004812": 136, "004536": [], "004490": [], "002479": 99, "002505": [], "006057": [], "003258": [], "005761": 125, "003220": 137, "005801": [], "006123": [], "003299": [], "005995": [], "003269": [], "005840": [], "003230": [], "018349": [], "007506": [], "017389": [], "007482": [], "017434": [], "007410": [], "017572": [], "017690": [], "007364": [], "optuna": [33, 34, 121, 127, 138], "optunasearchcv": [33, 34, 121, 127, 138], "register_search": [33, 34], "dev78": [], "005464": [], "002961": [], "004959": [], "002907": 86, "004976": [], "002921": [], "004966": [], "002904": [], "004957": 136, "002876": [], "tmp48xnsgm5": [], "130b4c867e64371aac71a46309d70616822bb92c": [], "005177": [], "002525": [], "004603": [], "0x7f549547d2d0": [], "043": [], "044": [], "005103": [], "002545": [], "004454": [], "002488": [], "002734": [], "004500": [], "0x7f5497bee170": [], "0x7f549541a230": [], "002249": [], "002274": [], "004064": [], "002243": [], "004030": [], "0x7f5499121480": [], "013880": [], "006051": [], "012946": [], "013015": [], "005934": [], "012983": [], "005972": [], "013083": [], "005892": [], "0x7f549534a980": [], "0x7f549534ad40": [], "0x7f54990aae90": [], "0x7f54953dbf70": [], "022715": [], "008492": 111, "022858": [], "008513": [], "022564": [], "008464": [], "022694": [], "008502": [], "022662": [], "008460": [], "004939": [], "004516": [], "0x7f549e0dd000": [], "0x7f54bfbced40": [], "0x7f54bfbdd0f0": [], "024855": [], "006943": [], "023625": [], "006923": [], "006915": [], "023538": [], "007097": [], "023771": [], "007049": [], "0x7f549523b220": [], "0x7f5495238070": [], "005927": [], "003853": [], "005864": [], "003817": [], "005810": [], "003836": [], "005906": 103, "006177": [], "framework": 127, "shown": 127, "exemplarili": 127, "balanc": 127, "svm__class_weight": 127, "trial": 127, "create_studi": 127, "maxim": 127, "study_nam": 127, "load_if_exist": 127, "0x7f54859ffb20": [], "1041": [], "experimentalwarn": 127, "v0": 127, "new_object": 127, "new_object_param": 127, "9400000000000001": [], "7051874114555626": [], "013927802622730131": [], "toolbox": 127, "zscore__with_mean": 127, "categoricaldistribut": 127, "floatdistribut": 127, "intdistribut": 127, "0x7f549514d6f0": [], "0x7f54954458a0": [], "0x7f5495445a20": [], "0x7f5495348c10": [], "0x7f5495095900": [], "0x7f5495349270": [], "0x7f54954d2a10": [], "010188": [], "003302": [], "009212": [], "003217": [], "009043": [], "003197": [], "009171": [], "005167": [], "002587": [], "004695": [], "002570": [], "002496": 136, "002511": 136, "004712": [], "002455": [], "004541": 136, "004517": [], "004884": [], "002467": 137, "004615": [], "004553": [], "002473": [], "004741": [], "004106": [], "004545": 136, "004079": [], "004631": [], "004038": [], "004590": 136, "004051": 136, "004616": 136, "004035": [], "004641": [], "004626": 136, "004582": [], "004070": [], "004084": [], "003372": [], "001845": [], "002925": [], "001735": [], "002822": [], "002881": [], "001700": [], "002794": [], "001673": [], "004758": [], "004683": [], "002542": [], "004686": [], "002523": [], "005940": [], "003285": [], "003289": [], "005650": [], "005708": [], "003310": [], "003277": [], "005780": [], "003283": [], "005807": [], "003219": 137, "005689": [], "003317": [], "004137": [], "017628": [], "017115": [], "007456": [], "017270": [], "007625": [], "017662": [], "017467": [], "007474": [], "dev4": [], "005051": [], "002689": [], "002635": [], "004588": [], "002615": [], "004488": [], "002599": [], "tmp0ov61jai": [], "215a773cf07102509cf52165021b8c4297f9e888": [], "005083": [], "004574": [], "0x7f764c266680": [], "004891": [], "002448": [], "002442": [], "002577": [], "002492": [], "002449": [], "0x7f764c83f790": [], "0x7f764c12a770": [], "004144": [], "003985": [], "0x7f764bd62dd0": [], "013960": [], "005951": [], "013029": [], "006070": [], "013400": [], "005873": [], "012785": [], "005841": [], "013022": [], "0x7f764c5c0a90": [], "0x7f764c5c2170": [], "0x7f764c9bad40": [], "0x7f764c9bb130": [], "022820": [], "008505": [], "022832": [], "008423": [], "022434": [], "008366": [], "022408": [], "008368": [], "022206": [], "008355": [], "004752": [], "002293": [], "002282": [], "optuna_integr": 121, "0x7f7651f1dbd0": [], "0x7f766fd7b910": [], "0x7f766fd9c130": [], "024913": [], "006991": [], "023580": [], "006936": [], "023705": [], "006846": [], "023516": [], "006832": [], "023452": [], "006942": [], "0x7f764bca3730": [], "0x7f764c20f190": [], "005762": [], "003770": [], "005896": [], "005777": [], "0x7f7649676d10": [], "9299999999999999": [], "7132948101954109": [], "005760963091525674": [], "0x7f764c0e8070": [], "0x7f764bcf5b10": [], "0x7f764bc99990": [], "0x7f764bff4280": [], "0x7f764bff67a0": [], "0x7f764bec6bc0": [], "0x7f764c2bc2e0": [], "009979": [], "003255": 137, "008667": [], "009199": [], "003241": [], "009228": [], "005262": [], "002573": [], "004653": [], "004726": [], "004530": [], "002441": [99, 137], "004525": [], "004771": [], "004514": [], "004502": [], "004085": [], "004125": [], "004656": [], "004661": [], "004040": [], "003978": [102, 136], "004584": 136, "003940": [], "004023": [], "003207": 137, "001726": [], "002892": [], "001721": [], "001696": [], "002896": [], "002771": [], "004578": [], "003335": [], "005812": [], "003303": [], "003256": [], "005613": [], "003228": [], "005863": [], "005643": [], "003239": [], "005664": [], "003194": [], "017661": [], "007366": [], "017387": [], "007361": [], "016880": [], "007332": [], "016972": [], "007294": [], "016954": [], "007296": [], "hyperparemt": 138, "hyperparmet": 138, "action": 138, "mark": 138, "stale": 138, "lazi": 138, "fixtur": 138, "005641": [], "002926": [], "002711": [], "005180": [], "002745": [], "002787": [], "004969": [], "002726": [], "tmpb294bj9m": [], "242982e60c7334d9cd612ff37cd36349f60a5b25": [], "005015": [], "0x7ff2c80e6da0": [], "005237": [], "002594": [], "004676": [], "002650": [], "004854": [], "004821": [], "002509": 136, "002501": [99, 136], "004573": [], "005011": [], "002603": [], "004715": [], "002483": [], "004592": 137, "0x7ff2c82435e0": [], "0x7ff2c7d51300": [], "210": 96, "0x7ff2c817da50": [], "014696": [], "006073": [], "013764": [], "006082": [], "013638": [], "006184": [], "013828": [], "006068": [], "013677": [], "006064": [], "042": [], "0x7ff2c7e7a200": [], "0x7ff2c7e784f0": [], "0x7ff2c8847ac0": [], "0x7ff2c8231ab0": [], "024534": [], "008960": [], "024921": [], "009236": [], "024530": [], "009299": [], "025229": [], "009402": [], "025688": [], "009150": [], "005068": [], "004723": [], "004713": [], "0x7ff2cdd85bd0": [], "0x7ff2edd67910": [], "0x7ff2edd73e30": [], "025367": [], "024343": [], "007077": [], "024738": [], "007192": [], "024525": [], "007191": [], "024790": [], "007472": [], "0x7ff2c7ba7eb0": [], "0x7ff2c7b6a1a0": [], "006357": [], "003899": [], "006014": [], "005871": [], "005986": [], "005809": [], "003747": [], "0x7ff2c7dca290": [], "0593748500392722": [], "07262925360645738": [], "0x7ff2c83a7d30": [], "0x7ff2c829de70": [], "0x7ff2c82432b0": [], "0x7ff2c829d690": [], "0x7ff2c7b95e70": [], "0x7ff2c829f430": [], "0x7ff2c8760a00": [], "010403": [], "003734": [], "009149": [], "003348": [], "009472": [], "003474": [], "009282": [], "003318": [], "009403": [], "effici": 132, "002641": 85, "004731": [], "004543": [], "005328": [], "002860": [], "004856": [], "002469": [], "004667": [], "004624": [], "004853": [], "004583": [], "004710": 136, "004535": [], "005093": [], "002561": [], "004602": [], "002437": [], "002430": [], "004599": [], "004882": [], "004031": [], "003911": [], "004802": [], "003984": [], "003934": [], "004646": [], "003947": [], "003986": [], "001737": [], "002884": [], "001744": [], "002804": [], "001651": [], "002923": [], "002801": [], "001627": [], "005028": [], "004642": 136, "004464": [], "005849": [], "003183": [], "005611": [], "003153": [], "005530": [], "003181": [], "005688": [], "005958": [], "005715": [], "003180": [], "005553": [], "003200": [], "005538": [], "005544": [], "017827": [], "007339": [], "017509": [], "007399": [], "016958": [], "007355": [], "017510": [], "007568": [], "017495": [], "007484": [], "dev18": [], "004965": [], "002691": [], "004604": 136, "002649": [], "004469": 137, "tmprmlbtji7": [], "186c063d8513b83e8d4130c354d05a8630b5ba5d": [], "004830": [], "0x7fc2268744f0": [], "004861": [], "004561": [], "002425": [], "002642": [], "0x7fc2262e6a40": [], "0x7fc227286110": [], "004012": [], "002242": [], "004026": [], "0x7fc226b46920": [], "013769": [], "005959": [], "012892": [], "013000": [], "005980": [], "012908": [], "005879": [], "012923": [], "005909": [], "0x7fc2269d1f60": [], "0x7fc2269d1f30": [], "0x7fc226328730": [], "0x7fc22634b220": [], "022627": [], "008527": [], "022419": [], "008499": [], "022343": [], "008431": [], "022586": [], "022345": [], "008459": [], "004806": [], "0x7fc22c2eb640": [], "0x7fc24a17f910": [], "0x7fc24a19c2f0": [], "024220": [], "006968": [], "023496": [], "006909": [], "023669": [], "006879": [], "023369": [], "006914": [], "023614": [], "0x7fc2262e5330": [], "0x7fc2262e4460": [], "003800": [], "003791": [], "005903": [], "003813": [], "0x7fc225b21b10": [], "74": [], "2417627018563466": [], "05926827334724916": [], "0x7fc226750a60": [], "0x7fc22654da20": [], "0x7fc22654ea10": [], "0x7fc22654d9f0": [], "0x7fc22654c160": [], "0x7fc226055c60": [], "0x7fc226a1f970": [], "009885": [], "003250": [], "008652": [], "003184": [], "009079": [], "003163": [], "009071": [], "005072": [], "002458": 99, "004954": [], "004672": [], "002459": [], "004794": [], "004539": [], "004052": [], "004531": [], "004554": [], "004001": [], "003974": [], "003966": [], "001796": [], "002913": [], "001708": 137, "002807": [], "001691": [], "002833": [], "002908": [], "001807": [], "004852": [], "004566": [], "005557": [], "005625": [], "003352": [], "005559": [], "003203": [], "005690": [], "003227": [], "005808": [], "003243": 137, "005632": 137, "005653": [], "005572": [], "003218": [], "017483": [], "007461": [], "017083": [], "007369": [], "016843": [], "007379": [], "017082": [], "016984": [], "004837": [], "002655": [], "002572": 85, "004521": [], "002528": [], "tmpu1b8jdt9": [], "be6a63ba20db29cf05fd718db2c1799c1936a150": [], "004705": [], "004285": [], "0x7fa6c132f580": [], "002402": [], "004247": [], "002398": [], "0x7fa6c1132470": [], "0x7fa6c3837f40": [], "002217": [], "003994": 136, "0x7fa6c0b3f9d0": [], "013385": [], "005775": [], "012593": [], "012668": [], "012655": [], "006592": [], "012707": [], "005735": [], "0x7fa6c0d58820": [], "0x7fa6c0d58970": [], "0x7fa6c0b19210": [], "0x7fa6c0b19d80": [], "022262": [], "008357": [], "024267": [], "021919": [], "008375": [], "022286": [], "008321": [], "022045": [], "008294": [], "002248": [], "004283": [], "002219": [], "004226": [], "0x7fa6c8ce12d0": [], "0x7fa6ead5d5a0": [], "0x7fa6ead600b0": [], "024071": [], "006764": [], "023101": [], "006845": [], "023188": [], "006813": [], "023022": [], "006800": [], "023103": [], "006954": [], "0x7fa6c0e26b90": [], "0x7fa6c352a9e0": [], "003732": [], "005675": [], "005648": [], "003698": [], "0x7fa6a6b7ece0": [], "1045": 127, "67": [], "2281920324547159": [], "00955134189284558": [], "pca__n_compon": 127, "0x7fa6c0d59c90": [], "0x7fa6c0cfefb0": [], "0x7fa6c0cff520": [], "0x7fa6c0cfd150": [], "0x7fa6c0abb040": [], "0x7fa6c0e271c0": [], "0x7fa6c0e09ae0": [], "009739": [], "003132": [], "008919": [], "008994": [], "003131": [], "004453": [], "002420": [], "002584": [], "004769": [], "002569": [], "003970": [], "003929": [], "003956": [], "004532": [], "003990": [], "003935": [], "004498": [], "003094": [], "001758": [], "002744": [], "001670": [], "002712": [], "001611": [], "002783": [], "001639": [], "001618": [], "005846": [], "003229": [], "005480": [], "005546": [], "003167": [], "005528": [], "003191": [], "005560": [], "003192": [], "005506": [], "005554": [], "003166": [], "017263": [], "007243": [], "016886": [], "007321": [], "016612": [], "007225": [], "016741": [], "007194": [], "016648": [], "007251": [], "integr": 138, "dant": 138, "culaciati": 138, "004832": [], "002529": [], "002536": [], "002548": [], "tmpwmbiq5zr": [], "b79dc2531186adebfb0304ff5b92c86f73afd8cd": [], "005055": [], "002375": [], "004367": 99, "0x7f2f375d77f0": [], "004725": [], "005018": [], "003102": [], "005104": [], "004372": 102, "0x7f2f3702b580": [], "0x7f2f397c3880": [], "004081": [], "002222": [], "002232": [], "004005": [], "0x7f2f36ff1810": [], "013654": [], "005831": [], "012772": [], "005838": [], "012843": [], "005853": [], "012723": [], "005859": [], "012810": [], "005827": [], "0x7f2f3733d930": [], "0x7f2f3733c250": [], "0x7f2f370d3ca0": [], "205": [], "0x7f2f397c0040": [], "022648": [], "008497": [], "022422": [], "008373": [], "022231": [], "008406": [], "022314": [], "008382": [], "022448": [], "008486": [], "004838": [], "0x7f2f3ef5feb0": [], "0x7f2f60f595a0": [], "0x7f2f60f5c170": [], "024297": [], "006858": [], "023329": [], "023475": [], "023372": [], "023478": [], "006927": [], "0x7f2f370e8d30": [], "0x7f2f370eab60": [], "003802": [], "005789": [], "005741": [], "003780": [], "003790": [], "005732": [], "0x7f2f36525a80": [], "9565561024151643": [], "02657141385459879": [], "0x7f2f37313190": [], "0x7f2f36f47b50": [], "0x7f2f36f46e90": [], "0x7f2f36f47e50": [], "0x7f2f37272dd0": [], "0x7f2f36d114b0": [], "0x7f2f36e8ee90": [], "009970": [], "003314": [], "008701": [], "009154": [], "008909": [], "003162": [], "009007": [], "005027": [], "002500": [], "004564": [], "004476": [], "002544": [], "004597": [], "004822": [], "002533": [], "004605": [], "004717": [], "004071": [], "004015": [], "002826": [], "001684": [], "002853": [], "001649": [], "002766": [], "001625": [], "004669": [], "004704": [], "005907": [], "005661": [], "003296": [], "005507": [], "005541": [], "005519": [], "005674": [], "005494": [], "005512": [], "017225": [], "007236": [], "016848": [], "007312": [], "016955": [], "007402": [], "017075": [], "007308": [], "016893": [], "007384": [], "dev19": [85, 86, 87, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 114, 129, 130], "004947": 85, "002673": 85, "002608": 85, "tmpouox8o10": [85, 87], "eb7207f8885ad7f95c706af5bd833fef3c099909": [85, 87], "005147": 86, "004629": 86, "004340": 86, "0x7f23b0c47580": 87, "004894": 99, "004421": 99, "002514": 99, "002497": 99, "0x7f23b0ba6fe0": 99, "0x7f23b09dead0": 102, "004059": 102, "002224": 102, "002189": 102, "0x7f23b11f6b90": 103, "015183": 103, "006078": 103, "013080": 103, "014600": 103, "008251": 103, "013783": 103, "012970": 103, "006022": 103, "0x7f23b0b4d420": 107, "0x7f23b0b4d480": 107, "0x7f23b09139a0": 111, "0x7f23b09cb460": 111, "022769": 111, "008488": 111, "022414": 111, "008441": 111, "022349": 111, "008615": 111, "022540": 111, "022428": 111, "004658": 114, "002252": 114, "002246": 114, "0x7f23b6930d30": 124, "0x7f23d8e59990": 124, "0x7f23d8e5c2f0": 124, "024688": 125, "006961": 125, "023602": 125, "006891": 125, "023808": 125, "006847": 125, "023555": 125, "006838": 125, "023505": 125, "006966": 125, "0x7f23b0bdaa40": 125, "0x7f23b0b4d1e0": 125, "005922": 125, "003822": 125, "003782": 125, "005806": 125, "003792": 125, "0x7f23b1311090": 127, "2611679869694559": 127, "03786423126692273": 127, "0x7f23b0729e70": 129, "0x7f23b08d1f60": 130, "0x7f23b08d1a50": 130, "0x7f23b08d2320": 130, "0x7f23b0a176d0": 130, "0x7f23b08d1660": 130, "0x7f23b0ce9480": 131, "009972": 131, "003272": 131, "008621": 131, "003223": 131, "009200": 131, "008997": 131, "003210": 131, "009001": 131, "005075": 136, "004492": 136, "002510": 136, "004617": 136, "002481": 136, "004647": 136, "004702": 136, "004572": 136, "004634": 136, "002541": 136, "004628": 136, "004807": 136, "004076": 136, "004068": 136, "003997": 136, "004559": 136, "003998": 136, "004114": 136, "001742": 137, "002889": 137, "002819": 137, "002800": 137, "001647": 137, "002777": 137, "004746": 137, "005978": 137, "005651": 137, "003221": 137, "003199": 137, "005623": 137, "005680": 137, "005926": 137, "005742": 137, "003231": 137, "005563": 137, "017714": 137, "007371": 137, "019408": 137, "007406": 137, "016963": 137, "007324": 137, "017118": 137, "007394": 137, "016989": 137}, "objects": {"julearn": [[1, 0, 1, "", "PipelineCreator"], [2, 0, 1, "", "TargetPipelineCreator"], [74, 3, 0, "-", "api"], [0, 3, 0, "-", "base"], [73, 3, 0, "-", "inspect"], [75, 3, 0, "-", "model_selection"], [76, 3, 0, "-", "models"], [77, 3, 0, "-", "pipeline"], [78, 3, 0, "-", "prepare"], [33, 5, 1, "", "run_cross_validation"], [34, 5, 1, "", "run_fit"], [79, 3, 0, "-", "scoring"], [80, 3, 0, "-", "stats"], [81, 3, 0, "-", "transformers"], [82, 3, 0, "-", "utils"], [83, 3, 0, "-", "viz"]], "julearn.PipelineCreator": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "add"], [1, 1, 1, "", "copy"], [1, 1, 1, "", "from_list"], [1, 1, 1, "", "has_model"], [1, 1, 1, "", "split"], [1, 2, 1, "", "steps"], [1, 1, 1, "", "to_pipeline"]], "julearn.TargetPipelineCreator": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "add"], [2, 1, 1, "", "to_pipeline"]], "julearn.base": [[3, 0, 1, "", "ColumnTypes"], [4, 4, 1, "", "ColumnTypesLike"], [5, 0, 1, "", "JuBaseEstimator"], [6, 0, 1, "", "JuTransformer"], [7, 0, 1, "", "WrapModel"], [8, 5, 1, "", "change_column_type"], [9, 5, 1, "", "ensure_column_types"], [10, 5, 1, "", "get_column_type"], [11, 5, 1, "", "make_type_selector"]], "julearn.base.ColumnTypes": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "add"], [3, 1, 1, "", "copy"], [3, 2, 1, "", "pattern"], [3, 1, 1, "", "to_type_selector"]], "julearn.base.JuBaseEstimator": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "filter_columns"], [5, 1, 1, "", "get_apply_to"], [5, 1, 1, "", "get_metadata_routing"], [5, 1, 1, "", "get_needed_types"], [5, 1, 1, "", "get_params"], [5, 1, 1, "", "set_params"]], "julearn.base.JuTransformer": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "filter_columns"], [6, 1, 1, "", "fit"], [6, 1, 1, "", "fit_transform"], [6, 1, 1, "", "get_apply_to"], [6, 1, 1, "", "get_metadata_routing"], [6, 1, 1, "", "get_needed_types"], [6, 1, 1, "", "get_params"], [6, 1, 1, "", "set_output"], [6, 1, 1, "", "set_params"]], "julearn.base.WrapModel": [[7, 1, 1, "", "__init__"], [7, 2, 1, "", "classes_"], [7, 1, 1, "", "decision_function"], [7, 1, 1, "", "filter_columns"], [7, 1, 1, "", "fit"], [7, 1, 1, "", "get_apply_to"], [7, 1, 1, "", "get_metadata_routing"], [7, 1, 1, "", "get_needed_types"], [7, 1, 1, "", "get_params"], [7, 1, 1, "", "predict"], [7, 1, 1, "", "predict_log_proba"], [7, 1, 1, "", "predict_proba"], [7, 1, 1, "", "score"], [7, 1, 1, "", "set_params"]], "julearn.inspect": [[12, 0, 1, "", "FoldsInspector"], [13, 0, 1, "", "Inspector"], [14, 5, 1, "", "preprocess"]], "julearn.inspect.FoldsInspector": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "decision_function"], [12, 1, 1, "", "predict"], [12, 1, 1, "", "predict_log_proba"], [12, 1, 1, "", "predict_proba"]], "julearn.inspect.Inspector": [[13, 1, 1, "", "__init__"], [13, 2, 1, "", "folds"], [13, 2, 1, "", "model"]], "julearn.model_selection": [[15, 0, 1, "", "ContinuousStratifiedGroupKFold"], [16, 0, 1, "", "ContinuousStratifiedKFold"], [17, 0, 1, "", "RepeatedContinuousStratifiedGroupKFold"], [18, 0, 1, "", "RepeatedContinuousStratifiedKFold"], [19, 0, 1, "", "StratifiedBootstrap"], [20, 5, 1, "", "get_searcher"], [21, 5, 1, "", "list_searchers"], [22, 5, 1, "", "register_searcher"], [23, 5, 1, "", "reset_searcher_register"]], "julearn.model_selection.ContinuousStratifiedGroupKFold": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "get_metadata_routing"], [15, 1, 1, "", "get_n_splits"], [15, 1, 1, "", "set_split_request"], [15, 1, 1, "", "split"]], "julearn.model_selection.ContinuousStratifiedKFold": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "get_metadata_routing"], [16, 1, 1, "", "get_n_splits"], [16, 1, 1, "", "split"]], "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold": [[17, 1, 1, "", "__init__"], [17, 1, 1, "", "get_metadata_routing"], [17, 1, 1, "", "get_n_splits"], [17, 1, 1, "", "split"]], "julearn.model_selection.RepeatedContinuousStratifiedKFold": [[18, 1, 1, "", "__init__"], [18, 1, 1, "", "get_metadata_routing"], [18, 1, 1, "", "get_n_splits"], [18, 1, 1, "", "split"]], "julearn.model_selection.StratifiedBootstrap": [[19, 1, 1, "", "__init__"], [19, 1, 1, "", "get_metadata_routing"], [19, 1, 1, "", "get_n_splits"], [19, 1, 1, "", "split"]], "julearn.models": [[76, 3, 0, "-", "dynamic"], [25, 5, 1, "", "get_model"], [26, 5, 1, "", "list_models"], [27, 5, 1, "", "register_model"], [28, 5, 1, "", "reset_model_register"]], "julearn.models.dynamic": [[24, 0, 1, "", "DynamicSelection"]], "julearn.models.dynamic.DynamicSelection": [[24, 1, 1, "", "__init__"], [24, 1, 1, "", "fit"], [24, 1, 1, "", "get_metadata_routing"], [24, 1, 1, "", "get_params"], [24, 1, 1, "", "predict"], [24, 1, 1, "", "predict_proba"], [24, 1, 1, "", "score"], [24, 1, 1, "", "set_params"], [24, 1, 1, "", "set_score_request"]], "julearn.pipeline": [[29, 0, 1, "", "JuTargetPipeline"]], "julearn.pipeline.JuTargetPipeline": [[29, 1, 1, "", "__init__"], [29, 1, 1, "", "can_inverse_transform"], [29, 1, 1, "", "fit"], [29, 1, 1, "", "fit_transform"], [29, 1, 1, "", "inverse_transform"], [29, 2, 1, "", "needed_types"], [29, 1, 1, "", "transform"]], "julearn.pipeline.pipeline_creator": [[30, 0, 1, "", "Step"]], "julearn.pipeline.pipeline_creator.Step": [[30, 1, 1, "", "__init__"], [30, 4, 1, "", "apply_to"], [30, 4, 1, "", "estimator"], [30, 4, 1, "", "name"], [30, 4, 1, "", "needed_types"], [30, 4, 1, "", "params_to_tune"], [30, 4, 1, "", "row_select_col_type"], [30, 4, 1, "", "row_select_vals"]], "julearn.prepare": [[31, 5, 1, "", "check_consistency"], [32, 5, 1, "", "prepare_input_data"]], "julearn.scoring": [[35, 5, 1, "", "check_scoring"], [36, 5, 1, "", "get_scorer"], [37, 5, 1, "", "list_scorers"], [79, 3, 0, "-", "metrics"], [40, 5, 1, "", "register_scorer"], [41, 5, 1, "", "reset_scorer_register"]], "julearn.scoring.metrics": [[38, 5, 1, "", "r2_corr"], [39, 5, 1, "", "r_corr"]], "julearn.stats": [[42, 5, 1, "", "corrected_ttest"]], "julearn.transformers": [[43, 0, 1, "", "CBPM"], [44, 0, 1, "", "ChangeColumnTypes"], [45, 0, 1, "", "DropColumns"], [46, 0, 1, "", "FilterColumns"], [47, 0, 1, "", "JuColumnTransformer"], [48, 0, 1, "", "SetColumnTypes"], [50, 5, 1, "", "get_transformer"], [51, 5, 1, "", "list_transformers"], [52, 5, 1, "", "register_transformer"], [53, 5, 1, "", "reset_transformer_register"], [81, 3, 0, "-", "target"]], "julearn.transformers.CBPM": [[43, 1, 1, "", "__init__"], [43, 1, 1, "", "aggregate"], [43, 1, 1, "", "fit"], [43, 1, 1, "", "fit_transform"], [43, 1, 1, "", "get_feature_names_out"], [43, 1, 1, "", "get_metadata_routing"], [43, 1, 1, "", "get_params"], [43, 1, 1, "", "set_output"], [43, 1, 1, "", "set_params"], [43, 1, 1, "", "transform"]], "julearn.transformers.ChangeColumnTypes": [[44, 1, 1, "", "__init__"], [44, 1, 1, "", "filter_columns"], [44, 1, 1, "", "fit"], [44, 1, 1, "", "fit_transform"], [44, 1, 1, "", "get_apply_to"], [44, 1, 1, "", "get_feature_names_out"], [44, 1, 1, "", "get_metadata_routing"], [44, 1, 1, "", "get_needed_types"], [44, 1, 1, "", "get_params"], [44, 1, 1, "", "set_output"], [44, 1, 1, "", "set_params"], [44, 1, 1, "", "transform"]], "julearn.transformers.DropColumns": [[45, 1, 1, "", "__init__"], [45, 1, 1, "", "filter_columns"], [45, 1, 1, "", "fit"], [45, 1, 1, "", "fit_transform"], [45, 1, 1, "", "get_apply_to"], [45, 1, 1, "", "get_metadata_routing"], [45, 1, 1, "", "get_needed_types"], [45, 1, 1, "", "get_params"], [45, 1, 1, "", "get_support"], [45, 1, 1, "", "set_output"], [45, 1, 1, "", "set_params"], [45, 1, 1, "", "transform"]], "julearn.transformers.FilterColumns": [[46, 1, 1, "", "__init__"], [46, 1, 1, "", "filter_columns"], [46, 1, 1, "", "fit"], [46, 1, 1, "", "fit_transform"], [46, 1, 1, "", "get_apply_to"], [46, 1, 1, "", "get_feature_names_out"], [46, 1, 1, "", "get_metadata_routing"], [46, 1, 1, "", "get_needed_types"], [46, 1, 1, "", "get_params"], [46, 1, 1, "", "set_output"], [46, 1, 1, "", "set_params"], [46, 1, 1, "", "transform"]], "julearn.transformers.JuColumnTransformer": [[47, 1, 1, "", "__init__"], [47, 1, 1, "", "filter_columns"], [47, 1, 1, "", "fit"], [47, 1, 1, "", "fit_transform"], [47, 1, 1, "", "get_apply_to"], [47, 1, 1, "", "get_feature_names_out"], [47, 1, 1, "", "get_metadata_routing"], [47, 1, 1, "", "get_needed_types"], [47, 1, 1, "", "get_params"], [47, 1, 1, "", "set_output"], [47, 1, 1, "", "set_params"], [47, 1, 1, "", "transform"]], "julearn.transformers.SetColumnTypes": [[48, 1, 1, "", "__init__"], [48, 1, 1, "", "filter_columns"], [48, 1, 1, "", "fit"], [48, 1, 1, "", "fit_transform"], [48, 1, 1, "", "get_apply_to"], [48, 1, 1, "", "get_feature_names_out"], [48, 1, 1, "", "get_metadata_routing"], [48, 1, 1, "", "get_needed_types"], [48, 1, 1, "", "get_params"], [48, 1, 1, "", "set_output"], [48, 1, 1, "", "set_params"], [48, 1, 1, "", "transform"]], "julearn.transformers.confound_remover": [[49, 0, 1, "", "ConfoundRemover"]], "julearn.transformers.confound_remover.ConfoundRemover": [[49, 1, 1, "", "__init__"], [49, 1, 1, "", "filter_columns"], [49, 1, 1, "", "fit"], [49, 1, 1, "", "fit_transform"], [49, 1, 1, "", "get_apply_to"], [49, 1, 1, "", "get_feature_names_out"], [49, 1, 1, "", "get_metadata_routing"], [49, 1, 1, "", "get_needed_types"], [49, 1, 1, "", "get_params"], [49, 1, 1, "", "get_support"], [49, 1, 1, "", "set_output"], [49, 1, 1, "", "set_params"], [49, 1, 1, "", "transform"]], "julearn.transformers.target": [[54, 0, 1, "", "JuTargetTransformer"], [55, 0, 1, "", "JuTransformedTargetModel"], [56, 0, 1, "", "TargetConfoundRemover"], [57, 0, 1, "", "TransformedTargetWarning"], [58, 5, 1, "", "get_target_transformer"], [59, 5, 1, "", "list_target_transformers"], [60, 5, 1, "", "register_target_transformer"], [61, 5, 1, "", "reset_target_transformer_register"]], "julearn.transformers.target.JuTargetTransformer": [[54, 1, 1, "", "__init__"], [54, 1, 1, "", "fit"], [54, 1, 1, "", "fit_transform"], [54, 1, 1, "", "transform"]], "julearn.transformers.target.JuTransformedTargetModel": [[55, 1, 1, "", "__init__"], [55, 1, 1, "", "can_inverse_transform"], [55, 2, 1, "", "classes_"], [55, 1, 1, "", "decision_function"], [55, 1, 1, "", "filter_columns"], [55, 1, 1, "", "fit"], [55, 1, 1, "", "get_apply_to"], [55, 1, 1, "", "get_metadata_routing"], [55, 1, 1, "", "get_needed_types"], [55, 1, 1, "", "get_params"], [55, 1, 1, "", "predict"], [55, 1, 1, "", "predict_proba"], [55, 1, 1, "", "score"], [55, 1, 1, "", "set_params"], [55, 1, 1, "", "transform_target"]], "julearn.transformers.target.TargetConfoundRemover": [[56, 1, 1, "", "__init__"], [56, 1, 1, "", "fit"], [56, 1, 1, "", "fit_transform"], [56, 2, 1, "", "needed_types"], [56, 1, 1, "", "transform"]], "julearn.transformers.target.TransformedTargetWarning": [[57, 1, 1, "", "__init__"], [57, 4, 1, "", "args"], [57, 1, 1, "", "with_traceback"]], "julearn.utils": [[62, 5, 1, "", "configure_logging"], [63, 4, 1, "", "logger"], [64, 5, 1, "", "raise_error"], [82, 3, 0, "-", "typing"], [70, 5, 1, "", "warn_with_log"]], "julearn.utils.typing": [[65, 4, 1, "", "EstimatorLike"], [66, 0, 1, "", "EstimatorLikeFit1"], [67, 0, 1, "", "EstimatorLikeFit2"], [68, 0, 1, "", "EstimatorLikeFity"], [69, 0, 1, "", "JuEstimatorLike"]], "julearn.utils.typing.EstimatorLikeFit1": [[66, 1, 1, "", "__init__"], [66, 1, 1, "", "fit"], [66, 1, 1, "", "get_params"], [66, 1, 1, "", "set_params"]], "julearn.utils.typing.EstimatorLikeFit2": [[67, 1, 1, "", "__init__"], [67, 1, 1, "", "fit"], [67, 1, 1, "", "get_params"], [67, 1, 1, "", "set_params"]], "julearn.utils.typing.EstimatorLikeFity": [[68, 1, 1, "", "__init__"], [68, 1, 1, "", "fit"], [68, 1, 1, "", "get_params"], [68, 1, 1, "", "set_params"]], "julearn.utils.typing.JuEstimatorLike": [[69, 1, 1, "", "__init__"], [69, 1, 1, "", "fit"], [69, 1, 1, "", "get_apply_to"], [69, 1, 1, "", "get_needed_types"], [69, 1, 1, "", "get_params"], [69, 1, 1, "", "set_params"]], "julearn.viz": [[71, 5, 1, "", "plot_scores"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:module", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "module", "Python module"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"base": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 124], "class": [0, 73, 75, 76, 77, 81, 82], "function": [0, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 114], "julearn": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 84, 117, 122, 124, 125, 138], "pipelinecr": [1, 137], "exampl": [1, 2, 13, 14, 16, 19, 33, 37, 40, 42, 62, 71, 118, 119], "us": [1, 2, 13, 14, 16, 19, 33, 37, 40, 42, 62, 71, 106, 111, 120, 125, 137], "targetpipelinecr": 2, "columntyp": 3, "columntypeslik": 4, "jubaseestim": 5, "jutransform": 6, "wrapmodel": 7, "change_column_typ": 8, "ensure_column_typ": 9, "get_column_typ": 10, "make_type_selector": 11, "inspect": [12, 13, 14, 73, 95, 96, 97, 99, 129], "foldsinspector": 12, "inspector": 13, "preprocess": [14, 98, 131, 137], "model_select": [15, 16, 17, 18, 19, 20, 21, 22, 23], "continuousstratifiedgroupkfold": 15, "continuousstratifiedkfold": 16, "repeatedcontinuousstratifiedgroupkfold": 17, "repeatedcontinuousstratifiedkfold": 18, "stratifiedbootstrap": 19, "get_search": 20, "list_search": 21, "register_search": 22, "reset_searcher_regist": 23, "model": [24, 25, 26, 27, 28, 75, 76, 92, 93, 96, 97, 101, 110, 116, 124, 127, 129, 130, 135, 136, 137], "dynam": [24, 76, 116], "dynamicselect": 24, "get_model": 25, "list_model": 26, "register_model": 27, "reset_model_regist": 28, "pipelin": [29, 30, 77, 116, 137], "jutargetpipelin": 29, "pipeline_cr": 30, "step": [30, 116], "prepar": [31, 32, 78], "check_consist": 31, "prepare_input_data": 32, "run_cross_valid": [33, 132, 133, 136, 137], "score": [35, 36, 37, 38, 39, 40, 41, 79, 102, 114, 135, 136], "check_scor": 35, "get_scor": 36, "list_scor": 37, "metric": [38, 39, 79, 136], "r2_corr": 38, "r_corr": 39, "register_scor": 40, "reset_scorer_regist": 41, "stat": [42, 80], "corrected_ttest": 42, "transform": [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 81, 102, 116], "cbpm": [43, 124], "changecolumntyp": 44, "dropcolumn": 45, "filtercolumn": 46, "jucolumntransform": 47, "setcolumntyp": 48, "confound_remov": 49, "confoundremov": 49, "get_transform": 50, "list_transform": 51, "register_transform": 52, "reset_transformer_regist": 53, "target": [54, 55, 56, 57, 58, 59, 60, 61, 81, 102, 125, 131], "jutargettransform": 54, "jutransformedtargetmodel": 55, "targetconfoundremov": 56, "transformedtargetwarn": 57, "get_target_transform": 58, "list_target_transform": 59, "register_target_transform": 60, "reset_target_transformer_regist": 61, "util": [62, 63, 64, 65, 66, 67, 68, 69, 70, 82], "configure_log": 62, "logger": 63, "raise_error": 64, "type": [65, 66, 67, 68, 69, 82, 130, 133, 137], "estimatorlik": 65, "estimatorlikefit1": 66, "estimatorlikefit2": 67, "estimatorlikef": 68, "juestimatorlik": 69, "warn_with_log": 70, "viz": [71, 120], "plot_scor": 71, "api": [72, 74, 138], "refer": [72, 88, 89, 96, 104, 105, 106, 124, 125, 126, 132, 137], "main": 74, "select": [75, 76, 116, 128, 137], "deslib": 76, "visual": [83, 135], "start": [84, 121], "multiclass": 85, "classif": [85, 90, 107], "regress": [86, 87, 103, 114, 125], "analysi": [86, 87, 103], "stratifi": 87, "k": 87, "fold": [87, 99], "cv": [87, 89], "work": 88, "panda": 88, "merg": 88, "join": 88, "datafram": [88, 116], "group": [89, 126], "deal": [89, 96], "cross": [89, 96, 125, 126, 132, 136], "valid": [89, 96, 125, 126, 132, 136], "techniqu": [89, 96], "simpl": [90, 93], "binari": 90, "comput": [91, 94, 100, 108, 112, 115], "time": [91, 94, 100, 108, 112, 115], "comparison": [92, 93, 110, 135], "svm": 96, "random": 97, "forest": 97, "variabl": [97, 102], "import": 97, "varianc": 98, "threshold": 98, "zscore": 98, "pca": 98, "wise": 99, "predict": [99, 124], "complex": 101, "z": 102, "tune": [104, 105, 106, 127], "multipl": 104, "hyperparamet": [104, 105, 106, 127, 137], "grid": [104, 127], "stack": [107, 130], "confound": [109, 110, 111, 125], "remov": [110, 111, 125], "return": [111, 136], "typic": 111, "case": 111, "custom": [113, 114, 116], "overview": 116, "avail": 116, "scaler": 116, "featur": [116, 125, 130, 133, 137, 138], "oper": 116, "decomposit": 116, "estim": [116, 130, 136], "support": 116, "vector": 116, "machin": 116, "ensembl": 116, "gaussian": 116, "process": 116, "linear": 116, "naiv": 116, "bay": 116, "dummi": 116, "configur": 117, "contribut": 118, "set": [118, 137], "up": 118, "local": 118, "develop": 118, "environ": 118, "github": 118, "pull": 118, "request": 118, "guidelin": 118, "run": 118, "unit": 118, "test": 118, "ad": 118, "build": [118, 137], "document": [118, 122, 138], "write": 118, "content": [119, 122, 128], "faq": 120, "i": [120, 122, 125], "have": 120, "issu": 120, "depend": [120, 121], "modul": 120, "how": 120, "do": 120, "interact": 120, "plot": 120, "get": 121, "requir": 121, "setup": 121, "suggest": 121, "instal": 121, "option": 121, "welcom": 122, "": [122, 138], "what": [122, 134, 138], "why": [122, 132], "tabl": [122, 128], "indic": 122, "maintain": 123, "version": 123, "releas": 123, "new": [123, 138], "connectom": 124, "consist": 125, "from": 125, "should": 125, "splitter": [126, 136], "stratif": 126, "paramet": 127, "v": 127, "searcher": 127, "more": 127, "than": 127, "one": 127, "deeper": 128, "topic": 128, "fit": 130, "each": 130, "all": 130, "specif": [130, 137], "appli": 131, "The": [132, 136], "fundament": 132, "essenc": 132, "data": 133, "input": 133, "give": 133, "you": 134, "realli": 134, "need": 134, "know": 134, "statist": 135, "evalu": 136, "output": 136, "made": 137, "easi": 137, "0": 138, "2": 138, "5": 138, "2022": 138, "07": 138, "21": 138, "chang": 138, "bugfix": 138, "improv": 138, "enhanc": 138, "3": 138, "1": 138, "dev105": [], "2024": 138, "01": 138, "23": 138, "misc": 138, "2023": 138, "19": 138, "bayesian": 106, "search": 106, "specifi": 127, "distribut": 127, "05": 138, "03": 138, "16": 138, "run_fit": 34}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Base": [[0, "module-julearn.base"]], "Classes": [[0, "classes"], [73, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [81, "classes"], [81, "id1"], [82, "classes"], [82, "id1"]], "Functions": [[0, "functions"], [73, "functions"], [74, "functions"], [75, "functions"], [76, "functions"], [78, "functions"], [79, "functions"], [79, "id1"], [80, "functions"], [81, "functions"], [81, "id2"], [82, "functions"], [83, "functions"]], "julearn.PipelineCreator": [[1, "julearn-pipelinecreator"]], "Examples using julearn.PipelineCreator": [[1, "examples-using-julearn-pipelinecreator"]], "julearn.TargetPipelineCreator": [[2, "julearn-targetpipelinecreator"]], "Examples using julearn.TargetPipelineCreator": [[2, "examples-using-julearn-targetpipelinecreator"]], "julearn.base.ColumnTypes": [[3, "julearn-base-columntypes"]], "julearn.base.ColumnTypesLike": [[4, "julearn-base-columntypeslike"]], "julearn.base.JuBaseEstimator": [[5, "julearn-base-jubaseestimator"]], "julearn.base.JuTransformer": [[6, "julearn-base-jutransformer"]], "julearn.base.WrapModel": [[7, "julearn-base-wrapmodel"]], "julearn.base.change_column_type": [[8, "julearn-base-change-column-type"]], "julearn.base.ensure_column_types": [[9, "julearn-base-ensure-column-types"]], "julearn.base.get_column_type": [[10, "julearn-base-get-column-type"]], "julearn.base.make_type_selector": [[11, "julearn-base-make-type-selector"]], "julearn.inspect.FoldsInspector": [[12, "julearn-inspect-foldsinspector"]], "julearn.inspect.Inspector": [[13, "julearn-inspect-inspector"]], "Examples using julearn.inspect.Inspector": [[13, "examples-using-julearn-inspect-inspector"]], "julearn.inspect.preprocess": [[14, "julearn-inspect-preprocess"]], "Examples using julearn.inspect.preprocess": [[14, "examples-using-julearn-inspect-preprocess"]], "julearn.model_selection.ContinuousStratifiedGroupKFold": [[15, "julearn-model-selection-continuousstratifiedgroupkfold"]], "julearn.model_selection.ContinuousStratifiedKFold": [[16, "julearn-model-selection-continuousstratifiedkfold"]], "Examples using julearn.model_selection.ContinuousStratifiedKFold": [[16, "examples-using-julearn-model-selection-continuousstratifiedkfold"]], "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold": [[17, "julearn-model-selection-repeatedcontinuousstratifiedgroupkfold"]], "julearn.model_selection.RepeatedContinuousStratifiedKFold": [[18, "julearn-model-selection-repeatedcontinuousstratifiedkfold"]], "julearn.model_selection.StratifiedBootstrap": [[19, "julearn-model-selection-stratifiedbootstrap"]], "Examples using julearn.model_selection.StratifiedBootstrap": [[19, "examples-using-julearn-model-selection-stratifiedbootstrap"]], "julearn.model_selection.get_searcher": [[20, "julearn-model-selection-get-searcher"]], "julearn.model_selection.list_searchers": [[21, "julearn-model-selection-list-searchers"]], "julearn.model_selection.register_searcher": [[22, "julearn-model-selection-register-searcher"]], "julearn.model_selection.reset_searcher_register": [[23, "julearn-model-selection-reset-searcher-register"]], "julearn.models.dynamic.DynamicSelection": [[24, "julearn-models-dynamic-dynamicselection"]], "julearn.models.get_model": [[25, "julearn-models-get-model"]], "julearn.models.list_models": [[26, "julearn-models-list-models"]], "julearn.models.register_model": [[27, "julearn-models-register-model"]], "julearn.models.reset_model_register": [[28, "julearn-models-reset-model-register"]], "julearn.pipeline.JuTargetPipeline": [[29, "julearn-pipeline-jutargetpipeline"]], "julearn.pipeline.pipeline_creator.Step": [[30, "julearn-pipeline-pipeline-creator-step"]], "julearn.prepare.check_consistency": [[31, "julearn-prepare-check-consistency"]], "julearn.prepare.prepare_input_data": [[32, "julearn-prepare-prepare-input-data"]], "julearn.run_cross_validation": [[33, "julearn-run-cross-validation"]], "Examples using julearn.run_cross_validation": [[33, "examples-using-julearn-run-cross-validation"]], "julearn.run_fit": [[34, "julearn-run-fit"]], "julearn.scoring.check_scoring": [[35, "julearn-scoring-check-scoring"]], "julearn.scoring.get_scorer": [[36, "julearn-scoring-get-scorer"]], "julearn.scoring.list_scorers": [[37, "julearn-scoring-list-scorers"]], "Examples using julearn.scoring.list_scorers": [[37, "examples-using-julearn-scoring-list-scorers"]], "julearn.scoring.metrics.r2_corr": [[38, "julearn-scoring-metrics-r2-corr"]], "julearn.scoring.metrics.r_corr": [[39, "julearn-scoring-metrics-r-corr"]], "julearn.scoring.register_scorer": [[40, "julearn-scoring-register-scorer"]], "Examples using julearn.scoring.register_scorer": [[40, "examples-using-julearn-scoring-register-scorer"]], "julearn.scoring.reset_scorer_register": [[41, "julearn-scoring-reset-scorer-register"]], "julearn.stats.corrected_ttest": [[42, "julearn-stats-corrected-ttest"]], "Examples using julearn.stats.corrected_ttest": [[42, "examples-using-julearn-stats-corrected-ttest"]], "julearn.transformers.CBPM": [[43, "julearn-transformers-cbpm"]], "julearn.transformers.ChangeColumnTypes": [[44, "julearn-transformers-changecolumntypes"]], "julearn.transformers.DropColumns": [[45, "julearn-transformers-dropcolumns"]], "julearn.transformers.FilterColumns": [[46, "julearn-transformers-filtercolumns"]], "julearn.transformers.JuColumnTransformer": [[47, "julearn-transformers-jucolumntransformer"]], "julearn.transformers.SetColumnTypes": [[48, "julearn-transformers-setcolumntypes"]], "julearn.transformers.confound_remover.ConfoundRemover": [[49, "julearn-transformers-confound-remover-confoundremover"]], "julearn.transformers.get_transformer": [[50, "julearn-transformers-get-transformer"]], "julearn.transformers.list_transformers": [[51, "julearn-transformers-list-transformers"]], "julearn.transformers.register_transformer": [[52, "julearn-transformers-register-transformer"]], "julearn.transformers.reset_transformer_register": [[53, "julearn-transformers-reset-transformer-register"]], "julearn.transformers.target.JuTargetTransformer": [[54, "julearn-transformers-target-jutargettransformer"]], "julearn.transformers.target.JuTransformedTargetModel": [[55, "julearn-transformers-target-jutransformedtargetmodel"]], "julearn.transformers.target.TargetConfoundRemover": [[56, "julearn-transformers-target-targetconfoundremover"]], "julearn.transformers.target.TransformedTargetWarning": [[57, "julearn-transformers-target-transformedtargetwarning"]], "julearn.transformers.target.get_target_transformer": [[58, "julearn-transformers-target-get-target-transformer"]], "julearn.transformers.target.list_target_transformers": [[59, "julearn-transformers-target-list-target-transformers"]], "julearn.transformers.target.register_target_transformer": [[60, "julearn-transformers-target-register-target-transformer"]], "julearn.transformers.target.reset_target_transformer_register": [[61, "julearn-transformers-target-reset-target-transformer-register"]], "julearn.utils.configure_logging": [[62, "julearn-utils-configure-logging"]], "Examples using julearn.utils.configure_logging": [[62, "examples-using-julearn-utils-configure-logging"]], "julearn.utils.logger": [[63, "julearn-utils-logger"]], "julearn.utils.raise_error": [[64, "julearn-utils-raise-error"]], "julearn.utils.typing.EstimatorLike": [[65, "julearn-utils-typing-estimatorlike"]], "julearn.utils.typing.EstimatorLikeFit1": [[66, "julearn-utils-typing-estimatorlikefit1"]], "julearn.utils.typing.EstimatorLikeFit2": [[67, "julearn-utils-typing-estimatorlikefit2"]], "julearn.utils.typing.EstimatorLikeFity": [[68, "julearn-utils-typing-estimatorlikefity"]], "julearn.utils.typing.JuEstimatorLike": [[69, "julearn-utils-typing-juestimatorlike"]], "julearn.utils.warn_with_log": [[70, "julearn-utils-warn-with-log"]], "julearn.viz.plot_scores": [[71, "julearn-viz-plot-scores"]], "Examples using julearn.viz.plot_scores": [[71, "examples-using-julearn-viz-plot-scores"]], "API Reference": [[72, "api-reference"]], "Inspect": [[73, "module-julearn.inspect"]], "Main API": [[74, "module-julearn.api"]], "Model Selection": [[75, "module-julearn.model_selection"]], "Models": [[76, "module-julearn.models"]], "Dynamic Selection (DESLib)": [[76, "dynamic-selection-deslib"]], "Pipeline": [[77, "module-julearn.pipeline"]], "Prepare": [[78, "module-julearn.prepare"]], "Scoring": [[79, "module-julearn.scoring"]], "Scoring Metrics": [[79, "module-julearn.scoring.metrics"]], "Stats": [[80, "module-julearn.stats"]], "Transformers": [[81, "module-julearn.transformers"], [116, "transformers"]], "Target Transformers": [[81, "module-julearn.transformers.target"]], "Utils": [[82, "module-julearn.utils"]], "Typing": [[82, "module-julearn.utils.typing"]], "Visualization": [[83, "visualization"]], "Starting with julearn": [[84, "starting-with-julearn"]], "Multiclass Classification": [[85, "multiclass-classification"]], "Regression Analysis": [[86, "regression-analysis"], [103, "regression-analysis"]], "Stratified K-fold CV for regression analysis": [[87, "stratified-k-fold-cv-for-regression-analysis"]], "Working with pandas": [[88, "working-with-pandas"]], "References": [[88, "references"], [89, "references"], [96, "references"], [104, "references"], [105, "references"], [106, "references"]], "Merging or joining DataFrame": [[88, "merging-or-joining-dataframe"]], "Grouped CV": [[89, "grouped-cv"]], "Dealing with Cross-Validation techniques": [[89, "dealing-with-cross-validation-techniques"], [96, "dealing-with-cross-validation-techniques"]], "Simple Binary Classification": [[90, "simple-binary-classification"]], "Computation times": [[91, "computation-times"], [94, "computation-times"], [100, "computation-times"], [108, "computation-times"], [112, "computation-times"], [115, "computation-times"]], "Model Comparison": [[92, "model-comparison"], [135, "model-comparison"]], "Simple Model Comparison": [[93, "simple-model-comparison"]], "Inspection": [[95, "inspection"]], "Inspecting SVM models": [[96, "inspecting-svm-models"]], "Inspecting Random Forest models": [[97, "inspecting-random-forest-models"]], "Random Forest variable importance": [[97, "random-forest-variable-importance"]], "Preprocessing with variance threshold, zscore and PCA": [[98, "preprocessing-with-variance-threshold-zscore-and-pca"]], "Inspecting the fold-wise predictions": [[99, "inspecting-the-fold-wise-predictions"]], "Complex Models": [[101, "complex-models"]], "Transforming target variable with z-score": [[102, "transforming-target-variable-with-z-score"]], "Tuning Multiple Hyperparameters Grids": [[104, "tuning-multiple-hyperparameters-grids"]], "Tuning Hyperparameters": [[105, "tuning-hyperparameters"]], "Tuning Hyperparameters using Bayesian Search": [[106, "tuning-hyperparameters-using-bayesian-search"]], "Stacking Classification": [[107, "stacking-classification"]], "Confounds": [[109, "confounds"]], "Confound Removal (model comparison)": [[110, "confound-removal-model-comparison"]], "Return Confounds in Confound Removal": [[111, "return-confounds-in-confound-removal"]], "Confound Removal Typical Use Case": [[111, "confound-removal-typical-use-case"]], "Customization": [[113, "customization"]], "Custom Scoring Function for Regression": [[114, "custom-scoring-function-for-regression"]], "Overview of available Pipeline Steps": [[116, "overview-of-available-pipeline-steps"]], "Scalers": [[116, "scalers"]], "Feature Selection": [[116, "feature-selection"]], "DataFrame operations": [[116, "dataframe-operations"]], "Decomposition": [[116, "decomposition"]], "Custom": [[116, "custom"]], "Models (Estimators)": [[116, "models-estimators"]], "Support Vector Machines": [[116, "support-vector-machines"]], "Ensemble": [[116, "ensemble"]], "Gaussian Processes": [[116, "gaussian-processes"]], "Linear Models": [[116, "linear-models"]], "Naive Bayes": [[116, "naive-bayes"]], "Dynamic Selection": [[116, "dynamic-selection"]], "Dummy": [[116, "dummy"]], "Configuring julearn": [[117, "configuring-julearn"]], "Contributing": [[118, "contributing"]], "Setting up the local development environment": [[118, "setting-up-the-local-development-environment"]], "GitHub Pull Request guidelines": [[118, "github-pull-request-guidelines"]], "Running unit tests": [[118, "running-unit-tests"]], "Adding and building documentation": [[118, "adding-and-building-documentation"]], "Writing Examples": [[118, "writing-examples"]], "Examples": [[119, "examples"]], "Contents:": [[119, null]], "FAQs": [[120, "faqs"]], "I have issues with the dependencies for the viz module.": [[120, "i-have-issues-with-the-dependencies-for-the-viz-module"]], "How do I use the viz interactive plots?": [[120, "how-do-i-use-the-viz-interactive-plots"]], "Getting started": [[121, "getting-started"]], "Requirements": [[121, "requirements"]], "Setup suggestion": [[121, "setup-suggestion"]], "Installing": [[121, "installing"]], "Optional Dependencies": [[121, "optional-dependencies"]], "Welcome to julearn\u2019s documentation!": [[122, "welcome-to-julearn-s-documentation"]], "What is julearn?": [[122, "what-is-julearn"]], "Why julearn?": [[122, "why-julearn"]], "Table of Contents": [[122, "table-of-contents"], [128, null]], "Indices and tables": [[122, "indices-and-tables"], [122, "id1"]], "Maintaining": [[123, "maintaining"]], "Versioning": [[123, "versioning"]], "Releasing a new version": [[123, "releasing-a-new-version"]], "Connectome-based Predictive Modeling (CBPM)": [[124, "connectome-based-predictive-modeling-cbpm"]], "CBPM in julearn": [[124, "cbpm-in-julearn"]], "References:": [[124, null], [125, null], [126, null], [132, null], [137, null]], "Cross-validation consistent Confound Removal": [[125, "cross-validation-consistent-confound-removal"]], "Confound Removal in julearn": [[125, "confound-removal-in-julearn"]], "Removing Confounds from the Features": [[125, "removing-confounds-from-the-features"]], "Removing Confounds from the Target": [[125, "removing-confounds-from-the-target"]], "Should I use Confound Regression?": [[125, "should-i-use-confound-regression"]], "Cross-validation splitters": [[126, "cross-validation-splitters"], [136, "cross-validation-splitters"]], "Stratification": [[126, "stratification"]], "Grouping": [[126, "grouping"]], "Hyperparameter Tuning": [[127, "hyperparameter-tuning"], [127, "id1"]], "Parameters vs Hyperparameters": [[127, "parameters-vs-hyperparameters"]], "Searchers": [[127, "searchers"]], "Specifying distributions": [[127, "specifying-distributions"]], "Tuning more than one grid": [[127, "tuning-more-than-one-grid"]], "Models as hyperparameters": [[127, "models-as-hyperparameters"]], "Selected deeper topics": [[128, "selected-deeper-topics"]], "Inspecting Models": [[129, "inspecting-models"]], "Stacking Models": [[130, "stacking-models"]], "Fitting each estimator on all of the features": [[130, "fitting-each-estimator-on-all-of-the-features"]], "Fitting each estimator on a specific feature type": [[130, "fitting-each-estimator-on-a-specific-feature-type"]], "Applying preprocessing to the target": [[131, "applying-preprocessing-to-the-target"]], "Why cross validation?": [[132, "why-cross-validation"]], "Cross-validation - The fundamentals": [[132, "cross-validation-the-fundamentals"]], "The essence of run_cross_validation()": [[132, "the-essence-of-run-cross-validation"]], "Data": [[133, "data"]], "Data input to run_cross_validation()": [[133, "data-input-to-run-cross-validation"]], "Giving types to features": [[133, "giving-types-to-features"]], "What you really need to know": [[134, "what-you-really-need-to-know"]], "Statistical comparisons": [[135, "statistical-comparisons"]], "Score visualizations": [[135, "score-visualizations"]], "Model Evaluation": [[136, "model-evaluation"]], "The output of run_cross_validation()": [[136, "the-output-of-run-cross-validation"]], "Cross-validation scores": [[136, "cross-validation-scores"]], "Returning a model (estimator)": [[136, "returning-a-model-estimator"]], "Scoring metrics": [[136, "scoring-metrics"]], "Model Building": [[137, "model-building"]], "Pipeline specification in run_cross_validation()": [[137, "pipeline-specification-in-run-cross-validation"]], "Feature preprocessing": [[137, "feature-preprocessing"]], "Pipeline specification made easy with the PipelineCreator": [[137, "pipeline-specification-made-easy-with-the-pipelinecreator"]], "Setting hyperparameters": [[137, "setting-hyperparameters"]], "Selective preprocessing using feature types": [[137, "selective-preprocessing-using-feature-types"]], "What\u2019s new": [[138, "what-s-new"]], "Julearn 0.3.3 (2024-05-16)": [[138, "julearn-0-3-3-2024-05-16"]], "Bugfixes": [[138, "bugfixes"], [138, "id1"], [138, "id3"], [138, "id8"]], "Improved Documentation": [[138, "improved-documentation"], [138, "id2"], [138, "id4"], [138, "id9"]], "Julearn 0.3.2 (2024-05-03)": [[138, "julearn-0-3-2-2024-05-03"]], "Enhancements": [[138, "enhancements"], [138, "id5"], [138, "id10"]], "Features": [[138, "features"], [138, "id6"], [138, "id11"]], "Misc": [[138, "misc"], [138, "id7"]], "Julearn 0.3.1 (2024-01-23)": [[138, "julearn-0-3-1-2024-01-23"]], "Julearn 0.3.0 (2023-07-19)": [[138, "julearn-0-3-0-2023-07-19"]], "Julearn 0.2.5 (2022-07-21)": [[138, "julearn-0-2-5-2022-07-21"]], "API Changes": [[138, "api-changes"]]}, "indexentries": {"julearn.base": [[0, "module-julearn.base"]], "module": [[0, "module-julearn.base"], [73, "module-julearn.inspect"], [74, "module-julearn.api"], [75, "module-julearn.model_selection"], [76, "module-julearn.models"], [76, "module-julearn.models.dynamic"], [77, "module-julearn.pipeline"], [78, "module-julearn.prepare"], [79, "module-julearn.scoring"], [79, "module-julearn.scoring.metrics"], [80, "module-julearn.stats"], [81, "module-julearn.transformers"], [81, "module-julearn.transformers.target"], [82, "module-julearn.utils"], [82, "module-julearn.utils.typing"], [83, "module-julearn.viz"]], "pipelinecreator (class in julearn)": [[1, "julearn.PipelineCreator"]], "__init__() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.__init__"]], "add() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.add"]], "copy() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.copy"]], "from_list() (julearn.pipelinecreator class method)": [[1, "julearn.PipelineCreator.from_list"]], "has_model() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.has_model"]], "split() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.split"]], "steps (julearn.pipelinecreator property)": [[1, "julearn.PipelineCreator.steps"]], "to_pipeline() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.to_pipeline"]], "targetpipelinecreator (class in julearn)": [[2, "julearn.TargetPipelineCreator"]], "__init__() (julearn.targetpipelinecreator method)": [[2, "julearn.TargetPipelineCreator.__init__"]], "add() (julearn.targetpipelinecreator method)": [[2, "julearn.TargetPipelineCreator.add"]], "to_pipeline() (julearn.targetpipelinecreator method)": [[2, "julearn.TargetPipelineCreator.to_pipeline"]], "columntypes (class in julearn.base)": [[3, "julearn.base.ColumnTypes"]], "__init__() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.__init__"]], "add() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.add"]], "copy() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.copy"]], "pattern (julearn.base.columntypes property)": [[3, "julearn.base.ColumnTypes.pattern"]], "to_type_selector() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.to_type_selector"]], "columntypeslike (in module julearn.base)": [[4, "julearn.base.ColumnTypesLike"]], "jubaseestimator (class in julearn.base)": [[5, "julearn.base.JuBaseEstimator"]], "__init__() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.__init__"]], "filter_columns() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.filter_columns"]], "get_apply_to() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.get_apply_to"]], "get_metadata_routing() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.get_metadata_routing"]], "get_needed_types() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.get_needed_types"]], "get_params() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.get_params"]], "set_params() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.set_params"]], "jutransformer (class in julearn.base)": [[6, "julearn.base.JuTransformer"]], "__init__() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.__init__"]], "filter_columns() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.filter_columns"]], "fit() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.fit"]], "fit_transform() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.fit_transform"]], "get_apply_to() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.get_apply_to"]], "get_metadata_routing() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.get_metadata_routing"]], "get_needed_types() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.get_needed_types"]], "get_params() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.get_params"]], "set_output() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.set_output"]], "set_params() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.set_params"]], "wrapmodel (class in julearn.base)": [[7, "julearn.base.WrapModel"]], "__init__() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.__init__"]], "classes_ (julearn.base.wrapmodel property)": [[7, "julearn.base.WrapModel.classes_"]], "decision_function() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.decision_function"]], "filter_columns() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.filter_columns"]], "fit() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.fit"]], "get_apply_to() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.get_apply_to"]], "get_metadata_routing() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.get_metadata_routing"]], "get_needed_types() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.get_needed_types"]], "get_params() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.get_params"]], "predict() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.predict"]], "predict_log_proba() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.predict_log_proba"]], "predict_proba() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.predict_proba"]], "score() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.score"]], "set_params() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.set_params"]], "change_column_type() (in module julearn.base)": [[8, "julearn.base.change_column_type"]], "ensure_column_types() (in module julearn.base)": [[9, "julearn.base.ensure_column_types"]], "get_column_type() (in module julearn.base)": [[10, "julearn.base.get_column_type"]], "make_type_selector() (in module julearn.base)": [[11, "julearn.base.make_type_selector"]], "foldsinspector (class in julearn.inspect)": [[12, "julearn.inspect.FoldsInspector"]], "__init__() (julearn.inspect.foldsinspector method)": [[12, "julearn.inspect.FoldsInspector.__init__"]], "decision_function() (julearn.inspect.foldsinspector method)": [[12, "julearn.inspect.FoldsInspector.decision_function"]], "predict() (julearn.inspect.foldsinspector method)": [[12, "julearn.inspect.FoldsInspector.predict"]], "predict_log_proba() (julearn.inspect.foldsinspector method)": [[12, "julearn.inspect.FoldsInspector.predict_log_proba"]], "predict_proba() (julearn.inspect.foldsinspector method)": [[12, "julearn.inspect.FoldsInspector.predict_proba"]], "inspector (class in julearn.inspect)": [[13, "julearn.inspect.Inspector"]], "__init__() (julearn.inspect.inspector method)": [[13, "julearn.inspect.Inspector.__init__"]], "folds (julearn.inspect.inspector property)": [[13, "julearn.inspect.Inspector.folds"]], "model (julearn.inspect.inspector property)": [[13, "julearn.inspect.Inspector.model"]], "preprocess() (in module julearn.inspect)": [[14, "julearn.inspect.preprocess"]], "continuousstratifiedgroupkfold (class in julearn.model_selection)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold"]], "__init__() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold.get_n_splits"]], "set_split_request() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold.set_split_request"]], "split() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold.split"]], "continuousstratifiedkfold (class in julearn.model_selection)": [[16, "julearn.model_selection.ContinuousStratifiedKFold"]], "__init__() (julearn.model_selection.continuousstratifiedkfold method)": [[16, "julearn.model_selection.ContinuousStratifiedKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.continuousstratifiedkfold method)": [[16, "julearn.model_selection.ContinuousStratifiedKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.continuousstratifiedkfold method)": [[16, "julearn.model_selection.ContinuousStratifiedKFold.get_n_splits"]], "split() (julearn.model_selection.continuousstratifiedkfold method)": [[16, "julearn.model_selection.ContinuousStratifiedKFold.split"]], "repeatedcontinuousstratifiedgroupkfold (class in julearn.model_selection)": [[17, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold"]], "__init__() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[17, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[17, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[17, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.get_n_splits"]], "split() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[17, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.split"]], "repeatedcontinuousstratifiedkfold (class in julearn.model_selection)": [[18, "julearn.model_selection.RepeatedContinuousStratifiedKFold"]], "__init__() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[18, "julearn.model_selection.RepeatedContinuousStratifiedKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[18, "julearn.model_selection.RepeatedContinuousStratifiedKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[18, "julearn.model_selection.RepeatedContinuousStratifiedKFold.get_n_splits"]], "split() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[18, "julearn.model_selection.RepeatedContinuousStratifiedKFold.split"]], "stratifiedbootstrap (class in julearn.model_selection)": [[19, "julearn.model_selection.StratifiedBootstrap"]], "__init__() (julearn.model_selection.stratifiedbootstrap method)": [[19, "julearn.model_selection.StratifiedBootstrap.__init__"]], "get_metadata_routing() (julearn.model_selection.stratifiedbootstrap method)": [[19, "julearn.model_selection.StratifiedBootstrap.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.stratifiedbootstrap method)": [[19, "julearn.model_selection.StratifiedBootstrap.get_n_splits"]], "split() (julearn.model_selection.stratifiedbootstrap method)": [[19, "julearn.model_selection.StratifiedBootstrap.split"]], "get_searcher() (in module julearn.model_selection)": [[20, "julearn.model_selection.get_searcher"]], "list_searchers() (in module julearn.model_selection)": [[21, "julearn.model_selection.list_searchers"]], "register_searcher() (in module julearn.model_selection)": [[22, "julearn.model_selection.register_searcher"]], "reset_searcher_register() (in module julearn.model_selection)": [[23, "julearn.model_selection.reset_searcher_register"]], "dynamicselection (class in julearn.models.dynamic)": [[24, "julearn.models.dynamic.DynamicSelection"]], "__init__() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.__init__"]], "fit() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.fit"]], "get_metadata_routing() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.get_metadata_routing"]], "get_params() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.get_params"]], "predict() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.predict"]], "predict_proba() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.predict_proba"]], "score() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.score"]], "set_params() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.set_params"]], "set_score_request() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.set_score_request"]], "get_model() (in module julearn.models)": [[25, "julearn.models.get_model"]], "list_models() (in module julearn.models)": [[26, "julearn.models.list_models"]], "register_model() (in module julearn.models)": [[27, "julearn.models.register_model"]], "reset_model_register() (in module julearn.models)": [[28, "julearn.models.reset_model_register"]], "jutargetpipeline (class in julearn.pipeline)": [[29, "julearn.pipeline.JuTargetPipeline"]], "__init__() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.__init__"]], "can_inverse_transform() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.can_inverse_transform"]], "fit() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.fit"]], "fit_transform() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.fit_transform"]], "inverse_transform() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.inverse_transform"]], "needed_types (julearn.pipeline.jutargetpipeline property)": [[29, "julearn.pipeline.JuTargetPipeline.needed_types"]], "transform() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.transform"]], "step (class in julearn.pipeline.pipeline_creator)": [[30, "julearn.pipeline.pipeline_creator.Step"]], "__init__() (julearn.pipeline.pipeline_creator.step method)": [[30, "julearn.pipeline.pipeline_creator.Step.__init__"]], "apply_to (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.apply_to"]], "estimator (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.estimator"]], "name (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.name"]], "needed_types (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.needed_types"]], "params_to_tune (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.params_to_tune"]], "row_select_col_type (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.row_select_col_type"]], "row_select_vals (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.row_select_vals"]], "check_consistency() (in module julearn.prepare)": [[31, "julearn.prepare.check_consistency"]], "prepare_input_data() (in module julearn.prepare)": [[32, "julearn.prepare.prepare_input_data"]], "run_cross_validation() (in module julearn)": [[33, "julearn.run_cross_validation"]], "run_fit() (in module julearn)": [[34, "julearn.run_fit"]], "check_scoring() (in module julearn.scoring)": [[35, "julearn.scoring.check_scoring"]], "get_scorer() (in module julearn.scoring)": [[36, "julearn.scoring.get_scorer"]], "list_scorers() (in module julearn.scoring)": [[37, "julearn.scoring.list_scorers"]], "r2_corr() (in module julearn.scoring.metrics)": [[38, "julearn.scoring.metrics.r2_corr"]], "r_corr() (in module julearn.scoring.metrics)": [[39, "julearn.scoring.metrics.r_corr"]], "register_scorer() (in module julearn.scoring)": [[40, "julearn.scoring.register_scorer"]], "reset_scorer_register() (in module julearn.scoring)": [[41, "julearn.scoring.reset_scorer_register"]], "corrected_ttest() (in module julearn.stats)": [[42, "julearn.stats.corrected_ttest"]], "cbpm (class in julearn.transformers)": [[43, "julearn.transformers.CBPM"]], "__init__() (julearn.transformers.cbpm method)": [[43, "julearn.transformers.CBPM.__init__"]], "aggregate() (julearn.transformers.cbpm method)": [[43, "julearn.transformers.CBPM.aggregate"]], "fit() (julearn.transformers.cbpm method)": [[43, "julearn.transformers.CBPM.fit"]], "fit_transform() (julearn.transformers.cbpm method)": [[43, "julearn.transformers.CBPM.fit_transform"]], "get_feature_names_out() (julearn.transformers.cbpm method)": [[43, "julearn.transformers.CBPM.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.cbpm method)": [[43, "julearn.transformers.CBPM.get_metadata_routing"]], "get_params() (julearn.transformers.cbpm method)": [[43, "julearn.transformers.CBPM.get_params"]], "set_output() (julearn.transformers.cbpm method)": [[43, "julearn.transformers.CBPM.set_output"]], "set_params() (julearn.transformers.cbpm method)": [[43, "julearn.transformers.CBPM.set_params"]], "transform() (julearn.transformers.cbpm method)": [[43, "julearn.transformers.CBPM.transform"]], "changecolumntypes (class in julearn.transformers)": [[44, "julearn.transformers.ChangeColumnTypes"]], "__init__() (julearn.transformers.changecolumntypes method)": [[44, "julearn.transformers.ChangeColumnTypes.__init__"]], "filter_columns() (julearn.transformers.changecolumntypes method)": [[44, "julearn.transformers.ChangeColumnTypes.filter_columns"]], "fit() (julearn.transformers.changecolumntypes method)": [[44, "julearn.transformers.ChangeColumnTypes.fit"]], "fit_transform() (julearn.transformers.changecolumntypes method)": [[44, "julearn.transformers.ChangeColumnTypes.fit_transform"]], "get_apply_to() (julearn.transformers.changecolumntypes method)": [[44, "julearn.transformers.ChangeColumnTypes.get_apply_to"]], "get_feature_names_out() (julearn.transformers.changecolumntypes method)": [[44, "julearn.transformers.ChangeColumnTypes.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.changecolumntypes method)": [[44, "julearn.transformers.ChangeColumnTypes.get_metadata_routing"]], "get_needed_types() (julearn.transformers.changecolumntypes method)": [[44, "julearn.transformers.ChangeColumnTypes.get_needed_types"]], "get_params() (julearn.transformers.changecolumntypes method)": [[44, "julearn.transformers.ChangeColumnTypes.get_params"]], "set_output() (julearn.transformers.changecolumntypes method)": [[44, "julearn.transformers.ChangeColumnTypes.set_output"]], "set_params() (julearn.transformers.changecolumntypes method)": [[44, "julearn.transformers.ChangeColumnTypes.set_params"]], "transform() (julearn.transformers.changecolumntypes method)": [[44, "julearn.transformers.ChangeColumnTypes.transform"]], "dropcolumns (class in julearn.transformers)": [[45, "julearn.transformers.DropColumns"]], "__init__() (julearn.transformers.dropcolumns method)": [[45, "julearn.transformers.DropColumns.__init__"]], "filter_columns() (julearn.transformers.dropcolumns method)": [[45, "julearn.transformers.DropColumns.filter_columns"]], "fit() (julearn.transformers.dropcolumns method)": [[45, "julearn.transformers.DropColumns.fit"]], "fit_transform() (julearn.transformers.dropcolumns method)": [[45, "julearn.transformers.DropColumns.fit_transform"]], "get_apply_to() (julearn.transformers.dropcolumns method)": [[45, "julearn.transformers.DropColumns.get_apply_to"]], "get_metadata_routing() (julearn.transformers.dropcolumns method)": [[45, "julearn.transformers.DropColumns.get_metadata_routing"]], "get_needed_types() (julearn.transformers.dropcolumns method)": [[45, "julearn.transformers.DropColumns.get_needed_types"]], "get_params() (julearn.transformers.dropcolumns method)": [[45, "julearn.transformers.DropColumns.get_params"]], "get_support() (julearn.transformers.dropcolumns method)": [[45, "julearn.transformers.DropColumns.get_support"]], "set_output() (julearn.transformers.dropcolumns method)": [[45, "julearn.transformers.DropColumns.set_output"]], "set_params() (julearn.transformers.dropcolumns method)": [[45, "julearn.transformers.DropColumns.set_params"]], "transform() (julearn.transformers.dropcolumns method)": [[45, "julearn.transformers.DropColumns.transform"]], "filtercolumns (class in julearn.transformers)": [[46, "julearn.transformers.FilterColumns"]], "__init__() (julearn.transformers.filtercolumns method)": [[46, "julearn.transformers.FilterColumns.__init__"]], "filter_columns() (julearn.transformers.filtercolumns method)": [[46, "julearn.transformers.FilterColumns.filter_columns"]], "fit() (julearn.transformers.filtercolumns method)": [[46, "julearn.transformers.FilterColumns.fit"]], "fit_transform() (julearn.transformers.filtercolumns method)": [[46, "julearn.transformers.FilterColumns.fit_transform"]], "get_apply_to() (julearn.transformers.filtercolumns method)": [[46, "julearn.transformers.FilterColumns.get_apply_to"]], "get_feature_names_out() (julearn.transformers.filtercolumns method)": [[46, "julearn.transformers.FilterColumns.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.filtercolumns method)": [[46, "julearn.transformers.FilterColumns.get_metadata_routing"]], "get_needed_types() (julearn.transformers.filtercolumns method)": [[46, "julearn.transformers.FilterColumns.get_needed_types"]], "get_params() (julearn.transformers.filtercolumns method)": [[46, "julearn.transformers.FilterColumns.get_params"]], "set_output() (julearn.transformers.filtercolumns method)": [[46, "julearn.transformers.FilterColumns.set_output"]], "set_params() (julearn.transformers.filtercolumns method)": [[46, "julearn.transformers.FilterColumns.set_params"]], "transform() (julearn.transformers.filtercolumns method)": [[46, "julearn.transformers.FilterColumns.transform"]], "jucolumntransformer (class in julearn.transformers)": [[47, "julearn.transformers.JuColumnTransformer"]], "__init__() (julearn.transformers.jucolumntransformer method)": [[47, "julearn.transformers.JuColumnTransformer.__init__"]], "filter_columns() (julearn.transformers.jucolumntransformer method)": [[47, "julearn.transformers.JuColumnTransformer.filter_columns"]], "fit() (julearn.transformers.jucolumntransformer method)": [[47, "julearn.transformers.JuColumnTransformer.fit"]], "fit_transform() (julearn.transformers.jucolumntransformer method)": [[47, "julearn.transformers.JuColumnTransformer.fit_transform"]], "get_apply_to() (julearn.transformers.jucolumntransformer method)": [[47, "julearn.transformers.JuColumnTransformer.get_apply_to"]], "get_feature_names_out() (julearn.transformers.jucolumntransformer method)": [[47, "julearn.transformers.JuColumnTransformer.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.jucolumntransformer method)": [[47, "julearn.transformers.JuColumnTransformer.get_metadata_routing"]], "get_needed_types() (julearn.transformers.jucolumntransformer method)": [[47, "julearn.transformers.JuColumnTransformer.get_needed_types"]], "get_params() (julearn.transformers.jucolumntransformer method)": [[47, "julearn.transformers.JuColumnTransformer.get_params"]], "set_output() (julearn.transformers.jucolumntransformer method)": [[47, "julearn.transformers.JuColumnTransformer.set_output"]], "set_params() (julearn.transformers.jucolumntransformer method)": [[47, "julearn.transformers.JuColumnTransformer.set_params"]], "transform() (julearn.transformers.jucolumntransformer method)": [[47, "julearn.transformers.JuColumnTransformer.transform"]], "setcolumntypes (class in julearn.transformers)": [[48, "julearn.transformers.SetColumnTypes"]], "__init__() (julearn.transformers.setcolumntypes method)": [[48, "julearn.transformers.SetColumnTypes.__init__"]], "filter_columns() (julearn.transformers.setcolumntypes method)": [[48, "julearn.transformers.SetColumnTypes.filter_columns"]], "fit() (julearn.transformers.setcolumntypes method)": [[48, "julearn.transformers.SetColumnTypes.fit"]], "fit_transform() (julearn.transformers.setcolumntypes method)": [[48, "julearn.transformers.SetColumnTypes.fit_transform"]], "get_apply_to() (julearn.transformers.setcolumntypes method)": [[48, "julearn.transformers.SetColumnTypes.get_apply_to"]], "get_feature_names_out() (julearn.transformers.setcolumntypes method)": [[48, "julearn.transformers.SetColumnTypes.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.setcolumntypes method)": [[48, "julearn.transformers.SetColumnTypes.get_metadata_routing"]], "get_needed_types() (julearn.transformers.setcolumntypes method)": [[48, "julearn.transformers.SetColumnTypes.get_needed_types"]], "get_params() (julearn.transformers.setcolumntypes method)": [[48, "julearn.transformers.SetColumnTypes.get_params"]], "set_output() (julearn.transformers.setcolumntypes method)": [[48, "julearn.transformers.SetColumnTypes.set_output"]], "set_params() (julearn.transformers.setcolumntypes method)": [[48, "julearn.transformers.SetColumnTypes.set_params"]], "transform() (julearn.transformers.setcolumntypes method)": [[48, "julearn.transformers.SetColumnTypes.transform"]], "confoundremover (class in julearn.transformers.confound_remover)": [[49, "julearn.transformers.confound_remover.ConfoundRemover"]], "__init__() (julearn.transformers.confound_remover.confoundremover method)": [[49, "julearn.transformers.confound_remover.ConfoundRemover.__init__"]], "filter_columns() (julearn.transformers.confound_remover.confoundremover method)": [[49, "julearn.transformers.confound_remover.ConfoundRemover.filter_columns"]], "fit() (julearn.transformers.confound_remover.confoundremover method)": [[49, "julearn.transformers.confound_remover.ConfoundRemover.fit"]], "fit_transform() (julearn.transformers.confound_remover.confoundremover method)": [[49, "julearn.transformers.confound_remover.ConfoundRemover.fit_transform"]], "get_apply_to() (julearn.transformers.confound_remover.confoundremover method)": [[49, "julearn.transformers.confound_remover.ConfoundRemover.get_apply_to"]], "get_feature_names_out() (julearn.transformers.confound_remover.confoundremover method)": [[49, "julearn.transformers.confound_remover.ConfoundRemover.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.confound_remover.confoundremover method)": [[49, "julearn.transformers.confound_remover.ConfoundRemover.get_metadata_routing"]], "get_needed_types() (julearn.transformers.confound_remover.confoundremover method)": [[49, "julearn.transformers.confound_remover.ConfoundRemover.get_needed_types"]], "get_params() (julearn.transformers.confound_remover.confoundremover method)": [[49, "julearn.transformers.confound_remover.ConfoundRemover.get_params"]], "get_support() (julearn.transformers.confound_remover.confoundremover method)": [[49, "julearn.transformers.confound_remover.ConfoundRemover.get_support"]], "set_output() (julearn.transformers.confound_remover.confoundremover method)": [[49, "julearn.transformers.confound_remover.ConfoundRemover.set_output"]], "set_params() (julearn.transformers.confound_remover.confoundremover method)": [[49, "julearn.transformers.confound_remover.ConfoundRemover.set_params"]], "transform() (julearn.transformers.confound_remover.confoundremover method)": [[49, "julearn.transformers.confound_remover.ConfoundRemover.transform"]], "get_transformer() (in module julearn.transformers)": [[50, "julearn.transformers.get_transformer"]], "list_transformers() (in module julearn.transformers)": [[51, "julearn.transformers.list_transformers"]], "register_transformer() (in module julearn.transformers)": [[52, "julearn.transformers.register_transformer"]], "reset_transformer_register() (in module julearn.transformers)": [[53, "julearn.transformers.reset_transformer_register"]], "jutargettransformer (class in julearn.transformers.target)": [[54, "julearn.transformers.target.JuTargetTransformer"]], "__init__() (julearn.transformers.target.jutargettransformer method)": [[54, "julearn.transformers.target.JuTargetTransformer.__init__"]], "fit() (julearn.transformers.target.jutargettransformer method)": [[54, "julearn.transformers.target.JuTargetTransformer.fit"]], "fit_transform() (julearn.transformers.target.jutargettransformer method)": [[54, "julearn.transformers.target.JuTargetTransformer.fit_transform"]], "transform() (julearn.transformers.target.jutargettransformer method)": [[54, "julearn.transformers.target.JuTargetTransformer.transform"]], "jutransformedtargetmodel (class in julearn.transformers.target)": [[55, "julearn.transformers.target.JuTransformedTargetModel"]], "__init__() (julearn.transformers.target.jutransformedtargetmodel method)": [[55, "julearn.transformers.target.JuTransformedTargetModel.__init__"]], "can_inverse_transform() (julearn.transformers.target.jutransformedtargetmodel method)": [[55, "julearn.transformers.target.JuTransformedTargetModel.can_inverse_transform"]], "classes_ (julearn.transformers.target.jutransformedtargetmodel property)": [[55, "julearn.transformers.target.JuTransformedTargetModel.classes_"]], "decision_function() (julearn.transformers.target.jutransformedtargetmodel method)": [[55, "julearn.transformers.target.JuTransformedTargetModel.decision_function"]], "filter_columns() (julearn.transformers.target.jutransformedtargetmodel method)": [[55, "julearn.transformers.target.JuTransformedTargetModel.filter_columns"]], "fit() (julearn.transformers.target.jutransformedtargetmodel method)": [[55, "julearn.transformers.target.JuTransformedTargetModel.fit"]], "get_apply_to() (julearn.transformers.target.jutransformedtargetmodel method)": [[55, "julearn.transformers.target.JuTransformedTargetModel.get_apply_to"]], "get_metadata_routing() (julearn.transformers.target.jutransformedtargetmodel method)": [[55, "julearn.transformers.target.JuTransformedTargetModel.get_metadata_routing"]], "get_needed_types() (julearn.transformers.target.jutransformedtargetmodel method)": [[55, "julearn.transformers.target.JuTransformedTargetModel.get_needed_types"]], "get_params() (julearn.transformers.target.jutransformedtargetmodel method)": [[55, "julearn.transformers.target.JuTransformedTargetModel.get_params"]], "predict() (julearn.transformers.target.jutransformedtargetmodel method)": [[55, "julearn.transformers.target.JuTransformedTargetModel.predict"]], "predict_proba() (julearn.transformers.target.jutransformedtargetmodel method)": [[55, "julearn.transformers.target.JuTransformedTargetModel.predict_proba"]], "score() (julearn.transformers.target.jutransformedtargetmodel method)": [[55, "julearn.transformers.target.JuTransformedTargetModel.score"]], "set_params() (julearn.transformers.target.jutransformedtargetmodel method)": [[55, "julearn.transformers.target.JuTransformedTargetModel.set_params"]], "transform_target() (julearn.transformers.target.jutransformedtargetmodel method)": [[55, "julearn.transformers.target.JuTransformedTargetModel.transform_target"]], "targetconfoundremover (class in julearn.transformers.target)": [[56, "julearn.transformers.target.TargetConfoundRemover"]], "__init__() (julearn.transformers.target.targetconfoundremover method)": [[56, "julearn.transformers.target.TargetConfoundRemover.__init__"]], "fit() (julearn.transformers.target.targetconfoundremover method)": [[56, "julearn.transformers.target.TargetConfoundRemover.fit"]], "fit_transform() (julearn.transformers.target.targetconfoundremover method)": [[56, "julearn.transformers.target.TargetConfoundRemover.fit_transform"]], "needed_types (julearn.transformers.target.targetconfoundremover property)": [[56, "julearn.transformers.target.TargetConfoundRemover.needed_types"]], "transform() (julearn.transformers.target.targetconfoundremover method)": [[56, "julearn.transformers.target.TargetConfoundRemover.transform"]], "transformedtargetwarning (class in julearn.transformers.target)": [[57, "julearn.transformers.target.TransformedTargetWarning"]], "__init__() (julearn.transformers.target.transformedtargetwarning method)": [[57, "julearn.transformers.target.TransformedTargetWarning.__init__"]], "args (julearn.transformers.target.transformedtargetwarning attribute)": [[57, "julearn.transformers.target.TransformedTargetWarning.args"]], "with_traceback() (julearn.transformers.target.transformedtargetwarning method)": [[57, "julearn.transformers.target.TransformedTargetWarning.with_traceback"]], "get_target_transformer() (in module julearn.transformers.target)": [[58, "julearn.transformers.target.get_target_transformer"]], "list_target_transformers() (in module julearn.transformers.target)": [[59, "julearn.transformers.target.list_target_transformers"]], "register_target_transformer() (in module julearn.transformers.target)": [[60, "julearn.transformers.target.register_target_transformer"]], "reset_target_transformer_register() (in module julearn.transformers.target)": [[61, "julearn.transformers.target.reset_target_transformer_register"]], "configure_logging() (in module julearn.utils)": [[62, "julearn.utils.configure_logging"]], "logger (in module julearn.utils)": [[63, "julearn.utils.logger"]], "raise_error() (in module julearn.utils)": [[64, "julearn.utils.raise_error"]], "estimatorlike (in module julearn.utils.typing)": [[65, "julearn.utils.typing.EstimatorLike"]], "estimatorlikefit1 (class in julearn.utils.typing)": [[66, "julearn.utils.typing.EstimatorLikeFit1"]], "__init__() (julearn.utils.typing.estimatorlikefit1 method)": [[66, "julearn.utils.typing.EstimatorLikeFit1.__init__"]], "fit() (julearn.utils.typing.estimatorlikefit1 method)": [[66, "julearn.utils.typing.EstimatorLikeFit1.fit"]], "get_params() (julearn.utils.typing.estimatorlikefit1 method)": [[66, "julearn.utils.typing.EstimatorLikeFit1.get_params"]], "set_params() (julearn.utils.typing.estimatorlikefit1 method)": [[66, "julearn.utils.typing.EstimatorLikeFit1.set_params"]], "estimatorlikefit2 (class in julearn.utils.typing)": [[67, "julearn.utils.typing.EstimatorLikeFit2"]], "__init__() (julearn.utils.typing.estimatorlikefit2 method)": [[67, "julearn.utils.typing.EstimatorLikeFit2.__init__"]], "fit() (julearn.utils.typing.estimatorlikefit2 method)": [[67, "julearn.utils.typing.EstimatorLikeFit2.fit"]], "get_params() (julearn.utils.typing.estimatorlikefit2 method)": [[67, "julearn.utils.typing.EstimatorLikeFit2.get_params"]], "set_params() (julearn.utils.typing.estimatorlikefit2 method)": [[67, "julearn.utils.typing.EstimatorLikeFit2.set_params"]], "estimatorlikefity (class in julearn.utils.typing)": [[68, "julearn.utils.typing.EstimatorLikeFity"]], "__init__() (julearn.utils.typing.estimatorlikefity method)": [[68, "julearn.utils.typing.EstimatorLikeFity.__init__"]], "fit() (julearn.utils.typing.estimatorlikefity method)": [[68, "julearn.utils.typing.EstimatorLikeFity.fit"]], "get_params() (julearn.utils.typing.estimatorlikefity method)": [[68, "julearn.utils.typing.EstimatorLikeFity.get_params"]], "set_params() (julearn.utils.typing.estimatorlikefity method)": [[68, "julearn.utils.typing.EstimatorLikeFity.set_params"]], "juestimatorlike (class in julearn.utils.typing)": [[69, "julearn.utils.typing.JuEstimatorLike"]], "__init__() (julearn.utils.typing.juestimatorlike method)": [[69, "julearn.utils.typing.JuEstimatorLike.__init__"]], "fit() (julearn.utils.typing.juestimatorlike method)": [[69, "julearn.utils.typing.JuEstimatorLike.fit"]], "get_apply_to() (julearn.utils.typing.juestimatorlike method)": [[69, "julearn.utils.typing.JuEstimatorLike.get_apply_to"]], "get_needed_types() (julearn.utils.typing.juestimatorlike method)": [[69, "julearn.utils.typing.JuEstimatorLike.get_needed_types"]], "get_params() (julearn.utils.typing.juestimatorlike method)": [[69, "julearn.utils.typing.JuEstimatorLike.get_params"]], "set_params() (julearn.utils.typing.juestimatorlike method)": [[69, "julearn.utils.typing.JuEstimatorLike.set_params"]], "warn_with_log() (in module julearn.utils)": [[70, "julearn.utils.warn_with_log"]], "plot_scores() (in module julearn.viz)": [[71, "julearn.viz.plot_scores"]], "julearn.inspect": [[73, "module-julearn.inspect"]], "julearn.api": [[74, "module-julearn.api"]], "julearn.model_selection": [[75, "module-julearn.model_selection"]], "julearn.models": [[76, "module-julearn.models"]], "julearn.models.dynamic": [[76, "module-julearn.models.dynamic"]], "julearn.pipeline": [[77, "module-julearn.pipeline"]], "julearn.prepare": [[78, "module-julearn.prepare"]], "julearn.scoring": [[79, "module-julearn.scoring"]], "julearn.scoring.metrics": [[79, "module-julearn.scoring.metrics"]], "julearn.stats": [[80, "module-julearn.stats"]], "julearn.transformers": [[81, "module-julearn.transformers"]], "julearn.transformers.target": [[81, "module-julearn.transformers.target"]], "julearn.utils": [[82, "module-julearn.utils"]], "julearn.utils.typing": [[82, "module-julearn.utils.typing"]], "julearn.viz": [[83, "module-julearn.viz"]]}})